var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddMemberDialog.html",[0,0.205,1,0.965]],["body/components/AddMemberDialog.html",[0,0.285,1,1.474,2,1.157,3,0.069,4,0.059,5,0.769,6,0.876,7,0.834,8,0.834,9,0.053,10,7.915,11,6.115,12,3.451,13,1.665,14,2.597,15,0.697,16,1.703,17,1.905,18,1.72,19,1.523,20,1.278,21,1.176,22,5.928,23,1.138,24,5.026,25,0.184,26,0.505,27,1.292,28,3.177,29,2.49,30,4.58,31,4.378,32,0.681,33,6.512,34,4.756,35,5.601,36,2.853,37,0.829,38,3.175,39,5.953,40,3.903,41,4.615,42,5.098,43,5.031,44,0.852,45,3.871,46,0.468,47,0.006,48,0.579,49,0.301,50,0.37,51,3.871,52,0.803,53,1.293,54,3.871,55,3.871,56,3.871,57,1.482,58,3.883,59,3.871,60,0.663,61,0.569,62,1.523,63,3.182,64,2.158,65,2.494,66,3.104,67,3.871,68,2.598,69,3.871,70,3.871,71,0.407,72,2.666,73,0.37,74,1.164,75,2.549,76,2.273,77,1.237,78,2.198,79,2.968,80,2.968,81,1.015,82,2.549,83,1.033,84,2.968,85,0.093,86,0.599,87,3.328,88,1.084,89,2.912,90,0.102,91,1.032,92,2.968,93,1.48,94,2.968,95,2.804,96,2.968,97,4.323,98,2.804,99,4.323,100,2.804,101,2.968,102,2.968,103,1.953,104,1.953,105,2.198,106,0.599,107,3.451,108,2.666,109,3.101,110,1.144,111,1.37,112,1.953,113,1.086,114,1.205,115,0.834,116,1.176,117,1.364,118,0.697,119,1.548,120,0.834,121,1.432,122,0.781,123,0.807,124,0.794,125,0.834,126,0.781,127,0.834,128,0.794,129,0.807,130,0.834,131,0.807,132,0.834,133,0.807,134,0.834,135,0.781,136,0.807,137,0.834,138,0.807,139,0.834,140,0.821,141,0.781,142,1.237,143,0.918,144,1.215,145,0.781,146,1.215,147,0.769,148,1.913,149,0.781,150,0.641,151,0.834,152,0.807,153,1.215,154,0.781,155,1.278,156,0.781,157,0.781,158,0.807,159,0.834,160,0.781,161,0.834,162,0.807,163,0.744,164,1.364,165,0.807,166,0.834,167,0.794,168,1.567,169,0.834,170,0.807,171,0.834,172,0.807,173,0.794,174,0.834,175,0.794,176,0.834,177,0.794,178,0.781,179,0.834,180,0.794,181,1.139,182,0.834,183,0.794,184,0.834,185,0.794,186,0.834,187,0.781,188,0.807,189,0.794,190,0.903,191,0.834,192,0.781,193,0.834,194,0.794,195,0.794,196,0.834,197,0.794,198,1.432,199,0.756,200,0.834,201,0.807,202,1.215,203,0.834,204,0.807,205,0.834,206,0.794,207,0.834,208,0.781,209,0.794,210,0.781,211,0.834,212,0.781,213,0.821,214,1.101,215,0.781,216,0.781,217,0.807,218,0.834,219,0.781,220,1.619,221,0.769,222,0.834,223,0.781,224,0.794,225,0.781,226,0.781,227,0.834,228,0.807,229,0.834,230,1.215,231,0.807,232,0.834,233,0.807,234,0.834,235,0.794,236,0.834,237,0.769,238,0.781,239,0.807,240,0.834,241,0.807,242,0.834,243,1.12,244,1.409,245,1.215,246,0.781,247,0.821,248,0.674,249,0.756,250,0.794,251,0.821,252,0.794,253,0.834,254,0.794,255,0.834,256,0.781,257,0.834,258,0.794,259,0.821,260,0.834,261,0.004,262,0.004]],["title/interfaces/AddMemberDialogData.html",[39,3.666,86,0.74]],["body/interfaces/AddMemberDialogData.html",[0,0.33,1,1.238,3,0.11,4,0.093,9,0.085,10,5.47,11,4.226,12,5.47,13,1.813,14,3.011,16,1.033,17,1.16,18,1.594,19,1.279,20,1.179,21,1.279,22,5.47,23,1.238,24,5.47,25,0.291,26,0.69,27,1.256,28,2.669,29,2.091,30,4.226,31,4.04,33,5.47,34,3.602,35,4.705,36,2.396,37,0.902,39,6.464,40,3.602,41,4.871,42,4.705,43,5.31,47,0.007,49,0.318,50,0.736,58,4.226,62,1.608,63,3.69,64,2.348,65,2.892,66,3.599,68,2.821,71,0.453,72,4.226,73,0.586,74,1.844,75,4.04,76,3.602,77,1.141,78,3.483,79,4.705,80,4.705,81,1.104,82,4.04,83,1.637,84,4.705,85,0.127,86,0.95,87,4.301,88,1.787,89,3.764,90,0.162,91,1.411,92,4.705,93,1.876,94,4.705,95,4.443,96,4.705,97,5.911,98,4.443,99,5.911,100,4.443,101,4.705,102,4.705,103,3.095,104,3.095,105,3.483,106,0.95,107,5.47,108,4.226,261,0.005,262,0.005,263,1.944]],["title/components/AlertDialog.html",[0,0.205,122,0.965]],["body/components/AlertDialog.html",[0,0.322,1,0.724,2,1.094,3,0.064,4,0.054,5,0.713,6,0.812,7,0.773,8,0.773,9,0.049,15,0.646,16,1.698,17,1.899,18,0.679,19,1.112,20,1.899,21,1.112,23,1.076,25,0.17,26,0.478,27,1.12,28,3.897,32,0.644,34,4.418,37,1.036,38,2.943,40,4.134,41,4.45,44,0.796,46,0.434,47,0.006,48,0.561,49,0.325,50,0.343,52,0.866,53,0.944,57,2.041,58,3.673,60,1.398,61,0.936,71,0.253,72,2.472,73,0.343,75,2.363,76,2.107,77,0.992,81,0.646,85,0.105,86,0.826,90,0.095,91,0.657,108,2.472,111,1.27,115,0.773,116,1.112,117,1.305,118,0.646,119,1.493,120,0.773,121,1.371,122,1.422,123,1.644,124,0.736,125,0.773,126,0.724,127,0.773,128,0.736,129,0.748,130,0.773,131,0.748,132,0.773,133,0.748,134,0.773,135,0.724,136,0.748,137,0.773,138,0.748,139,0.773,140,0.761,141,0.724,142,1.183,143,0.869,144,1.149,145,0.724,146,1.149,147,0.713,148,1.879,149,0.724,150,0.595,151,0.773,152,0.748,153,1.149,154,0.724,155,1.223,156,0.724,157,0.724,158,0.748,159,0.773,160,0.724,161,0.773,162,0.748,163,0.69,164,1.305,165,0.748,166,0.773,167,0.736,168,1.519,169,0.773,170,0.748,171,0.773,172,0.748,173,0.736,174,0.773,175,0.736,176,0.773,177,0.736,178,0.724,179,0.773,180,0.736,181,1.09,182,0.773,183,0.736,184,0.773,185,0.736,186,0.773,187,0.724,188,0.748,189,0.736,190,0.854,191,0.773,192,0.724,193,0.773,194,0.736,195,0.736,196,0.773,197,0.736,198,1.371,199,0.701,200,0.773,201,0.748,202,1.149,203,0.773,204,0.748,205,0.773,206,0.736,207,0.773,208,0.724,209,0.736,210,0.724,211,0.773,212,0.724,213,0.761,214,1.042,215,0.724,216,0.724,217,0.748,218,0.773,219,0.724,220,1.569,221,0.713,222,0.773,223,0.724,224,0.736,225,0.724,226,0.724,227,0.773,228,0.748,229,0.773,230,1.149,231,0.748,232,0.773,233,0.748,234,0.773,235,0.736,236,0.773,237,0.713,238,0.724,239,0.748,240,0.773,241,0.748,242,0.773,243,1.059,244,1.349,245,1.149,246,0.724,247,0.761,248,0.625,249,0.701,250,0.736,251,0.761,252,0.736,253,0.773,254,0.736,255,0.773,256,0.724,257,0.773,258,0.736,259,0.761,260,0.773,261,0.003,262,0.003,264,2.943,265,1.226,266,4.754,267,2.939,268,3.288,269,4.754,270,3.511,271,5.672,272,4.754,273,5.913,274,5.102,275,4.955,276,4.089,277,5.332,278,5.771,279,5.332,280,3.369,281,5.1,282,3.396,283,5.218,284,4.089,285,1.847,286,5.672,287,4.879,288,5.332,289,2.09,290,5.218,291,2.647,292,3.589,293,6.279,294,2.041,295,6.279,296,5.776,297,4.089,298,6.279,299,3.589,300,1.631,301,4.754,302,4.373,303,4.418,304,4.373,305,3.589,306,4.754,307,2.363,308,3.134,309,4.089,310,4.373,311,2.183,312,3.2,313,2.752,314,4.089,315,1.018,316,2.599,317,2.489,318,1.961,319,2.599,320,2.472,321,2.126,322,3.2,323,3.2,324,3.2,325,5.332,326,5.332,327,5.332,328,7.042]],["title/interfaces/AlertDialogData.html",[86,0.74,278,3.666]],["body/interfaces/AlertDialogData.html",[0,0.337,3,0.095,4,0.08,9,0.073,16,0.893,17,1.003,20,1.927,21,1.106,23,1.071,25,0.252,26,0.629,27,0.997,28,4.029,34,4.617,37,1.032,40,4.12,41,4.434,47,0.007,49,0.382,50,0.903,52,0.771,58,3.653,60,1.347,71,0.333,72,3.653,73,0.506,75,3.492,76,3.114,85,0.13,86,1.218,90,0.14,91,0.971,108,3.653,111,2.484,122,1.071,123,1.746,261,0.004,262,0.004,263,1.681,264,4.35,265,1.22,266,4.729,267,3.661,268,4.26,269,4.729,270,3.492,271,4.729,272,4.729,273,6.478,274,5.091,275,5.179,278,6.031,280,3.352,281,5.083,282,2.831,283,4.35,284,4.067,285,1.54,286,4.729,287,4.067,289,1.743,290,4.35,291,2.207,293,6.257,294,2.03,295,6.257,296,5.756,297,4.067,298,6.257,300,1.623,301,4.729,302,4.35,303,5.438,304,4.35,306,4.729,307,3.492,308,3.981,309,6.031,310,6.451,311,3.226,312,6.257,313,5.382,314,6.419,315,1.388,316,5.083,317,3.908,318,3.079,319,6.062,320,5.765,321,2.799,322,4.729,323,4.729,324,4.729]],["title/injectables/ApiService.html",[329,1.794,330,2.63]],["body/injectables/ApiService.html",[3,0.071,4,0.06,9,0.093,25,0.189,26,0.515,27,1.352,32,0.694,37,0.993,44,0.841,46,1.115,47,0.006,48,0.629,49,0.384,50,0.805,52,1.005,60,1.156,61,0.585,68,3.06,71,0.373,73,0.38,85,0.066,90,0.105,91,1.235,106,1.266,150,1.225,261,0.004,262,0.004,265,1.939,300,1.216,315,1.401,321,3.68,329,2.157,330,3.162,331,2.062,332,3.976,333,3.403,334,4.714,335,4.752,336,6.751,337,6.594,338,6.594,339,7.396,340,5.738,341,3.976,342,7.697,343,5.748,344,3.959,345,5.748,346,5.33,347,7.84,348,3.976,349,4.24,350,8.152,351,6.819,352,8.152,353,4.974,354,8.152,355,8.152,356,7.011,357,6.622,358,5.748,359,3.976,360,5.748,361,3.976,362,5.748,363,3.976,364,5.748,365,3.976,366,5.748,367,3.976,368,3.835,369,5.748,370,2.899,371,5.748,372,4.408,373,5.537,374,5.125,375,3.049,376,3.545,377,3.545,378,3.976,379,3.976,380,2.062,381,1.953,382,1.381,383,3.976,384,3.976,385,3.261,386,3.545,387,3.545,388,3.976,389,3.976,390,3.976,391,3.976,392,3.976]],["title/components/AppComponent.html",[0,0.205,124,0.981]],["body/components/AppComponent.html",[0,0.356,1,0.939,2,1.317,3,0.083,4,0.07,5,0.923,6,1.052,7,1.002,8,1.002,9,0.064,15,0.837,16,1.715,17,1.92,18,0.879,19,1.339,20,0.894,21,1.339,23,1.296,25,0.221,26,0.575,27,1.045,37,1.082,44,0.626,47,0.006,48,0.592,49,0.192,60,0.796,61,0.684,71,0.221,73,0.444,77,1.194,81,0.837,85,0.077,90,0.122,113,1.305,114,1.448,115,1.002,116,1.339,117,1.509,118,0.837,119,1.764,120,1.002,121,1.584,122,0.939,123,0.97,124,1.627,125,1.002,126,0.939,127,1.002,128,0.954,129,0.97,130,1.002,131,0.97,132,1.002,133,0.97,134,1.002,135,0.939,136,0.97,137,1.002,138,0.97,139,1.002,140,0.986,141,0.939,142,1.368,143,1.046,144,1.383,145,0.939,146,1.383,147,0.923,148,1.989,149,0.939,150,0.77,151,1.002,152,0.97,153,1.383,154,0.939,155,1.413,156,0.939,157,0.939,158,0.97,159,1.002,160,0.939,161,1.002,162,0.97,163,0.894,164,1.509,165,0.97,166,1.002,167,0.954,168,1.68,169,1.002,170,0.97,171,1.002,172,0.97,173,0.954,174,1.002,175,0.954,176,1.002,177,0.954,178,0.939,179,1.002,180,0.954,181,1.259,182,1.002,183,0.954,184,1.002,185,0.954,186,1.002,187,0.939,188,0.97,189,0.954,190,1.028,191,1.002,192,0.939,193,1.002,194,0.954,195,1.707,196,1.002,197,0.954,198,1.584,199,0.908,200,1.002,201,0.97,202,1.383,203,1.002,204,0.97,205,1.002,206,0.954,207,1.002,208,0.939,209,0.954,210,0.939,211,1.002,212,0.939,213,0.986,214,1.254,215,0.939,216,0.939,217,0.97,218,1.002,219,0.939,220,1.735,221,0.923,222,1.002,223,0.939,224,0.954,225,0.939,226,0.939,227,1.002,228,0.97,229,1.002,230,1.383,231,0.97,232,1.002,233,0.97,234,1.002,235,0.954,236,1.002,237,0.923,238,0.939,239,0.97,240,1.002,241,0.97,242,1.002,243,1.275,244,1.559,245,1.383,246,0.939,247,0.986,248,1.281,249,0.908,250,0.954,251,0.986,252,0.954,253,1.002,254,0.954,255,1.002,256,0.939,257,1.002,258,0.954,259,0.986,260,1.002,261,0.004,262,0.004,265,1.069,267,3.25,289,1.528,315,0.672,381,3.153,393,4.649,394,6.419,395,6.419,396,2.792,397,4.65,398,7.353,399,6.419,400,6.419,401,5.724,402,4.649,403,4.649,404,1.556,405,1.802,406,1.935,407,2.411]],["title/modules/AppModule.html",[408,1.989,409,3.666]],["body/modules/AppModule.html",[3,0.121,4,0.102,9,0.093,47,0.006,71,0.452,73,0.644,85,0.111,90,0.178,124,2.036,187,1.921,188,1.408,261,0.005,262,0.005,409,7.636,410,2.937,411,4.643,412,6.02,413,6.02,414,6.02,415,6.02,416,6.894,417,5.404,418,4.974,419,3.604,420,3.152,421,6.751,422,5.167,423,3.818,424,8.177,425,4.125,426,6.707,427,5.177,428,5.537,429,6.751,430,6.751,431,6.707,432,6.02,433,5.177,434,4.107]],["title/modules/AppRoutingModule.html",[408,1.989,416,3.463]],["body/modules/AppRoutingModule.html",[0,0.346,3,0.119,4,0.1,9,0.091,47,0.007,64,2.539,71,0.443,73,0.633,85,0.11,90,0.175,93,1.477,187,1.633,188,1.687,194,1.66,248,1.155,261,0.005,262,0.005,410,2.886,416,5.86,423,3.097,425,4.081,431,6.636,432,5.915,435,6.634,436,5.113,437,4.957,438,2.103,439,6.636,440,6.634,441,6.634,442,6.634,443,5.441,444,5.915,445,5.99,446,5.441,447,8.104,448,6.634,449,6.634,450,5.915,451,5.441,452,6.634,453,6.634,454,4.805,455,6.634,456,6.634,457,6.634,458,6.634,459,6.634,460,6.634,461,5.915,462,6.634,463,6.634,464,4.192]],["title/modules/AuthModule.html",[408,1.989,465,3.666]],["body/modules/AuthModule.html",[3,0.113,4,0.096,9,0.087,47,0.006,71,0.465,73,0.603,74,1.898,85,0.104,90,0.166,135,1.891,149,1.891,160,1.891,192,1.891,210,1.891,212,1.891,261,0.005,262,0.005,410,2.747,411,4.456,417,5.317,418,4.774,419,3.37,420,2.948,422,4.959,423,3.664,425,3.959,433,4.842,465,7.703,466,5.63,467,5.63,468,5.63,469,6.783,470,6.314,471,5.168,472,3.99,473,5.684,474,6.314,475,5.63,476,5.179,477,6.998,478,5.63,479,5.179,480,5.684,481,5.63,482,5.179,483,5.63,484,5.63,485,5.63,486,5.179]],["title/modules/AuthRoutingModule.html",[408,1.989,469,3.463]],["body/modules/AuthRoutingModule.html",[0,0.41,3,0.117,4,0.099,9,0.09,47,0.007,62,1.365,71,0.459,73,0.625,85,0.108,90,0.172,93,1.457,135,1.62,149,1.62,150,1.085,160,1.62,190,1.049,192,1.752,210,1.62,212,1.62,213,1.388,214,1.568,261,0.005,262,0.005,291,2.724,408,2.724,410,2.848,419,3.494,423,3.057,425,4.048,436,5.072,437,5.271,438,2.075,445,6.047,446,6.583,464,4.137,469,5.813,475,5.837,476,5.37,477,7.156,478,5.837,479,5.37,480,5.813,481,5.837,482,5.37,483,5.837,484,5.837,485,5.837,486,5.37,487,6.547,488,4.311,489,5.021,490,5.021,491,4.284,492,4.51]],["title/injectables/AuthService.html",[329,1.794,493,2.714]],["body/injectables/AuthService.html",[3,0.093,4,0.078,9,0.071,25,0.246,27,1.42,32,0.835,37,0.762,44,0.919,46,1.074,47,0.007,48,0.696,49,0.395,50,0.848,52,1.025,64,3.571,71,0.369,73,0.495,85,0.086,90,0.137,106,1.459,261,0.004,262,0.004,285,2.007,294,1.984,300,1.585,315,1.415,329,2.593,330,4.888,331,2.687,333,2.876,380,2.687,381,2.545,382,1.8,488,5.119,489,6.36,490,5.962,491,5.03,493,3.923,494,5.182,495,7.394,496,6.91,497,8.293,498,8.293,499,6.377,500,6.161,501,3.152,502,5.182,503,5.182,504,6.91,505,5.182,506,6.007,507,5.182,508,5.182,509,5.405,510,5.182,511,5.182,512,5.182,513,5.182,514,5.182,515,5.182,516,5.182,517,6.91,518,5.182,519,3.753,520,3.57,521,4.729,522,4.277,523,5.182,524,4.779,525,6.932,526,5.182,527,4.62,528,5.182,529,5.182,530,5.182,531,5.182,532,5.182,533,5.182,534,4.62]],["title/components/BoardPage.html",[0,0.205,126,0.965]],["body/components/BoardPage.html",[0,0.214,1,0.496,2,0.815,3,0.044,4,0.037,5,0.488,6,0.556,7,0.529,8,0.529,9,0.034,13,1.173,14,1.953,15,0.442,16,1.665,17,1.867,18,0.464,19,0.828,20,0.472,21,0.828,23,0.802,25,0.117,26,0.356,27,1.277,30,5.091,32,0.48,36,2.243,37,0.584,44,0.881,46,0.815,47,0.007,48,0.585,49,0.343,50,0.706,52,0.812,53,1.116,60,1.216,61,1.044,62,0.828,68,2.555,71,0.41,73,0.234,77,0.739,81,1.034,83,0.655,85,0.041,87,1.119,88,1.468,89,2.69,90,0.065,91,1.397,93,1.645,106,0.889,109,2.75,110,2.098,112,1.239,113,1.769,114,1.963,115,0.529,116,0.828,117,1.645,118,0.442,119,1.618,120,0.529,121,1.077,122,0.496,123,0.828,124,0.504,125,0.529,126,1.159,127,0.529,128,0.504,129,1.705,130,0.529,131,0.512,132,0.529,133,0.512,134,0.529,135,0.496,136,0.512,137,0.529,138,0.512,139,0.529,140,0.521,141,0.496,142,0.93,143,1.099,144,0.856,145,0.496,146,0.856,147,0.488,148,1.69,149,0.496,150,0.407,151,0.529,152,0.512,153,0.856,154,0.496,155,0.961,156,0.496,157,0.496,158,0.512,159,0.529,160,0.496,161,0.529,162,0.512,163,0.472,164,1.026,165,0.512,166,0.529,167,0.504,168,1.273,169,0.529,170,0.512,171,0.529,172,0.512,173,0.504,174,0.529,175,0.504,176,0.529,177,0.504,178,1.009,179,0.529,180,0.504,181,1.493,182,0.529,183,0.504,184,0.529,185,0.504,186,0.529,187,0.496,188,0.512,189,0.504,190,0.92,191,0.529,192,0.496,193,0.529,194,0.504,195,0.504,196,0.529,197,0.504,198,1.077,199,0.48,200,0.529,201,0.512,202,0.856,203,0.529,204,0.512,205,0.529,206,0.504,207,0.529,208,0.496,209,0.504,210,0.496,211,0.529,212,0.496,213,0.521,214,0.776,215,0.496,216,0.496,217,0.512,218,0.529,219,0.496,220,1.315,221,0.488,222,0.529,223,0.496,224,0.504,225,0.496,226,0.496,227,0.529,228,0.512,229,0.529,230,0.856,231,0.512,232,0.529,233,0.512,234,0.529,235,0.504,236,0.529,237,0.789,238,0.496,239,0.512,240,0.529,241,0.512,242,0.529,243,0.789,244,1.217,245,0.856,246,0.496,247,0.521,248,0.428,249,0.48,250,0.504,251,0.521,252,0.504,253,0.529,254,0.504,255,0.529,256,0.496,257,0.529,258,0.504,259,0.521,260,0.529,261,0.003,262,0.003,267,1.551,268,1.147,289,0.807,294,0.94,303,1.442,315,1.068,318,1.461,319,1.779,320,1.692,340,2.255,346,1.311,404,0.822,405,2.074,406,1.652,438,0.778,535,2.456,536,4.1,537,4.999,538,3.971,539,5.533,540,6.015,541,5.533,542,5.533,543,4.263,544,4.999,545,4.999,546,5.12,547,3.971,548,3.971,549,3.971,550,4.404,551,5.743,552,2.735,553,1.617,554,3.313,555,4.168,556,4.891,557,3.399,558,3.79,559,4.319,560,3.971,561,3.971,562,5.743,563,2.456,564,1.779,565,3.971,566,5.533,567,2.456,568,2.456,569,3.971,570,2.456,571,1.494,572,3.971,573,2.456,574,4.999,575,2.456,576,2.456,577,2.456,578,3.971,579,4.886,580,2.456,581,2.456,582,2.456,583,2.456,584,2.456,585,2.456,586,2.456,587,2.456,588,2.456,589,2.456,590,2.456,591,2.456,592,2.838,593,3.834,594,3.257,595,2.456,596,2.456,597,3.971,598,2.19,599,1.442,600,1.617,601,1.552,602,1.351,603,1.617,604,2.014,605,1.022,606,1.433,607,0.959,608,1.022,609,2.456,610,2.456,611,2.456,612,2.876,613,1.779,614,2.19,615,2.19,616,1.779,617,2.456,618,2.456,619,1.394,620,2.416,621,1.883,622,2.19,623,2.456,624,2.456,625,3.834,626,2.456,627,2.456,628,3.971,629,2.19,630,2.456,631,2.19,632,2.014,633,2.456,634,2.456,635,2.456,636,2.456,637,2.456,638,2.456,639,3.971,640,2.456,641,2.456,642,2.456,643,2.456,644,5.743,645,2.456,646,3.541,647,3.971,648,3.971,649,4.999,650,4.999,651,2.19,652,2.456,653,2.456,654,2.456,655,2.456,656,2.456,657,2.456,658,2.456,659,0.94,660,2.456,661,3.257,662,3.971,663,1.854,664,2.456,665,2.456,666,2.876,667,2.014,668,2.014,669,2.456,670,1.883,671,2.014,672,1.779,673,2.456,674,2.014,675,3.045,676,2.615,677,2.456,678,2.19,679,1.617,680,2.456,681,2.456,682,1.552,683,2.456,684,2.456,685,2.456,686,2.456,687,3.971,688,3.971,689,2.456,690,2.456,691,3.257,692,3.257,693,3.045,694,2.331,695,1.926,696,2.413,697,2.562,698,2.617,699,3.01,700,2.935,701,2.485,702,3.906,703,2.217,704,1.394,705,2.456,706,2.255,707,2.955,708,2.948,709,2.456,710,2.19,711,2.455,712,2.443,713,2.014,714,2.014,715,1.552,716,2.743,717,2.509,718,2.19,719,2.175,720,2.456,721,3.541,722,1.552,723,2.393,724,1.779,725,2.615,726,1.617,727,1.433,728,1.461,729,1.461,730,0.886,731,1.215,732,1.274,733,1.239,734,1.839,735,2.014,736,2.19,737,2.08,738,2.036,739,1.442,740,2.036,741,1.652,742,2.456,743,3.971,744,4.999,745,3.045,746,3.601,747,2.456,748,3.971,749,3.971,750,3.971,751,3.971,752,1.839,753,2.456,754,2.456,755,2.456,756,1.494,757,0.793,758,0.853,759,1.727,760,3.159,761,1.147,762,1.274,763,1.068,764,1.552,765,1.442,766,1.883,767,1.779,768,3.971,769,1.394,770,1.311,771,1.779]],["title/components/BoardTaskComponent.html",[0,0.205,128,0.981]],["body/components/BoardTaskComponent.html",[0,0.255,1,0.649,2,1.007,3,0.058,4,0.049,5,0.639,6,0.727,7,0.693,8,0.693,9,0.044,15,0.579,16,1.69,17,1.888,18,0.608,19,1.024,20,0.618,21,1.024,23,0.991,25,0.153,26,0.44,27,0.846,32,0.593,37,0.473,44,0.84,46,0.593,47,0.006,48,0.587,49,0.312,50,0.469,52,0.732,53,1.054,60,1.141,61,1.055,62,1.024,71,0.385,73,0.307,77,0.913,81,0.579,85,0.053,88,0.943,89,2.374,90,0.085,91,0.588,106,0.76,109,3.275,110,1.45,111,1.737,113,2.014,114,1.528,115,0.693,116,1.024,117,1.221,118,0.579,119,1.854,120,0.693,121,1.283,122,0.649,123,0.671,124,0.66,125,0.693,126,0.649,127,0.693,128,1.367,129,1.769,130,0.693,131,0.671,132,0.693,133,0.671,134,0.693,135,0.649,136,0.671,137,0.693,138,0.671,139,0.693,140,0.682,141,0.649,142,1.335,143,0.8,144,1.057,145,0.649,146,1.057,147,0.639,148,1.827,149,0.649,150,1.303,151,0.693,152,0.671,153,1.057,154,0.649,155,1.598,156,0.649,157,0.649,158,0.671,159,0.693,160,0.649,161,0.693,162,0.671,163,0.618,164,1.221,165,0.671,166,0.693,167,0.66,168,1.678,169,0.693,170,0.671,171,0.693,172,0.671,173,1.614,174,0.693,175,0.66,176,0.693,177,0.66,178,0.649,179,0.693,180,0.66,181,1.606,182,0.693,183,0.66,184,0.693,185,0.66,186,0.693,187,0.649,188,0.671,189,0.66,190,0.786,191,0.693,192,0.649,193,0.693,194,0.66,195,0.66,196,0.693,197,0.66,198,1.283,199,0.628,200,0.693,201,0.671,202,1.057,203,0.693,204,0.671,205,0.693,206,0.66,207,0.693,208,0.649,209,0.66,210,0.649,211,0.693,212,0.649,213,0.682,214,0.959,215,0.649,216,0.649,217,0.671,218,0.693,219,0.649,220,1.496,221,0.639,222,0.693,223,0.649,224,0.66,225,0.649,226,0.649,227,0.693,228,0.671,229,0.693,230,1.057,231,0.671,232,0.693,233,0.671,234,0.693,235,0.66,236,0.693,237,0.639,238,0.649,239,0.671,240,0.693,241,0.671,242,0.693,243,0.975,244,1.262,245,1.057,246,0.649,247,0.682,248,0.56,249,0.628,250,0.66,251,0.682,252,0.66,253,0.693,254,0.66,255,0.693,256,0.649,257,0.693,258,0.66,259,0.682,260,0.693,261,0.003,262,0.003,267,1.917,289,1.056,318,2.64,346,1.716,382,1.117,404,2.531,405,2.589,524,2.545,539,6.203,541,6.203,542,6.203,555,4.619,557,3.62,599,1.887,600,2.117,601,2.032,605,1.338,606,1.16,607,1.256,608,1.338,616,2.329,661,2.637,682,3.762,692,4.026,695,2.041,696,2.463,697,1.771,698,1.465,699,1.309,701,2.397,703,2.084,707,2.042,708,2.861,716,2.59,719,2.898,723,2.85,727,1.771,728,1.806,729,2.19,730,2.148,731,1.821,734,1.183,737,2.477,738,1.999,740,2.713,741,2.772,746,4.199,752,1.806,757,1.037,758,1.705,759,2.59,760,3.762,762,3.087,763,2.898,764,2.032,765,2.881,766,2.466,772,8.746,773,7.798,774,3.215,775,5.953,776,4.908,777,3.764,778,5.94,779,1.841,780,2.466,781,4.908,782,2.965,783,3.215,784,3.215,785,3.215,786,3.764,787,3.215,788,3.215,789,3.215,790,3.215,791,3.215,792,3.215,793,1.825,794,2.215,795,3.102,796,2.867,797,4.908,798,2.867,799,2.867,800,3.215,801,2.466,802,2.466,803,2.637,804,2.329,805,2.329,806,2.867,807,4.908,808,4.376,809,4.908,810,3.102,811,1.825,812,1.999,813,1.667,814,2.881,815,3.764,816,3.215,817,2.867,818,2.466,819,2.032,820,1.622,821,3.215,822,2.637,823,3.92,824,3.215,825,3.783,826,3.783,827,2.867,828,2.867,829,3.215,830,3.215,831,2.032,832,2.215,833,1.622,834,3.215,835,3.215,836,2.411,837,3.215,838,2.117,839,4.376,840,2.329]],["title/components/ButtonComponent.html",[0,0.205,131,0.997]],["body/components/ButtonComponent.html",[0,0.305,1,0.641,2,0.998,3,0.057,4,0.048,5,0.631,6,0.719,7,0.684,8,0.684,9,0.044,13,1.437,15,0.572,16,1.689,17,1.889,18,0.601,19,1.014,20,0.611,21,1.014,23,0.982,25,0.151,26,0.435,29,1.658,32,0.588,44,0.734,47,0.006,48,0.494,49,0.333,52,0.349,53,0.562,57,1.216,60,1.012,61,0.869,71,0.315,73,0.303,77,0.905,81,0.572,85,0.052,90,0.084,110,0.938,111,1.124,113,1.858,115,0.684,116,1.014,117,1.607,118,0.572,119,1.952,120,0.684,121,1.273,122,0.641,123,0.662,124,0.652,125,0.684,126,0.641,127,0.684,128,0.652,129,0.662,130,0.684,131,1.381,132,0.684,133,0.662,134,0.684,135,0.641,136,0.662,137,0.684,138,0.662,139,0.684,140,0.673,141,0.641,142,1.099,143,0.792,144,1.048,145,0.641,146,1.048,147,0.631,148,1.821,149,0.641,150,0.526,151,0.684,152,0.662,153,1.048,154,0.641,155,1.136,156,0.641,157,0.641,158,0.662,159,0.684,160,0.641,161,0.684,162,0.662,163,0.611,164,1.212,165,0.662,166,0.684,167,0.652,168,1.707,169,0.684,170,0.662,171,0.684,172,0.662,173,0.652,174,0.684,175,0.652,176,0.684,177,0.652,178,0.641,179,0.684,180,0.652,181,1.012,182,0.684,183,0.652,184,0.684,185,0.652,186,0.684,187,0.641,188,0.662,189,0.652,190,0.779,191,0.684,192,0.641,193,0.684,194,0.652,195,0.652,196,0.684,197,0.652,198,1.273,199,0.621,200,0.684,201,0.662,202,1.048,203,0.684,204,0.662,205,0.684,206,0.652,207,0.684,208,0.641,209,0.652,210,0.641,211,0.684,212,0.641,213,0.673,214,0.95,215,0.641,216,0.641,217,0.662,218,0.684,219,0.641,220,1.488,221,0.631,222,0.684,223,0.641,224,0.652,225,0.641,226,0.641,227,0.684,228,0.662,229,0.684,230,1.048,231,0.662,232,0.684,233,0.662,234,0.684,235,0.652,236,0.684,237,0.631,238,0.641,239,0.662,240,0.684,241,0.662,242,0.684,243,0.966,244,1.252,245,1.048,246,0.641,247,0.673,248,1.029,249,0.621,250,0.652,251,1.513,252,0.652,253,0.684,254,0.652,255,0.684,256,0.641,257,0.684,258,0.652,259,0.673,260,0.684,261,0.003,262,0.003,265,0.73,267,1.241,274,4.915,281,3.522,285,1.412,291,2.755,294,1.861,303,4.189,315,0.703,317,4.581,318,1.168,404,3.1,405,2.659,406,3.447,564,3.522,605,1.322,606,2.389,607,1.241,608,1.322,695,1.626,696,1.412,697,1.754,701,1.873,703,2.497,707,1.322,711,4.069,712,1.351,716,2.88,719,2.115,722,2.007,727,1.754,728,1.789,729,2.435,730,1.754,731,1.807,734,1.168,738,1.294,740,3.443,741,2.755,746,4.018,752,1.789,759,2.88,761,2.27,762,3.433,763,3.274,769,2.761,779,1.824,811,1.803,812,2.696,813,2.522,814,2.855,815,3.729,817,4.335,825,1.803,826,1.803,833,2.453,840,4.279,841,3.176,842,4.862,843,4.335,844,4.862,845,4.862,846,5.908,847,5.908,848,4.862,849,4.018,850,6.984,851,7.834,852,4.531,853,3.176,854,3.176,855,3.073,856,4.862,857,4.862,858,6.934,859,3.176,860,4.862,861,2.522,862,4.862,863,4.335,864,3.729,865,4.862,866,5.158,867,3.176,868,3.729,869,3.176,870,6.62,871,4.862,872,3.176,873,3.176,874,1.747,875,1.932,876,3.176,877,2.605,878,3.729,879,2.832,880,3.176,881,3.176,882,3.176,883,2.832,884,3.988,885,3.176,886,3.176,887,1.932,888,3.176,889,3.176,890,3.176,891,4.335,892,3.176,893,2.188,894,3.701,895,6.362,896,3.176,897,3.176,898,2.436,899,2.091,900,3.176,901,5.142,902,4.07]],["title/components/CardComponent.html",[0,0.205,133,0.997]],["body/components/CardComponent.html",[0,0.31,1,0.911,2,1.291,3,0.081,4,0.068,5,0.897,6,1.021,7,0.973,8,0.973,9,0.062,15,0.813,16,1.713,17,1.918,18,0.854,19,1.312,20,0.868,21,1.312,23,1.27,37,1.065,44,0.44,47,0.006,48,0.584,71,0.299,73,0.431,77,1.17,81,0.813,85,0.075,90,0.119,110,1.334,115,0.973,116,1.312,117,1.485,118,0.813,119,1.966,120,0.973,121,1.56,122,0.911,123,0.941,124,0.926,125,0.973,126,0.911,127,0.973,128,0.926,129,0.941,130,0.973,131,0.941,132,0.973,133,1.633,134,0.973,135,0.911,136,0.941,137,0.973,138,0.941,139,0.973,140,0.957,141,0.911,142,1.347,143,1.025,144,1.355,145,0.911,146,1.355,147,0.897,148,1.977,149,0.911,150,0.748,151,0.973,152,0.941,153,1.355,154,0.911,155,1.391,156,0.911,157,0.911,158,0.941,159,0.973,160,0.911,161,0.973,162,0.941,163,0.868,164,1.485,165,0.941,166,0.973,167,0.926,168,1.662,169,0.973,170,0.941,171,0.973,172,0.941,173,0.926,174,0.973,175,0.926,176,0.973,177,0.926,178,0.911,179,0.973,180,0.926,181,1.24,182,0.973,183,0.926,184,0.973,185,0.926,186,0.973,187,0.911,188,0.941,189,0.926,190,1.008,191,0.973,192,0.911,193,0.973,194,0.926,195,0.926,196,0.973,197,0.926,198,1.56,199,0.882,200,0.973,201,0.941,202,1.355,203,0.973,204,0.941,205,0.973,206,0.926,207,0.973,208,0.911,209,0.926,210,0.911,211,0.973,212,0.911,213,0.957,214,1.229,215,0.911,216,0.911,217,0.941,218,0.973,219,0.911,220,1.717,221,0.897,222,0.973,223,0.911,224,0.926,225,0.911,226,0.911,227,0.973,228,0.941,229,0.973,230,1.355,231,0.941,232,0.973,233,0.941,234,0.973,235,0.926,236,0.973,237,0.897,238,0.911,239,0.941,240,0.973,241,0.941,242,0.973,243,1.249,244,1.534,245,1.355,246,0.911,247,0.957,248,0.786,249,0.882,250,0.926,251,0.957,252,0.926,253,0.973,254,0.926,255,0.973,256,0.911,257,0.973,258,0.926,259,0.957,260,0.973,261,0.004,262,0.004,267,1.763,274,2.746,289,1.483,318,2.663,405,2.576,406,1.878,407,3.262,524,3.262,606,2.269,695,1.108,696,1.826,698,2.057,699,1.838,701,1.994,726,4.142,731,1.381,734,2.314,740,3.189,741,2.617,746,2.409,769,3.571,770,2.409,811,2.563,825,4.11,826,4.11,838,2.972,903,4.514,904,8.921,905,7.239,906,6.29,907,4.514,908,5.608,909,6.422,910,4.025,911,4.514,912,3.462,913,4.514]],["title/components/ChangePasswordPage.html",[0,0.205,135,0.965]],["body/components/ChangePasswordPage.html",[0,0.258,1,0.664,2,1.024,3,0.059,4,0.05,5,0.653,6,0.744,7,0.708,8,0.708,9,0.045,13,1.475,14,2.357,15,0.592,16,1.691,17,1.893,18,0.622,19,1.041,20,0.632,21,1.041,23,1.008,25,0.156,26,0.447,27,0.857,29,2.956,32,0.603,36,2.632,37,0.734,44,0.744,46,0.397,47,0.006,48,0.541,49,0.249,50,0.692,52,0.549,53,0.884,60,0.563,61,0.484,62,1.833,63,2.889,65,2.719,66,3.383,71,0.388,73,0.314,74,0.988,77,0.929,81,0.592,83,0.877,85,0.054,90,0.087,91,1.531,93,0.732,103,1.658,104,1.658,106,0.509,110,0.971,111,1.164,113,2.599,114,2.543,115,0.708,116,1.041,117,1.238,118,0.592,119,1.681,120,0.708,121,1.3,122,0.664,123,0.686,124,0.675,125,0.708,126,0.664,127,0.708,128,0.675,129,0.686,130,0.708,131,0.686,132,0.708,133,0.686,134,0.708,135,1.36,136,1.704,137,0.708,138,0.686,139,0.708,140,0.697,141,0.664,142,1.123,143,0.813,144,1.076,145,0.664,146,1.076,147,0.653,148,1.838,149,0.664,150,0.545,151,0.708,152,0.686,153,1.076,154,0.664,155,1.16,156,0.664,157,0.664,158,0.686,159,0.708,160,0.664,161,0.708,162,0.686,163,0.632,164,1.238,165,0.686,166,0.708,167,0.675,168,1.54,169,0.708,170,0.686,171,0.708,172,0.686,173,0.675,174,0.708,175,0.675,176,0.708,177,0.675,178,0.664,179,0.708,180,0.675,181,1.034,182,0.708,183,0.675,184,0.708,185,0.675,186,0.708,187,0.664,188,0.686,189,0.675,190,0.8,191,0.708,192,0.664,193,0.708,194,0.675,195,1.565,196,0.708,197,0.675,198,1.3,199,0.642,200,0.708,201,0.686,202,1.076,203,0.708,204,0.686,205,0.708,206,0.675,207,0.708,208,0.664,209,0.675,210,0.664,211,0.708,212,0.664,213,0.697,214,0.975,215,0.664,216,0.664,217,0.686,218,0.708,219,0.664,220,1.511,221,0.653,222,0.708,223,0.664,224,0.675,225,0.664,226,0.664,227,0.708,228,0.686,229,0.708,230,1.076,231,0.686,232,0.708,233,0.686,234,0.708,235,0.675,236,0.708,237,0.653,238,0.664,239,0.686,240,0.708,241,0.686,242,0.708,243,0.991,244,1.279,245,1.076,246,0.664,247,0.697,248,0.573,249,0.642,250,0.675,251,0.697,252,0.675,253,0.708,254,0.675,255,0.708,256,0.664,257,0.708,258,0.675,259,0.697,260,0.708,261,0.003,262,0.003,291,2.077,315,0.722,317,1.535,396,3.449,404,2.553,405,2.141,407,1.705,419,2.664,438,1.042,476,6.503,491,4.692,493,4.332,500,6.008,506,5.248,554,3.894,592,3.426,695,1.655,696,2.372,697,3.018,698,2.275,699,2.033,701,1.913,703,1.753,722,2.077,723,1.574,727,2.431,728,2.22,729,2.479,730,2.177,731,1.846,732,1.705,733,1.658,734,1.836,737,1.368,738,1.339,739,2.931,812,1.339,814,4.254,820,1.658,836,1.615,887,2,914,7.928,915,2.931,916,5.381,917,4.451,918,5.381,919,2.264,920,4.992,921,2.931,922,3.287,923,5.943,924,4.451,925,4.451,926,4.451,927,4.451,928,4.451,929,3.287,930,2.746,931,4.992,932,3.287,933,2.931,934,2.381,935,2.696,936,2.931,937,2.931,938,2.381,939,2.696,940,4.992,941,4.451,942,2.931,943,2.521,944,2.696,945,3.287,946,3.287,947,1.93,948,2.696,949,3.828,950,2.165,951,1.93,952,2.077,953,1.755,954,4.197,955,2.264,956,3.287,957,2.264,958,1.93,959,5.876,960,3.037,961,2.077,962,1.93,963,2,964,2,965,2.077,966,2.381,967,4.642,968,2.264,969,4.771,970,4.642,971,2.264,972,2.264,973,2.264,974,2.165,975,2.264,976,2.264,977,2.264,978,2.264]],["title/components/CheckboxComponent.html",[0,0.205,138,0.997]],["body/components/CheckboxComponent.html",[0,0.289,1,0.803,2,1.179,3,0.071,4,0.06,5,0.79,6,0.9,7,0.857,8,0.857,9,0.055,15,0.716,16,1.705,17,1.908,18,0.752,19,1.199,20,0.764,21,1.199,23,1.16,25,0.189,26,0.515,27,0.817,29,2.301,32,0.694,44,0.797,46,0.894,47,0.006,48,0.644,49,0.337,50,0.749,52,0.813,53,1.309,57,1.522,60,0.681,61,1.203,62,1.199,64,1.522,71,0.273,73,0.38,77,1.069,81,0.716,85,0.066,90,0.105,115,0.857,116,1.199,117,1.61,118,0.716,119,1.568,120,0.857,121,1.454,122,0.803,123,0.829,124,0.816,125,0.857,126,0.803,127,0.857,128,0.816,129,0.829,130,0.857,131,0.829,132,0.857,133,0.829,134,0.857,135,0.803,136,0.829,137,0.857,138,1.542,139,0.857,140,1.893,141,0.803,142,1.256,143,0.936,144,1.238,145,0.803,146,1.238,147,0.79,148,1.924,149,0.803,150,0.659,151,0.857,152,0.829,153,1.238,154,0.803,155,1.298,156,0.803,157,0.803,158,0.829,159,0.857,160,0.803,161,0.857,162,0.829,163,0.764,164,1.385,165,0.829,166,0.857,167,0.816,168,1.584,169,0.857,170,0.829,171,0.857,172,0.829,173,0.816,174,0.857,175,0.816,176,0.857,177,0.816,178,0.803,179,0.857,180,0.816,181,1.156,182,0.857,183,0.816,184,0.857,185,0.816,186,0.857,187,0.803,188,0.829,189,0.816,190,0.921,191,0.857,192,0.803,193,0.857,194,0.816,195,0.816,196,0.857,197,0.816,198,1.454,199,0.777,200,0.857,201,0.829,202,1.238,203,0.857,204,0.829,205,0.857,206,0.816,207,0.857,208,0.803,209,0.816,210,0.803,211,0.857,212,0.803,213,0.843,214,1.123,215,0.803,216,0.803,217,0.829,218,0.857,219,0.803,220,1.636,221,0.79,222,0.857,223,0.803,224,0.816,225,0.803,226,0.803,227,0.857,228,0.829,229,0.857,230,1.238,231,0.829,232,0.857,233,0.829,234,0.857,235,0.816,236,0.857,237,0.79,238,0.803,239,0.829,240,0.857,241,0.829,242,0.857,243,1.142,244,1.733,245,1.238,246,0.803,247,0.843,248,0.692,249,0.777,250,0.816,251,0.843,252,0.816,253,0.857,254,0.816,255,0.857,256,0.803,257,0.857,258,0.816,259,0.843,260,0.857,261,0.004,262,0.004,265,1.701,285,1.669,289,1.306,291,3.077,300,1.216,308,2.558,335,3.405,349,2.981,368,2.981,659,2.2,663,2.684,695,1.411,704,2.258,707,1.655,734,1.463,758,1.381,761,1.856,765,2.334,779,2.157,812,2.341,813,2.062,823,2.618,833,2.006,861,3.501,878,5.671,899,3.785,979,3.976,980,2.5,981,4.714,982,6.751,983,5.748,984,3.501,985,3.263,986,3.263,987,3.263,988,3.263,989,3.263,990,4.643,991,2.334,992,2.258,993,3.068,994,2.258,995,2.258,996,1.691,997,2.187,998,2.062,999,2.062,1000,2.258,1001,2.334,1002,3.263,1003,4.199,1004,2.619,1005,4.498,1006,2.258,1007,3.603,1008,2.187,1009,3.263,1010,2.558,1011,3.835,1012,2.122,1013,2.258,1014,3.263,1015,3.914,1016,2.258,1017,2.334,1018,2.258,1019,3.263,1020,2.258,1021,2.334,1022,3.263,1023,2.258,1024,2.258,1025,2.419,1026,2.334,1027,2.334,1028,2.334,1029,2.334,1030,2.88,1031,2.739,1032,2.419,1033,2.334,1034,5.748,1035,3.959,1036,3.976,1037,3.976,1038,3.501,1039,3.049,1040,3.545,1041,3.976,1042,2.513,1043,3.261]],["title/directives/ClickStopPropagationDirective.html",[118,0.861,250,0.981]],["body/directives/ClickStopPropagationDirective.html",[3,0.125,4,0.106,9,0.096,15,1.254,16,1.404,25,0.331,27,1.267,32,1.007,44,0.812,46,0.842,47,0.006,48,0.52,49,0.287,50,0.665,52,0.766,53,1.476,57,2.668,62,1.453,71,0.331,73,0.665,85,0.115,90,0.184,118,1.5,249,1.362,250,1.71,251,1.959,252,1.938,261,0.005,262,0.005,300,2.55,564,6.693,1044,8.918,1045,6.969,1046,8.335,1047,8.335,1048,8.335,1049,6.969,1050,8.335,1051,8.335,1052,8.335,1053,6.969,1054,6.969,1055,6.969,1056,6.969,1057,6.969,1058,6.969]],["title/components/ControlAccessor.html",[0,0.205,140,1.013]],["body/components/ControlAccessor.html",[0,0.313,1,0.595,2,0.942,3,0.053,4,0.045,5,0.586,7,0.989,8,0.635,9,0.041,13,1.356,16,1.68,17,1.876,18,0.558,19,0.957,20,0.567,25,0.14,26,0.411,27,1.12,29,2.824,32,0.555,37,0.936,44,0.835,46,0.833,47,0.006,48,0.639,49,0.315,50,0.753,52,0.867,53,1.467,57,1.128,60,0.505,61,1.318,62,1.59,64,1.757,65,2.587,68,1.887,71,0.268,73,0.281,74,0.886,77,0.854,81,0.531,83,0.787,85,0.049,90,0.168,91,1.337,93,0.656,106,1.131,115,0.635,116,0.957,117,1.565,118,0.531,119,1.349,120,0.635,121,1.215,122,0.595,123,0.615,124,0.605,125,0.635,126,0.595,127,0.635,128,0.605,129,0.615,130,0.635,131,0.615,132,0.635,133,0.615,134,0.635,135,0.595,136,0.615,137,0.635,138,0.615,139,0.635,140,1.349,141,0.595,142,1.049,143,0.748,144,0.989,145,0.595,146,0.989,147,0.586,148,1.785,149,0.595,150,0.488,151,0.635,152,0.615,153,0.989,154,0.595,155,1.084,156,0.595,157,0.595,158,0.615,159,0.635,160,0.595,161,0.635,162,0.615,163,0.567,164,1.157,165,0.615,166,0.635,167,0.605,168,1.539,169,0.635,170,0.615,171,0.635,172,0.615,173,0.605,174,0.635,175,0.605,176,0.635,177,0.605,178,0.595,179,0.635,180,0.605,181,0.966,182,0.635,183,0.605,184,0.635,185,0.605,186,0.635,187,0.595,188,0.615,189,0.605,190,0.735,191,0.635,192,0.595,193,0.635,194,0.605,195,0.605,196,0.635,197,0.605,198,1.215,199,0.576,200,0.635,201,0.615,202,0.989,203,0.635,204,0.615,205,0.635,206,0.605,207,0.635,208,0.595,209,0.605,210,0.595,211,0.635,212,0.595,213,0.625,214,0.897,215,0.595,216,0.595,217,0.615,218,0.635,219,0.595,220,1.438,221,0.586,222,0.635,223,0.595,224,0.605,225,0.595,226,0.595,227,0.635,228,0.615,229,0.635,230,0.989,231,0.615,232,0.635,233,0.615,234,0.635,235,0.605,236,0.635,237,0.586,238,0.595,239,0.615,240,0.635,241,0.615,242,0.635,243,0.912,244,1.717,245,0.989,246,0.595,247,0.625,248,0.513,249,0.576,250,0.605,251,0.625,252,0.605,253,0.635,254,0.605,255,0.635,256,0.595,257,0.635,258,0.605,259,0.625,260,0.635,261,0.003,262,0.003,265,1.68,285,1.848,291,3.173,294,1.128,300,1.947,308,3.394,313,2.261,321,2.75,335,3.684,349,3.576,368,3.3,372,2.261,434,1.793,536,4.624,550,2.261,659,2.436,663,2.971,725,3.023,761,3.22,764,1.863,779,2.388,855,1.863,861,3.788,984,4.444,985,2.607,986,2.607,987,2.607,988,2.607,989,3.201,992,2.607,993,3.681,994,2.607,995,3.201,996,1.953,997,2.525,998,2.381,999,2.381,1000,2.607,1002,3.613,1003,4.478,1004,2.9,1005,4.714,1006,2.607,1007,3.898,1008,2.525,1009,3.613,1010,2.833,1011,4.09,1012,2.45,1013,2.607,1014,3.613,1015,4.611,1016,2.607,1018,2.607,1019,3.916,1020,2.607,1022,3.613,1023,3.201,1024,2.607,1026,2.695,1027,2.695,1028,2.695,1029,2.695,1031,4.751,1059,8.686,1060,2.948,1061,3.765,1062,3.765,1063,3.521,1064,2.833,1065,4.591,1066,3.521,1067,5.638,1068,6.213,1069,5.656,1070,1.793,1071,2.948,1072,4.093,1073,3.765,1074,1.997,1075,2.948,1076,2.948,1077,2.948,1078,2.948,1079,2.948,1080,2.948,1081,2.948,1082,2.948,1083,4.093,1084,2.948,1085,2.948,1086,2.418,1087,2.948,1088,2.948,1089,2.948,1090,2.948,1091,2.948,1092,5.638,1093,2.092,1094,5.289,1095,1.941,1096,2.261,1097,2.135,1098,2.629,1099,2.135,1100,2.261,1101,2.031,1102,2.261,1103,2.948,1104,2.948,1105,4.591,1106,2.948,1107,5.29,1108,2.948,1109,2.948,1110,4.093,1111,2.948,1112,2.135,1113,2.418,1114,2.948,1115,2.629,1116,2.948,1117,2.948,1118,2.948,1119,2.418,1120,2.948,1121,5.638,1122,2.948,1123,2.418,1124,2.948,1125,2.948,1126,2.948,1127,2.135,1128,2.629,1129,2.948,1130,2.948,1131,4.591,1132,4.591,1133,2.948,1134,2.948,1135,2.948,1136,2.948,1137,2.948,1138,2.948]],["title/components/CreateProjectMembersPage.html",[0,0.205,141,0.965]],["body/components/CreateProjectMembersPage.html",[0,0.26,1,1.014,2,1.03,3,0.059,4,0.05,5,0.658,6,0.75,7,0.714,8,0.714,9,0.046,11,2.283,15,0.596,16,1.692,17,1.893,18,1.147,19,1.517,20,0.637,21,1.047,23,1.014,25,0.157,26,0.45,27,1.251,28,2.185,29,2.914,32,0.607,37,0.995,44,0.817,46,0.4,47,0.006,48,0.593,49,0.3,50,0.694,52,0.552,53,1.074,60,1.159,61,0.739,62,1.658,63,2.903,65,2.275,66,2.831,68,2.029,71,0.423,73,0.316,74,0.996,77,1.725,78,1.881,81,0.596,83,0.884,85,0.055,87,3.314,88,0.965,90,0.087,91,1.611,93,0.738,103,1.672,104,1.672,105,1.881,106,0.778,109,2.763,110,1.792,111,1.778,112,2.533,113,0.93,114,1.032,115,0.714,116,1.047,117,1.244,118,0.596,119,1.434,120,0.714,121,1.307,122,0.669,123,0.691,124,0.68,125,0.714,126,0.669,127,0.714,128,0.68,129,0.691,130,0.714,131,0.691,132,0.714,133,0.691,134,0.714,135,0.669,136,0.691,137,0.714,138,0.691,139,0.714,140,0.702,141,1.366,142,1.59,143,1.58,144,1.082,145,0.669,146,1.082,147,0.658,148,1.842,149,0.669,150,0.549,151,0.714,152,0.691,153,1.082,154,0.669,155,1.166,156,0.669,157,0.669,158,0.691,159,0.714,160,0.669,161,0.714,162,0.691,163,0.637,164,1.244,165,0.691,166,0.714,167,0.68,168,1.468,169,0.714,170,0.691,171,0.714,172,0.691,173,0.68,174,0.714,175,0.68,176,0.714,177,0.68,178,0.669,179,0.714,180,0.68,181,1.039,182,0.714,183,0.68,184,0.714,185,0.68,186,0.714,187,0.669,188,0.691,189,0.68,190,1.165,191,0.714,192,0.669,193,0.714,194,0.68,195,0.68,196,0.714,197,0.68,198,1.307,199,0.647,200,0.714,201,0.691,202,1.082,203,0.714,204,0.691,205,0.714,206,0.68,207,0.714,208,0.669,209,0.68,210,0.669,211,0.714,212,0.669,213,0.702,214,0.981,215,0.669,216,0.669,217,0.691,218,0.714,219,0.669,220,1.517,221,0.658,222,0.714,223,0.669,224,0.68,225,0.669,226,0.669,227,0.714,228,0.691,229,0.714,230,1.082,231,0.691,232,0.714,233,0.691,234,0.714,235,0.68,236,0.714,237,0.658,238,0.669,239,0.691,240,0.714,241,0.691,242,0.714,243,0.997,244,1.286,245,1.082,246,0.669,247,0.702,248,0.577,249,0.647,250,0.68,251,0.702,252,0.68,253,0.714,254,0.68,255,0.714,256,0.669,257,0.714,258,0.68,259,0.702,260,0.714,261,0.003,262,0.003,265,0.762,268,2.345,280,3.174,289,1.089,315,0.726,317,2.345,321,2.003,333,3.407,396,3.83,438,1.05,543,4.836,554,3.905,557,3.805,558,4.243,559,4.836,592,4.129,603,2.182,605,1.379,606,1.196,607,1.294,608,1.379,619,1.881,666,2.4,675,2.541,676,2.182,679,2.182,695,1.489,696,1.761,701,1.922,702,2.763,707,2.09,730,1.196,731,1.014,734,1.219,758,1.151,793,1.881,836,1.628,930,2.763,953,1.769,1038,2.604,1139,7.011,1140,7.011,1141,2.954,1142,5.407,1143,4.478,1144,4.974,1145,4.974,1146,5.55,1147,5.55,1148,2.016,1149,4.01,1150,5.022,1151,3.314,1152,3.174,1153,3.459,1154,3.307,1155,3.307,1156,3.055,1157,3.459,1158,3.314,1159,3.314,1160,5.55,1161,3.314,1162,3.459,1163,3.314,1164,2.954,1165,3.314,1166,2.718,1167,2.541,1168,2.182,1169,2.283,1170,2.283,1171,2.094,1172,2.283,1173,2.094,1174,2.182,1175,2.541,1176,2.718,1177,2.718,1178,2.718,1179,2.718,1180,4.119,1181,2.718,1182,4.119,1183,2.954,1184,2.954,1185,2.954,1186,4.478,1187,3.307,1188,2.954]],["title/components/CreateProjectPage.html",[0,0.205,145,0.965]],["body/components/CreateProjectPage.html",[0,0.258,1,1.006,2,1.022,3,0.059,4,0.05,5,0.651,6,0.742,7,0.706,8,0.706,9,0.045,11,2.258,15,0.59,16,1.691,17,1.891,18,1.139,19,1.509,20,0.63,21,1.039,23,1.006,25,0.156,26,0.446,27,1.315,28,2.167,29,2.906,32,0.602,34,2.925,37,0.99,44,0.815,46,0.396,47,0.006,48,0.591,49,0.299,50,0.575,52,0.547,53,1.067,60,1.24,61,0.886,62,1.652,63,2.884,65,2.261,66,2.813,68,2.016,71,0.422,73,0.313,74,0.986,77,1.756,78,1.862,81,0.59,83,0.875,85,0.054,87,3.298,88,0.958,90,0.086,91,1.395,93,0.73,103,1.654,104,1.654,105,1.862,106,0.771,109,3.314,110,1.988,111,1.763,112,2.513,113,1.398,114,1.551,115,0.706,116,1.039,117,1.236,118,0.59,119,1.427,120,0.706,121,1.298,122,0.662,123,0.684,124,0.673,125,0.706,126,0.662,127,0.706,128,0.673,129,0.684,130,0.706,131,0.684,132,0.706,133,0.684,134,0.706,135,0.662,136,0.684,137,0.706,138,0.684,139,0.706,140,0.695,141,0.662,142,1.586,143,1.242,144,1.073,145,1.359,146,1.073,147,0.651,148,1.837,149,0.662,150,0.543,151,0.706,152,0.684,153,1.073,154,0.662,155,1.158,156,0.662,157,0.662,158,0.684,159,0.706,160,0.662,161,0.706,162,0.684,163,0.63,164,1.236,165,0.684,166,0.706,167,0.673,168,1.461,169,0.706,170,0.684,171,0.706,172,0.684,173,0.673,174,0.706,175,0.673,176,0.706,177,0.673,178,0.662,179,0.706,180,0.673,181,1.032,182,0.706,183,0.673,184,0.706,185,0.673,186,0.706,187,0.662,188,0.684,189,0.673,190,1.159,191,0.706,192,0.662,193,0.706,194,0.673,195,0.673,196,0.706,197,0.673,198,1.298,199,0.641,200,0.706,201,0.684,202,1.073,203,0.706,204,0.684,205,0.706,206,0.673,207,0.706,208,0.662,209,0.673,210,0.662,211,0.706,212,0.662,213,0.695,214,0.973,215,0.662,216,0.662,217,0.684,218,0.706,219,0.662,220,1.509,221,0.651,222,0.706,223,0.662,224,0.673,225,0.662,226,0.662,227,0.706,228,0.684,229,0.706,230,1.073,231,0.684,232,0.706,233,0.684,234,0.706,235,0.673,236,0.706,237,0.651,238,0.662,239,0.684,240,0.706,241,0.684,242,0.706,243,0.989,244,1.277,245,1.073,246,0.662,247,0.695,248,0.571,249,0.641,250,0.673,251,0.695,252,0.673,253,0.706,254,0.673,255,0.706,256,0.662,257,0.706,258,0.673,259,0.695,260,0.706,261,0.003,262,0.003,265,0.754,268,2.326,270,2.159,280,3.148,289,1.077,315,0.72,317,1.531,321,1.987,333,3.396,396,3.821,438,1.039,543,4.816,554,3.891,557,3.792,558,4.228,559,4.818,592,4.109,603,2.159,605,1.364,606,1.183,607,1.281,608,1.364,619,1.862,666,2.375,675,2.514,676,2.159,679,2.159,695,1.777,696,1.954,701,1.91,702,1.804,703,0.952,707,2.073,708,1.987,727,1.183,728,1.206,729,1.206,730,1.183,731,1.003,758,1.73,759,1.426,793,1.862,836,1.61,930,2.74,953,1.75,963,1.994,1038,2.584,1139,6.992,1144,4.942,1145,4.942,1146,5.52,1147,5.52,1148,1.994,1149,3.996,1152,3.148,1153,3.432,1154,3.28,1155,3.28,1156,3.031,1157,3.432,1160,5.52,1162,3.432,1166,2.689,1167,2.514,1168,2.159,1169,2.258,1170,2.258,1171,2.072,1172,2.258,1173,2.072,1174,2.159,1175,2.514,1176,2.689,1177,2.689,1178,2.689,1179,2.689,1180,4.942,1181,2.689,1182,4.086,1183,2.923,1184,2.923,1185,2.923,1186,4.442,1187,3.28,1189,6.992,1190,2.923,1191,5.372,1192,4.442,1193,4.982,1194,3.279,1195,3.279,1196,3.279,1197,2.923,1198,3.279,1199,3.279,1200,3.279,1201,4.086,1202,3.28]],["title/components/CreateWorkspacePage.html",[0,0.205,147,0.949]],["body/components/CreateWorkspacePage.html",[0,0.331,1,0.775,2,1.149,3,0.069,4,0.058,5,0.762,6,0.868,7,0.827,8,0.827,9,0.053,15,0.691,16,1.703,17,1.905,18,0.726,19,1.168,20,0.738,21,1.168,23,1.131,25,0.182,26,0.502,27,1.239,28,2.437,29,3.02,32,0.677,34,3.289,37,0.973,44,0.709,46,0.464,47,0.006,48,0.622,49,0.231,50,0.632,52,0.422,53,0.992,60,1.133,61,0.565,62,1.783,63,3.167,65,2.482,66,3.089,71,0.406,73,0.366,74,1.154,77,1.79,81,0.691,83,1.024,85,0.063,90,0.101,91,0.702,103,1.936,104,1.936,105,2.179,106,0.867,110,1.134,111,1.358,115,0.827,116,1.168,117,1.357,118,0.691,119,1.542,120,0.827,121,1.425,122,0.775,123,0.8,124,0.788,125,0.827,126,0.775,127,0.827,128,0.788,129,0.8,130,0.827,131,0.8,132,0.827,133,0.8,134,0.827,135,0.775,136,0.8,137,0.827,138,0.8,139,0.827,140,0.814,141,0.775,142,1.72,143,0.913,144,1.207,145,0.775,146,1.207,147,1.445,148,1.909,149,0.775,150,0.636,151,0.827,152,0.8,153,1.207,154,0.775,155,1.272,156,0.775,157,0.775,158,0.8,159,0.827,160,0.775,161,0.827,162,0.8,163,0.738,164,1.357,165,0.8,166,0.827,167,0.788,168,1.562,169,0.827,170,0.8,171,0.827,172,0.8,173,0.788,174,0.827,175,0.788,176,0.827,177,0.788,178,0.775,179,0.827,180,0.788,181,1.133,182,0.827,183,0.788,184,0.827,185,0.788,186,0.827,187,0.775,188,0.8,189,0.788,190,1.165,191,0.827,192,0.775,193,0.827,194,0.788,195,0.788,196,0.827,197,0.788,198,1.425,199,0.75,200,0.827,201,0.8,202,1.207,203,0.827,204,0.8,205,0.827,206,0.788,207,0.827,208,0.775,209,0.788,210,0.775,211,0.827,212,0.775,213,0.814,214,1.095,215,0.775,216,0.775,217,0.8,218,0.827,219,0.775,220,1.613,221,0.762,222,0.827,223,0.775,224,0.788,225,0.775,226,0.775,227,0.827,228,0.8,229,0.827,230,1.207,231,0.8,232,0.827,233,0.8,234,0.827,235,0.788,236,0.827,237,0.762,238,0.775,239,0.8,240,0.827,241,0.8,242,0.827,243,1.113,244,1.402,245,1.207,246,0.775,247,0.814,248,1.453,249,0.75,250,0.788,251,0.814,252,0.788,253,0.827,254,0.788,255,0.827,256,0.775,257,0.827,258,0.788,259,0.814,260,0.827,261,0.004,262,0.004,265,1.288,268,2.616,270,2.527,280,3.54,321,2.234,333,3.558,382,1.333,396,3.95,438,1.216,592,4.392,695,1.376,696,1.115,701,1.776,708,2.234,758,1.333,759,1.67,930,3.082,962,2.253,1038,2.905,1139,6.345,1144,5.426,1147,5.966,1148,2.335,1149,4.207,1152,3.54,1153,3.859,1154,3.689,1155,3.689,1156,3.408,1157,3.859,1160,5.966,1162,3.859,1168,2.527,1169,2.644,1170,2.644,1171,2.425,1173,2.425,1181,3.148,1182,4.595,1187,2.527,1202,3.689,1203,6.345,1204,3.422,1205,5.899,1206,4.995,1207,5.602,1208,3.838,1209,3.838,1210,3.422,1211,3.838,1212,3.422]],["title/modules/DashboardModule.html",[408,1.989,1213,3.666]],["body/modules/DashboardModule.html",[1,1.825,3,0.099,4,0.083,9,0.076,11,3.795,47,0.006,71,0.47,73,0.526,74,1.656,85,0.091,90,0.145,141,1.825,143,1.384,145,1.825,147,1.795,154,1.825,156,1.825,157,1.825,185,1.855,197,1.855,208,1.825,243,1.795,246,1.825,261,0.005,262,0.005,410,2.397,411,4.085,417,5.132,418,4.377,419,2.941,420,2.572,422,4.547,423,3.359,425,3.63,433,4.225,434,4.377,471,4.738,472,3.482,473,5.211,1140,4.519,1167,4.225,1189,4.519,1203,4.519,1213,7.75,1214,4.912,1215,4.912,1216,4.912,1217,4.912,1218,6.547,1219,4.825,1220,5.509,1221,4.912,1222,4.912,1223,5.509,1224,5.509,1225,4.912,1226,5.509,1227,4.912,1228,4.225,1229,4.912,1230,5.509,1231,5.509,1232,7.144,1233,6.415,1234,6.415,1235,6.415,1236,7.144,1237,4.519,1238,4.519,1239,4.519,1240,4.912,1241,4.519,1242,5.518,1243,4.912,1244,4.519,1245,5.509,1246,3.234]],["title/modules/DashboardRoutingModule.html",[408,1.989,1218,3.463]],["body/modules/DashboardRoutingModule.html",[0,0.411,3,0.103,4,0.088,9,0.08,28,3.23,47,0.007,71,0.462,73,0.552,85,0.096,87,2.636,89,2.307,90,0.152,93,1.288,141,1.499,142,1.382,143,1.41,145,1.499,147,1.475,154,1.499,155,1.112,156,1.499,157,1.499,162,1.549,163,1.112,190,0.927,199,1.451,208,1.499,220,1.207,246,1.499,261,0.005,262,0.005,300,1.77,408,2.407,410,2.517,423,2.701,425,3.746,436,4.693,437,5.081,438,1.834,445,6.223,447,6.621,451,4.745,464,3.656,492,3.985,954,3.182,1140,4.745,1189,4.745,1203,4.745,1218,5.379,1232,7.313,1233,6.621,1234,6.621,1235,6.621,1236,7.313,1237,4.745,1238,4.745,1239,4.745,1240,5.158,1241,4.745,1242,5.695,1243,5.158,1244,4.745,1247,5.785,1248,4.436,1249,5.785,1250,5.158,1251,5.785,1252,7.313,1253,5.695,1254,5.695,1255,5.785,1256,5.785,1257,5.785,1258,5.785,1259,6.621,1260,7.426,1261,5.785,1262,5.785,1263,7.426,1264,5.785,1265,5.785,1266,5.785]],["title/components/DeleteAccountPage.html",[0,0.205,149,0.965]],["body/components/DeleteAccountPage.html",[0,0.274,1,0.733,2,1.103,3,0.065,4,0.055,5,0.721,6,0.821,7,0.782,8,0.782,9,0.05,13,1.589,14,2.502,15,0.654,16,1.699,17,1.902,18,0.687,19,1.122,20,0.698,21,1.122,23,1.086,25,0.172,29,2.578,32,0.65,36,2.766,37,0.791,44,0.624,46,0.65,47,0.006,48,0.591,49,0.222,50,0.513,52,0.591,53,0.952,71,0.304,73,0.347,77,1,81,0.654,85,0.06,90,0.096,91,1.172,93,0.808,110,1.073,111,1.285,113,2.623,114,2.466,115,0.782,116,1.122,117,1.314,118,0.654,119,1.822,120,0.782,121,1.38,122,0.733,123,0.757,124,0.745,125,0.782,126,0.733,127,0.782,128,0.745,129,0.757,130,0.782,131,0.757,132,0.782,133,0.757,134,0.782,135,0.733,136,0.757,137,0.782,138,0.757,139,0.782,140,0.77,141,0.733,142,1.192,143,0.876,144,1.159,145,0.733,146,1.159,147,0.721,148,1.884,149,1.43,150,1.394,151,0.782,152,0.757,153,1.159,154,0.733,155,1.231,156,0.733,157,0.733,158,0.757,159,0.782,160,0.733,161,0.782,162,0.757,163,0.698,164,1.314,165,0.757,166,0.782,167,0.745,168,1.599,169,0.782,170,0.757,171,0.782,172,0.757,173,0.745,174,0.782,175,0.745,176,0.782,177,0.745,178,0.733,179,0.782,180,0.745,181,1.097,182,0.782,183,0.745,184,0.782,185,0.745,186,0.782,187,0.733,188,0.757,189,0.745,190,0.861,191,0.782,192,0.733,193,0.782,194,0.745,195,1.625,196,0.782,197,0.745,198,1.38,199,0.709,200,0.782,201,0.757,202,1.159,203,0.782,204,0.757,205,0.782,206,0.745,207,0.782,208,0.733,209,0.745,210,0.733,211,0.782,212,0.733,213,0.77,214,1.644,215,0.733,216,0.733,217,0.757,218,0.782,219,0.733,220,1.577,221,0.721,222,0.782,223,0.733,224,0.745,225,0.733,226,0.733,227,0.782,228,0.757,229,0.782,230,1.159,231,0.757,232,0.782,233,0.757,234,0.782,235,0.745,236,0.782,237,0.721,238,0.733,239,0.757,240,0.782,241,0.757,242,0.782,243,1.068,244,1.358,245,1.159,246,0.733,247,0.77,248,0.632,249,0.709,250,0.745,251,1.358,252,0.745,253,0.782,254,0.745,255,0.782,256,0.733,257,0.782,258,0.745,259,0.77,260,0.782,261,0.003,262,0.003,315,0.926,317,1.695,396,3.565,404,2.65,405,2.49,407,1.883,438,1.151,479,5.809,480,3.895,493,4.496,495,4.795,506,4.639,554,4.025,695,1.573,696,2.196,697,3.036,698,1.655,699,1.479,701,2.03,703,1.86,716,1.579,719,1.579,722,2.294,723,1.738,727,2.311,728,1.978,729,2.356,730,1.31,731,1.111,734,1.978,737,2.238,738,2.19,739,3.157,762,1.883,763,2.339,812,1.479,814,4.439,820,1.831,836,1.783,887,2.209,919,2.501,938,2.63,939,2.978,950,2.391,951,2.131,952,2.294,953,1.938,954,4.356,955,2.501,956,3.541,957,2.501,958,2.131,959,6.024,960,3.271,962,2.131,963,2.209,964,2.209,965,2.294,966,2.63,967,4.878,968,2.501,969,4.979,970,4.878,971,2.501,972,2.501,973,2.501,974,2.391,975,2.501,976,2.501,977,2.501,978,2.501,1267,7.082,1268,2.978,1269,5.254,1270,4.411,1271,3.237,1272,5.378,1273,3.237,1274,3.237,1275,3.631,1276,3.631,1277,3.705,1278,5.378,1279,5.378,1280,4.878,1281,4.124,1282,2.713]],["title/components/DialogOutletComponent.html",[0,0.205,152,0.997]],["body/components/DialogOutletComponent.html",[0,0.321,1,0.719,2,1.088,3,0.064,4,0.054,5,0.708,6,0.806,7,0.768,8,0.768,9,0.049,15,0.641,16,1.697,17,1.898,18,0.674,19,1.106,20,1.644,21,1.106,23,1.071,25,0.169,26,0.475,28,3.263,32,0.641,37,0.524,40,5.399,41,3.351,44,0.872,46,0.906,47,0.006,48,0.638,49,0.353,50,0.716,52,0.895,53,1.328,57,2.03,60,0.908,61,0.78,62,0.743,71,0.374,73,0.34,75,3.492,76,2.092,77,0.987,81,0.641,83,0.951,85,0.059,90,0.094,91,1.695,93,1.67,106,0.821,113,2.207,114,1.109,115,0.768,116,1.106,117,1.3,118,0.641,119,1.487,120,0.768,121,1.365,122,0.719,123,0.743,124,0.731,125,0.768,126,0.719,127,0.768,128,0.731,129,0.743,130,0.768,131,0.743,132,0.768,133,0.743,134,0.768,135,0.719,136,0.743,137,0.768,138,0.743,139,0.768,140,0.755,141,0.719,142,1.178,143,0.864,144,1.143,145,0.719,146,1.143,147,0.708,148,1.876,149,0.719,150,0.59,151,0.768,152,1.463,153,1.143,154,0.719,155,1.218,156,0.719,157,0.719,158,0.743,159,0.768,160,0.719,161,0.768,162,0.743,163,0.685,164,1.3,165,0.743,166,0.768,167,0.731,168,1.644,169,0.768,170,0.743,171,0.768,172,0.743,173,0.731,174,0.768,175,0.731,176,0.768,177,0.731,178,0.719,179,0.768,180,0.731,181,1.085,182,0.768,183,0.731,184,0.768,185,0.731,186,0.768,187,0.719,188,0.743,189,0.731,190,0.85,191,0.768,192,0.719,193,0.768,194,0.731,195,0.731,196,0.768,197,0.731,198,1.365,199,0.696,200,0.768,201,0.743,202,1.143,203,0.768,204,0.743,205,0.768,206,0.731,207,0.768,208,0.719,209,0.731,210,0.719,211,0.768,212,0.719,213,0.755,214,1.036,215,0.719,216,0.719,217,0.743,218,0.768,219,0.719,220,1.565,221,0.708,222,0.768,223,0.719,224,0.731,225,0.719,226,0.719,227,0.768,228,0.743,229,0.768,230,1.143,231,0.743,232,0.768,233,0.743,234,0.768,235,0.731,236,0.768,237,0.708,238,0.719,239,0.743,240,0.768,241,0.743,242,0.768,243,1.053,244,1.343,245,1.143,246,0.719,247,0.755,248,0.621,249,0.696,250,0.731,251,0.755,252,0.731,253,0.768,254,0.731,255,0.768,256,0.719,257,0.768,258,1.44,259,0.755,260,0.768,261,0.003,262,0.003,276,4.067,289,2.306,291,1.483,300,1.622,307,2.346,315,0.767,382,1.237,397,6.062,434,2.167,557,3.764,695,0.875,696,1.035,697,1.286,700,2.092,703,1.84,706,3.011,715,2.251,716,1.55,718,3.177,719,1.55,740,1.451,741,1.483,758,1.237,770,1.902,779,1.99,780,2.732,793,2.023,874,1.96,875,2.167,947,2.092,974,3.492,1064,2.361,1095,3.492,1283,9.04,1284,8.06,1285,3.177,1286,5.648,1287,4.728,1288,7.017,1289,5.303,1290,7.017,1291,5.303,1292,5.303,1293,6.257,1294,4.728,1295,7.597,1296,6.335,1297,5.434,1298,4.728,1299,7.017,1300,3.563,1301,5.303,1302,3.563,1303,3.563,1304,5.303,1305,3.563,1306,5.303,1307,3.563,1308,3.563,1309,5.303,1310,2.75,1311,3.563,1312,4.728,1313,3.563,1314,3.177,1315,3.177,1316,3.563,1317,3.177,1318,2.167,1319,3.563,1320,3.563,1321,3.563,1322,3.177,1323,3.563,1324,3.563,1325,3.563,1326,4.067,1327,5.303,1328,5.303,1329,3.563,1330,3.563,1331,3.563,1332,3.563,1333,3.563,1334,5.303,1335,2.732,1336,3.563,1337,5.303,1338,2.454,1339,2.922]],["title/classes/DialogRef.html",[40,2.807,90,0.126]],["body/classes/DialogRef.html",[3,0.078,4,0.066,9,0.06,18,1.156,20,1.786,25,0.206,26,0.547,32,0.738,40,3.588,44,0.925,46,0.98,47,0.006,48,0.605,49,0.334,50,0.774,52,0.95,53,1.082,60,1.317,61,1.131,62,2.021,68,3.254,71,0.29,76,2.544,83,1.156,85,0.072,90,0.214,91,1.7,106,1.191,113,2.361,261,0.004,262,0.004,265,1.406,302,6.902,315,1.391,321,2.824,353,4.678,357,5.57,397,5.873,663,3.786,679,5.694,697,3.186,812,3.427,898,4.687,1005,4.461,1063,6.219,1074,3.762,1094,6.631,1110,6.857,1322,7.71,1340,9.537,1341,4.333,1342,8.647,1343,6.112,1344,7.69,1345,3.862,1346,7.69,1347,7.69,1348,6.112,1349,6.112,1350,6.112,1351,4.333,1352,4.333,1353,4.333,1354,6.112,1355,4.333,1356,6.112,1357,4.333,1358,6.857,1359,6.307,1360,6.095,1361,7.69,1362,4.333,1363,7.619,1364,8.414,1365,7.69,1366,4.333,1367,6.112,1368,4.333,1369,6.112,1370,6.112,1371,6.112,1372,4.333,1373,4.21,1374,6.112,1375,7.081,1376,4.333,1377,4.333,1378,4.333,1379,5.013,1380,4.427,1381,7.081,1382,4.333,1383,6.112,1384,6.112,1385,6.112,1386,4.333,1387,5.013,1388,6.112,1389,7.69,1390,4.333,1391,4.86,1392,6.112,1393,4.333,1394,2.544,1395,4.333,1396,4.333,1397,4.333,1398,4.333,1399,4.333,1400,4.333,1401,4.333,1402,4.333,1403,4.333,1404,4.333,1405,4.333,1406,4.333,1407,6.902,1408,8.109,1409,5.873,1410,4.333,1411,4.333,1412,4.333]],["title/injectables/DialogService.html",[329,1.794,557,2.288]],["body/injectables/DialogService.html",[0,0.388,3,0.072,4,0.061,9,0.056,20,1.88,25,0.192,26,0.521,27,0.574,28,4.149,32,0.703,37,1.002,40,4.827,41,4.708,44,0.902,46,1.048,47,0.007,48,0.647,49,0.37,50,0.828,52,0.997,53,1.03,60,1.352,61,1.002,62,1.767,71,0.42,73,0.386,76,2.372,77,1.576,78,2.294,83,1.078,85,0.096,90,0.106,91,1.64,93,1.516,106,1.312,113,1.134,122,0.816,123,1.213,143,1.38,150,0.963,261,0.004,262,0.004,265,1.816,267,2.661,268,3.181,273,2.927,275,4.906,278,6.649,281,5.955,282,4.388,283,6.744,284,4.459,287,5.224,303,3.999,311,2.458,315,0.985,319,4.212,320,4.693,321,3.149,329,2.182,331,2.095,333,3.101,344,4.006,353,2.458,377,3.603,380,2.095,381,1.985,382,1.403,397,6.137,557,2.784,602,2.223,646,3.603,667,4.77,668,4.77,674,4.77,676,2.661,679,2.661,703,1.173,782,3.316,1038,3.864,1039,4.459,1064,2.588,1295,6.949,1297,6.137,1314,3.603,1315,3.603,1394,3.999,1407,3.314,1413,3.603,1414,4.77,1415,7.039,1416,6.812,1417,6.812,1418,6.643,1419,5.815,1420,5.815,1421,3.199,1422,5.815,1423,6.812,1424,6.812,1425,4.041,1426,9.076,1427,4.041,1428,5.815,1429,4.041,1430,6.744,1431,5.815,1432,8.222,1433,7.331,1434,4.041,1435,5.815,1436,4.041,1437,5.815,1438,4.041,1439,5.815,1440,4.041,1441,5.815,1442,4.041,1443,5.815,1444,5.815,1445,4.212,1446,5.185,1447,5.815,1448,4.041,1449,5.815,1450,4.041,1451,5.815,1452,4.041,1453,4.041,1454,4.041,1455,4.041,1456,4.041,1457,2.223,1458,3.603,1459,5.587,1460,3.603,1461,5.185,1462,4.041,1463,5.815,1464,4.041,1465,3.314,1466,2.783,1467,3.603,1468,4.041,1469,4.041,1470,3.603,1471,3.099,1472,4.041,1473,4.041,1474,4.041,1475,5.815,1476,4.041,1477,4.041,1478,4.041,1479,4.041,1480,4.041,1481,4.041,1482,5.815,1483,5.815,1484,6.643,1485,4.459,1486,4.459]],["title/classes/ESet.html",[90,0.126,1487,3.921]],["body/classes/ESet.html",[3,0.132,4,0.112,9,0.102,25,0.351,32,1.042,44,0.72,46,0.892,47,0.006,48,0.551,49,0.305,50,0.705,52,0.811,53,1.307,85,0.122,90,0.195,261,0.005,262,0.005,291,3.589,552,5.941,980,3.752,1074,3.212,1487,7.074,1488,8.624,1489,7.383,1490,8.624,1491,7.383,1492,5.086,1493,7.383,1494,7.383,1495,7.383]],["title/components/EditProjectMembersPage.html",[0,0.205,154,0.965]],["body/components/EditProjectMembersPage.html",[0,0.236,1,0.904,2,0.919,3,0.051,4,0.043,5,0.567,6,0.646,7,0.615,8,0.615,9,0.039,11,1.968,15,0.514,16,1.68,17,1.878,18,1.045,19,1.417,20,0.549,21,0.934,23,0.904,25,0.136,26,0.401,27,1.346,28,2.721,29,2.798,31,3.638,32,0.541,37,0.92,39,3.435,44,0.86,46,0.668,47,0.006,48,0.599,49,0.331,50,0.719,52,0.792,53,1.334,60,1.164,61,0.813,62,1.627,63,2.645,65,2.073,66,2.58,68,2.274,71,0.415,73,0.273,74,0.859,77,1.714,78,1.622,81,0.514,83,0.762,85,0.047,87,3.096,88,1.608,89,2.875,90,0.075,91,1.556,93,0.636,103,1.441,104,1.441,105,1.622,106,0.694,109,2.464,110,1.632,111,1.585,112,2.259,113,0.802,114,0.889,115,0.615,116,0.934,117,1.134,118,0.514,119,1.326,120,0.615,121,1.19,122,0.577,123,0.596,124,0.586,125,0.615,126,0.577,127,0.615,128,0.586,129,0.596,130,0.615,131,0.596,132,0.615,133,0.596,134,0.615,135,0.577,136,0.596,137,0.615,138,0.596,139,0.615,140,0.606,141,0.577,142,1.028,143,1.606,144,0.965,145,0.577,146,0.965,147,0.567,148,1.769,149,0.577,150,0.473,151,0.615,152,0.596,153,0.965,154,1.263,155,1.578,156,0.577,157,0.577,158,0.596,159,0.615,160,0.577,161,0.615,162,0.596,163,0.549,164,1.134,165,0.596,166,0.615,167,0.586,168,1.372,169,0.615,170,0.596,171,0.615,172,0.596,173,0.586,174,0.615,175,0.586,176,0.615,177,0.586,178,0.577,179,0.615,180,0.586,181,0.946,182,0.615,183,0.586,184,0.615,185,0.586,186,0.615,187,0.577,188,0.596,189,0.586,190,1.088,191,0.615,192,0.577,193,0.615,194,0.586,195,0.586,196,0.615,197,0.586,198,1.19,199,0.558,200,0.615,201,0.596,202,0.965,203,0.615,204,0.596,205,0.615,206,0.586,207,0.615,208,0.577,209,0.586,210,0.577,211,0.615,212,0.577,213,0.606,214,0.875,215,0.577,216,0.577,217,0.596,218,0.615,219,0.577,220,1.417,221,0.567,222,0.615,223,0.577,224,0.586,225,0.577,226,0.577,227,0.615,228,0.596,229,0.615,230,0.965,231,0.596,232,0.615,233,0.596,234,0.615,235,0.586,236,0.615,237,0.567,238,0.577,239,0.596,240,0.615,241,0.596,242,0.615,243,0.89,244,1.171,245,0.965,246,0.577,247,0.606,248,0.498,249,0.558,250,0.586,251,0.606,252,0.586,253,0.615,254,0.586,255,0.615,256,0.577,257,0.615,258,0.586,259,0.606,260,0.615,261,0.003,262,0.003,265,1.03,268,2.091,280,2.83,289,0.939,317,2.091,321,2.495,333,3.632,396,3.699,438,0.905,543,4.555,550,4.797,554,4.177,557,3.608,558,4.023,559,4.585,592,4.556,602,1.571,603,1.881,605,1.189,606,1.031,607,1.116,608,1.189,619,1.622,620,2.725,621,2.191,666,2.069,675,2.191,676,1.881,679,1.881,682,1.805,695,1.357,696,1.604,701,1.751,702,2.464,707,1.864,730,1.031,731,0.874,734,1.051,757,2.019,758,0.992,793,1.622,836,1.403,930,2.464,947,1.677,953,1.525,1038,2.323,1093,1.302,1141,2.547,1142,4.926,1143,3.994,1146,5.131,1148,1.738,1149,3.802,1153,3.085,1154,2.949,1155,2.949,1156,2.725,1157,3.085,1162,3.085,1164,2.547,1166,2.343,1167,2.191,1168,1.881,1169,1.968,1170,1.968,1171,1.805,1172,1.968,1173,1.805,1174,3.638,1177,2.343,1178,2.343,1179,2.343,1188,2.547,1237,7.303,1380,3.244,1391,2.83,1496,7.303,1497,4.532,1498,4.532,1499,5.131,1500,4.479,1501,3.994,1502,5.131,1503,4.479,1504,2.857,1505,4.479,1506,2.857,1507,6.4,1508,3.994,1509,2.857,1510,3.435,1511,2.857,1512,3.435,1513,3.435,1514,3.994,1515,3.994,1516,2.857,1517,2.857,1518,2.857,1519,3.085,1520,2.857,1521,3.674,1522,2.857,1523,3.085,1524,2.857,1525,3.674,1526,2.857,1527,3.085,1528,2.857,1529,2.547,1530,2.547,1531,2.547,1532,2.547,1533,2.547,1534,3.674,1535,2.857,1536,2.547,1537,2.343,1538,5.573,1539,2.857,1540,2.857,1541,2.857,1542,2.343,1543,2.857,1544,4.479,1545,2.725,1546,2.857,1547,2.857,1548,2.547,1549,2.547]],["title/components/EditProjectPage.html",[0,0.205,156,0.965]],["body/components/EditProjectPage.html",[0,0.254,1,0.645,2,1.002,3,0.057,4,0.048,5,0.634,6,0.723,7,0.688,8,0.688,9,0.044,13,1.443,15,0.575,16,1.689,17,1.887,18,0.604,19,1.019,20,0.614,21,1.019,23,0.986,25,0.152,26,0.437,27,1.347,28,2.888,29,2.886,31,3.904,32,0.59,34,2.867,37,0.977,44,0.839,46,0.59,47,0.006,48,0.604,49,0.334,50,0.72,52,0.652,53,1.176,60,1.137,61,0.718,62,1.637,63,2.838,65,2.225,66,3.34,68,2.394,71,0.409,73,0.305,74,0.96,77,1.757,78,1.814,81,0.575,83,0.852,85,0.053,87,3.438,88,1.509,89,2.648,90,0.084,91,1.436,93,1.087,95,2.314,98,2.314,100,2.314,103,1.611,104,1.611,105,1.814,106,0.756,110,1.443,111,1.131,112,1.611,115,0.688,116,1.019,117,1.217,118,0.575,119,1.408,120,0.688,121,1.278,122,0.645,123,0.666,124,0.655,125,0.688,126,0.645,127,0.688,128,0.655,129,0.666,130,0.688,131,0.666,132,0.688,133,0.666,134,0.688,135,0.645,136,0.666,137,0.688,138,0.666,139,0.688,140,0.677,141,0.645,142,1.103,143,1.456,144,1.052,145,0.645,146,1.052,147,0.634,148,1.824,149,0.645,150,0.529,151,0.688,152,0.666,153,1.052,154,0.645,155,1.627,156,1.34,157,0.645,158,0.666,159,0.688,160,0.645,161,0.688,162,0.666,163,0.614,164,1.217,165,0.666,166,0.688,167,0.655,168,1.444,169,0.688,170,0.666,171,0.688,172,0.666,173,0.655,174,0.688,175,0.655,176,0.688,177,0.655,178,0.645,179,0.688,180,0.655,181,1.016,182,0.688,183,0.655,184,0.688,185,0.655,186,0.688,187,0.645,188,0.666,189,0.655,190,1.064,191,0.688,192,0.645,193,0.688,194,0.655,195,0.655,196,0.688,197,0.655,198,1.278,199,0.624,200,0.688,201,0.666,202,1.052,203,0.688,204,0.666,205,0.688,206,0.655,207,0.688,208,0.645,209,0.655,210,0.645,211,0.688,212,0.645,213,0.677,214,0.954,215,0.645,216,0.645,217,0.666,218,0.688,219,0.645,220,1.492,221,0.634,222,0.688,223,0.645,224,0.655,225,0.645,226,0.645,227,0.688,228,0.666,229,0.688,230,1.052,231,0.666,232,0.688,233,0.666,234,0.688,235,0.655,236,0.688,237,0.634,238,0.645,239,0.666,240,0.688,241,0.666,242,0.688,243,0.97,244,1.257,245,1.052,246,0.645,247,0.677,248,0.556,249,0.624,250,0.655,251,0.677,252,0.655,253,0.688,254,0.655,255,0.688,256,0.645,257,0.688,258,0.655,259,0.677,260,0.688,261,0.003,262,0.003,265,1.123,268,2.28,270,2.103,280,3.086,289,1.05,321,2.648,333,3.718,396,3.799,410,2.125,438,1.012,536,4.863,550,5.092,554,4.29,558,4.19,592,4.711,602,1.757,619,1.814,620,1.943,621,2.45,695,1.456,696,0.928,701,1.548,702,1.757,707,1.329,708,1.948,757,2.143,758,1.696,759,1.39,930,2.687,947,1.875,1038,2.533,1112,2.314,1148,1.943,1149,3.96,1153,3.364,1154,3.216,1155,3.216,1156,2.971,1157,3.364,1162,3.364,1168,2.103,1169,2.2,1170,2.2,1171,2.019,1172,2.2,1173,2.019,1174,3.904,1190,2.848,1191,5.287,1192,4.355,1197,2.848,1202,3.216,1238,7.163,1380,3.537,1391,3.086,1486,3.745,1496,7.163,1497,4.863,1498,4.863,1501,4.355,1502,5.446,1507,2.62,1508,4.355,1510,3.745,1512,3.745,1513,3.745,1514,4.355,1515,4.355,1519,3.364,1521,4.006,1523,3.364,1525,4.006,1527,3.364,1530,2.848,1531,2.848,1532,2.848,1533,2.848,1534,4.006,1537,2.62,1538,4.863,1542,2.62,1545,1.943,1548,2.848,1549,2.848,1550,4.884,1551,3.194,1552,3.194,1553,3.194,1554,3.194,1555,3.194,1556,3.194,1557,3.194,1558,3.194,1559,2.62,1560,2.45,1561,3.194,1562,3.194,1563,3.194,1564,3.194,1565,4.355,1566,3.194,1567,3.194]],["title/components/EditWorkspacePage.html",[0,0.205,157,0.965]],["body/components/EditWorkspacePage.html",[0,0.317,1,0.701,2,1.067,3,0.062,4,0.053,5,0.689,6,0.785,7,0.748,8,0.748,9,0.048,15,0.625,16,1.695,17,1.896,18,0.656,19,1.085,20,0.667,21,1.085,23,1.05,25,0.165,26,0.466,27,1.301,28,3.013,29,2.948,32,0.628,34,3.053,37,1.019,44,0.787,46,0.628,47,0.006,48,0.62,49,0.306,50,0.743,52,0.571,53,0.921,60,1.068,61,0.511,62,1.624,63,2.985,65,2.784,66,2.912,68,2.087,71,0.395,73,0.331,74,1.043,77,1.828,78,1.971,81,0.625,83,0.926,85,0.057,87,1.582,88,1.199,90,0.091,91,1.425,93,0.773,103,1.751,104,1.751,105,1.971,106,0.805,110,1.025,111,1.229,115,0.748,116,1.085,117,1.28,118,0.625,119,1.468,120,0.748,121,1.344,122,0.701,123,0.724,124,0.712,125,0.748,126,0.701,127,0.748,128,0.712,129,0.724,130,0.748,131,0.724,132,0.748,133,0.724,134,0.748,135,0.701,136,0.724,137,0.748,138,0.724,139,0.748,140,0.736,141,0.701,142,1.16,143,0.847,144,1.121,145,0.701,146,1.121,147,0.689,148,1.863,149,0.701,150,0.575,151,0.748,152,0.724,153,1.121,154,0.701,155,1.745,156,0.701,157,1.398,158,0.724,159,0.748,160,0.701,161,0.748,162,0.724,163,0.667,164,1.28,165,0.724,166,0.748,167,0.712,168,1.498,169,0.748,170,0.724,171,0.748,172,0.724,173,0.712,174,0.748,175,0.712,176,0.748,177,0.712,178,0.701,179,0.748,180,0.712,181,1.068,182,0.748,183,0.712,184,0.748,185,0.712,186,0.748,187,0.701,188,0.724,189,0.712,190,1.11,191,0.748,192,0.701,193,0.748,194,0.712,195,0.712,196,0.748,197,0.712,198,1.344,199,0.678,200,0.748,201,0.724,202,1.121,203,0.748,204,0.724,205,0.748,206,0.712,207,0.748,208,0.701,209,0.712,210,0.701,211,0.748,212,0.701,213,0.736,214,1.016,215,0.701,216,0.701,217,0.724,218,0.748,219,0.701,220,1.547,221,0.689,222,0.748,223,0.701,224,0.712,225,0.701,226,0.701,227,0.748,228,0.724,229,0.748,230,1.121,231,0.724,232,0.748,233,0.724,234,0.748,235,0.712,236,0.748,237,0.689,238,0.701,239,0.724,240,0.748,241,0.724,242,0.748,243,1.033,244,1.322,245,1.121,246,0.701,247,0.736,248,1.292,249,0.678,250,0.712,251,0.736,252,0.712,253,0.748,254,0.712,255,0.748,256,0.701,257,0.748,258,0.712,259,0.736,260,0.748,261,0.003,262,0.003,265,1.434,268,2.428,270,2.286,280,3.286,321,2.762,333,3.778,396,3.869,438,1.1,554,4.369,592,4.822,619,1.971,695,1.277,696,1.008,701,1.648,708,2.074,752,1.913,757,2.513,758,1.206,759,1.51,930,2.861,962,2.038,1038,2.697,1148,2.111,1149,4.073,1153,3.582,1154,3.425,1155,3.425,1156,3.164,1157,3.582,1162,3.582,1168,2.286,1169,2.391,1170,2.391,1171,2.193,1173,2.193,1175,2.662,1187,2.286,1201,4.266,1202,3.425,1204,3.095,1205,5.561,1206,4.637,1212,3.095,1239,6.812,1391,3.286,1496,6.812,1497,5.115,1498,5.115,1502,5.681,1510,3.988,1521,4.266,1523,3.582,1525,4.266,1529,3.095,1534,2.847,1536,3.095,1537,2.847,1538,4.266,1568,5.201,1569,5.201,1570,5.201,1571,3.471,1572,3.471,1573,3.471,1574,3.471,1575,3.471,1576,3.471,1577,3.471,1578,3.471]],["title/modules/EmailsModule.html",[408,1.989,1579,3.666]],["body/modules/EmailsModule.html",[3,0.131,4,0.111,9,0.101,47,0.006,71,0.432,73,0.699,85,0.121,90,0.193,261,0.005,262,0.005,410,3.183,411,4.871,418,5.219,419,3.906,420,3.417,422,4.624,423,4.006,425,4.328,471,5.65,472,4.624,1579,7.434,1580,6.525,1581,6.525,1582,7.021,1583,7.318,1584,7.318]],["title/modules/EmailsRoutingModule.html",[408,1.989,1582,3.463]],["body/modules/EmailsRoutingModule.html",[0,0.307,3,0.128,4,0.109,9,0.099,28,3.123,47,0.006,71,0.429,73,0.685,85,0.119,90,0.189,93,1.598,190,1.15,199,1.658,261,0.005,262,0.005,408,2.988,410,3.123,423,3.352,425,4.28,436,5.362,437,5.406,438,2.276,445,4.537,464,4.537,492,4.946,954,3.95,999,4.4,1248,5.506,1253,5.506,1254,5.506,1582,6.145,1585,7.18,1586,7.18]],["title/classes/Emoji.html",[90,0.126,1587,3.293]],["body/classes/Emoji.html",[3,0.107,4,0.126,9,0.082,25,0.284,26,0.679,27,1.244,32,0.916,44,0.881,46,1.058,47,0.006,48,0.653,49,0.361,50,0.836,52,0.962,53,1.058,60,1.023,61,0.879,62,1.581,71,0.396,85,0.099,90,0.157,91,1.524,93,1.687,106,1.399,261,0.005,262,0.005,300,2.679,315,1.412,607,2.333,823,3.933,1061,4.899,1074,2.598,1310,5.125,1587,6.032,1588,5.973,1589,8.326,1590,7.579,1591,7.579,1592,7.579,1593,7.579,1594,9.381,1595,7.579,1596,7.579,1597,7.579,1598,7.579,1599,7.579,1600,5.973,1601,7.579,1602,5.973,1603,7.579,1604,7.579,1605,5.973,1606,7.579,1607,5.973,1608,5.973,1609,7.579,1610,5.973,1611,4.58,1612,7.579,1613,5.325,1614,5.973,1615,5.973,1616,5.973,1617,5.973,1618,5.973,1619,4.58,1620,5.973,1621,5.973,1622,5.973,1623,5.973]],["title/interfaces/EmojiToken.html",[86,0.74,1624,4.263]],["body/interfaces/EmojiToken.html",[3,0.107,4,0.115,9,0.083,25,0.284,26,0.746,47,0.007,48,0.566,49,0.395,71,0.396,85,0.099,86,0.927,93,2.057,106,1.4,252,1.228,261,0.005,262,0.005,263,1.898,315,1.397,318,2.202,370,3.02,506,5.498,764,3.783,961,3.783,1063,4.591,1587,6.787,1613,5.338,1624,7.431,1625,5.987,1626,5.987,1627,9.241,1628,9.241,1629,8.764,1630,9.044,1631,5.987,1632,5.987,1633,5.987,1634,6.037,1635,4.591,1636,4.911,1637,5.987,1638,5.987,1639,5.987,1640,7.591,1641,6.226,1642,5.987,1643,5.987,1644,5.987,1645,4.911,1646,5.987,1647,7.189,1648,5.987,1649,5.987,1650,5.987,1651,5.987,1652,5.338,1653,5.338,1654,5.987,1655,5.987,1656,7.591,1657,5.987,1658,5.987,1659,5.987,1660,5.338,1661,5.338,1662,5.987,1663,5.987,1664,5.987,1665,3.783,1666,3.942,1667,5.987,1668,5.987,1669,5.987,1670,5.987,1671,5.987,1672,7.591,1673,5.987,1674,5.987,1675,5.987]],["title/classes/Enum.html",[90,0.126,311,2.908]],["body/classes/Enum.html",[3,0.08,4,0.067,9,0.061,25,0.212,27,1.106,32,0.753,44,0.759,46,0.94,47,0.007,48,0.581,49,0.321,50,0.743,52,0.977,61,1.145,85,0.074,88,1.198,90,0.117,93,0.991,106,1.349,261,0.004,262,0.004,265,1.884,285,1.809,294,2.751,300,2.199,311,6.082,315,1.039,321,3.104,703,2.26,752,3.504,831,6.019,996,3.611,1004,3.868,1012,4.885,1074,1.937,1115,5.555,1310,4.841,1359,6.962,1445,4.513,1492,4.95,1676,4.453,1677,3.971,1678,3.415,1679,4.453,1680,6.51,1681,6.23,1682,7.928,1683,6.23,1684,4.453,1685,9.034,1686,6.898,1687,9.407,1688,9.407,1689,7.812,1690,7.186,1691,8.892,1692,6.23,1693,6.23,1694,6.23,1695,6.23,1696,4.453,1697,5.11,1698,7.783,1699,6.23,1700,5.555,1701,6.23,1702,5.555,1703,6.23,1704,4.453,1705,7.186,1706,6.23,1707,4.453,1708,7.186,1709,4.453,1710,4.453,1711,4.453,1712,4.453,1713,3.415,1714,6.23,1715,6.23,1716,4.453,1717,6.23,1718,3.653,1719,4.453,1720,6.23,1721,3.415,1722,6.23,1723,6.23,1724,4.453,1725,4.453]],["title/interceptors/ErrorInterceptor.html",[1726,4.781,1727,3.921]],["body/interceptors/ErrorInterceptor.html",[3,0.112,4,0.095,9,0.087,13,1.856,25,0.298,26,0.701,32,0.945,37,0.924,44,0.83,46,0.945,47,0.006,48,0.584,49,0.351,50,0.747,52,0.69,60,1.076,61,0.924,68,2.851,71,0.436,73,0.6,83,1.676,85,0.104,88,1.208,90,0.166,91,1.632,106,1.421,214,1.227,261,0.005,262,0.005,329,2.935,375,4.818,382,2.182,396,4.127,438,1.991,527,6.976,534,5.601,557,4.477,659,2.405,703,2.272,752,2.311,780,4.818,793,3.567,948,5.153,1100,6.534,1277,4.327,1727,6.417,1728,6.282,1729,6.282,1730,8.521,1731,7.824,1732,6.282,1733,7.824,1734,8.918,1735,8.918,1736,6.282,1737,6.282,1738,6.282,1739,6.282,1740,7.824,1741,5.153,1742,6.459,1743,7.824,1744,6.282,1745,5.153,1746,6.282,1747,6.282,1748,6.282,1749,7.824,1750,6.282,1751,6.282,1752,6.282,1753,6.282,1754,6.282,1755,6.282,1756,6.282]],["title/interfaces/ErrorValidationTree.html",[86,0.74,1757,3.921]],["body/interfaces/ErrorValidationTree.html",[3,0.109,4,0.116,9,0.084,44,0.594,47,0.007,49,0.251,52,0.67,62,1.601,68,2.813,71,0.365,81,1.513,83,1.627,85,0.127,86,0.944,88,1.172,93,2.098,106,1.459,261,0.005,262,0.005,263,1.933,267,2.382,268,3.585,315,1.342,320,4.2,370,3.076,385,6.298,509,3.709,557,3.676,676,4.015,764,5.311,793,3.462,1004,4.021,1038,4.359,1093,2.779,1492,5.79,1619,4.676,1647,6.298,1653,5.436,1757,6.894,1758,6.846,1759,5.436,1760,6.097,1761,6.097,1762,5.436,1763,6.097,1764,6.097,1765,7.679,1766,6.097,1767,6.097,1768,6.088,1769,6.097,1770,2.652,1771,6.097,1772,6.846,1773,6.097,1774,6.097,1775,6.097,1776,6.097,1777,6.097,1778,6.846,1779,6.097,1780,6.097,1781,6.097,1782,6.097,1783,6.097,1784,6.097,1785,6.097,1786,6.097,1787,6.097,1788,6.097,1789,8.823,1790,6.097,1791,7.679,1792,6.097,1793,6.097,1794,6.097,1795,6.097,1796,6.097]],["title/interfaces/ExtendedMeta.html",[86,0.74,1797,3.666]],["body/interfaces/ExtendedMeta.html",[3,0.103,4,0.087,9,0.08,15,1.557,16,1.507,25,0.275,26,0.734,27,1.229,47,0.007,49,0.306,50,0.708,57,2.212,71,0.442,74,1.737,85,0.123,86,0.895,90,0.152,91,1.5,93,1.925,106,1.442,150,1.358,248,1.006,261,0.005,262,0.005,263,1.831,267,2.257,294,2.212,300,1.768,315,1.324,417,4.213,423,2.698,426,6.087,427,4.431,428,4.739,434,3.515,761,2.698,964,4.514,980,3.228,984,3.848,1004,2.633,1015,2.766,1093,2.633,1099,4.185,1127,5.375,1797,6.634,1798,4.739,1799,4.739,1800,7.509,1801,5.696,1802,4.739,1803,5.152,1804,3.98,1805,5.152,1806,5.152,1807,3.98,1808,3.392,1809,3.179,1810,6.087,1811,5.152,1812,5.152,1813,6.616,1814,5.152,1815,3.98,1816,4.739,1817,4.739,1818,6.616,1819,7.712,1820,5.152,1821,5.152,1822,5.152,1823,4.739,1824,6.616,1825,5.152,1826,5.152,1827,6.616,1828,5.152,1829,5.152,1830,4.739,1831,5.152,1832,3.281,1833,4.082,1834,6.616,1835,4.431,1836,4.689,1837,4.739,1838,5.152,1839,4.185,1840,5.152,1841,5.152,1842,4.739,1843,5.152,1844,4.739,1845,5.152,1846,5.152,1847,5.152]],["title/interfaces/FilterCheckbox.html",[86,0.74,1848,3.666]],["body/interfaces/FilterCheckbox.html",[3,0.122,4,0.104,9,0.094,25,0.325,26,0.738,32,0.996,44,0.667,46,0.827,47,0.006,48,0.511,49,0.41,50,0.653,52,0.752,61,1.351,85,0.146,86,1.06,168,1.382,261,0.005,262,0.005,263,2.169,315,1.279,346,4.903,349,5.008,509,5.016,703,2.667,704,5.215,752,3.379,981,6.763,1093,3.758,1128,7.352,1457,3.765,1848,6.786,1849,6.102,1850,8.245,1851,6.096,1852,6.844,1853,6.102]],["title/classes/Filters.html",[90,0.126,1854,3.148]],["body/classes/Filters.html",[3,0.125,4,0.106,9,0.096,25,0.331,27,0.99,32,1.007,44,0.679,46,0.842,47,0.006,48,0.52,49,0.344,50,0.665,52,0.766,61,1.025,71,0.396,85,0.115,90,0.184,106,1.291,181,1.428,261,0.005,262,0.005,315,1.336,346,3.72,694,4.091,703,2.42,704,3.957,752,2.564,981,5.716,1074,3.031,1310,4.625,1848,6.839,1851,4.801,1854,5.489,1855,6.969,1856,8.335,1857,8.335,1858,6.969,1859,8.335,1860,5.048,1861,5.716,1862,6.969,1863,6.392,1864,6.969,1865,6.214,1866,6.214,1867,6.969]],["title/components/FiltersComponent.html",[0,0.205,158,0.997]],["body/components/FiltersComponent.html",[0,0.268,1,0.704,2,1.07,3,0.062,4,0.053,5,0.692,6,0.789,7,0.751,8,0.751,9,0.048,15,0.627,16,1.696,17,1.897,18,0.659,19,1.088,20,0.67,21,1.088,23,1.053,25,0.297,26,0.467,27,1.265,29,2.659,32,0.63,37,0.513,44,0.886,46,0.977,47,0.006,48,0.656,49,0.375,50,0.812,52,0.889,53,1.381,60,0.894,61,1.189,62,1.55,64,1.334,65,2.604,71,0.33,73,0.333,74,1.048,77,0.971,81,0.627,85,0.058,88,1.202,90,0.092,91,1.144,93,1.392,106,1.075,113,1.755,114,1.947,115,0.751,116,1.088,117,1.525,118,0.627,119,1.471,120,0.751,121,1.347,122,0.704,123,0.727,124,0.715,125,0.751,126,0.704,127,0.751,128,0.715,129,0.727,130,0.751,131,0.727,132,0.751,133,0.727,134,0.751,135,0.704,136,0.727,137,0.751,138,0.727,139,0.751,140,1.835,141,0.704,142,1.163,143,0.85,144,1.124,145,0.704,146,1.124,147,0.692,148,1.865,149,0.704,150,0.577,151,0.751,152,0.727,153,1.124,154,0.704,155,1.202,156,0.704,157,0.704,158,1.448,159,0.751,160,0.704,161,0.751,162,0.727,163,0.67,164,1.283,165,0.727,166,0.751,167,0.715,168,1.632,169,0.751,170,0.727,171,0.751,172,0.727,173,0.715,174,0.751,175,0.715,176,0.751,177,0.715,178,0.704,179,0.751,180,0.715,181,1.071,182,0.751,183,0.715,184,0.751,185,0.715,186,0.751,187,0.704,188,0.727,189,0.715,190,0.836,191,0.751,192,0.704,193,0.751,194,0.715,195,0.715,196,0.751,197,0.715,198,1.347,199,0.681,200,0.751,201,0.727,202,1.124,203,0.751,204,0.727,205,0.751,206,0.715,207,0.751,208,0.704,209,0.715,210,0.704,211,0.751,212,0.704,213,0.739,214,1.019,215,0.704,216,0.704,217,0.727,218,0.751,219,0.704,220,1.55,221,0.692,222,0.751,223,0.704,224,0.715,225,0.704,226,0.704,227,0.751,228,0.727,229,0.751,230,1.124,231,0.727,232,0.751,233,0.727,234,0.751,235,0.715,236,0.751,237,0.692,238,0.704,239,0.727,240,0.751,241,0.727,242,0.751,243,1.036,244,1.654,245,1.124,246,0.704,247,0.739,248,0.607,249,0.681,250,0.715,251,0.739,252,0.715,253,0.751,254,0.715,255,0.751,256,0.704,257,0.751,258,0.715,259,0.739,260,0.751,261,0.003,262,0.003,265,1.596,285,1.515,291,2.888,300,1.066,308,1.551,317,2.436,335,3.154,349,2.706,368,2.706,659,1.997,663,2.436,703,1.012,752,1.282,761,1.627,779,1.957,861,3.242,980,2.269,984,4.409,985,2.962,986,2.962,987,2.962,988,2.962,989,2.962,990,4.429,991,2.046,992,1.979,993,2.785,994,1.979,995,1.979,996,1.483,997,1.917,998,1.808,999,1.808,1000,1.979,1001,2.046,1002,2.962,1003,3.941,1004,2.378,1005,4.291,1006,1.979,1007,3.337,1008,1.917,1009,2.962,1010,2.322,1011,3.6,1012,1.86,1013,1.979,1014,2.962,1015,3.871,1016,1.979,1017,2.046,1018,1.979,1019,1.979,1020,1.979,1021,2.046,1022,2.962,1023,1.979,1024,1.979,1025,2.12,1026,2.046,1027,2.046,1028,2.046,1029,2.046,1032,2.12,1033,2.046,1064,2.322,1070,2.12,1086,4.279,1202,3.435,1457,4.835,1854,5.862,1860,2.525,1868,3.486,1869,6.252,1870,5.217,1871,6.252,1872,6.941,1873,5.217,1874,5.217,1875,5.217,1876,3.486,1877,3.486,1878,3.486,1879,6.941,1880,3.486,1881,3.486,1882,3.486,1883,3.486,1884,3.486,1885,5.217,1886,3.486,1887,3.486,1888,5.217,1889,2.295,1890,2.295,1891,2.203,1892,3.486,1893,3.486,1894,3.486,1895,5.217,1896,3.486,1897,3.486,1898,3.486,1899,3.486,1900,5.217,1901,4.001,1902,5.217,1903,2.525,1904,2.525]],["title/directives/FocusInitialDirective.html",[118,0.861,254,0.981]],["body/directives/FocusInitialDirective.html",[3,0.12,4,0.102,9,0.093,13,2.41,15,1.21,16,1.374,25,0.319,32,0.986,37,1.292,44,0.795,46,0.812,47,0.006,48,0.502,49,0.277,50,0.642,52,0.739,53,1.444,60,1.397,71,0.319,73,0.642,85,0.111,90,0.177,117,1.873,118,1.748,168,1.647,248,1.421,249,1.314,254,1.674,261,0.005,262,0.005,265,1.876,281,5.908,321,2.681,382,2.335,670,6.256,724,5.908,849,4.873,850,7.273,1072,7.273,1380,5.908,1513,6.256,1905,8.781,1906,6.724,1907,6.36,1908,8.157,1909,6.613,1910,6.724,1911,6.724,1912,8.781,1913,6.724,1914,6.724]],["title/components/ForgotPasswordPage.html",[0,0.205,160,0.965]],["body/components/ForgotPasswordPage.html",[0,0.258,1,0.662,2,1.023,3,0.059,4,0.05,5,0.652,6,0.742,7,0.707,8,0.707,9,0.045,15,0.591,16,1.691,17,1.895,18,0.62,19,1.04,20,0.631,21,1.04,23,1.006,25,0.156,26,0.446,27,0.856,29,2.954,32,0.602,37,0.483,44,0.706,46,0.396,47,0.006,48,0.54,49,0.206,50,0.575,52,0.361,53,0.581,60,0.854,61,0.733,62,1.404,63,2.885,64,2.918,65,2.261,66,2.814,71,0.376,73,0.313,74,0.986,77,0.927,81,0.591,83,0.875,85,0.054,90,0.086,91,1.232,103,1.655,104,1.655,106,0.772,110,0.969,111,1.161,113,2.598,114,2.542,115,0.707,116,1.04,117,1.237,118,0.591,119,1.837,120,0.707,121,1.299,122,0.662,123,0.684,124,0.673,125,0.707,126,0.662,127,0.707,128,0.673,129,0.684,130,0.707,131,0.684,132,0.707,133,0.684,134,0.707,135,0.662,136,0.684,137,0.707,138,0.684,139,0.707,140,0.695,141,0.662,142,1.121,143,0.812,144,1.074,145,0.662,146,1.074,147,0.652,148,1.837,149,0.662,150,0.544,151,0.707,152,0.684,153,1.074,154,0.662,155,1.159,156,0.662,157,0.662,158,0.684,159,0.707,160,1.359,161,1.759,162,0.684,163,0.631,164,1.237,165,0.684,166,0.707,167,0.673,168,1.539,169,0.707,170,0.684,171,0.707,172,0.684,173,0.673,174,0.707,175,0.673,176,0.707,177,0.673,178,0.662,179,0.707,180,0.673,181,1.032,182,0.707,183,0.673,184,0.707,185,0.673,186,0.707,187,0.662,188,0.684,189,0.673,190,0.798,191,0.707,192,0.662,193,0.707,194,0.673,195,1.564,196,0.707,197,0.673,198,1.299,199,0.641,200,0.707,201,0.684,202,1.074,203,0.707,204,0.684,205,0.707,206,0.673,207,0.707,208,0.662,209,0.673,210,0.662,211,0.707,212,0.662,213,0.695,214,0.974,215,0.662,216,0.662,217,0.684,218,0.707,219,0.662,220,1.51,221,0.652,222,0.707,223,0.662,224,0.673,225,0.662,226,0.662,227,0.707,228,0.684,229,0.707,230,1.074,231,0.684,232,0.707,233,0.684,234,0.707,235,0.673,236,0.707,237,0.652,238,0.662,239,0.684,240,0.707,241,0.684,242,0.707,243,0.99,244,1.278,245,1.074,246,0.662,247,0.695,248,1.261,249,0.641,250,0.673,251,0.695,252,0.673,253,0.707,254,0.673,255,0.707,256,0.662,257,0.707,258,0.673,259,0.695,260,0.707,261,0.003,262,0.003,317,2.327,382,1.139,396,3.446,404,2.551,405,2.543,407,1.701,419,4.357,438,1.04,482,6.253,488,3.282,491,4.357,493,4.328,499,5.522,592,3.422,605,1.365,606,1.184,607,1.282,608,1.365,695,1.945,696,2.517,697,3.017,698,2.271,699,2.03,701,2.295,703,2.214,711,2.448,712,1.396,713,2.691,716,1.427,719,1.427,722,2.073,723,1.57,727,2.859,728,2.663,729,2.915,730,2.429,731,2.06,732,1.701,733,1.655,734,1.834,737,2.074,738,2.03,739,2.926,756,1.996,758,1.139,759,1.427,762,1.701,763,2.622,765,1.926,812,2.03,813,1.701,814,4.25,820,1.655,836,1.611,887,1.996,915,2.925,916,5.374,917,4.444,918,5.374,919,2.26,921,2.925,930,2.742,934,2.376,938,2.376,941,4.444,942,2.925,943,2.516,949,3.822,950,2.16,951,1.926,952,2.073,953,1.751,954,4.193,955,2.26,956,3.282,957,2.26,958,1.926,959,5.873,960,3.032,961,3.15,962,1.926,963,1.996,964,1.996,965,2.073,966,3.61,967,4.637,968,2.26,969,4.767,970,4.637,971,2.26,972,2.26,973,2.26,974,2.16,975,2.26,976,2.26,977,2.26,978,2.26,1282,3.845,1641,2.691,1915,7.623,1916,5.846,1917,3.281,1918,3.281,1919,3.281,1920,3.281,1921,3.281,1922,4.088,1923,4.984,1924,4.984]],["title/classes/FormControlStoryPageConfig.html",[90,0.126,1925,4.263]],["body/classes/FormControlStoryPageConfig.html",[3,0.111,4,0.094,9,0.085,25,0.294,26,0.694,27,1.323,32,0.936,37,0.909,44,0.921,46,1.071,47,0.006,48,0.661,49,0.366,50,0.846,52,1.003,53,1.094,57,2.366,71,0.421,85,0.102,90,0.163,91,1.705,93,1.376,150,1.024,248,1.473,261,0.005,262,0.005,267,2.414,315,1.282,761,2.886,980,3.369,990,5.289,1015,3.707,1074,2.689,1797,7.002,1799,5.069,1800,7.84,1801,4.07,1804,4.257,1807,4.257,1808,3.629,1809,3.4,1815,6.642,1816,6.352,1817,6.352,1823,6.937,1836,3.906,1837,5.069,1842,5.069,1844,5.069,1925,6.905,1926,7.744,1927,6.126,1928,6.905,1929,6.905,1930,6.905,1931,6.181,1932,6.181,1933,6.181,1934,6.181,1935,6.181,1936,6.181,1937,6.181,1938,7.744,1939,6.181,1940,6.181,1941,5.069,1942,7.744,1943,6.181,1944,6.181]],["title/interfaces/GitAccount.html",[86,0.74,1945,2.908]],["body/interfaces/GitAccount.html",[3,0.122,4,0.103,9,0.094,25,0.325,26,0.738,47,0.006,49,0.365,85,0.155,86,1.455,88,1.835,91,1.251,261,0.005,262,0.005,263,2.166,265,1.895,267,3.218,285,2.666,315,1.452,333,3.428,351,5.675,663,3.846,757,3.115,1282,3.448,1945,5.012,1946,4.95,1947,4.95,1948,6.324,1949,6.324,1950,5.425,1951,4.95,1952,4.501,1953,4.95,1954,3.881,1955,3.881,1956,4.708]],["title/interfaces/GitAccountWithUsage.html",[86,0.74,1957,3.921]],["body/interfaces/GitAccountWithUsage.html",[0,0.34,3,0.115,4,0.098,9,0.089,13,1.907,14,3.107,16,1.087,17,1.22,21,1.346,23,1.303,25,0.307,26,0.712,27,1.279,36,2.521,47,0.007,49,0.328,53,1.409,68,3.151,71,0.428,73,0.616,83,1.722,85,0.107,86,0.999,90,0.17,106,1.335,214,1.807,220,1.799,221,1.282,261,0.005,262,0.005,263,2.045,382,2.241,782,2.872,1219,4.603,1246,3.789,1282,3.255,1318,3.926,1945,5.728,1957,6.525,1958,4.674,1959,4.949,1960,5.754,1961,8.244,1962,3.789,1963,3.789,1964,3.926,1965,4.949,1966,5.754,1967,5.754,1968,5.754,1969,5.754,1970,5.754,1971,5.754,1972,5.754,1973,5.293,1974,5.293,1975,5.754,1976,5.754,1977,5.754,1978,5.754,1979,4.949,1980,5.754,1981,5.293,1982,5.293,1983,5.754,1984,5.754,1985,5.754]],["title/interfaces/GitIntegration.html",[86,0.74,1952,3.148]],["body/interfaces/GitIntegration.html",[3,0.123,4,0.104,9,0.095,25,0.328,26,0.742,47,0.006,49,0.342,85,0.156,86,1.459,88,1.771,91,1.263,261,0.005,262,0.005,263,2.187,265,1.906,267,3.237,285,2.406,315,1.453,333,3.448,351,5.708,663,3.869,757,2.972,1282,4.646,1945,4.198,1946,4.999,1947,4.999,1948,4.754,1949,4.754,1950,6.065,1951,4.999,1952,5.456,1953,6.671,1954,3.918,1955,3.918,1956,4.754]],["title/injectables/GitIntegrationService.html",[329,1.794,1219,2.552]],["body/injectables/GitIntegrationService.html",[3,0.069,4,0.058,9,0.053,25,0.182,27,1.406,32,0.677,37,0.565,44,0.893,46,1.071,47,0.007,48,0.677,49,0.365,50,0.846,52,1.023,62,1.38,68,3.209,71,0.396,73,0.366,83,1.024,85,0.063,88,1.821,89,3.085,90,0.101,91,0.702,93,1.247,106,1.42,143,1.078,150,0.928,163,1.777,164,1.754,190,0.615,214,1.874,248,1.407,261,0.004,262,0.004,265,1.521,282,3.882,285,1.627,296,5.426,300,2.225,315,1.26,321,2.638,329,2.102,330,4.443,331,1.99,333,3.027,334,4.595,368,2.905,370,2.826,380,1.99,381,1.885,382,1.333,488,3.689,501,2.335,519,2.78,524,1.99,558,4.452,602,2.111,659,2.144,672,5.85,752,1.412,757,1.808,782,2.494,961,4.596,996,3.094,997,4.001,1219,2.99,1282,2.826,1318,2.335,1407,3.148,1421,4.001,1430,4.595,1433,4.995,1445,5.268,1457,2.111,1542,3.148,1619,5.578,1700,4.995,1770,2.437,1945,5.201,1948,2.644,1952,2.527,1962,2.253,1963,2.253,1973,3.148,1974,3.148,1979,2.943,1982,4.595,1986,9.244,1987,3.838,1988,5.602,1989,4.296,1990,8.077,1991,7.274,1992,5.073,1993,5.602,1994,5.602,1995,5.602,1996,7.274,1997,5.602,1998,7.274,1999,5.602,2000,5.602,2001,5.602,2002,5.602,2003,5.602,2004,3.838,2005,5.602,2006,8.077,2007,3.838,2008,5.602,2009,3.838,2010,4.995,2011,5.602,2012,4.296,2013,5.602,2014,5.602,2015,3.838,2016,3.838,2017,3.838,2018,3.838,2019,5.602,2020,3.838,2021,5.602,2022,3.838,2023,5.602,2024,3.838,2025,5.602,2026,3.838,2027,4.995,2028,7.274,2029,4.296,2030,4.296,2031,3.838,2032,4.995,2033,5.602,2034,3.838,2035,5.602,2036,3.838,2037,5.602,2038,5.602,2039,5.602,2040,5.602,2041,5.602,2042,3.422,2043,3.838,2044,3.838,2045,3.838,2046,3.838,2047,3.838,2048,3.838,2049,3.838,2050,5.602,2051,3.838,2052,3.838,2053,3.422,2054,3.422,2055,3.838,2056,3.838,2057,3.838,2058,2.78,2059,3.838,2060,3.148,2061,3.838,2062,3.838,2063,3.838,2064,3.838,2065,3.838,2066,3.838,2067,3.838,2068,3.838,2069,5.602,2070,3.838,2071,3.838,2072,3.838,2073,3.838,2074,5.602,2075,3.838,2076,3.838,2077,3.422,2078,3.838,2079,3.838,2080,3.838]],["title/interfaces/GitIssue.html",[86,0.74,1954,2.714]],["body/interfaces/GitIssue.html",[3,0.119,4,0.101,9,0.092,25,0.316,26,0.725,47,0.006,49,0.391,85,0.154,86,1.444,88,1.823,91,1.216,261,0.005,262,0.005,263,2.106,265,2.144,267,3.642,285,2.351,315,1.465,333,3.879,351,6.422,663,4.352,757,3.097,1282,3.351,1945,4.041,1946,4.812,1947,4.812,1948,4.576,1949,4.576,1950,5.332,1951,4.812,1952,4.374,1953,4.812,1954,4.598,1955,3.772,1956,4.576]],["title/interfaces/GitPull.html",[86,0.74,1955,2.714]],["body/interfaces/GitPull.html",[3,0.118,4,0.1,9,0.091,25,0.313,26,0.721,47,0.006,49,0.395,85,0.153,86,1.44,88,1.819,91,1.204,261,0.005,262,0.005,263,2.086,265,2.138,267,3.632,285,2.338,315,1.466,333,3.869,351,6.405,663,4.341,757,3.091,1282,3.32,1945,4.004,1946,4.767,1947,4.767,1948,4.534,1949,4.534,1950,5.302,1951,4.767,1952,4.334,1953,4.767,1954,3.737,1955,4.572,1956,6.244]],["title/interfaces/GitRepository.html",[86,0.74,1950,3.148]],["body/interfaces/GitRepository.html",[3,0.122,4,0.103,9,0.094,25,0.325,26,0.738,47,0.006,49,0.365,85,0.155,86,1.455,88,1.835,91,1.68,261,0.005,262,0.005,263,2.166,265,1.895,267,3.218,285,2.666,315,1.452,333,3.428,351,5.675,663,3.846,757,3.115,1282,3.448,1945,4.158,1946,4.95,1947,4.95,1948,4.708,1949,4.708,1950,5.823,1951,6.65,1952,4.501,1953,4.95,1954,3.881,1955,3.881,1956,4.708]],["title/components/GithubIntegrationPage.html",[0,0.205,162,0.997]],["body/components/GithubIntegrationPage.html",[0,0.304,1,0.881,2,1.26,3,0.078,4,0.066,5,0.867,6,0.987,7,0.94,8,0.94,9,0.06,13,1.815,14,2.776,15,0.785,16,1.711,17,1.915,18,0.825,19,1.281,20,0.839,21,1.281,23,1.24,25,0.207,32,0.742,36,3.013,37,0.903,44,0.599,46,0.527,47,0.006,48,0.607,49,0.18,50,0.417,52,0.479,53,0.773,71,0.338,73,0.417,77,1.143,81,0.785,85,0.072,90,0.115,91,1.124,93,0.971,114,1.359,115,0.94,116,1.281,117,1.458,118,0.785,119,1.788,120,0.94,121,1.531,122,0.881,123,0.91,124,0.895,125,0.94,126,0.881,127,0.94,128,0.895,129,0.91,130,0.94,131,0.91,132,0.94,133,0.91,134,0.94,135,0.881,136,0.91,137,0.94,138,0.91,139,0.94,140,0.925,141,0.881,142,1.322,143,1.001,144,1.323,145,0.881,146,1.323,147,0.867,148,1.964,149,0.881,150,0.723,151,0.94,152,0.91,153,1.323,154,0.881,155,1.366,156,0.881,157,0.881,158,0.91,159,0.94,160,0.881,161,0.94,162,1.609,163,1.752,164,1.668,165,0.91,166,0.94,167,0.895,168,1.641,169,0.94,170,0.91,171,0.94,172,0.91,173,0.895,174,0.94,175,0.895,176,0.94,177,0.895,178,0.881,179,0.94,180,0.895,181,1.217,182,0.94,183,0.895,184,0.94,185,0.895,186,0.94,187,0.881,188,0.91,189,0.895,190,0.984,191,0.94,192,0.881,193,0.94,194,0.895,195,0.895,196,0.94,197,0.895,198,1.531,199,0.853,200,0.94,201,0.91,202,1.323,203,0.94,204,0.91,205,0.94,206,0.895,207,0.94,208,0.881,209,0.895,210,0.881,211,0.94,212,0.881,213,0.925,214,1.2,215,0.881,216,0.881,217,0.91,218,0.94,219,0.881,220,1.696,221,0.867,222,0.94,223,0.881,224,0.895,225,0.881,226,0.881,227,0.94,228,0.91,229,0.94,230,1.323,231,0.91,232,0.94,233,0.91,234,0.94,235,0.895,236,0.94,237,0.867,238,0.881,239,0.91,240,0.94,241,0.91,242,0.94,243,1.22,244,1.507,245,1.323,246,0.881,247,0.925,248,1.416,249,0.853,250,0.895,251,0.925,252,0.895,253,0.94,254,0.895,255,0.94,256,0.881,257,0.94,258,0.895,259,0.925,260,0.94,261,0.004,262,0.004,289,1.434,318,2.259,405,2.165,438,1.383,553,2.873,554,4.142,695,1.071,696,1.784,697,1.574,698,1.989,699,1.777,727,1.574,728,1.605,729,2.259,730,1.574,731,1.335,746,2.329,823,2.873,939,3.579,963,2.654,964,2.654,965,2.757,1010,2.734,1042,2.757,1219,4.625,1246,2.562,1250,6.337,1345,3.881,1778,5.476,1964,2.654,2010,5.476,2081,7.108,2082,4.363,2083,7.108,2084,6.142,2085,4.363,2086,4.363,2087,6.142,2088,8.13,2089,4.363,2090,4.363,2091,5.476,2092,3.89]],["title/components/IconComponent.html",[0,0.205,165,0.997]],["body/components/IconComponent.html",[0,0.303,1,0.631,2,0.986,3,0.056,4,0.047,5,0.621,6,0.708,7,0.674,8,0.674,9,0.043,15,0.563,16,1.687,17,1.885,18,0.592,19,1.002,20,0.601,21,1.002,23,0.97,25,0.149,26,0.43,27,1.196,44,0.867,46,0.378,47,0.006,48,0.648,49,0.332,50,0.299,52,0.822,53,0.554,60,1.125,61,1.146,71,0.312,73,0.299,77,0.894,81,0.563,85,0.052,90,0.082,91,1.297,93,0.696,106,1.277,113,2.257,115,0.674,116,1.37,117,1.201,118,0.563,119,1.392,120,0.674,121,1.261,122,0.631,123,0.652,124,0.642,125,0.674,126,0.631,127,0.674,128,0.642,129,0.652,130,0.674,131,0.652,132,0.674,133,0.652,134,0.674,135,0.631,136,0.652,137,0.674,138,0.652,139,0.674,140,0.663,141,0.631,142,1.089,143,0.783,144,1.036,145,0.631,146,1.036,147,0.621,148,1.814,149,0.631,150,0.518,151,0.674,152,0.652,153,1.036,154,0.631,155,1.125,156,0.631,157,0.631,158,0.652,159,0.674,160,0.631,161,0.674,162,0.652,163,0.601,164,1.201,165,1.37,166,0.674,167,0.642,168,1.796,169,0.674,170,0.652,171,0.674,172,0.652,173,0.642,174,0.674,175,0.642,176,0.674,177,0.642,178,0.631,179,0.674,180,0.642,181,1.002,182,0.674,183,0.642,184,0.674,185,0.642,186,0.674,187,0.631,188,0.652,189,0.642,190,0.77,191,0.674,192,0.631,193,0.674,194,0.642,195,0.642,196,0.674,197,0.642,198,1.261,199,0.611,200,0.674,201,0.652,202,1.036,203,0.674,204,0.652,205,0.674,206,0.642,207,0.674,208,0.631,209,0.642,210,0.631,211,0.674,212,0.631,213,0.663,214,0.939,215,0.631,216,0.631,217,0.652,218,0.674,219,0.631,220,1.478,221,0.621,222,0.674,223,0.631,224,0.642,225,0.631,226,0.631,227,0.674,228,0.652,229,0.674,230,1.036,231,0.652,232,0.674,233,0.652,234,0.674,235,0.642,236,0.674,237,0.621,238,0.631,239,0.652,240,0.674,241,0.652,242,0.674,243,0.955,244,1.241,245,1.036,246,0.631,247,0.663,248,0.545,249,0.611,250,0.642,251,0.663,252,0.642,253,0.674,254,0.642,255,0.674,256,0.631,257,0.674,258,0.642,259,0.663,260,0.674,261,0.003,262,0.003,265,0.719,276,3.686,289,1.923,290,6.595,291,2.435,307,2.06,315,1.319,370,4.488,605,1.302,606,1.129,607,1.877,608,2.949,695,1.74,696,1.396,697,2.975,703,0.908,711,4.8,727,1.734,728,1.768,729,2.416,730,1.734,731,1.47,779,1.803,823,5.964,852,6.888,868,5.435,878,4.488,883,6.319,884,6.391,996,3.314,1004,2.19,1042,4.478,1064,2.139,1066,3.686,1101,2.155,1294,4.285,1312,2.789,1358,4.285,1830,3.942,1833,2.644,2093,3.128,2094,6.568,2095,4.285,2096,4.806,2097,5.853,2098,4.806,2099,5.853,2100,4.806,2101,7.087,2102,4.806,2103,7.087,2104,7.792,2105,7.792,2106,4.8,2107,3.128,2108,4.806,2109,6.568,2110,4.806,2111,4.806,2112,7.482,2113,6.671,2114,4.806,2115,3.128,2116,4.285,2117,8.691,2118,4.806,2119,3.165,2120,8.041,2121,3.128,2122,7.087,2123,4.806,2124,3.128,2125,3.128,2126,3.128,2127,3.128,2128,3.128,2129,3.128,2130,3.128,2131,3.128,2132,4.806,2133,3.128,2134,3.128,2135,3.128,2136,3.128,2137,4.806,2138,4.806,2139,4.806,2140,2.566,2141,2.566,2142,2.566,2143,3.128,2144,4.806,2145,3.128,2146,6.568,2147,4.806,2148,3.128,2149,2.155,2150,4.806,2151,3.128,2152,4.806,2153,3.128,2154,3.128,2155,3.128,2156,7.482,2157,3.128,2158,3.128,2159,4.806]],["title/components/InputAssigneeComponent.html",[0,0.205,167,0.981]],["body/components/InputAssigneeComponent.html",[0,0.217,1,0.505,2,0.827,3,0.045,4,0.038,5,0.497,6,0.566,7,0.539,8,0.539,9,0.034,15,0.45,16,1.667,17,1.86,18,0.473,19,1.492,20,0.481,21,0.84,23,0.813,25,0.119,26,0.361,27,1.314,29,1.725,32,0.487,37,0.368,44,0.897,46,0.928,47,0.006,48,0.623,49,0.364,50,0.77,52,0.886,53,1.427,57,0.957,60,0.994,61,1.13,62,1.418,64,0.957,71,0.383,73,0.239,74,0.752,77,0.75,81,0.45,83,0.667,85,0.041,88,1.115,89,2.018,90,0.066,91,1.062,93,1.126,106,0.899,109,4.435,110,1.495,111,0.885,113,1.629,115,0.539,116,0.84,117,1.306,118,0.45,119,1.837,120,0.539,121,1.09,122,0.505,123,0.521,124,0.513,125,0.539,126,0.505,127,0.539,128,0.513,129,0.521,130,0.539,131,0.521,132,0.539,133,0.521,134,0.539,135,0.505,136,0.521,137,0.539,138,0.521,139,0.539,140,1.672,141,0.505,142,0.941,143,0.656,144,0.868,145,0.505,146,0.868,147,0.497,148,1.699,149,0.505,150,0.414,151,0.539,152,0.521,153,0.868,154,0.505,155,0.973,156,0.505,157,0.505,158,0.521,159,0.539,160,0.505,161,0.539,162,0.521,163,0.481,164,1.038,165,0.521,166,0.539,167,1.191,168,1.766,169,0.539,170,0.521,171,0.539,172,0.521,173,0.513,174,0.539,175,0.513,176,0.539,177,0.513,178,0.505,179,0.539,180,0.513,181,0.867,182,0.539,183,0.513,184,0.539,185,0.513,186,0.539,187,0.505,188,0.521,189,0.513,190,0.645,191,0.539,192,0.505,193,0.539,194,0.513,195,0.513,196,0.539,197,0.513,198,1.09,199,0.489,200,0.539,201,0.521,202,0.868,203,0.539,204,0.521,205,0.539,206,0.513,207,0.539,208,0.505,209,0.513,210,0.505,211,0.539,212,0.505,213,0.53,214,0.787,215,0.505,216,0.505,217,0.521,218,0.539,219,0.505,220,1.327,221,0.497,222,0.539,223,0.505,224,0.513,225,0.505,226,0.505,227,0.539,228,0.521,229,0.539,230,0.868,231,0.521,232,0.539,233,0.521,234,0.539,235,0.513,236,0.539,237,0.497,238,0.505,239,0.521,240,0.539,241,0.521,242,0.539,243,0.8,244,1.442,245,0.868,246,0.505,247,0.53,248,0.435,249,0.489,250,0.513,251,0.854,252,0.513,253,0.539,254,0.513,255,0.539,256,0.505,257,0.539,258,0.513,259,0.53,260,0.539,261,0.003,262,0.003,265,1.335,267,1.574,285,1.848,291,2.83,300,0.765,308,1.113,318,2.135,335,2.553,349,2.089,368,2.089,404,2.571,405,2.616,406,2.83,434,2.451,522,1.375,552,3.997,555,4.199,599,4.97,600,1.646,601,1.58,620,2.451,659,1.542,663,1.881,682,1.58,695,1.563,696,1.975,697,2.094,698,1.139,699,1.018,701,1.277,702,1.375,703,1.469,707,1.04,708,2.018,716,1.753,719,1.753,723,1.197,727,2.094,728,2.135,729,2.631,730,1.826,731,1.775,737,1.677,738,1.641,740,2.592,741,2.648,746,2.701,756,2.451,759,1.753,760,2.546,761,1.167,763,1.088,769,2.288,770,2.701,779,1.512,782,2.583,794,1.722,811,1.42,812,1.641,813,1.297,814,1.468,815,1.917,818,1.917,820,2.553,822,7.029,825,2.288,826,2.288,833,1.261,849,2.701,861,2.624,866,1.646,874,1.375,875,1.521,893,1.722,894,1.297,947,2.365,980,1.753,984,4.181,985,2.288,986,2.288,987,2.288,988,2.288,989,2.288,990,3.861,991,1.468,992,1.42,993,2.151,994,1.42,995,1.42,996,1.064,997,1.375,998,1.297,999,1.297,1000,1.42,1001,1.468,1002,2.288,1003,3.295,1004,1.836,1005,3.741,1006,1.42,1007,2.701,1008,1.375,1009,2.288,1010,1.793,1011,3.009,1012,1.335,1013,1.42,1014,2.288,1015,3.256,1016,1.42,1017,1.468,1018,1.42,1019,1.42,1020,1.42,1021,1.468,1022,2.288,1023,1.42,1024,1.42,1025,1.521,1026,1.468,1027,1.468,1028,1.468,1029,1.468,1032,1.521,1033,1.468,1064,1.793,1070,1.521,1093,3.804,1095,2.653,1096,3.09,1097,3.665,1101,1.722,1112,1.811,1318,1.521,1345,3.667,1360,4.203,1387,4.76,1394,2.971,1421,3.192,1457,1.375,1559,2.051,1560,1.917,1666,1.646,1721,1.917,1770,1.088,1836,3.198,1889,1.646,1890,1.646,1891,1.58,2058,1.811,2092,2.229,2160,6.87,2161,7.987,2162,2.5,2163,5.06,2164,4.029,2165,5.06,2166,5.06,2167,4.685,2168,3.09,2169,3.881,2170,2.5,2171,4.029,2172,4.029,2173,2.5,2174,2.5,2175,2.5,2176,2.5,2177,4.029,2178,2.5,2179,2.5,2180,2.5,2181,2.5,2182,2.918,2183,2.5,2184,2.5,2185,2.5,2186,3.305,2187,2.5,2188,2.5,2189,2.5,2190,2.5,2191,2.5,2192,1.811,2193,2.5,2194,2.229,2195,2.5,2196,2.051,2197,2.051,2198,2.5,2199,2.229,2200,2.051,2201,2.229,2202,1.917,2203,2.5,2204,4.029,2205,4.029,2206,2.5,2207,2.5,2208,2.5,2209,4.029,2210,4.029,2211,2.5,2212,4.029,2213,2.5,2214,2.5,2215,2.229,2216,2.229,2217,2.051,2218,1.917,2219,2.229,2220,2.051,2221,1.811,2222,3.881,2223,2.051,2224,2.051,2225,2.051,2226,2.051,2227,3.592,2228,2.5,2229,2.5,2230,4.029,2231,4.029,2232,4.029,2233,4.029,2234,4.029,2235,3.09,2236,3.09,2237,2.5,2238,2.5,2239,1.468,2240,1.521,2241,4.151,2242,2.229,2243,2.229,2244,2.051,2245,2.5,2246,2.5,2247,2.229,2248,2.051,2249,2.5,2250,2.653,2251,5.803,2252,2.5]],["title/components/InputComponent.html",[0,0.205,170,0.997]],["body/components/InputComponent.html",[0,0.28,1,0.532,2,0.862,3,0.047,4,0.04,5,0.523,6,0.596,7,0.568,8,0.568,9,0.036,15,0.474,16,1.672,17,1.866,18,0.498,19,0.876,20,0.506,21,0.876,23,0.848,25,0.2,26,0.376,27,0.597,29,2.373,32,0.508,37,0.387,44,0.824,46,0.789,47,0.006,48,0.583,49,0.368,50,0.624,52,0.657,53,1.059,60,1.119,61,1.204,62,1.093,64,2.006,71,0.31,73,0.251,74,0.792,77,0.782,81,0.474,85,0.043,88,0.808,90,0.069,91,0.482,110,2.158,111,2.312,113,2.194,114,2.034,115,0.568,116,0.876,117,1.34,118,0.474,119,1.958,120,0.568,121,1.129,122,0.532,123,0.549,124,0.541,125,0.568,126,0.532,127,0.568,128,0.541,129,0.549,130,0.568,131,0.549,132,0.568,133,0.549,134,0.568,135,0.532,136,0.549,137,0.568,138,0.549,139,0.568,140,1.699,141,0.532,142,0.975,143,0.684,144,0.905,145,0.532,146,0.905,147,0.523,148,1.727,149,0.532,150,0.436,151,0.568,152,0.549,153,0.905,154,0.532,155,1.007,156,0.532,157,0.532,158,0.549,159,0.568,160,0.532,161,0.568,162,0.549,163,0.506,164,1.075,165,0.549,166,0.568,167,0.541,168,1.95,169,0.568,170,1.247,171,0.568,172,0.549,173,0.541,174,0.568,175,0.541,176,0.568,177,0.541,178,0.532,179,0.568,180,0.541,181,0.898,182,0.568,183,0.541,184,0.568,185,0.541,186,0.568,187,0.532,188,0.549,189,0.541,190,0.673,191,0.568,192,0.532,193,0.568,194,0.541,195,0.541,196,0.568,197,0.541,198,1.129,199,0.515,200,0.568,201,0.549,202,0.905,203,0.568,204,0.549,205,0.568,206,0.541,207,0.568,208,0.532,209,0.541,210,0.532,211,0.568,212,0.532,213,0.558,214,0.821,215,0.532,216,0.532,217,0.549,218,0.568,219,0.532,220,1.362,221,0.523,222,0.568,223,0.532,224,0.541,225,0.532,226,0.532,227,0.568,228,0.549,229,0.568,230,0.905,231,0.549,232,0.568,233,0.549,234,0.568,235,0.541,236,0.568,237,0.523,238,0.532,239,0.549,240,0.568,241,0.549,242,0.568,243,0.834,244,1.476,245,0.905,246,0.532,247,0.558,248,0.459,249,0.515,250,0.541,251,0.558,252,0.541,253,0.568,254,0.541,255,0.568,256,0.532,257,0.568,258,0.541,259,0.558,260,0.568,261,0.003,262,0.003,265,1.502,267,1.641,285,1.736,291,2.18,294,1.608,297,3.222,300,1.285,307,1.735,308,1.172,315,1.096,318,3.279,335,2.643,349,2.179,368,2.179,370,2.119,404,2.538,405,2.642,420,1.23,491,2.242,524,2.179,606,0.95,659,1.608,663,1.961,695,2.009,696,2.27,697,2.635,698,1.2,699,1.073,701,2.315,703,2.27,704,4.551,707,3.709,712,1.787,716,1.827,717,1.665,719,2.279,723,2.011,727,1.891,728,1.928,729,1.928,730,0.95,731,1.829,734,2.403,738,1.073,740,3.705,741,3.466,745,5.009,746,1.406,752,1.545,759,3.401,761,1.23,762,2.717,763,1.827,770,3.191,779,1.576,811,1.496,812,2.435,813,2.179,823,3.45,825,3.395,826,3.395,831,1.665,833,2.119,836,1.294,849,2.242,855,2.655,861,2.717,866,1.735,874,1.449,893,1.815,898,2.02,899,1.735,902,1.815,908,4.672,909,3.446,980,1.827,984,4.054,985,2.385,986,2.385,987,2.385,988,2.385,989,2.385,990,3.952,991,1.546,992,1.496,993,3.716,994,1.496,995,1.496,996,1.12,997,1.449,998,1.366,999,1.366,1000,1.496,1001,1.546,1002,2.385,1003,3.395,1004,1.914,1005,3.829,1006,1.496,1007,3.487,1008,1.449,1009,2.385,1010,1.87,1011,3.101,1012,1.406,1013,1.496,1014,2.385,1015,3.127,1016,1.496,1017,1.546,1018,1.496,1019,1.496,1020,1.496,1021,1.546,1022,2.385,1023,1.496,1024,1.496,1025,1.602,1026,1.546,1027,1.546,1028,1.546,1029,1.546,1033,1.546,1035,2.894,1038,1.366,1042,3.311,1043,2.161,1068,2.02,1070,1.602,1095,2.766,1099,3.043,1101,1.815,1107,4.331,1310,3.387,1338,1.815,1470,2.349,1645,5.358,1665,2.655,1836,3.311,1889,1.735,1890,1.735,1891,1.665,2113,3.746,2149,1.815,2253,2.634,2254,5.24,2255,4.201,2256,5.009,2257,5.824,2258,7.304,2259,2.634,2260,2.634,2261,6.207,2262,2.634,2263,3.746,2264,2.634,2265,2.634,2266,4.201,2267,3.446,2268,2.634,2269,2.634,2270,2.634,2271,2.634,2272,2.634,2273,2.634,2274,2.349,2275,2.02,2276,2.634,2277,4.201,2278,2.634,2279,4.201,2280,6.532,2281,4.201,2282,4.672,2283,2.634,2284,2.634,2285,8.57,2286,6.532,2287,2.02,2288,2.634,2289,2.349,2290,4.201,2291,2.634,2292,2.634,2293,2.634,2294,2.634,2295,2.634,2296,2.634,2297,2.634,2298,4.201,2299,2.634]],["title/components/InputDateTimeComponent.html",[0,0.205,172,0.997]],["body/components/InputDateTimeComponent.html",[0,0.264,1,0.689,2,1.053,3,0.061,4,0.052,5,0.678,6,0.772,7,0.735,8,0.735,9,0.047,13,1.517,14,2.411,15,0.614,16,1.694,17,1.894,18,0.645,19,1.071,20,0.656,21,1.071,23,1.036,25,0.162,26,0.46,27,1.046,29,2.737,32,0.62,36,2.682,37,0.502,44,0.873,46,0.935,47,0.006,48,0.642,49,0.366,50,0.739,52,0.85,53,1.422,57,1.306,60,1.057,61,1.138,62,1.071,64,1.306,65,2.763,71,0.326,73,0.326,74,1.026,77,0.955,81,0.614,85,0.056,88,1.186,90,0.09,106,0.528,115,0.735,116,1.071,117,1.266,118,0.614,119,1.64,120,0.735,121,1.33,122,0.689,123,0.711,124,0.7,125,0.735,126,0.689,127,0.735,128,0.7,129,0.711,130,0.735,131,0.711,132,0.735,133,0.711,134,0.735,135,0.689,136,1.536,137,0.735,138,0.711,139,0.735,140,1.825,141,0.689,142,1.148,143,0.836,144,1.106,145,0.689,146,1.106,147,0.678,148,1.855,149,0.689,150,0.565,151,0.735,152,0.711,153,1.106,154,0.689,155,1.186,156,0.689,157,0.689,158,0.711,159,0.735,160,0.689,161,0.735,162,0.711,163,0.656,164,1.266,165,0.711,166,0.735,167,0.7,168,1.842,169,0.735,170,0.711,171,0.735,172,1.432,173,1.978,174,0.735,175,0.7,176,0.735,177,0.7,178,0.689,179,0.735,180,0.7,181,1.057,182,0.735,183,0.7,184,0.735,185,0.7,186,0.735,187,0.689,188,0.711,189,0.7,190,0.822,191,0.735,192,0.689,193,0.735,194,0.7,195,0.7,196,0.735,197,0.7,198,1.33,199,0.667,200,0.735,201,0.711,202,1.106,203,0.735,204,0.711,205,0.735,206,0.7,207,0.735,208,0.689,209,0.7,210,0.689,211,0.735,212,0.689,213,0.723,214,1.003,215,0.689,216,0.689,217,0.711,218,0.735,219,0.689,220,1.536,221,0.678,222,0.735,223,0.689,224,0.7,225,0.689,226,0.689,227,0.735,228,0.711,229,0.735,230,1.106,231,0.711,232,0.735,233,0.711,234,0.735,235,0.7,236,0.735,237,0.678,238,0.689,239,0.711,240,0.735,241,0.711,242,0.735,243,1.02,244,1.456,245,1.106,246,0.689,247,0.723,248,0.594,249,0.667,250,0.7,251,0.723,252,0.7,253,0.735,254,0.7,255,0.735,256,0.689,257,0.735,258,0.7,259,0.723,260,0.735,261,0.003,262,0.003,265,1.419,274,4.48,285,1.491,291,2.568,294,1.306,300,1.044,308,1.518,315,0.993,335,2.59,368,1.769,404,1.718,405,2.455,552,2.35,659,1.965,663,2.397,704,3.899,745,4.733,761,1.593,777,3.937,779,1.926,786,3.937,795,3.244,801,2.616,802,2.616,803,2.798,804,2.471,805,2.471,849,3.294,861,2.662,874,1.877,878,5.266,980,2.233,984,4.383,985,2.915,986,2.915,987,2.915,988,2.915,989,2.915,990,4.393,991,2.003,992,1.937,993,4.13,994,1.937,995,1.937,996,1.451,997,1.877,998,1.769,999,1.769,1000,1.937,1001,2.003,1002,2.915,1003,3.899,1004,2.339,1005,4.051,1006,1.937,1007,2.74,1008,1.877,1009,2.915,1010,2.285,1011,3.201,1012,1.821,1013,1.937,1014,2.915,1015,3.525,1016,1.937,1017,2.003,1018,1.937,1019,1.937,1020,1.937,1021,2.003,1022,2.915,1023,1.937,1024,2.915,1032,2.075,1033,2.003,1070,2.075,1889,2.246,1890,3.38,1891,2.156,1903,4.974,1904,3.718,2239,3.014,2256,5.647,2274,4.577,2275,3.937,2300,8.262,2301,7.366,2302,3.411,2303,6.123,2304,6.172,2305,5.134,2306,6.172,2307,6.172,2308,5.134,2309,3.411,2310,3.411,2311,3.411,2312,3.411,2313,3.411,2314,3.411,2315,3.411,2316,3.411,2317,3.411,2318,3.411,2319,3.411,2320,6.172,2321,5.134,2322,5.503,2323,4.211,2324,3.411,2325,3.411]],["title/components/InputIssueComponent.html",[0,0.205,175,0.981]],["body/components/InputIssueComponent.html",[0,0.27,1,0.713,2,1.081,3,0.063,4,0.053,5,0.702,7,0.761,8,0.761,9,0.049,15,0.636,16,1.697,17,1.895,18,0.668,19,1.099,20,0.679,23,1.064,25,0.168,26,0.472,27,0.749,29,2.149,32,0.637,37,0.52,44,0.895,46,0.981,47,0.006,48,0.658,49,0.368,50,0.797,52,0.893,53,1.438,57,1.352,60,1.08,61,1.327,62,1.457,64,1.352,68,2.109,71,0.372,73,0.337,74,1.062,77,0.98,81,0.636,83,0.942,85,0.058,88,1.507,89,3.126,90,0.093,91,1.279,93,0.786,106,0.816,115,0.761,116,1.099,117,1.534,118,0.636,119,1.481,120,0.761,121,1.358,122,0.713,123,0.737,124,0.725,125,0.761,126,0.713,127,0.761,128,0.725,129,0.737,130,0.761,131,0.737,132,0.761,133,0.737,134,0.761,135,0.713,136,0.737,137,0.761,138,0.737,139,0.761,140,1.841,141,0.713,142,1.391,143,0.858,144,1.135,145,0.713,146,1.135,147,0.702,148,1.872,149,0.713,150,0.585,151,0.761,152,0.737,153,1.135,154,0.713,155,1.212,156,0.713,157,0.713,158,0.737,159,0.761,160,0.713,161,0.761,162,0.737,163,0.679,164,1.293,165,0.737,166,0.761,167,0.725,168,1.78,169,0.761,170,0.737,171,0.761,172,0.737,173,0.725,174,0.761,175,1.434,176,0.761,177,0.725,178,0.713,179,0.761,180,0.725,181,1.08,182,0.761,183,0.725,184,0.761,185,0.725,186,0.761,187,0.713,188,0.737,189,0.725,190,0.844,191,0.761,192,0.713,193,0.761,194,0.725,195,0.725,196,0.761,197,0.725,198,1.358,199,0.69,200,0.761,201,0.737,202,1.135,203,0.761,204,0.737,205,0.761,206,0.725,207,0.761,208,0.713,209,0.725,210,0.713,211,0.761,212,0.713,213,0.749,214,1.03,215,0.713,216,0.713,217,0.737,218,0.761,219,0.713,220,1.559,221,0.702,222,0.761,223,0.713,224,0.725,225,0.713,226,0.713,227,0.761,228,0.737,229,0.761,230,1.135,231,0.737,232,0.761,233,0.737,234,0.761,235,0.725,236,0.761,237,0.702,238,0.713,239,0.737,240,0.761,241,0.737,242,0.761,243,1.047,244,1.662,245,1.135,246,0.713,247,0.749,248,0.615,249,0.69,250,0.725,251,0.749,252,0.725,253,0.761,254,0.725,255,0.761,256,0.713,257,0.761,258,0.725,259,0.749,260,0.761,261,0.003,262,0.003,265,1.607,285,2.171,291,3.111,300,1.081,308,2.346,335,3.179,349,2.733,368,2.733,659,2.017,663,2.46,703,1.53,761,1.649,779,1.977,861,3.268,980,2.292,984,4.329,985,2.992,986,2.992,987,2.992,988,2.992,989,2.992,990,4.451,991,2.074,992,2.006,993,2.813,994,2.006,995,2.006,996,1.503,997,1.943,998,1.832,999,1.832,1000,2.006,1001,2.074,1002,2.992,1003,3.967,1004,2.401,1005,4.312,1006,2.006,1007,3.364,1008,1.943,1009,2.992,1010,2.346,1011,3.624,1012,1.886,1013,2.006,1014,2.992,1015,3.753,1016,2.006,1017,2.074,1018,2.006,1019,2.006,1020,2.006,1021,2.074,1022,2.992,1023,2.006,1024,2.006,1025,2.149,1026,2.074,1027,2.074,1028,2.074,1029,2.074,1030,2.559,1031,2.433,1032,2.149,1033,2.074,1064,2.346,1070,3.206,1219,4.335,1246,2.074,1891,2.232,1954,2.006,1962,2.074,1963,2.074,1964,2.149,2160,6.662,2167,4.342,2192,2.559,2326,7.745,2327,3.533,2328,4.416,2329,5.27,2330,5.619,2331,6.303,2332,6.988,2333,5.27,2334,5.27,2335,3.533,2336,3.533,2337,3.15,2338,3.533,2339,3.15,2340,3.533,2341,2.897,2342,3.533,2343,3.15,2344,4.698,2345,3.533,2346,2.897,2347,3.533,2348,3.15,2349,3.15,2350,3.15,2351,3.533,2352,3.533,2353,5.27]],["title/components/InputPullRequestComponent.html",[0,0.205,177,0.981]],["body/components/InputPullRequestComponent.html",[0,0.268,1,0.704,2,1.071,3,0.062,4,0.053,5,0.693,7,0.752,8,0.752,9,0.048,15,0.628,16,1.696,17,1.894,18,0.66,19,1.089,20,0.67,23,1.054,25,0.166,26,0.468,27,0.742,29,2.132,32,0.631,37,0.513,44,0.893,46,0.977,47,0.006,48,0.656,49,0.367,50,0.794,52,0.889,53,1.432,57,1.335,60,1.071,61,1.324,62,1.089,64,1.335,68,2.093,71,0.371,73,0.333,74,1.049,77,0.971,81,0.628,83,0.931,85,0.058,88,1.5,89,3.112,90,0.092,91,1.271,93,0.776,106,0.808,115,0.752,116,1.089,117,1.526,118,0.628,119,1.472,120,0.752,121,1.348,122,0.704,123,0.727,124,0.716,125,0.752,126,0.704,127,0.752,128,0.716,129,0.727,130,0.752,131,0.727,132,0.752,133,0.727,134,0.752,135,0.704,136,0.727,137,0.752,138,0.727,139,0.752,140,1.836,141,0.704,142,1.164,143,0.85,144,1.125,145,0.704,146,1.125,147,0.693,148,1.866,149,0.704,150,0.578,151,0.752,152,0.727,153,1.125,154,0.704,155,1.202,156,0.704,157,0.704,158,0.727,159,0.752,160,0.704,161,0.752,162,0.727,163,0.67,164,1.283,165,0.727,166,0.752,167,0.716,168,1.775,169,0.752,170,0.727,171,0.752,172,0.727,173,0.716,174,0.752,175,0.716,176,0.752,177,1.425,178,1.94,179,0.752,180,0.716,181,1.071,182,0.752,183,0.716,184,0.752,185,0.716,186,0.752,187,0.704,188,0.727,189,0.716,190,0.836,191,0.752,192,0.704,193,0.752,194,0.716,195,0.716,196,0.752,197,0.716,198,1.348,199,0.682,200,0.752,201,0.727,202,1.125,203,0.752,204,0.727,205,0.752,206,0.716,207,0.752,208,0.704,209,0.716,210,0.704,211,0.752,212,0.704,213,0.739,214,1.02,215,0.704,216,0.704,217,0.727,218,0.752,219,0.704,220,1.551,221,0.693,222,0.752,223,0.704,224,0.716,225,0.704,226,0.704,227,0.752,228,0.727,229,0.752,230,1.125,231,0.727,232,0.752,233,0.727,234,0.752,235,0.716,236,0.752,237,0.693,238,0.704,239,0.727,240,0.752,241,0.727,242,0.752,243,1.037,244,1.654,245,1.125,246,0.704,247,0.739,248,0.607,249,0.682,250,0.716,251,0.739,252,0.716,253,0.752,254,0.716,255,0.752,256,0.704,257,0.752,258,0.716,259,0.739,260,0.752,261,0.003,262,0.003,265,1.597,285,2.159,291,3.094,300,1.067,308,2.323,335,3.155,340,2.964,349,2.707,368,2.707,659,1.998,663,2.437,703,1.516,761,1.628,779,1.958,861,3.244,980,2.271,984,4.313,985,2.964,986,2.964,987,2.964,988,2.964,989,2.964,990,4.43,991,2.048,992,1.98,993,2.786,994,1.98,995,1.98,996,1.484,997,1.919,998,1.809,999,1.809,1000,1.98,1001,2.048,1002,2.964,1003,3.942,1004,2.379,1005,4.292,1006,1.98,1007,3.339,1008,1.919,1009,2.964,1010,2.323,1011,3.601,1012,1.862,1013,1.98,1014,2.964,1015,3.735,1016,1.98,1017,2.048,1018,1.98,1019,1.98,1020,1.98,1021,2.048,1022,2.964,1023,1.98,1024,1.98,1025,2.122,1026,2.048,1027,2.048,1028,2.048,1029,2.048,1030,2.526,1031,2.403,1032,2.122,1033,2.048,1064,2.323,1070,3.175,1219,4.317,1246,2.048,1891,2.204,1955,1.98,1962,2.048,1963,2.048,1964,2.122,2160,6.641,2167,4.309,2192,2.526,2330,5.577,2337,3.11,2339,3.11,2341,2.861,2343,3.11,2344,4.654,2346,2.861,2348,3.11,2349,3.11,2350,3.11,2354,7.721,2355,3.488,2356,5.22,2357,6.255,2358,6.944,2359,5.22,2360,5.22,2361,3.488,2362,3.488,2363,3.488,2364,3.488,2365,3.488,2366,3.488,2367,3.488,2368,3.488,2369,3.488,2370,5.22]],["title/components/InputTaskPropertyComponent.html",[0,0.205,180,0.981]],["body/components/InputTaskPropertyComponent.html",[0,0.272,1,0.726,2,1.095,3,0.064,4,0.054,5,0.714,6,0.813,7,0.774,8,0.774,9,0.05,15,0.647,16,1.698,17,1.898,18,0.68,19,1.113,20,0.691,21,1.113,23,1.077,25,0.303,26,0.478,32,0.645,44,0.863,46,0.434,47,0.006,48,0.562,49,0.346,50,0.343,52,0.7,53,1.127,57,1.376,60,1.207,61,1.201,62,0.75,71,0.254,73,0.343,77,0.993,81,0.647,85,0.059,88,1.026,90,0.095,91,1.165,106,0.557,110,1.577,111,1.889,113,1.009,114,1.662,115,0.774,116,1.113,117,1.306,118,0.647,119,1.731,120,0.774,121,1.372,122,0.726,123,0.75,124,0.737,125,0.774,126,0.726,127,0.774,128,0.737,129,0.75,130,0.774,131,0.75,132,0.774,133,0.75,134,0.774,135,0.726,136,0.75,137,0.774,138,0.75,139,0.774,140,0.762,141,0.726,142,1.184,143,0.87,144,1.15,145,0.726,146,1.15,147,0.714,148,1.88,149,0.726,150,0.595,151,0.774,152,0.75,153,1.15,154,0.726,155,1.224,156,0.726,157,0.726,158,0.75,159,0.774,160,0.726,161,0.774,162,0.75,163,0.691,164,1.306,165,0.75,166,0.774,167,0.737,168,1.859,169,0.774,170,0.75,171,0.774,172,0.75,173,0.737,174,0.774,175,0.737,176,0.774,177,0.737,178,0.726,179,0.774,180,1.446,181,1.674,182,0.774,183,0.737,184,0.774,185,0.737,186,0.774,187,0.726,188,0.75,189,0.737,190,0.855,191,0.774,192,0.726,193,0.774,194,0.737,195,0.737,196,0.774,197,0.737,198,1.372,199,0.702,200,0.774,201,0.75,202,1.15,203,0.774,204,0.75,205,0.774,206,0.737,207,0.774,208,0.726,209,0.737,210,0.726,211,0.774,212,0.726,213,0.762,214,1.043,215,0.726,216,0.726,217,0.75,218,0.774,219,0.726,220,1.57,221,0.714,222,0.774,223,0.726,224,0.737,225,0.726,226,0.726,227,0.774,228,0.75,229,0.774,230,1.15,231,0.75,232,0.774,233,0.75,234,0.774,235,0.737,236,0.774,237,0.714,238,0.726,239,0.75,240,0.774,241,0.75,242,0.774,243,1.06,244,1.35,245,1.15,246,0.726,247,0.762,248,0.626,249,0.702,250,0.737,251,0.762,252,0.737,253,0.774,254,0.737,255,0.774,256,0.726,257,0.774,258,0.737,259,0.762,260,0.774,261,0.003,262,0.003,285,2.291,289,1.181,291,1.495,294,2.437,300,1.099,315,1.019,404,1.786,405,1.978,406,2.221,543,4.024,605,1.495,606,1.926,607,1.404,608,1.495,695,1.311,696,1.044,697,2.297,703,2.437,704,4.275,706,2.041,707,1.495,708,2.129,711,1.765,712,1.529,715,2.271,716,2.322,717,3.373,719,2.322,726,2.366,727,1.297,728,1.322,729,1.322,730,1.297,731,2.499,732,1.864,733,1.813,737,1.495,738,1.464,740,2.87,741,2.65,752,1.322,758,1.248,761,2.492,763,1.563,767,3.866,769,2.041,770,2.849,779,2.003,812,2.174,813,1.864,831,2.271,833,1.813,849,3.399,874,1.977,875,2.186,877,2.948,894,2.768,899,2.366,909,2.948,1064,2.376,1107,3.866,1345,4.453,1421,3.876,1903,2.603,1904,2.603,2149,3.677,2160,6.871,2167,5.187,2192,2.603,2225,4.378,2341,2.948,2346,2.948,2371,7.989,2372,3.594,2373,6.367,2374,5.338,2375,6.367,2376,6.367,2377,6.367,2378,4.759,2379,6.367,2380,5.338,2381,3.594,2382,5.677,2383,3.594,2384,3.594,2385,3.594,2386,3.594,2387,5.338,2388,3.594,2389,3.594,2390,3.594,2391,3.594,2392,4.378,2393,6.367,2394,5.338,2395,6.367,2396,3.594,2397,3.594,2398,3.594]],["title/components/IntegrationEntryComponent.html",[0,0.205,183,0.981]],["body/components/IntegrationEntryComponent.html",[0,0.298,1,0.847,2,1.226,3,0.075,4,0.064,5,0.834,6,0.95,7,0.904,8,0.904,9,0.058,13,1.766,14,2.718,15,0.756,16,1.708,17,1.912,18,0.794,19,1.246,20,0.807,21,1.246,23,1.206,25,0.199,32,0.722,36,2.962,37,1.023,44,0.835,47,0.006,48,0.566,49,0.33,52,0.461,53,0.743,60,0.719,61,0.617,62,0.875,71,0.199,73,0.401,77,1.112,81,0.756,85,0.069,90,0.111,110,1.766,113,1.178,114,1.307,115,0.904,116,1.246,117,1.428,118,0.756,119,1.765,120,0.904,121,1.499,122,0.847,123,0.875,124,0.861,125,0.904,126,0.847,127,0.904,128,0.861,129,0.875,130,0.904,131,0.875,132,0.904,133,0.875,134,0.904,135,0.847,136,0.875,137,0.904,138,0.875,139,0.904,140,0.89,141,0.847,142,1.294,143,0.974,144,1.288,145,0.847,146,1.288,147,0.834,148,1.948,149,0.847,150,0.695,151,0.904,152,0.875,153,1.288,154,0.847,155,1.338,156,0.847,157,0.847,158,0.875,159,0.904,160,0.847,161,0.904,162,0.875,163,0.807,164,1.925,165,0.875,166,0.904,167,0.861,168,1.825,169,0.904,170,0.875,171,0.904,172,0.875,173,0.861,174,0.904,175,0.861,176,0.904,177,0.861,178,0.847,179,0.904,180,0.861,181,1.192,182,0.904,183,1.556,184,0.904,185,0.861,186,0.904,187,0.847,188,0.875,189,0.861,190,0.957,191,0.904,192,0.847,193,0.904,194,0.861,195,0.861,196,0.904,197,0.861,198,1.499,199,0.82,200,0.904,201,0.875,202,1.288,203,0.904,204,0.875,205,0.904,206,0.861,207,0.904,208,0.847,209,0.861,210,0.847,211,0.904,212,0.847,213,0.89,214,1.168,215,0.847,216,0.847,217,0.875,218,0.904,219,0.847,220,1.671,221,0.834,222,0.904,223,0.847,224,0.861,225,0.847,226,0.847,227,0.904,228,0.875,229,0.904,230,1.288,231,0.875,232,0.904,233,0.875,234,0.904,235,0.861,236,0.904,237,0.834,238,0.847,239,0.875,240,0.904,241,0.875,242,0.904,243,1.187,244,1.475,245,1.288,246,0.847,247,0.89,248,0.731,249,0.82,250,0.861,251,0.89,252,0.861,253,0.904,254,0.861,255,0.904,256,0.847,257,0.904,258,0.861,259,0.89,260,0.904,261,0.004,262,0.004,265,1.915,285,1.735,294,2.287,315,1.096,405,1.178,406,1.747,606,1.515,695,1.709,696,1.735,701,1.33,703,1.219,704,4.549,707,1.747,723,2.009,727,2.156,728,2.198,729,2.198,730,1.515,731,1.284,732,2.177,733,2.117,734,1.544,740,2.834,741,2.487,746,3.19,758,1.458,760,3.776,769,2.383,779,2.242,912,3.219,1093,2.723,1949,5.223,2239,2.464,2248,5.707,2378,5.328,2382,6.204,2392,4.901,2399,8.758,2400,7.809,2401,4.198,2402,6.958,2403,5.976,2404,7.144,2405,5.976,2406,4.198,2407,4.198,2408,4.198,2409,4.198,2410,4.198,2411,3.219]],["title/components/IntegrationGithubComponent.html",[0,0.205,185,0.981]],["body/components/IntegrationGithubComponent.html",[0,0.285,1,0.784,2,1.159,3,0.069,4,0.059,5,0.771,6,0.879,7,0.837,8,0.837,9,0.054,13,1.669,14,2.602,15,0.699,16,1.703,17,1.907,18,1.259,19,1.178,20,0.746,21,1.178,23,1.141,25,0.184,26,0.506,27,1.152,29,2.27,32,0.683,36,2.857,37,0.571,44,0.852,46,0.469,47,0.006,48,0.58,49,0.275,50,0.371,52,0.804,53,1.295,60,1.141,61,0.98,62,1.525,63,3.188,65,1.457,66,3.11,71,0.369,73,0.371,74,1.167,77,1.051,81,0.699,85,0.064,88,1.086,89,2.656,90,0.102,110,1.147,113,1.586,114,1.759,115,0.837,116,1.178,117,1.367,118,0.699,119,1.818,120,0.837,121,1.435,122,0.784,123,0.81,124,0.797,125,0.837,126,0.784,127,0.837,128,0.797,129,0.81,130,0.837,131,0.81,132,0.837,133,0.81,134,0.837,135,0.784,136,0.81,137,0.837,138,0.81,139,0.837,140,0.823,141,0.784,142,1.239,143,0.92,144,1.217,145,0.784,146,1.217,147,0.771,148,1.914,149,0.784,150,0.643,151,0.837,152,0.81,153,1.217,154,0.784,155,1.28,156,0.784,157,0.784,158,0.81,159,0.837,160,0.784,161,0.837,162,0.81,163,1.649,164,1.823,165,0.81,166,0.837,167,0.797,168,1.69,169,0.837,170,0.81,171,0.837,172,0.81,173,0.797,174,0.837,175,0.797,176,0.837,177,0.797,178,0.784,179,0.837,180,0.797,181,1.141,182,0.837,183,0.797,184,0.837,185,1.501,186,0.837,187,0.784,188,0.81,189,0.797,190,0.905,191,0.837,192,0.784,193,0.837,194,0.797,195,1.159,196,0.837,197,0.797,198,1.435,199,0.759,200,0.837,201,0.81,202,1.217,203,0.837,204,0.81,205,0.837,206,0.797,207,0.837,208,0.784,209,0.797,210,0.784,211,0.837,212,0.784,213,0.823,214,1.104,215,0.784,216,0.784,217,0.81,218,0.837,219,0.784,220,1.621,221,0.771,222,0.837,223,0.784,224,0.797,225,0.784,226,0.784,227,0.837,228,0.81,229,0.837,230,1.217,231,0.81,232,0.837,233,0.81,234,0.837,235,0.797,236,0.837,237,0.771,238,0.784,239,0.81,240,0.837,241,0.81,242,0.837,243,1.122,244,1.412,245,1.217,246,0.784,247,0.823,248,0.676,249,0.759,250,0.797,251,0.823,252,0.797,253,0.837,254,0.797,255,0.837,256,0.784,257,0.837,258,0.797,259,0.823,260,0.837,261,0.004,262,0.004,294,2.549,300,1.188,317,1.813,318,2.078,382,1.349,404,1.299,405,2.276,406,1.616,672,5.297,695,0.953,696,1.641,698,1.77,699,1.581,701,1.231,727,1.401,728,1.428,729,2.078,730,2.038,731,1.728,732,2.014,733,1.959,734,1.428,740,2.301,741,2.351,779,2.12,819,2.454,934,2.812,947,2.28,953,3.016,1219,4.329,1222,7.921,1246,2.28,1519,3.892,1950,4.386,1962,2.28,1963,2.28,1964,2.362,1981,3.185,2240,2.362,2412,8.884,2413,3.883,2414,6.66,2415,5.65,2416,6.66,2417,6.66,2418,7.314,2419,7.314,2420,7.314,2421,3.462,2422,5.65,2423,3.883,2424,3.883,2425,3.883,2426,3.883,2427,3.883,2428,3.883,2429,3.883,2430,3.883,2431,5.65,2432,5.65,2433,3.883,2434,3.883,2435,3.883,2436,3.883,2437,3.883,2438,5.65,2439,5.65]],["title/components/LandingPageComponent.html",[0,0.205,187,0.965]],["body/components/LandingPageComponent.html",[0,0.323,1,0.985,2,1.361,3,0.087,4,0.074,5,0.969,6,1.103,7,1.051,8,1.051,9,0.067,15,0.878,16,1.717,17,1.923,18,0.922,19,1.383,20,0.938,21,1.383,23,1.339,37,1.109,44,0.475,47,0.006,48,0.604,71,0.232,73,0.466,77,1.234,81,0.878,85,0.081,90,0.129,115,1.051,116,1.383,117,1.547,118,0.878,119,1.715,120,1.051,121,1.624,122,0.985,123,1.017,124,1.001,125,1.051,126,0.985,127,1.051,128,1.001,129,1.017,130,1.051,131,1.017,132,1.051,133,1.017,134,1.051,135,0.985,136,1.017,137,1.051,138,1.017,139,1.051,140,1.034,141,0.985,142,1.402,143,1.081,144,1.429,145,0.985,146,1.429,147,0.969,148,2.008,149,0.985,150,0.808,151,1.051,152,1.017,153,1.429,154,0.985,155,1.449,156,0.985,157,0.985,158,1.017,159,1.051,160,0.985,161,1.051,162,1.017,163,0.938,164,1.547,165,1.017,166,1.051,167,1.001,168,1.708,169,1.051,170,1.017,171,1.051,172,1.017,173,1.001,174,1.051,175,1.001,176,1.051,177,1.001,178,0.985,179,1.051,180,1.001,181,1.291,182,1.051,183,1.001,184,1.051,185,1.001,186,1.051,187,1.633,188,1.895,189,1.001,190,1.063,191,1.051,192,0.985,193,1.051,194,1.001,195,1.001,196,1.051,197,1.001,198,1.624,199,0.953,200,1.051,201,1.017,202,1.429,203,1.051,204,1.017,205,1.051,206,1.001,207,1.051,208,0.985,209,1.001,210,0.985,211,1.051,212,0.985,213,1.034,214,1.296,215,0.985,216,0.985,217,1.017,218,1.051,219,0.985,220,1.765,221,0.969,222,1.051,223,0.985,224,1.001,225,0.985,226,0.985,227,1.051,228,1.017,229,1.051,230,1.429,231,1.017,232,1.051,233,1.017,234,1.051,235,1.001,236,1.051,237,0.969,238,0.985,239,1.017,240,1.051,241,1.017,242,1.051,243,1.317,244,1.598,245,1.429,246,0.985,247,1.034,248,1.313,249,0.953,250,1.001,251,1.034,252,1.001,253,1.051,254,1.001,255,1.051,256,0.985,257,1.051,258,1.001,259,1.034,260,1.051,261,0.004,262,0.004,431,6.636,2440,6.634,2441,4.877,2442,7.539,2443,6.634,2444,4.877]],["title/interfaces/LetContext.html",[86,0.74,2445,3.921]],["body/interfaces/LetContext.html",[3,0.128,4,0.109,9,0.099,16,1.208,25,0.341,26,0.759,47,0.006,49,0.296,61,1.055,71,0.341,73,0.684,85,0.118,86,1.11,90,0.189,91,1.312,118,1.526,168,1.711,256,1.447,261,0.005,262,0.005,263,2.273,291,2.984,349,4.837,1093,3.267,1326,6.501,2445,7.403,2446,6.393,2447,8.604,2448,7.558,2449,6.393,2450,6.393,2451,6.393,2452,6.393,2453,6.393,2454,6.393,2455,6.393]],["title/directives/LetDirective.html",[118,0.861,256,0.965]],["body/directives/LetDirective.html",[3,0.119,4,0.101,9,0.092,15,1.196,16,1.364,25,0.316,26,0.725,37,0.977,44,0.886,46,0.978,47,0.006,48,0.604,49,0.375,50,0.773,52,0.73,53,1.176,60,1.138,61,1.285,71,0.316,73,0.634,85,0.11,86,1.029,90,0.175,91,1.599,118,1.458,168,1.635,249,1.298,256,1.635,261,0.005,262,0.005,291,2.764,349,4.834,779,3.038,1064,3.604,1093,3.69,1326,6.973,2445,7.165,2446,5.923,2447,8.702,2448,8.107,2449,7.788,2450,7.22,2451,7.788,2452,5.923,2453,5.923,2454,5.923,2455,5.923,2456,8.098,2457,6.643,2458,8.098,2459,6.643]],["title/components/ListGroupComponent.html",[0,0.205,189,0.981]],["body/components/ListGroupComponent.html",[0,0.312,1,0.926,2,1.305,3,0.082,4,0.069,5,0.911,6,1.037,7,0.988,8,0.988,9,0.063,13,1.878,14,2.851,15,0.825,16,1.714,17,1.919,18,0.867,19,1.326,20,0.881,21,1.326,23,1.283,25,0.218,32,0.768,36,3.079,37,1.074,44,0.711,47,0.006,48,0.588,49,0.189,52,0.504,53,0.812,71,0.218,73,0.438,77,1.183,81,0.825,85,0.076,90,0.121,110,1.355,113,1.287,114,1.428,115,0.988,116,1.326,117,1.498,118,0.825,119,1.816,120,0.988,121,1.573,122,0.926,123,0.956,124,0.941,125,0.988,126,0.926,127,0.988,128,0.941,129,0.956,130,0.988,131,0.956,132,0.988,133,0.956,134,0.988,135,0.926,136,0.956,137,0.988,138,0.956,139,0.988,140,0.972,141,0.926,142,1.358,143,1.036,144,1.37,145,0.926,146,1.37,147,0.911,148,1.984,149,0.926,150,0.76,151,0.988,152,0.956,153,1.37,154,0.926,155,1.403,156,0.926,157,0.926,158,0.956,159,0.988,160,0.926,161,0.988,162,0.956,163,0.881,164,1.498,165,0.956,166,0.988,167,0.941,168,1.773,169,0.988,170,0.956,171,0.988,172,0.956,173,0.941,174,0.988,175,0.941,176,0.988,177,0.941,178,0.926,179,0.988,180,0.941,181,1.25,182,0.988,183,0.941,184,0.988,185,0.941,186,0.988,187,0.926,188,0.956,189,1.617,190,1.457,191,0.988,192,0.926,193,0.988,194,0.941,195,0.941,196,0.988,197,0.941,198,1.573,199,0.896,200,0.988,201,0.956,202,1.37,203,0.988,204,0.956,205,0.988,206,0.941,207,0.988,208,0.926,209,0.941,210,0.926,211,0.988,212,0.926,213,0.972,214,1.242,215,0.926,216,0.926,217,0.956,218,0.988,219,0.926,220,1.727,221,0.911,222,0.988,223,0.926,224,0.941,225,0.926,226,0.926,227,0.988,228,0.956,229,0.988,230,1.37,231,0.956,232,0.988,233,0.956,234,0.988,235,0.941,236,0.988,237,0.911,238,0.926,239,0.956,240,0.988,241,0.956,242,0.988,243,1.263,244,1.547,245,1.37,246,0.926,247,0.972,248,0.798,249,0.896,250,0.941,251,0.972,252,0.941,253,0.988,254,0.941,255,0.988,256,0.926,257,0.988,258,0.941,259,0.972,260,0.988,261,0.004,262,0.004,315,0.919,405,2.048,406,2.646,606,1.654,695,1.126,703,1.331,704,4.701,734,1.687,740,1.867,758,1.592,765,2.692,769,2.603,779,2.385,930,3.497,1042,2.897,2239,3.733,2460,7.882,2461,7.028,2462,4.585,2463,7.299,2464,6.358,2465,6.358,2466,4.585,2467,4.088,2468,3.76,2469,3.76]],["title/guards/LoggedInUsersGuard.html",[439,3.921,2470,3.921]],["body/guards/LoggedInUsersGuard.html",[3,0.125,4,0.106,9,0.096,13,2.062,25,0.332,32,1.008,37,1.026,44,0.813,46,0.843,47,0.006,48,0.521,49,0.288,50,0.666,52,0.767,71,0.424,73,0.666,85,0.115,90,0.184,91,1.277,106,1.292,261,0.005,262,0.005,285,2.027,294,2.671,300,2.135,329,3.13,380,3.619,381,3.428,382,2.424,396,4.172,438,2.212,439,6.842,450,8.552,493,5.505,948,5.724,2471,6.222,2472,8.923,2473,6.979,2474,6.222,2475,6.979,2476,6.979,2477,5.352,2478,6.979]],["title/components/LoginPage.html",[0,0.205,192,0.965]],["body/components/LoginPage.html",[0,0.252,1,0.638,2,0.994,3,0.057,4,0.048,5,0.628,6,0.715,7,0.681,8,0.681,9,0.044,13,1.432,14,2.302,15,0.569,16,1.688,17,1.889,18,0.598,19,1.011,20,0.608,21,1.011,23,0.978,25,0.15,26,0.434,27,1.067,29,2.928,32,0.586,36,2.58,37,0.713,44,0.762,46,0.586,47,0.006,48,0.561,49,0.272,50,0.717,52,0.647,53,1.043,60,0.542,61,0.465,62,1.683,63,2.82,64,1.855,65,2.934,66,3.325,71,0.372,73,0.302,74,0.951,77,0.901,81,0.569,83,0.844,85,0.052,90,0.083,91,1.375,103,1.595,104,1.595,106,0.75,110,0.934,111,1.119,113,2.583,114,2.512,115,0.681,116,1.011,117,1.209,118,0.569,119,1.754,120,0.681,121,1.269,122,0.638,123,0.659,124,0.649,125,0.681,126,0.638,127,0.681,128,0.649,129,0.659,130,0.681,131,0.659,132,0.681,133,0.659,134,0.681,135,0.638,136,0.659,137,0.681,138,0.659,139,0.681,140,0.67,141,0.638,142,1.096,143,0.789,144,1.044,145,0.638,146,1.044,147,0.628,148,1.819,149,0.638,150,0.524,151,0.681,152,0.659,153,1.044,154,0.638,155,1.133,156,0.638,157,0.638,158,0.659,159,0.681,160,0.638,161,1.269,162,0.659,163,0.608,164,1.209,165,0.659,166,0.681,167,0.649,168,1.517,169,0.681,170,0.659,171,0.681,172,0.659,173,0.649,174,0.681,175,0.649,176,0.681,177,0.649,178,0.638,179,0.681,180,0.649,181,1.009,182,0.681,183,0.649,184,0.681,185,0.649,186,0.681,187,0.638,188,0.659,189,0.649,190,0.776,191,0.681,192,1.333,193,0.681,194,0.649,195,1.542,196,0.681,197,0.649,198,1.269,199,0.618,200,0.681,201,0.659,202,1.044,203,0.681,204,0.659,205,0.681,206,0.649,207,0.681,208,0.638,209,0.649,210,0.638,211,0.681,212,0.638,213,0.67,214,1.151,215,0.638,216,0.638,217,0.659,218,0.681,219,0.638,220,1.485,221,0.628,222,0.681,223,0.638,224,0.649,225,0.638,226,0.638,227,0.681,228,0.659,229,0.681,230,1.044,231,0.659,232,0.681,233,0.659,234,0.681,235,0.649,236,0.681,237,0.628,238,0.638,239,0.659,240,0.681,241,0.659,242,0.681,243,0.962,244,1.249,245,1.044,246,0.638,247,0.67,248,0.551,249,0.618,250,0.649,251,1.249,252,0.649,253,0.681,254,0.649,255,0.681,256,0.638,257,0.681,258,0.649,259,0.67,260,0.681,261,0.003,262,0.003,300,1.482,315,0.701,317,1.476,396,3.402,404,2.514,405,2.41,407,1.64,419,2.586,438,1.002,488,5.737,490,3.716,491,4.175,493,4.266,522,1.739,525,6.35,592,3.345,695,1.622,696,2.343,697,2.985,698,2.208,699,1.974,701,2.093,703,1.711,716,1.375,719,1.375,722,1.998,723,1.514,727,2.383,728,2.167,729,2.43,730,2.126,731,1.802,732,1.64,733,1.595,734,2.167,737,2.016,738,1.974,739,2.845,762,1.64,763,2.108,812,1.288,814,4.181,820,1.595,836,1.553,855,3.062,887,1.923,919,2.178,930,2.666,938,2.29,943,2.425,944,2.593,949,5.065,950,2.082,951,1.856,952,1.998,953,1.688,954,4.133,955,2.178,956,3.191,957,2.178,958,1.856,959,5.816,960,2.948,961,1.998,962,1.856,963,1.923,964,1.923,965,3.062,966,2.29,967,4.55,968,2.178,969,4.689,970,4.55,971,2.178,972,2.178,973,2.178,974,2.082,975,2.178,976,2.178,977,2.178,978,2.178,1038,3.897,1127,3.51,1171,1.998,1280,3.338,1281,3.716,1282,2.444,1545,2.948,1741,2.593,1742,3.51,1745,2.593,1770,1.375,1832,1.795,1833,2.666,2479,3.162,2480,5.892,2481,4.846,2482,5.892,2483,4.321,2484,5.665,2485,3.162,2486,4.321,2487,3.162,2488,3.162,2489,3.162,2490,3.162,2491,3.162,2492,3.162,2493,2.593,2494,3.162,2495,4.846,2496,4.846,2497,3.162,2498,3.162,2499,2.819,2500,3.162,2501,3.162,2502,3.162,2503,2.819,2504,3.162,2505,4.321,2506,2.819,2507,2.819,2508,3.162,2509,2.819,2510,3.162,2511,4.321,2512,4.321,2513,4.321,2514,4.321]],["title/modules/MainModule.html",[408,1.989,417,2.714]],["body/modules/MainModule.html",[2,1.562,3,0.076,4,0.064,9,0.058,47,0.007,71,0.48,73,0.404,74,1.273,76,2.485,85,0.115,90,0.184,93,0.942,117,1.234,122,1.214,131,1.254,133,1.254,138,1.254,152,1.254,158,1.254,165,1.254,170,1.254,172,1.254,173,1.234,194,1.234,195,1.434,199,1.175,201,1.254,204,1.254,206,1.234,217,1.254,228,1.254,231,1.254,233,1.254,239,1.254,241,1.254,250,1.234,252,0.869,254,1.234,256,1.214,258,1.234,261,0.004,262,0.004,265,0.974,282,2.26,300,1.295,330,3.307,344,4.141,374,3.775,375,3.247,408,3.345,410,3.497,411,4.321,417,4.741,418,3.657,419,2.26,420,1.977,422,4.809,423,3.753,425,3.526,434,3.657,436,3.799,438,1.342,443,3.472,444,3.775,464,2.675,471,3.959,472,2.675,473,4.354,546,3.775,557,2.878,598,3.775,879,3.775,993,2.26,996,1.801,1063,4.61,1068,4.61,1095,2.788,1096,3.247,1284,3.775,1295,6.849,1310,2.195,1317,3.775,1460,3.775,1611,4.61,1619,3.247,1727,4.931,1989,4.61,2012,4.61,2095,3.775,2301,3.775,2515,4.233,2516,6.012,2517,6.012,2518,4.233,2519,6.012,2520,6.012,2521,6.012,2522,4.233,2523,6.012,2524,4.233,2525,6.012,2526,4.233,2527,6.012,2528,6.012,2529,6.012,2530,6.012,2531,4.233,2532,6.012,2533,4.233,2534,6.991,2535,4.233,2536,6.012,2537,4.233,2538,6.991,2539,4.233,2540,6.012,2541,6.012,2542,4.233,2543,6.012,2544,4.233,2545,6.012,2546,4.233,2547,6.012,2548,4.233,2549,6.012,2550,4.233,2551,6.012,2552,4.233,2553,6.012,2554,4.233,2555,6.012,2556,4.233,2557,6.012,2558,4.233,2559,6.012,2560,3.775,2561,3.775,2562,4.233,2563,4.233,2564,4.233,2565,4.233,2566,6.012,2567,4.233,2568,4.233,2569,3.775,2570,4.233,2571,4.233,2572,4.233,2573,6.012,2574,3.775,2575,4.233,2576,3.775,2577,4.233,2578,4.233,2579,4.233,2580,4.233,2581,3.775,2582,6.012,2583,4.233,2584,3.775,2585,4.233,2586,4.233,2587,4.233,2588,3.775,2589,4.233,2590,4.233,2591,4.233,2592,4.233,2593,4.233,2594,4.233,2595,4.233,2596,4.233,2597,4.931,2598,4.233,2599,3.775,2600,4.233,2601,4.233,2602,3.775,2603,4.233,2604,5.36,2605,4.233,2606,3.775,2607,4.233,2608,4.233,2609,4.233,2610,4.233,2611,4.233,2612,6.012,2613,4.233,2614,6.012,2615,4.233,2616,4.233,2617,4.233,2618,4.233]],["title/components/MainViewComponent.html",[0,0.205,194,0.981]],["body/components/MainViewComponent.html",[0,0.301,1,0.866,2,1.246,3,0.077,4,0.065,5,0.852,6,0.971,7,0.925,8,0.925,9,0.059,13,1.794,14,2.752,15,0.773,16,1.71,17,1.914,18,0.812,19,1.266,20,0.825,21,1.266,23,1.226,25,0.204,26,0.544,27,1.192,32,0.733,36,2.991,37,1.036,44,0.746,47,0.006,48,0.571,52,0.472,53,0.76,60,1.04,61,0.893,71,0.335,73,0.41,77,1.129,81,0.773,85,0.071,90,0.113,113,1.977,114,2.685,115,0.925,116,1.266,117,1.445,118,0.773,119,1.778,120,0.925,121,1.518,122,0.866,123,0.895,124,0.881,125,0.925,126,0.866,127,0.925,128,0.881,129,0.895,130,0.925,131,0.895,132,0.925,133,0.895,134,0.925,135,0.866,136,0.895,137,0.925,138,0.895,139,0.925,140,0.91,141,0.866,142,1.31,143,0.989,144,1.308,145,0.866,146,1.308,147,0.852,148,1.957,149,0.866,150,0.711,151,0.925,152,0.895,153,1.308,154,0.866,155,1.354,156,0.866,157,0.866,158,0.895,159,0.925,160,0.866,161,0.925,162,0.895,163,0.825,164,1.445,165,0.895,166,0.925,167,0.881,168,1.631,169,0.925,170,0.895,171,0.925,172,0.895,173,0.881,174,0.925,175,0.881,176,0.925,177,0.881,178,0.866,179,0.925,180,0.881,181,1.207,182,0.925,183,0.881,184,0.925,185,0.881,186,0.925,187,0.866,188,0.895,189,0.881,190,0.972,191,0.925,192,0.866,193,0.925,194,1.571,195,1.838,196,0.925,197,0.881,198,1.518,199,0.839,200,0.925,201,0.895,202,1.308,203,0.925,204,0.895,205,0.925,206,0.881,207,0.925,208,0.866,209,0.881,210,0.866,211,0.925,212,0.866,213,0.91,214,1.186,215,0.866,216,0.866,217,0.895,218,0.925,219,0.866,220,1.685,221,0.852,222,0.925,223,0.866,224,0.881,225,0.866,226,0.866,227,0.925,228,0.895,229,0.925,230,1.308,231,0.895,232,0.925,233,0.895,234,0.925,235,0.881,236,0.925,237,0.852,238,0.866,239,0.895,240,0.925,241,0.895,242,0.925,243,1.206,244,1.713,245,1.308,246,0.866,247,0.91,248,0.747,249,0.839,250,0.881,251,0.91,252,0.881,253,0.925,254,0.881,255,0.925,256,0.866,257,0.925,258,0.881,259,0.91,260,0.925,261,0.004,262,0.004,289,1.41,318,1.579,373,3.52,376,3.827,404,1.436,405,2.149,406,1.786,407,2.226,443,6.627,695,1.73,696,2.436,697,2.763,698,2.767,699,1.748,700,2.52,706,3.999,707,1.786,708,1.712,715,3.836,731,1.313,734,1.579,735,3.52,746,2.291,752,1.579,760,2.712,771,3.109,793,2.437,812,1.748,819,2.712,833,2.165,1297,6.076,1339,3.52,2287,3.291,2619,8.08,2620,4.292,2621,7.044,2622,6.071,2623,7.479,2624,6.071,2625,4.292,2626,6.071,2627,4.292,2628,5.413]],["title/classes/Marked.html",[90,0.126,1634,3.463]],["body/classes/Marked.html",[3,0.122,4,0.103,9,0.094,25,0.325,26,0.738,27,1.17,32,0.995,44,0.862,47,0.006,52,0.905,53,1.21,60,1.171,61,1.005,62,1.425,71,0.42,85,0.113,90,0.18,91,1.618,106,1.276,261,0.005,262,0.005,294,3.153,300,2.091,1074,2.973,1310,5.084,1587,6.092,1634,6.65,1635,5.241,2629,6.835,2630,7.885,2631,9.181,2632,7.53,2633,6.835,2634,6.835,2635,6.835,2636,7.707,2637,6.835,2638,6.094,2639,6.835,2640,8.238,2641,6.835,2642,6.835,2643,6.094]],["title/components/MemberListComponent.html",[0,0.205,197,0.981]],["body/components/MemberListComponent.html",[0,0.29,1,0.807,2,1.184,3,0.072,4,0.061,5,0.794,6,0.905,7,0.862,8,0.862,9,0.055,13,1.705,14,2.645,15,0.72,16,1.705,17,1.908,18,0.756,19,1.889,20,0.769,21,1.204,23,1.165,25,0.19,26,0.517,27,1.164,32,0.697,36,2.896,37,0.588,44,0.843,46,0.697,47,0.006,48,0.645,49,0.369,50,0.551,52,0.634,53,1.022,60,0.685,61,0.588,64,2.838,68,2.266,71,0.374,73,0.382,77,1.074,81,0.72,83,1.067,85,0.066,87,1.822,88,1.511,89,3.136,90,0.105,91,0.732,93,0.89,115,0.862,116,1.204,117,1.39,118,0.72,119,1.572,120,0.862,121,1.459,122,0.807,123,0.834,124,0.82,125,0.862,126,0.807,127,0.862,128,0.82,129,0.834,130,0.862,131,0.834,132,0.862,133,0.834,134,0.862,135,0.807,136,0.834,137,0.862,138,0.834,139,0.862,140,0.848,141,0.807,142,1.463,143,0.94,144,1.243,145,0.807,146,1.243,147,0.794,148,1.927,149,0.807,150,1.122,151,0.862,152,0.834,153,1.243,154,0.807,155,1.623,156,0.807,157,0.807,158,0.834,159,0.862,160,0.807,161,0.862,162,0.834,163,0.769,164,1.39,165,0.834,166,0.862,167,0.82,168,1.778,169,0.862,170,0.834,171,0.862,172,0.834,173,0.82,174,0.862,175,0.82,176,0.862,177,0.82,178,0.807,179,0.862,180,0.82,181,1.16,182,0.862,183,0.82,184,0.862,185,0.82,186,0.862,187,0.807,188,0.834,189,0.82,190,1.188,191,0.862,192,0.807,193,0.862,194,0.82,195,0.82,196,0.862,197,1.521,198,1.459,199,0.781,200,0.862,201,0.834,202,1.243,203,0.862,204,0.834,205,0.862,206,0.82,207,0.862,208,0.807,209,0.82,210,0.807,211,0.862,212,0.807,213,0.848,214,1.128,215,0.807,216,0.807,217,0.834,218,0.862,219,0.807,220,1.64,221,0.794,222,0.862,223,0.807,224,0.82,225,0.807,226,0.807,227,0.862,228,0.834,229,0.862,230,1.243,231,0.834,232,0.862,233,0.834,234,0.862,235,0.82,236,0.862,237,0.794,238,0.807,239,0.834,240,0.862,241,0.834,242,0.862,243,1.146,244,1.436,245,1.243,246,0.807,247,0.848,248,0.696,249,0.781,250,0.82,251,0.848,252,0.82,253,0.862,254,0.82,255,0.862,256,0.807,257,0.862,258,0.82,259,0.848,260,0.862,261,0.004,262,0.004,315,0.834,382,1.389,438,1.267,521,3.511,522,4.079,554,4.148,559,4.984,599,3.976,600,2.633,601,2.527,603,2.633,619,2.27,620,2.432,682,2.527,757,1.29,771,4.18,779,2.165,1145,6.72,1180,3.28,1225,7.854,2644,8.809,2645,3.999,2646,6.772,2647,5.771,2648,5.771,2649,6.772,2650,3.999,2651,5.771,2652,3.999,2653,3.999,2654,5.771,2655,3.999,2656,3.999,2657,3.999,2658,3.999,2659,3.999,2660,3.999,2661,3.999,2662,5.771,2663,5.771,2664,5.771,2665,5.771]],["title/injectables/MemberService.html",[329,1.794,559,2.908]],["body/injectables/MemberService.html",[3,0.084,4,0.071,9,0.065,18,1.58,19,1.88,25,0.224,27,1.364,32,0.782,37,0.692,44,0.842,46,1.043,47,0.006,48,0.644,49,0.356,50,0.824,52,1.017,62,0.982,68,3.282,71,0.397,73,0.449,83,1.256,85,0.078,88,1.885,89,3.594,90,0.124,106,1.337,109,5.304,143,1.593,190,1.277,209,1.815,261,0.004,262,0.004,265,1.922,315,1.07,321,3.594,329,2.429,330,4.751,331,2.441,333,2.694,340,5.552,356,7.097,357,6.703,380,2.441,381,2.312,382,1.635,501,2.863,519,3.409,520,3.242,524,3.838,559,3.938,599,3.801,600,3.099,601,2.974,757,3.041,782,3.938,999,4.479,1152,4.091,1387,6.537,1445,5.773,2666,4.706,2667,8.636,2668,4.706,2669,4.706,2670,4.706,2671,6.474,2672,6.598,2673,6.474,2674,4.706,2675,5.31,2676,4.706,2677,5.31,2678,6.474,2679,4.706,2680,6.474,2681,4.706,2682,6.474,2683,6.474,2684,4.706,2685,4.706,2686,4.706,2687,3.86,2688,4.706,2689,4.706,2690,4.706,2691,4.196,2692,4.196,2693,4.196,2694,3.86]],["title/modules/MessagesModule.html",[408,1.989,2695,3.666]],["body/modules/MessagesModule.html",[3,0.131,4,0.111,9,0.101,47,0.006,71,0.432,73,0.699,85,0.121,90,0.193,261,0.005,262,0.005,410,3.183,411,4.871,418,5.219,419,3.906,420,3.417,422,4.624,423,4.006,425,4.328,471,5.65,472,4.624,2695,7.434,2696,6.525,2697,6.525,2698,7.021,2699,7.318,2700,7.318]],["title/modules/MessagesRoutingModule.html",[408,1.989,2698,3.463]],["body/modules/MessagesRoutingModule.html",[0,0.307,3,0.128,4,0.109,9,0.099,28,3.123,47,0.006,71,0.429,73,0.685,85,0.119,90,0.189,93,1.598,190,1.15,199,1.658,261,0.005,262,0.005,408,2.988,410,3.123,423,3.352,425,4.28,436,5.362,437,5.406,438,2.276,445,4.537,454,6.145,464,4.537,492,4.946,954,3.95,1248,5.506,1253,5.506,1254,5.506,2698,6.145,2701,7.18,2702,7.18]],["title/components/MockPage.html",[0,0.205,199,0.934]],["body/components/MockPage.html",[0,0.306,1,0.893,2,1.272,3,0.079,4,0.067,5,0.878,6,1,7,0.953,8,0.953,9,0.061,13,1.832,14,2.796,15,0.796,16,1.712,17,1.916,18,0.836,19,1.293,20,0.85,21,1.293,23,1.251,25,0.21,26,0.555,27,1.017,32,0.749,36,3.031,37,0.65,44,0.698,46,0.534,47,0.006,48,0.61,49,0.256,50,0.422,52,0.486,53,0.783,60,0.757,61,0.65,71,0.295,73,0.422,77,1.153,81,0.796,85,0.073,90,0.117,110,1.306,111,1.565,113,1.241,114,1.377,115,0.953,116,1.293,117,1.469,118,0.796,119,1.732,120,0.953,121,1.542,122,0.893,123,0.922,124,0.907,125,0.953,126,0.893,127,0.953,128,0.907,129,0.922,130,0.953,131,0.922,132,0.953,133,0.922,134,0.953,135,0.893,136,0.922,137,0.953,138,0.922,139,0.953,140,0.937,141,0.893,142,1.332,143,1.01,144,1.336,145,0.893,146,1.336,147,0.878,148,1.969,149,0.893,150,0.733,151,0.953,152,0.922,153,1.336,154,0.893,155,1.376,156,0.893,157,0.893,158,0.922,159,0.953,160,0.893,161,0.953,162,0.922,163,0.85,164,1.469,165,0.922,166,0.953,167,0.907,168,1.649,169,0.953,170,0.922,171,0.953,172,0.922,173,0.907,174,0.953,175,0.907,176,0.953,177,0.907,178,0.893,179,0.953,180,0.907,181,1.226,182,0.953,183,0.907,184,0.953,185,0.907,186,0.953,187,0.893,188,0.922,189,0.907,190,0.993,191,0.953,192,0.893,193,0.953,194,0.907,195,0.907,196,0.953,197,0.907,198,1.542,199,1.516,200,0.953,201,0.922,202,1.336,203,0.953,204,0.922,205,0.953,206,0.907,207,0.953,208,0.893,209,0.907,210,0.893,211,0.953,212,0.893,213,0.937,214,1.211,215,0.893,216,0.893,217,0.922,218,0.953,219,0.893,220,1.704,221,0.878,222,0.953,223,0.893,224,0.907,225,0.893,226,0.893,227,0.953,228,0.922,229,0.953,230,1.336,231,0.922,232,0.953,233,0.922,234,0.953,235,0.907,236,0.953,237,0.878,238,0.893,239,0.922,240,0.953,241,0.922,242,0.953,243,1.231,244,1.518,245,1.336,246,0.893,247,0.937,248,0.77,249,0.864,250,0.907,251,0.937,252,0.907,253,0.953,254,0.907,255,0.953,256,0.893,257,0.953,258,0.907,259,0.937,260,0.953,261,0.004,262,0.004,289,1.453,315,0.896,318,2.281,382,1.536,404,1.48,405,1.74,438,1.401,553,2.912,554,4.16,606,1.595,695,1.522,707,1.84,708,1.763,712,1.881,727,2.237,729,2.281,731,1.353,740,2.916,741,2.58,758,2.153,812,2.525,813,2.293,820,3.914,833,2.23,840,3.203,954,4.494,962,2.596,1042,2.794,2468,3.627,2469,3.627,2703,4.422,2704,6.199,2705,7.159,2706,6.199,2707,4.422,2708,4.422,2709,4.422,2710,4.422,2711,4.422,2712,4.422,2713,5.527,2714,4.422,2715,2.912,2716,3.203,2717,4.422]],["title/interfaces/ModifyUser.html",[86,0.74,2718,3.293]],["body/interfaces/ModifyUser.html",[3,0.123,4,0.104,9,0.095,25,0.327,26,0.741,47,0.006,48,0.713,49,0.38,64,2.634,85,0.152,86,1.425,88,1.705,261,0.005,262,0.005,263,2.181,315,1.465,491,5.025,521,5.816,522,4.551,659,3.395,757,2.67,2250,6.295,2718,5.699,2719,5.278,2720,4.985,2721,4.741,2722,4.741]],["title/classes/Monaco.html",[90,0.126,2723,3.293]],["body/classes/Monaco.html",[3,0.121,4,0.102,9,0.093,25,0.321,26,0.732,27,1.162,32,0.988,44,0.891,47,0.006,52,0.899,53,1.448,60,1.156,61,0.993,71,0.389,85,0.111,90,0.178,91,1.742,93,1.958,106,1.266,261,0.005,262,0.005,284,5.177,294,3.13,1064,3.64,1074,2.937,1310,5.103,2630,7.843,2632,7.499,2723,6.06,2724,6.751,2725,9.143,2726,8.797,2727,6.751,2728,6.751,2729,6.751,2730,6.751,2731,6.751,2732,5.537,2733,6.751,2734,6.751,2735,5.167,2736,6.751,2737,6.751,2738,6.751,2739,6.751,2740,6.751,2741,6.751,2742,6.02,2743,6.751,2744,6.751]],["title/classes/MonacoExtended.html",[90,0.126,2745,3.921]],["body/classes/MonacoExtended.html",[3,0.066,4,0.056,9,0.051,18,1.033,25,0.176,27,1.249,32,0.66,44,0.857,46,1.062,47,0.007,48,0.656,49,0.376,50,0.839,52,0.966,53,1.461,60,1.111,61,0.954,71,0.176,85,0.061,86,0.574,88,1.812,90,0.098,93,1.984,106,1.236,150,1.075,155,0.713,261,0.003,262,0.003,315,1.429,318,3.538,699,3.107,752,2.01,894,1.924,1011,2.833,1074,1.613,1093,1.69,1310,5.073,2723,3.764,2735,6.036,2745,4.481,2746,7.31,2747,3.042,2748,5.464,2749,5.464,2750,5.783,2751,5.783,2752,5.783,2753,5.783,2754,5.783,2755,5.464,2756,5.464,2757,5.783,2758,4.871,2759,8.038,2760,7.089,2761,5.488,2762,3.709,2763,4.871,2764,7.162,2765,3.709,2766,3.709,2767,6.802,2768,3.709,2769,3.709,2770,7.31,2771,8.193,2772,8.193,2773,3.709,2774,3.709,2775,3.709,2776,3.709,2777,7.089,2778,7.089,2779,7.089,2780,7.089,2781,3.709,2782,3.709,2783,3.709,2784,4.871,2785,3.709,2786,4.871,2787,3.709,2788,3.709,2789,3.709,2790,3.042,2791,3.042,2792,3.042,2793,2.687,2794,2.687,2795,2.687,2796,6.257,2797,6.545,2798,3.307,2799,3.307,2800,4.871,2801,3.307,2802,3.307,2803,3.307,2804,3.307,2805,3.307,2806,3.307,2807,4.871,2808,6.257,2809,6.38,2810,6.257,2811,6.38,2812,3.307,2813,3.307,2814,3.042,2815,4.871,2816,3.307,2817,5.869,2818,4.871,2819,4.871,2820,4.871,2821,3.307,2822,3.307,2823,3.307,2824,3.307,2825,3.307,2826,4.871,2827,4.871,2828,4.871,2829,4.871,2830,3.307,2831,3.307,2832,3.042,2833,4.871,2834,3.307,2835,4.481,2836,3.307,2837,3.307]],["title/components/NavElementComponent.html",[0,0.205,201,0.997]],["body/components/NavElementComponent.html",[0,0.271,1,0.719,2,1.088,3,0.064,4,0.054,5,0.708,6,0.806,7,0.768,8,0.768,9,0.049,13,1.567,15,0.641,16,1.697,17,1.899,18,0.674,19,1.106,20,0.685,21,1.106,23,1.071,25,0.169,26,0.475,27,1.324,32,0.641,37,0.932,44,0.861,47,0.006,48,0.523,49,0.309,50,0.506,52,0.771,53,1.328,57,1.364,60,1.085,61,0.932,62,1.106,71,0.333,73,0.34,77,0.987,81,0.641,83,0.951,85,0.059,90,0.094,110,2.073,113,1.778,114,2.536,115,0.768,116,1.106,117,1.614,118,0.641,119,1.727,120,0.768,121,1.365,122,0.719,123,0.743,124,0.731,125,0.768,126,0.719,127,0.768,128,0.731,129,0.743,130,0.768,131,0.743,132,0.768,133,0.743,134,0.768,135,0.719,136,0.743,137,0.768,138,0.743,139,0.768,140,0.755,141,0.719,142,1.178,143,0.864,144,1.143,145,0.719,146,1.143,147,0.708,148,1.876,149,0.719,150,0.59,151,0.768,152,0.743,153,1.143,154,0.719,155,1.218,156,0.719,157,0.719,158,0.743,159,0.768,160,0.719,161,0.768,162,0.743,163,0.685,164,1.3,165,0.743,166,0.768,167,0.731,168,1.69,169,0.768,170,0.743,171,0.768,172,0.743,173,0.731,174,0.768,175,0.731,176,0.768,177,0.731,178,0.719,179,0.768,180,0.731,181,1.085,182,0.768,183,0.731,184,0.768,185,0.731,186,0.768,187,0.719,188,0.743,189,0.731,190,1.015,191,0.768,192,0.719,193,0.768,194,0.731,195,0.731,196,0.768,197,0.731,198,1.365,199,0.696,200,0.768,201,1.463,202,1.843,203,0.768,204,0.743,205,0.768,206,0.731,207,0.768,208,0.719,209,0.731,210,0.719,211,0.768,212,0.719,213,0.755,214,1.036,215,0.719,216,0.719,217,0.743,218,0.768,219,0.719,220,1.565,221,0.708,222,0.768,223,0.719,224,0.731,225,0.719,226,0.719,227,0.768,228,0.743,229,0.768,230,1.143,231,0.743,232,0.768,233,0.743,234,0.768,235,0.731,236,0.768,237,0.708,238,0.719,239,0.743,240,0.768,241,0.743,242,0.768,243,1.053,244,1.343,245,1.143,246,0.719,247,0.755,248,0.621,249,0.696,250,0.731,251,0.755,252,0.731,253,0.768,254,0.731,255,0.768,256,0.719,257,0.768,258,0.731,259,0.755,260,0.768,261,0.003,262,0.003,267,1.392,285,2.038,289,1.171,294,2.425,300,1.09,315,0.767,316,2.581,317,1.664,318,1.311,346,2.831,404,1.192,405,2.286,406,1.483,420,1.664,605,1.483,606,1.286,607,1.392,608,2.207,695,2.138,696,2.484,697,2.707,698,1.624,699,1.451,700,2.092,703,2.43,706,2.023,711,1.75,712,1.516,715,3.351,716,1.55,719,1.55,727,2.837,728,2.893,729,3.202,730,2.707,731,2.295,732,1.848,733,1.797,737,2.207,738,2.16,752,1.311,758,1.237,762,1.848,763,1.55,765,3.719,779,1.99,811,2.023,819,2.251,825,2.023,826,2.023,849,3.381,874,1.96,875,2.167,899,2.346,901,4.564,953,1.902,958,2.092,1339,2.922,1394,3.719,1421,1.96,1907,4.588,1909,5.082,1916,6.031,2182,3.841,2239,2.092,2240,2.167,2576,7.975,2838,7.975,2839,3.563,2840,6.335,2841,5.303,2842,5.648,2843,5.648,2844,7.017,2845,7.017,2846,7.017,2847,5.648,2848,6.335,2849,5.303,2850,3.563,2851,3.563,2852,3.563,2853,3.563,2854,3.563,2855,3.563,2856,3.563,2857,4.728,2858,3.563,2859,3.563,2860,5.648,2861,3.563,2862,3.563,2863,3.177,2864,4.728,2865,3.177,2866,2.922,2867,3.177]],["title/components/NavElementWorkspaceComponent.html",[0,0.205,204,0.997]],["body/components/NavElementWorkspaceComponent.html",[0,0.221,1,0.52,2,0.847,3,0.046,4,0.039,5,0.512,6,0.583,7,0.555,8,0.555,9,0.036,13,1.22,15,0.464,16,1.67,17,1.865,18,0.488,19,0.861,20,0.496,21,0.861,23,0.834,25,0.122,26,0.37,27,1.251,32,0.499,37,0.607,44,0.883,46,0.875,47,0.006,48,0.607,49,0.342,50,0.741,52,0.937,53,1.528,57,0.987,60,1.012,61,0.869,62,0.861,71,0.378,73,0.246,77,1.638,81,0.464,83,0.688,85,0.043,90,0.068,91,1.081,110,1.909,113,1.814,114,2.533,115,0.555,116,0.861,117,2.018,118,0.464,119,1.783,120,0.555,121,1.113,122,0.52,123,0.538,124,0.529,125,0.555,126,0.52,127,0.555,128,0.529,129,0.538,130,0.555,131,0.538,132,0.555,133,0.538,134,0.555,135,0.52,136,0.538,137,0.555,138,0.538,139,0.555,140,0.547,141,0.52,142,1.283,143,1.551,144,0.89,145,0.52,146,0.89,147,0.512,148,1.715,149,0.52,150,1.071,151,0.555,152,0.538,153,0.89,154,0.52,155,1.492,156,0.52,157,0.52,158,0.538,159,0.555,160,0.52,161,0.555,162,0.538,163,0.496,164,1.06,165,0.538,166,0.555,167,0.529,168,1.519,169,0.555,170,0.538,171,0.555,172,0.538,173,0.529,174,0.555,175,0.529,176,0.555,177,0.529,178,0.52,179,0.555,180,0.529,181,0.885,182,0.555,183,0.529,184,0.555,185,0.529,186,0.555,187,0.52,188,0.538,189,0.529,190,0.661,191,0.555,192,0.52,193,0.555,194,0.529,195,0.529,196,0.555,197,0.529,198,1.113,199,0.504,200,0.555,201,0.538,202,1.672,203,0.555,204,1.232,205,0.555,206,0.529,207,0.555,208,0.52,209,1.06,210,0.52,211,0.555,212,0.52,213,0.547,214,0.807,215,0.52,216,0.52,217,0.538,218,0.555,219,0.52,220,1.348,221,0.512,222,0.555,223,0.52,224,0.529,225,0.52,226,0.52,227,0.555,228,0.538,229,0.555,230,0.89,231,0.538,232,0.555,233,0.538,234,0.555,235,0.529,236,0.555,237,0.512,238,0.52,239,0.538,240,0.555,241,0.538,242,0.555,243,0.82,244,1.095,245,0.89,246,0.52,247,0.547,248,0.449,249,0.504,250,0.529,251,0.547,252,0.529,253,0.555,254,0.529,255,0.555,256,0.52,257,0.555,258,0.529,259,0.547,260,0.555,261,0.003,262,0.003,267,1.007,285,1.199,289,0.847,294,1.977,300,2.11,315,0.597,316,1.867,317,1.928,346,2.204,396,3.15,404,2.423,405,2.447,406,2.689,407,1.337,420,1.928,438,0.817,557,3.467,558,3.865,605,1.073,606,0.93,607,1.007,608,2.149,695,2.066,696,2.362,697,2.715,703,2.443,711,1.266,712,1.097,715,2.609,716,1.796,719,1.796,727,2.8,728,2.855,729,3.095,730,2.488,731,2.11,732,2.141,733,2.083,737,1.718,738,1.682,740,2.406,741,2.458,752,1.9,756,1.568,757,1.333,758,0.895,762,2.141,763,1.796,765,3.033,770,2.204,779,1.549,811,1.464,825,1.464,826,1.464,849,2.757,874,1.418,875,1.568,899,1.698,901,2.512,958,2.424,1148,1.568,1149,3.478,1187,2.719,1394,3.033,1414,3.387,1421,3.984,1499,3.387,1545,3.931,1901,3.167,1907,3.741,1909,4.278,1916,5.288,1979,3.961,2054,3.682,2182,2.991,2239,2.424,2240,2.512,2244,3.387,2267,4.844,2574,8.128,2602,2.299,2838,8.128,2842,4.606,2843,4.606,2847,4.606,2857,3.682,2863,2.299,2864,5.266,2865,3.682,2866,2.115,2867,2.299,2868,2.578,2869,5.165,2870,4.129,2871,5.165,2872,5.906,2873,5.906,2874,3.682,2875,5.266,2876,5.266,2877,4.129,2878,4.129,2879,4.129,2880,5.266,2881,4.129,2882,5.906,2883,5.906,2884,4.129,2885,2.578,2886,2.578,2887,2.578,2888,2.578,2889,3.682,2890,2.578,2891,2.578,2892,3.682,2893,2.578,2894,2.578,2895,2.578,2896,4.129,2897,2.578,2898,4.129,2899,2.578,2900,4.129,2901,2.578,2902,2.578,2903,4.129,2904,2.578,2905,2.578,2906,2.578,2907,2.578,2908,2.578,2909,2.578,2910,2.578,2911,2.299,2912,2.578,2913,2.299,2914,5.165,2915,2.578,2916,2.578,2917,6.463,2918,6.463,2919,6.463,2920,6.463,2921,3.682,2922,2.299,2923,2.299,2924,2.578,2925,2.578,2926,2.578,2927,2.578,2928,2.578,2929,2.578,2930,4.129,2931,4.129,2932,5.266,2933,3.732,2934,4.129,2935,2.299,2936,2.578]],["title/components/OptionComponent.html",[0,0.205,206,0.981]],["body/components/OptionComponent.html",[0,0.306,1,0.89,2,1.27,3,0.079,4,0.067,5,0.876,6,0.998,7,0.95,8,0.95,9,0.061,15,0.794,16,1.711,17,1.917,18,0.834,19,1.291,20,0.848,21,1.291,23,1.249,25,0.21,26,0.554,27,1.016,37,0.649,44,0.825,46,0.533,47,0.006,48,0.609,49,0.32,50,0.421,60,0.755,61,1.14,71,0.294,73,0.421,77,1.151,81,0.794,85,0.073,90,0.116,106,0.683,110,1.303,115,0.95,116,1.291,117,1.467,118,0.794,119,1.794,120,0.95,121,1.54,122,0.89,123,0.92,124,0.905,125,0.95,126,0.89,127,0.95,128,0.905,129,0.92,130,0.95,131,0.92,132,0.95,133,0.92,134,0.95,135,0.89,136,0.92,137,0.95,138,0.92,139,0.95,140,0.935,141,0.89,142,1.33,143,1.008,144,1.333,145,0.89,146,1.333,147,0.876,148,1.968,149,0.89,150,0.731,151,0.95,152,0.92,153,1.333,154,0.89,155,1.374,156,0.89,157,0.89,158,0.92,159,0.95,160,0.89,161,0.95,162,0.92,163,0.848,164,1.467,165,0.92,166,0.95,167,0.905,168,1.791,169,0.95,170,0.92,171,0.95,172,0.92,173,0.905,174,0.95,175,0.905,176,0.95,177,0.905,178,0.89,179,0.95,180,0.905,181,1.224,182,0.95,183,0.905,184,0.95,185,0.905,186,0.95,187,0.89,188,0.92,189,0.905,190,0.991,191,0.95,192,0.89,193,0.95,194,0.905,195,0.905,196,0.95,197,0.905,198,1.54,199,0.862,200,0.95,201,0.92,202,1.333,203,0.95,204,0.92,205,0.95,206,1.59,207,0.95,208,0.89,209,0.905,210,0.89,211,0.95,212,0.89,213,0.935,214,1.209,215,0.89,216,0.89,217,0.92,218,0.95,219,0.89,220,1.702,221,0.876,222,0.95,223,0.89,224,0.905,225,0.89,226,0.89,227,0.95,228,0.92,229,0.95,230,1.333,231,0.92,232,0.95,233,0.92,234,0.95,235,0.905,236,0.95,237,0.876,238,0.89,239,0.92,240,0.95,241,0.92,242,0.95,243,1.229,244,1.515,245,1.333,246,0.89,247,0.935,248,0.768,249,0.862,250,0.905,251,0.935,252,0.905,253,0.95,254,0.905,255,0.95,256,0.89,257,0.95,258,0.905,259,0.935,260,0.95,261,0.004,262,0.004,289,1.449,294,2.368,307,2.904,315,1.033,318,1.622,404,2.071,405,2.291,406,1.835,605,1.835,606,1.591,607,1.723,608,1.835,695,1.083,696,1.281,701,1.398,708,1.759,711,3.807,716,1.918,719,1.918,727,1.591,728,1.622,729,1.622,737,1.835,738,1.796,759,1.918,763,1.918,767,3.194,770,2.354,779,2.322,849,4.357,852,5.482,893,3.038,1064,2.754,1851,4.262,1889,2.904,2937,4.41,2938,7.148,2939,6.188,2940,7.75,2941,6.374,2942,7.148,2943,4.41,2944,4.41,2945,4.41,2946,4.41,2947,4.41,2948,4.41,2949,4.41,2950,4.41,2951,4.41,2952,4.41,2953,3.617]],["title/classes/PersistentMap.html",[90,0.126,593,3.666]],["body/classes/PersistentMap.html",[3,0.108,4,0.091,9,0.083,25,0.286,26,0.682,32,0.921,37,1.121,44,0.902,46,1.01,47,0.006,48,0.624,49,0.362,50,0.798,52,0.918,53,1.48,60,1.032,61,1.333,85,0.126,86,0.933,90,0.159,91,1.694,93,1.696,106,1.294,150,1.262,261,0.005,262,0.005,285,2.213,291,3.171,315,1.102,353,3.664,593,5.843,594,7.591,782,3.392,980,3.315,1074,2.62,1093,3.809,1466,4.149,1492,5.249,1680,6.736,1713,7.208,1718,7.204,1836,4.815,1851,4.149,1890,5.504,2954,8.38,2955,5.37,2956,7.452,2957,7.832,2958,7.832,2959,6.023,2960,7.204,2961,7.62,2962,6.023,2963,6.794,2964,6.023,2965,6.023,2966,6.794,2967,6.023,2968,5.37,2969,5.37,2970,7.832,2971,5.37,2972,6.794,2973,5.37,2974,5.37,2975,5.37,2976,5.37,2977,5.37,2978,5.37,2979,5.37,2980,5.37]],["title/interfaces/PersistentMapOptions.html",[86,0.74,2960,3.921]],["body/interfaces/PersistentMapOptions.html",[3,0.12,4,0.102,9,0.093,25,0.319,26,0.73,37,0.988,47,0.006,49,0.277,53,1.189,61,1.199,85,0.135,86,1.04,90,0.177,91,1.492,93,1.814,106,1.359,261,0.005,262,0.005,263,2.128,285,1.95,315,1.269,593,5.149,594,8.019,782,2.989,980,2.921,1093,3.06,1466,4.625,1680,6.251,1713,6.73,1718,6.685,1836,5.151,1851,4.625,1890,5.779,2954,5.987,2955,5.987,2956,5.987,2957,5.987,2958,5.987,2960,7.198,2963,5.987,2966,5.987,2968,5.987,2969,5.987,2970,8.137,2971,5.987,2972,7.267,2973,5.987,2974,5.987,2975,5.987,2976,5.987,2977,5.987,2978,5.987,2979,5.987,2980,5.987]],["title/interfaces/Project.html",[86,0.74,143,0.779]],["body/interfaces/Project.html",[3,0.123,4,0.104,9,0.095,25,0.326,26,0.74,47,0.006,48,0.727,49,0.379,50,0.788,71,0.326,85,0.113,86,1.063,88,1.703,109,4.543,143,1.443,163,1.588,190,1.323,209,1.695,261,0.005,262,0.005,263,2.175,315,1.381,599,5.398,601,4.337,672,5.982,757,3.083,996,2.919,2981,6.863,2982,9.194,2983,9.194,2984,8.259,2985,9.194]],["title/interfaces/ProjectMember.html",[86,0.74,599,2.807]],["body/interfaces/ProjectMember.html",[3,0.131,4,0.111,9,0.101,25,0.349,26,0.77,47,0.006,48,0.548,49,0.388,64,2.809,85,0.121,86,1.136,88,1.807,261,0.005,262,0.005,263,2.326,315,1.384,509,5.228,521,4.465,522,4.037,599,5.046,659,3.597,757,2.368,2250,4.833,2721,6.474,2986,7.339,2987,7.339]],["title/injectables/ProjectService.html",[329,1.794,558,2.552]],["body/injectables/ProjectService.html",[3,0.086,4,0.072,9,0.066,18,1.238,25,0.227,27,1.383,32,0.791,37,0.704,44,0.866,46,1.049,47,0.007,48,0.663,49,0.373,50,0.828,52,1.03,62,1.365,68,3.107,71,0.412,73,0.457,77,1.707,78,2.716,83,1.276,85,0.079,87,2.18,88,1.829,89,3.461,90,0.126,106,1.376,142,1.218,143,1.63,150,1.33,190,1.39,209,1.531,261,0.004,262,0.004,265,1.933,282,3.494,315,0.691,321,3.461,329,2.456,330,4.774,331,2.481,333,2.724,335,4.378,340,5.562,356,7.119,357,6.724,380,2.481,381,2.349,382,1.661,501,2.91,509,3.982,519,3.464,520,3.295,524,3.395,558,3.494,661,5.369,757,2.59,782,2.129,1007,3.494,1010,3.572,1152,4.137,1363,5.369,1391,4.137,1445,4.741,1507,6.582,1768,5.813,2988,4.783,2989,6.546,2990,4.783,2991,6.546,2992,4.783,2993,6.546,2994,6.546,2995,4.783,2996,5.369,2997,4.783,2998,4.741,2999,5.837,3000,4.783,3001,4.783,3002,6.546,3003,4.783,3004,4.265,3005,4.783,3006,4.783,3007,4.783,3008,4.783,3009,4.265,3010,4.783,3011,4.783,3012,4.265,3013,4.783,3014,4.783,3015,4.783]],["title/components/ProjectsListPage.html",[0,0.205,208,0.965]],["body/components/ProjectsListPage.html",[0,0.281,1,0.766,2,1.14,3,0.068,4,0.057,5,0.754,6,0.858,7,0.817,8,0.817,9,0.052,15,0.683,16,1.702,17,1.904,18,0.717,19,1.159,20,0.729,21,1.159,23,1.121,25,0.18,26,0.498,27,1.143,32,0.671,37,0.817,44,0.831,46,0.874,47,0.006,48,0.659,49,0.343,50,0.691,52,0.722,53,1.164,60,0.65,61,0.558,62,1.159,68,2.577,71,0.413,73,0.362,77,1.585,81,0.683,83,1.012,85,0.063,87,3.509,88,1.068,90,0.1,91,1.559,93,0.845,110,1.121,115,0.817,116,1.159,117,1.349,118,0.683,119,1.533,120,0.817,121,1.416,122,0.766,123,0.791,124,0.778,125,0.817,126,0.766,127,0.817,128,0.778,129,0.791,130,0.817,131,0.791,132,0.817,133,0.791,134,0.817,135,0.766,136,0.791,137,0.817,138,0.791,139,0.817,140,0.804,141,0.766,142,1.223,143,1.56,144,1.197,145,0.766,146,1.197,147,0.754,148,1.904,149,0.766,150,1.089,151,0.817,152,0.791,153,1.197,154,0.766,155,1.546,156,0.766,157,0.766,158,0.791,159,0.817,160,0.766,161,0.817,162,0.791,163,0.729,164,1.349,165,0.791,166,0.817,167,0.778,168,1.554,169,0.817,170,0.791,171,0.817,172,0.791,173,0.778,174,0.817,175,0.778,176,0.817,177,0.778,178,0.766,179,0.817,180,0.778,181,1.126,182,0.817,183,0.778,184,0.817,185,0.778,186,0.817,187,0.766,188,0.791,189,0.778,190,1.159,191,0.817,192,0.766,193,0.817,194,0.778,195,0.778,196,0.817,197,0.778,198,1.416,199,0.741,200,0.817,201,0.791,202,1.197,203,0.817,204,0.791,205,0.817,206,0.778,207,0.817,208,1.46,209,1.838,210,0.766,211,0.817,212,0.766,213,0.804,214,1.085,215,0.766,216,0.766,217,0.791,218,0.817,219,0.766,220,1.606,221,0.754,222,0.817,223,0.766,224,0.778,225,0.766,226,0.766,227,0.817,228,0.791,229,0.817,230,1.197,231,0.791,232,0.817,233,0.791,234,0.817,235,0.778,236,0.817,237,0.754,238,0.766,239,0.791,240,0.817,241,0.791,242,0.817,243,1.103,244,1.393,245,1.197,246,0.766,247,0.804,248,0.661,249,0.741,250,0.778,251,0.804,252,0.778,253,0.817,254,0.778,255,0.817,256,0.766,257,0.817,258,0.778,259,0.804,260,0.817,261,0.004,262,0.004,289,1.247,396,3.615,438,1.203,543,5.084,553,2.498,554,3.951,557,3.978,558,4.436,605,1.579,606,1.369,607,1.482,608,1.579,619,2.154,695,0.932,702,2.087,758,1.318,782,1.689,998,2.881,1010,2.473,1149,4.192,1172,2.614,1173,2.398,1174,4.328,1175,2.91,1176,3.112,1187,2.498,1201,4.556,1241,7.131,1499,4.556,1545,3.379,2874,4.953,2889,4.953,2892,4.953,2921,4.953,2922,3.383,2923,3.383,3004,3.383,3016,8.694,3017,3.112,3018,5.39,3019,4.556,3020,5.555,3021,5.555,3022,3.383,3023,3.383,3024,5.555,3025,3.383,3026,3.383,3027,3.794,3028,3.794,3029,3.112,3030,3.383,3031,3.794,3032,3.794,3033,3.794,3034,3.112,3035,3.112,3036,4.953,3037,4.953]],["title/classes/Random.html",[90,0.126,3038,3.921]],["body/classes/Random.html",[3,0.109,4,0.092,9,0.084,25,0.289,26,0.687,27,1.193,32,0.926,37,0.895,44,0.886,46,0.735,47,0.006,48,0.454,49,0.364,50,0.801,52,0.842,60,1.438,61,1.235,62,1.269,85,0.1,88,1.882,90,0.221,91,1.76,106,0.942,261,0.005,262,0.005,265,1.399,321,2.426,370,3.867,676,5.528,703,2.226,733,3.068,1074,2.646,3038,7.944,3039,6.082,3040,8.396,3041,8.396,3042,8.396,3043,7.667,3044,7.667,3045,8.815,3046,9.528,3047,8.396,3048,6.082,3049,8.396,3050,6.082,3051,7.667,3052,6.082,3053,6.082,3054,8.815,3055,8.815,3056,9.087,3057,6.082,3058,6.082,3059,6.082,3060,6.082,3061,6.082,3062,7.667,3063,7.667,3064,6.082,3065,6.082]],["title/components/RegisterPage.html",[0,0.205,210,0.965]],["body/components/RegisterPage.html",[0,0.238,1,0.582,2,0.925,3,0.052,4,0.044,5,0.572,6,0.652,7,0.621,8,0.621,9,0.04,15,0.519,16,1.68,17,1.879,18,0.545,19,0.941,20,0.554,21,0.941,23,0.91,25,0.137,26,0.404,27,1.143,29,2.859,32,0.545,37,0.424,44,0.802,46,0.545,47,0.007,48,0.584,49,0.281,50,0.747,52,0.691,53,1.113,60,0.952,61,0.817,62,1.86,63,2.66,64,2.406,65,3.316,66,4.126,71,0.382,73,0.275,74,0.866,77,0.839,81,0.519,83,0.769,85,0.048,90,0.076,91,1.15,103,1.454,104,1.454,106,0.698,110,0.851,111,1.02,113,2.56,114,2.505,115,0.621,116,0.941,117,1.14,118,0.519,119,1.705,120,0.621,121,1.197,122,0.582,123,0.601,124,0.591,125,0.621,126,0.582,127,0.621,128,0.591,129,0.601,130,0.621,131,0.601,132,0.621,133,0.601,134,0.621,135,0.582,136,0.601,137,0.621,138,0.601,139,0.621,140,0.611,141,0.582,142,1.034,143,0.735,144,0.972,145,0.582,146,0.972,147,0.572,148,1.773,149,0.582,150,0.477,151,0.621,152,0.601,153,0.972,154,0.582,155,1.068,156,0.582,157,0.582,158,0.601,159,0.621,160,0.582,161,0.621,162,0.601,163,0.554,164,1.14,165,0.601,166,0.621,167,0.591,168,1.461,169,0.621,170,0.601,171,0.621,172,0.601,173,0.591,174,0.621,175,0.591,176,0.621,177,0.591,178,0.582,179,0.621,180,0.591,181,0.952,182,0.621,183,0.591,184,0.621,185,0.591,186,0.621,187,0.582,188,0.601,189,0.591,190,0.722,191,0.621,192,0.582,193,0.621,194,0.591,195,1.485,196,0.621,197,0.591,198,1.197,199,0.563,200,0.621,201,0.601,202,0.972,203,0.621,204,0.601,205,0.621,206,0.591,207,0.621,208,0.582,209,0.591,210,1.269,211,0.621,212,0.582,213,0.611,214,1.228,215,0.582,216,0.582,217,0.601,218,0.621,219,0.582,220,1.423,221,0.572,222,0.621,223,0.582,224,0.591,225,0.582,226,0.582,227,0.621,228,0.601,229,0.621,230,0.972,231,0.601,232,0.621,233,0.601,234,0.621,235,0.591,236,0.621,237,0.572,238,0.582,239,0.601,240,0.621,241,0.601,242,0.621,243,0.896,244,1.178,245,0.972,246,0.582,247,0.611,248,0.502,249,0.563,250,0.591,251,1.178,252,0.591,253,0.621,254,0.591,255,0.621,256,0.582,257,0.621,258,0.591,259,0.611,260,0.621,261,0.003,262,0.003,270,1.897,285,0.837,294,1.103,300,0.882,311,1.753,315,0.803,317,1.345,382,1.001,396,3.289,404,2.421,405,2.354,407,1.494,438,0.913,488,2.969,490,6.706,491,2.966,493,4.108,521,2.743,522,3.056,592,3.155,659,1.726,695,1.777,696,2.39,697,2.903,698,2.055,699,1.837,701,1.761,703,1.613,716,1.253,719,1.253,722,1.821,723,1.379,727,2.268,728,2.044,729,2.312,730,2.268,731,1.923,732,2.339,733,2.275,734,1.659,737,1.877,738,1.837,739,2.648,762,1.494,763,1.962,812,1.174,814,4.005,820,1.454,836,2.729,855,2.85,887,1.753,919,1.985,923,5.596,924,4.954,925,4.021,926,4.021,927,4.021,928,4.021,930,2.481,933,2.569,935,2.363,936,2.569,937,2.569,938,2.087,943,2.21,944,2.363,947,1.692,949,3.458,950,1.897,951,1.692,952,1.821,953,1.538,954,3.98,955,1.985,956,2.969,957,1.985,958,1.692,959,5.669,960,2.743,961,1.821,962,1.692,963,1.753,964,1.753,965,1.821,966,2.087,967,4.33,968,1.985,969,4.493,970,4.33,971,1.985,972,1.985,973,1.985,974,1.897,975,1.985,976,1.985,977,1.985,978,1.985,993,1.538,1038,3.752,1100,3.458,1127,3.266,1171,1.821,1281,3.458,1282,2.275,1545,1.753,1741,2.363,1742,3.266,1745,2.363,1770,1.253,1832,2.56,1833,3.056,1922,3.699,2483,4.021,2486,4.021,2499,2.569,2503,2.569,2505,4.021,2507,6.451,2512,4.021,2513,4.021,2514,4.021,3066,2.569,3067,5.556,3068,4.51,3069,6.978,3070,5.556,3071,4.954,3072,6.285,3073,6.285,3074,2.882,3075,2.882,3076,2.882,3077,2.882,3078,2.882,3079,2.882,3080,4.954,3081,6.285,3082,2.882,3083,2.882,3084,2.882,3085,5.556,3086,2.882,3087,2.882,3088,2.569,3089,2.569,3090,4.51,3091,5.556,3092,2.882,3093,2.882,3094,2.882,3095,4.51,3096,2.882,3097,4.51,3098,2.882,3099,2.882,3100,2.882,3101,2.882,3102,6.285,3103,2.882,3104,2.882,3105,4.51,3106,3.699,3107,4.51,3108,4.51,3109,4.51]],["title/interfaces/RequestOptions.html",[86,0.74,347,3.921]],["body/interfaces/RequestOptions.html",[3,0.09,4,0.076,9,0.106,18,1.284,25,0.24,26,0.608,47,0.007,49,0.396,50,0.929,60,1.163,71,0.24,85,0.083,86,1.326,88,0.971,106,1.366,150,1.125,261,0.004,262,0.004,263,1.601,265,1.161,282,4.381,285,2.617,300,2.078,308,3.926,315,1.303,318,3.151,321,2.014,335,3.426,337,6.056,338,6.056,340,5.412,342,6.056,346,4.381,347,5.571,350,6.056,352,7.864,355,6.056,370,3.426,375,3.873,385,6.732,386,8.276,387,7.864,445,4.292,506,4.92,509,4.993,524,4.813,726,3.326,898,5.209,996,2.889,1039,5.209,1066,5.209,1466,4.679,1467,7.318,1512,5.209,1665,4.292,1772,7.318,1922,5.571,2060,7.515,2716,5.945,3110,5.051,3111,5.051,3112,9.162,3113,8.82,3114,8.82,3115,8.207,3116,6.792,3117,5.571,3118,8.207,3119,8.207,3120,6.056,3121,8.207,3122,6.792,3123,6.792,3124,6.792,3125,6.792,3126,7.674,3127,9.012,3128,6.792,3129,6.056,3130,6.792,3131,6.792,3132,6.792,3133,6.792,3134,6.792,3135,5.051]],["title/components/RestoreAccountPage.html",[0,0.205,212,0.965]],["body/components/RestoreAccountPage.html",[0,0.276,1,0.742,2,1.113,3,0.066,4,0.056,5,0.73,6,0.831,7,0.791,8,0.791,9,0.051,15,0.661,16,1.7,17,1.901,18,0.695,19,1.131,20,0.706,21,1.131,23,1.095,25,0.175,29,2.711,32,0.655,37,0.54,44,0.629,46,0.444,47,0.006,48,0.567,49,0.152,50,0.351,52,0.596,53,0.961,71,0.306,73,0.351,77,1.009,81,0.661,85,0.061,90,0.097,91,0.672,110,1.085,111,1.3,113,2.642,114,2.629,115,0.791,116,1.131,117,1.323,118,0.661,119,1.744,120,0.791,121,1.39,122,0.742,123,0.766,124,0.754,125,0.791,126,0.742,127,0.791,128,0.754,129,0.766,130,0.791,131,0.766,132,0.791,133,0.766,134,0.791,135,0.742,136,0.766,137,0.791,138,0.766,139,0.791,140,0.779,141,0.742,142,1.2,143,0.884,144,1.169,145,0.742,146,1.169,147,0.73,148,1.889,149,0.742,150,0.609,151,0.791,152,0.766,153,1.169,154,0.742,155,1.24,156,0.742,157,0.742,158,0.766,159,0.791,160,0.742,161,0.791,162,0.766,163,0.706,164,1.323,165,0.766,166,0.791,167,0.754,168,1.534,169,0.791,170,0.766,171,0.791,172,0.766,173,0.754,174,0.791,175,0.754,176,0.791,177,0.754,178,0.742,179,0.791,180,0.754,181,1.105,182,0.791,183,0.754,184,0.791,185,0.754,186,0.791,187,0.742,188,0.766,189,0.754,190,0.869,191,0.791,192,0.742,193,0.791,194,0.754,195,1.632,196,0.791,197,0.754,198,1.39,199,0.718,200,0.791,201,0.766,202,1.169,203,0.791,204,0.766,205,0.791,206,0.754,207,0.791,208,0.742,209,0.754,210,0.742,211,0.791,212,1.438,213,1.996,214,1.714,215,0.742,216,0.742,217,0.766,218,0.791,219,0.742,220,1.585,221,0.73,222,0.791,223,0.742,224,0.754,225,0.742,226,0.742,227,0.791,228,0.766,229,0.791,230,1.169,231,0.766,232,0.791,233,0.766,234,0.791,235,0.754,236,0.791,237,0.73,238,0.742,239,0.766,240,0.791,241,0.766,242,0.791,243,1.077,244,1.367,245,1.169,246,0.742,247,0.779,248,1.123,249,0.718,250,0.754,251,0.779,252,0.754,253,0.791,254,0.754,255,0.791,256,0.742,257,0.791,258,0.754,259,0.779,260,0.791,261,0.003,262,0.003,382,1.276,396,3.578,404,2.661,405,2.232,407,1.905,420,2.533,438,1.164,486,5.842,489,5.462,493,4.515,695,1.866,696,2.504,697,3.111,698,2.472,699,2.209,701,2.408,703,1.873,708,2.163,722,2.321,723,1.758,725,2.419,727,2.327,728,2.373,729,2.62,730,2.57,731,2.179,732,1.905,733,1.853,734,2.373,737,1.529,738,1.496,739,3.185,759,1.598,812,1.496,814,4.461,820,1.853,836,1.804,838,2.419,887,2.235,919,2.53,950,2.419,951,2.157,952,2.321,953,1.961,954,4.374,955,2.53,956,3.572,957,2.53,958,2.157,959,6.041,960,3.3,961,2.321,962,2.157,963,2.235,964,2.235,965,2.321,967,4.906,968,2.53,969,5.003,970,4.906,971,2.53,972,2.53,973,2.53,974,2.419,975,2.53,976,2.53,977,2.53,978,2.53,1268,3.013,1269,5.29,1270,4.449,1271,3.275,1274,3.275,1277,3.737,1280,3.737,2477,2.817,3136,7.123,3137,3.674,3138,3.013,3139,3.674,3140,5.425,3141,4.837,3142,4.837,3143,4.449,3144,2.817]],["title/injectables/RouterExtensionsService.html",[43,3.293,329,1.794]],["body/injectables/RouterExtensionsService.html",[3,0.127,4,0.107,9,0.098,25,0.337,27,1.008,37,1.044,43,5.805,44,0.821,46,0.858,47,0.006,48,0.53,49,0.293,50,0.678,71,0.4,73,0.678,85,0.117,90,0.187,106,1.099,261,0.005,262,0.005,329,3.162,331,3.681,380,3.681,381,3.486,382,2.465,396,4.188,438,2.25,1064,3.751,2060,5.822,2221,6.104,2474,6.329,3145,8.988,3146,7.098,3147,8.988,3148,7.098,3149,7.098,3150,7.098,3151,7.098,3152,7.098,3153,8.427,3154,7.098]],["title/components/SchedulePage.html",[0,0.205,215,0.965]],["body/components/SchedulePage.html",[0,0.263,1,0.682,2,1.046,3,0.06,4,0.051,5,0.671,6,0.764,7,0.728,8,0.728,9,0.047,13,1.506,14,2.397,15,0.608,16,1.693,17,1.893,18,0.639,19,1.063,20,0.65,21,1.063,23,1.029,25,0.161,26,0.456,27,1.304,32,0.616,36,2.397,37,0.497,44,0.803,46,0.408,47,0.006,48,0.547,49,0.302,50,0.323,52,0.371,53,0.598,60,1.051,61,0.903,68,2.454,71,0.401,73,0.323,77,0.948,81,0.608,83,0.901,85,0.056,88,1.18,90,0.089,93,1.134,110,1.813,111,1.804,112,2.571,113,2.312,114,2.625,115,0.728,116,1.063,117,1.259,118,0.608,119,1.959,120,0.728,121,1.322,122,0.682,123,0.705,124,0.693,125,0.728,126,0.682,127,0.728,128,0.693,129,0.705,130,0.728,131,0.705,132,0.728,133,0.705,134,0.728,135,0.682,136,0.705,137,0.728,138,0.705,139,0.728,140,0.716,141,0.682,142,1.142,143,1.256,144,1.098,145,0.682,146,1.098,147,0.671,148,1.851,149,0.682,150,0.56,151,0.728,152,0.705,153,1.098,154,0.682,155,1.18,156,0.682,157,0.682,158,0.705,159,0.728,160,0.682,161,0.728,162,0.705,163,0.65,164,1.259,165,0.705,166,0.728,167,0.693,168,1.481,169,0.728,170,0.705,171,0.728,172,0.705,173,1.505,174,0.728,175,0.693,176,0.728,177,0.693,178,0.682,179,0.728,180,0.693,181,1.171,182,0.728,183,0.693,184,0.728,185,0.693,186,0.728,187,0.682,188,0.705,189,0.693,190,0.816,191,0.728,192,0.682,193,0.728,194,0.693,195,0.693,196,0.728,197,0.693,198,1.322,199,0.66,200,0.728,201,0.705,202,1.098,203,0.728,204,0.705,205,0.728,206,0.693,207,0.728,208,0.682,209,0.693,210,0.682,211,0.728,212,0.682,213,0.716,214,0.996,215,1.38,216,1.663,217,0.705,218,0.728,219,0.682,220,1.53,221,0.671,222,0.728,223,0.682,224,0.693,225,0.682,226,0.682,227,0.728,228,0.705,229,0.728,230,1.098,231,0.705,232,0.728,233,0.705,234,0.728,235,0.693,236,0.728,237,0.671,238,0.682,239,0.705,240,0.728,241,0.705,242,0.728,243,1.012,244,1.301,245,1.098,246,0.682,247,0.716,248,1.069,249,0.66,250,0.693,251,0.716,252,0.693,253,0.728,254,0.693,255,0.728,256,0.682,257,0.728,258,0.693,259,0.716,260,0.728,261,0.003,262,0.003,267,1.991,289,1.11,318,2.514,404,2.287,405,2.594,406,3.052,438,1.071,524,1.752,554,3.602,555,4.012,558,3.914,564,4.95,602,1.859,604,2.771,606,2.214,693,3.909,695,2.023,696,2.534,697,2.972,698,1.54,699,1.376,700,1.984,701,1.071,702,1.859,703,2.13,706,1.918,707,1.406,708,1.347,712,1.437,726,4.041,727,1.839,728,1.875,729,2.514,730,1.839,731,1.559,737,3.208,739,2.992,740,3.499,741,3.33,752,2.258,756,3.1,758,1.174,759,2.217,769,3.484,770,2.72,771,5.967,794,2.328,795,3.221,811,1.918,820,1.704,825,3.88,826,3.88,827,3.013,828,3.013,866,3.356,887,2.055,930,3.376,952,2.135,1064,2.269,1338,3.511,2240,3.733,2250,2.225,2287,2.591,2628,3.013,2672,3.013,2935,3.013,3155,3.379,3156,6.137,3157,5.097,3158,6.834,3159,6.834,3160,6.834,3161,3.379,3162,3.379,3163,3.379,3164,5.097,3165,3.379,3166,5.097,3167,3.379,3168,3.379,3169,3.379,3170,3.379,3171,3.379,3172,3.379,3173,3.013,3174,3.379,3175,5.097,3176,3.379,3177,3.379,3178,3.379,3179,3.379,3180,6.093,3181,3.379,3182,5.472,3183,6.137,3184,3.013,3185,3.379,3186,3.379,3187,3.379,3188,3.013,3189,3.379,3190,3.379,3191,3.379]],["title/components/SelectComponent.html",[0,0.205,217,0.997]],["body/components/SelectComponent.html",[0,0.235,1,0.57,2,0.911,3,0.051,4,0.043,5,0.561,6,0.639,7,0.609,8,0.609,9,0.039,13,1.312,15,0.508,16,1.679,17,1.876,18,0.534,19,0.926,20,0.543,21,0.926,23,0.896,25,0.211,26,0.398,27,1.273,29,1.87,32,0.536,37,0.415,44,0.909,46,0.966,47,0.006,48,0.642,49,0.37,50,0.809,52,0.945,53,1.501,57,2.38,60,1.065,61,1.176,62,1.621,64,1.081,65,2.058,71,0.389,73,0.27,74,0.849,77,0.826,81,0.508,83,0.753,85,0.047,88,0.543,90,0.074,91,1.574,93,0.988,106,1.162,110,1.312,113,0.793,114,0.879,115,0.609,116,0.926,117,1.387,118,0.508,119,1.521,120,0.609,121,1.182,122,0.57,123,0.589,124,0.579,125,0.609,126,0.57,127,0.609,128,0.579,129,0.589,130,0.609,131,0.589,132,0.609,133,0.589,134,0.609,135,0.57,136,0.589,137,0.609,138,0.589,139,0.609,140,1.734,141,0.57,142,1.02,143,0.723,144,0.956,145,0.57,146,0.956,147,0.561,148,1.763,149,0.57,150,0.468,151,0.609,152,0.589,153,0.956,154,0.57,155,1.054,156,0.57,157,0.57,158,0.589,159,0.609,160,0.57,161,0.609,162,0.589,163,0.543,164,1.125,165,0.589,166,0.609,167,0.579,168,1.736,169,0.609,170,1.297,171,0.609,172,0.589,173,0.579,174,0.609,175,0.579,176,0.609,177,0.579,178,0.57,179,0.609,180,0.579,181,0.939,182,0.609,183,0.579,184,0.609,185,0.579,186,0.609,187,0.57,188,0.589,189,0.579,190,0.711,191,0.609,192,0.57,193,0.609,194,0.579,195,0.579,196,0.609,197,0.579,198,1.182,199,0.552,200,0.609,201,0.589,202,0.956,203,0.609,204,0.589,205,0.609,206,1.712,207,0.609,208,0.57,209,0.579,210,0.57,211,0.609,212,0.57,213,0.599,214,0.867,215,0.57,216,0.57,217,1.297,218,0.609,219,0.57,220,1.409,221,0.561,222,0.609,223,0.57,224,0.579,225,0.57,226,0.57,227,0.609,228,0.589,229,0.609,230,0.956,231,0.589,232,0.609,233,0.589,234,0.609,235,0.579,236,0.609,237,0.561,238,0.57,239,0.589,240,0.609,241,0.589,242,0.609,243,0.882,244,1.521,245,0.956,246,0.57,247,0.599,248,0.492,249,0.552,250,0.579,251,0.941,252,0.579,253,0.609,254,0.579,255,0.609,256,0.57,257,0.609,258,0.579,259,0.599,260,0.609,261,0.003,262,0.003,265,1.43,274,1.718,285,1.593,289,0.928,291,2.282,300,0.864,308,1.976,315,0.899,335,2.767,349,2.302,368,2.302,404,0.945,405,1.246,406,1.175,552,4.282,605,1.175,606,1.019,607,1.103,608,1.175,659,1.699,663,2.073,697,1.019,700,1.658,703,1.962,706,1.604,708,1.126,717,1.785,721,2.518,723,1.352,737,1.175,738,1.15,740,1.808,741,1.847,761,1.319,779,1.666,814,1.658,815,2.166,849,2.927,861,2.844,874,1.554,875,1.718,947,1.658,980,1.931,984,4.031,985,2.52,986,2.52,987,2.52,988,2.52,989,2.52,990,4.073,991,1.658,992,1.604,993,2.369,994,1.604,995,1.604,996,1.201,997,1.554,998,1.465,999,1.465,1000,1.604,1001,1.658,1002,2.52,1003,3.53,1004,2.023,1005,3.946,1006,1.604,1007,2.927,1008,1.554,1009,2.52,1010,1.976,1011,3.224,1012,1.507,1013,1.604,1014,2.52,1015,3.721,1016,1.604,1017,1.658,1018,1.604,1019,1.604,1020,1.604,1021,1.658,1022,2.52,1023,1.604,1024,1.604,1025,1.718,1026,1.658,1027,1.658,1028,1.658,1029,1.658,1030,2.046,1031,1.945,1032,1.718,1033,1.658,1070,2.7,1093,3.729,1107,2.046,1112,2.046,1113,2.316,1318,1.718,1345,3.928,1360,4.503,1394,3.22,1421,3.42,1457,1.554,1559,2.316,1560,2.166,1666,3.611,1721,2.166,1770,1.229,1808,1.658,1809,1.554,1851,4.655,1891,1.785,1903,2.046,1904,2.046,1907,3.972,1909,4.503,2058,2.046,2167,3.778,2168,5.182,2182,3.215,2186,3.641,2202,2.166,2217,2.316,2218,2.166,2219,2.518,2220,2.316,2221,2.046,2222,3.404,2223,2.316,2224,2.316,2226,2.316,2240,1.718,2241,4.498,2242,2.518,2243,2.518,2256,4.206,2275,3.404,2941,4.89,3192,2.824,3193,4.439,3194,4.439,3195,5.485,3196,4.439,3197,5.485,3198,5.485,3199,4.439,3200,6.217,3201,4.439,3202,4.439,3203,6.758,3204,5.485,3205,6.217,3206,2.824,3207,2.824,3208,2.824,3209,2.824,3210,4.439,3211,6.396,3212,2.824,3213,2.824,3214,2.824,3215,2.824,3216,4.439,3217,2.824,3218,4.439,3219,2.824,3220,4.439,3221,2.824,3222,2.824,3223,2.824,3224,2.824,3225,2.824,3226,2.824,3227,5.485,3228,4.439,3229,2.824,3230,2.824,3231,2.824,3232,2.824,3233,5.485,3234,4.439,3235,2.824,3236,2.824,3237,2.518,3238,2.316,3239,2.824,3240,2.824,3241,2.824,3242,5.485,3243,2.824,3244,2.824,3245,2.824,3246,2.824,3247,2.824,3248,2.824,3249,2.824,3250,4.439,3251,2.824,3252,2.824,3253,2.824,3254,2.824,3255,2.824,3256,2.824,3257,2.824,3258,2.824,3259,2.824,3260,2.824,3261,2.824,3262,2.824,3263,2.824,3264,4.439,3265,4.439,3266,2.824]],["title/interfaces/SelectLabel.html",[86,0.74,3238,3.921]],["body/interfaces/SelectLabel.html",[3,0.127,4,0.108,9,0.098,25,0.338,26,0.756,47,0.006,49,0.371,50,0.888,65,3.491,71,0.428,74,2.14,85,0.118,86,1.102,206,2.012,261,0.005,262,0.005,263,2.256,315,1.301,607,2.781,711,4.571,852,7.136,1015,4.454,2140,5.839,2141,5.839,3237,6.347,3238,6.924,3267,7.119,3268,7.119]],["title/interfaces/SelectionEditOperation.html",[86,0.74,2793,3.463]],["body/interfaces/SelectionEditOperation.html",[3,0.082,4,0.07,9,0.063,18,1.205,25,0.218,26,0.571,27,1.309,47,0.007,49,0.363,50,0.855,71,0.218,85,0.076,86,0.712,88,1.648,90,0.121,93,2.071,106,1.328,150,1.211,155,0.884,261,0.004,262,0.004,263,1.457,315,1.421,318,3.478,699,2.977,752,2.343,894,4.092,1011,3.303,1093,2.095,1310,4.777,2723,4.388,2735,5.881,2745,3.771,2746,3.771,2747,3.771,2750,4.099,2751,4.099,2752,4.099,2753,4.099,2754,4.099,2757,4.099,2758,4.099,2759,7.633,2760,7.211,2761,4.885,2763,4.099,2764,6.993,2767,6.517,2770,7.211,2771,7.99,2772,7.99,2777,7.211,2778,7.211,2779,7.211,2780,7.211,2784,4.099,2786,4.099,2790,3.771,2791,3.771,2792,3.771,2793,4.614,2794,5.716,2795,5.716,2796,6.797,2797,7.032,2798,4.099,2799,4.099,2800,5.68,2801,4.099,2802,4.099,2803,4.099,2804,4.099,2805,4.099,2806,4.099,2807,5.68,2808,6.797,2809,7.036,2810,6.797,2811,7.036,2812,4.099,2813,4.099,2814,3.771,2815,5.68,2816,4.099,2817,6.473,2818,5.68,2819,5.68,2820,5.68,2821,4.099,2822,4.099,2823,4.099,2824,4.099,2825,4.099,2826,5.68,2827,5.68,2828,5.68,2829,5.68,2830,4.099,2831,4.099,2832,3.771,2833,5.68,2834,4.099,2835,5.225,2836,4.099,2837,4.099]],["title/classes/SelectionEditPlugin.html",[90,0.126,2732,3.921]],["body/classes/SelectionEditPlugin.html",[3,0.08,4,0.068,9,0.062,25,0.214,27,1.026,32,0.758,44,0.704,46,0.873,47,0.007,48,0.539,49,0.322,50,0.69,52,0.794,53,1.111,61,1.363,62,1.308,71,0.298,85,0.129,90,0.119,93,2.184,106,1.435,261,0.004,262,0.004,311,2.736,315,1.326,318,2.876,353,2.736,699,3.468,703,1.306,752,3.331,831,2.842,894,3.747,895,6.97,1004,2.859,1011,3.253,1074,1.956,1101,5.385,1310,4.696,1492,4.977,1680,4.811,1689,3.689,1713,4.811,1808,2.64,1809,2.474,2632,5.146,2732,5.146,2735,6.057,2742,4.01,2760,6.743,2761,6.944,2764,6.974,2770,5.926,2777,6.412,2778,6.412,2779,6.412,2780,6.412,2793,6.558,2794,4.544,2795,4.544,2796,3.689,2797,6.412,2808,6.412,2810,6.412,2814,3.689,2832,3.689,3211,4.01,3269,6.412,3270,3.689,3271,7.225,3272,6.274,3273,4.498,3274,8.515,3275,7.33,3276,4.498,3277,6.274,3278,4.498,3279,6.274,3280,4.498,3281,4.01,3282,4.498,3283,6.97,3284,4.01,3285,4.01,3286,7.225,3287,3.449,3288,4.498,3289,4.498,3290,4.498,3291,4.498,3292,4.498,3293,6.274,3294,8.515,3295,6.274,3296,6.274,3297,6.274,3298,6.274,3299,6.274,3300,6.274,3301,4.498,3302,4.498,3303,4.498,3304,4.498,3305,4.498,3306,4.498,3307,4.498,3308,8.515,3309,4.498,3310,4.498,3311,4.498,3312,4.498,3313,4.498,3314,4.498,3315,4.498,3316,4.498,3317,4.498]],["title/injectables/SessionsService.html",[329,1.794,3318,3.921]],["body/injectables/SessionsService.html",[3,0.123,4,0.104,9,0.095,25,0.326,27,1.357,32,0.998,37,1.009,44,0.863,46,0.998,47,0.006,48,0.616,49,0.341,50,0.788,52,0.908,68,2.965,71,0.437,73,0.655,83,1.831,85,0.113,88,1.703,90,0.181,106,1.279,150,1.368,190,1.473,261,0.005,262,0.005,329,3.099,330,5.256,331,3.559,380,3.559,381,3.371,382,2.384,501,4.175,520,4.728,757,2.215,3318,6.774,3319,6.863,3320,6.863,3321,7.364,3322,6.863,3323,6.863,3324,5.263,3325,6.863,3326,6.863,3327,6.863]],["title/components/SettingsAccountPage.html",[0,0.205,219,0.965]],["body/components/SettingsAccountPage.html",[0,0.28,1,0.758,2,1.132,3,0.067,4,0.057,5,0.746,6,0.85,7,0.809,8,0.809,9,0.052,13,1.629,14,2.553,15,0.676,16,1.701,17,1.903,18,0.71,19,1.15,20,0.722,21,1.15,23,1.113,25,0.178,26,0.494,27,0.928,29,2.228,32,0.666,36,2.813,37,0.553,44,0.781,46,0.454,47,0.006,48,0.618,49,0.155,50,0.359,52,0.791,53,1.275,60,0.643,61,0.553,62,1.839,63,3.128,64,2.111,65,3.254,66,4.049,71,0.364,73,0.359,74,1.129,77,1.026,81,0.676,85,0.062,90,0.099,91,0.687,103,1.895,104,1.895,105,2.133,106,0.582,113,1.548,114,1.717,115,0.809,116,1.15,117,1.341,118,0.676,119,1.526,120,0.809,121,1.408,122,0.758,123,0.784,124,0.771,125,0.809,126,0.758,127,0.809,128,0.771,129,0.784,130,0.809,131,0.784,132,0.809,133,0.784,134,0.809,135,0.758,136,1.728,137,0.809,138,0.784,139,0.809,140,0.796,141,0.758,142,1.216,143,0.898,144,1.188,145,0.758,146,1.188,147,0.746,148,1.9,149,0.758,150,1.373,151,0.809,152,0.784,153,1.188,154,0.758,155,1.256,156,0.758,157,0.758,158,0.784,159,0.809,160,0.758,161,0.809,162,0.784,163,0.722,164,1.341,165,0.784,166,0.809,167,0.771,168,1.548,169,0.809,170,0.784,171,0.809,172,0.784,173,0.771,174,0.809,175,0.771,176,0.809,177,0.771,178,0.758,179,0.809,180,0.771,181,1.119,182,0.809,183,0.771,184,0.809,185,0.771,186,0.809,187,0.758,188,0.784,189,0.771,190,0.883,191,0.809,192,0.758,193,0.809,194,0.771,195,0.771,196,0.809,197,0.771,198,1.408,199,0.734,200,0.809,201,0.784,202,1.188,203,0.809,204,0.784,205,0.809,206,0.771,207,0.809,208,0.758,209,1.341,210,0.758,211,0.809,212,0.758,213,0.796,214,1.845,215,0.758,216,0.758,217,0.784,218,0.809,219,1.454,220,1.886,221,0.746,222,0.809,223,0.758,224,0.771,225,0.758,226,0.758,227,0.809,228,0.784,229,0.809,230,1.188,231,0.784,232,0.809,233,0.784,234,0.809,235,0.771,236,0.809,237,0.746,238,0.758,239,0.784,240,0.809,241,0.784,242,0.809,243,1.095,244,1.385,245,1.188,246,0.758,247,0.796,248,1.138,249,0.734,250,0.771,251,0.796,252,0.771,253,0.809,254,0.771,255,0.809,256,0.758,257,0.809,258,0.771,259,0.796,260,0.809,261,0.004,262,0.004,289,1.234,382,1.305,491,4.279,493,4.704,499,5.906,521,3.355,522,3.034,695,1.354,696,1.602,701,1.191,702,2.067,730,1.355,731,1.149,734,1.382,758,1.305,836,1.845,838,2.474,858,5.906,864,4.229,934,2.721,1010,2.455,1268,3.081,1269,5.36,1270,4.524,1273,3.35,1277,3.799,1280,3.799,1282,1.895,1466,3.799,1958,6.001,2029,2.881,2032,4.917,2303,4.917,2477,2.881,2484,5.806,2493,3.081,3138,4.524,3141,5.826,3142,6.42,3143,4.524,3328,6.795,3329,7.2,3330,3.757,3331,3.757,3332,3.757,3333,3.757,3334,3.757,3335,3.757,3336,3.757,3337,3.757,3338,3.757,3339,3.757,3340,3.757,3341,3.757,3342,3.757,3343,3.757,3344,6.535,3345,3.757,3346,3.757,3347,3.757,3348,3.757,3349,3.757,3350,3.757,3351,3.757,3352,3.757,3353,5.515,3354,3.757,3355,3.757,3356,3.757,3357,3.757,3358,3.757,3359,3.757,3360,3.757,3361,3.757,3362,3.757,3363,3.757,3364,4.917,3365,4.917,3366,4.917,3367,5.515,3368,5.515,3369,5.515,3370,5.515,3371,4.917,3372,5.515,3373,5.515,3374,5.515,3375,3.757]],["title/components/SettingsIntegrationsPage.html",[0,0.205,221,0.949]],["body/components/SettingsIntegrationsPage.html",[0,0.294,1,0.829,2,1.207,3,0.073,4,0.062,5,0.815,6,0.929,7,0.884,8,0.884,9,0.057,13,1.737,14,2.684,15,0.739,16,1.707,17,1.91,18,0.776,19,1.226,20,0.789,21,1.226,23,1.187,25,0.195,26,0.527,27,1.307,32,0.711,36,2.931,37,0.604,44,0.806,46,0.83,47,0.006,48,0.635,49,0.31,50,0.656,52,0.825,53,1.406,68,2.766,71,0.357,73,0.392,77,1.094,81,0.739,83,1.095,85,0.068,86,0.636,90,0.108,106,1.064,111,1.453,115,0.884,116,1.226,117,1.41,118,0.739,119,1.591,120,0.884,121,1.481,122,0.829,123,0.856,124,0.842,125,0.884,126,0.829,127,0.884,128,0.842,129,0.856,130,0.884,131,0.856,132,0.884,133,0.856,134,0.884,135,0.829,136,0.856,137,0.884,138,0.856,139,0.884,140,0.87,141,0.829,142,1.278,143,0.958,144,1.267,145,0.829,146,1.267,147,0.815,148,1.938,149,0.829,150,0.68,151,0.884,152,0.856,153,1.267,154,0.829,155,1.321,156,0.829,157,0.829,158,0.856,159,0.884,160,0.829,161,0.884,162,0.856,163,0.789,164,1.41,165,0.856,166,0.884,167,0.842,168,1.603,169,0.884,170,0.856,171,0.884,172,0.856,173,0.842,174,0.884,175,0.842,176,0.884,177,0.842,178,0.829,179,0.884,180,0.842,181,1.177,182,0.884,183,0.842,184,0.884,185,0.842,186,0.884,187,0.829,188,0.856,189,0.842,190,1.101,191,0.884,192,0.829,193,0.884,194,0.842,195,0.842,196,0.884,197,0.842,198,1.481,199,0.802,200,0.884,201,0.856,202,1.267,203,0.884,204,0.856,205,0.884,206,0.842,207,0.884,208,0.829,209,0.842,210,0.829,211,0.884,212,0.829,213,0.87,214,1.615,215,0.829,216,0.829,217,0.856,218,0.884,219,0.829,220,1.918,221,1.49,222,0.884,223,0.829,224,0.842,225,0.829,226,0.829,227,0.884,228,0.856,229,0.884,230,1.267,231,0.856,232,0.884,233,0.856,234,0.884,235,0.842,236,0.884,237,0.815,238,0.829,239,0.856,240,0.884,241,0.856,242,0.884,243,1.168,244,1.457,245,1.267,246,0.829,247,0.87,248,0.715,249,0.802,250,0.842,251,0.87,252,0.842,253,0.884,254,0.842,255,0.884,256,0.829,257,0.884,258,0.842,259,0.87,260,0.884,261,0.004,262,0.004,382,1.425,695,1.008,701,1.301,708,1.637,758,1.425,782,1.827,1219,4.412,1246,2.409,1282,2.07,1318,2.497,1945,5.296,1957,3.366,1958,6.165,1959,6.528,1960,3.659,1961,5.243,1962,2.409,1963,2.409,1964,2.497,1965,5.755,1966,5.243,1967,6.127,1968,6.127,1969,3.659,1970,6.691,1971,3.659,1972,3.659,1973,3.366,1974,3.366,1975,3.659,1976,5.243,1977,3.659,1978,3.659,1979,3.147,1980,5.243,1981,3.366,1982,3.366,1983,3.659,1984,3.659,1985,3.659,2404,5.243,2421,3.659,3376,5.88,3377,5.88,3378,4.104,3379,4.104,3380,4.104,3381,4.104]],["title/components/SettingsLocalizationPage.html",[0,0.205,223,0.965]],["body/components/SettingsLocalizationPage.html",[0,0.283,1,0.772,2,1.147,3,0.068,4,0.058,5,0.76,6,0.866,7,0.824,8,0.824,9,0.053,15,0.689,16,1.702,17,1.904,18,0.724,19,1.166,20,0.735,21,1.166,23,1.128,25,0.182,26,0.501,27,0.938,29,2.251,32,0.675,37,0.971,44,0.786,47,0.006,48,0.706,49,0.158,52,0.614,53,0.99,60,1.131,61,0.971,62,1.683,63,3.161,65,2.899,66,3.083,71,0.345,73,0.365,74,1.15,77,1.04,81,0.689,85,0.063,90,0.101,113,1.569,114,1.74,115,0.824,116,1.166,117,1.355,118,0.689,119,1.54,120,0.824,121,1.423,122,0.772,123,0.798,124,0.785,125,0.824,126,0.772,127,0.824,128,0.785,129,0.798,130,0.824,131,0.798,132,0.824,133,0.798,134,0.824,135,0.772,136,0.798,137,0.824,138,0.798,139,0.824,140,0.811,141,0.772,142,1.229,143,0.911,144,1.204,145,0.772,146,1.204,147,0.76,148,1.908,149,0.772,150,0.634,151,0.824,152,0.798,153,1.204,154,0.772,155,1.269,156,0.772,157,0.772,158,0.798,159,0.824,160,0.772,161,0.824,162,0.798,163,0.735,164,1.355,165,0.798,166,0.824,167,0.785,168,1.56,169,0.824,170,0.798,171,0.824,172,0.798,173,0.785,174,0.824,175,0.785,176,0.824,177,0.785,178,0.772,179,0.824,180,0.785,181,1.131,182,0.824,183,0.785,184,0.824,185,0.785,186,0.824,187,0.772,188,0.798,189,0.785,190,0.895,191,0.824,192,0.772,193,0.824,194,0.785,195,0.785,196,0.824,197,0.785,198,1.423,199,0.748,200,0.824,201,0.798,202,1.204,203,0.824,204,0.798,205,0.824,206,0.785,207,0.824,208,0.772,209,0.785,210,0.772,211,0.824,212,0.772,213,0.811,214,1.092,215,0.772,216,0.772,217,0.798,218,0.824,219,0.772,220,1.927,221,0.76,222,0.824,223,1.466,224,1.585,225,0.772,226,0.772,227,0.824,228,0.798,229,0.824,230,1.204,231,0.798,232,0.824,233,0.798,234,0.824,235,0.785,236,0.824,237,0.76,238,0.772,239,0.798,240,0.824,241,0.798,242,0.824,243,1.11,244,1.4,245,1.204,246,0.772,247,0.811,248,1.15,249,0.748,250,0.785,251,0.811,252,0.785,253,0.824,254,0.785,255,0.824,256,0.772,257,0.824,258,0.785,259,0.811,260,0.824,261,0.004,262,0.004,289,1.257,695,1.373,696,1.623,701,1.213,708,1.526,730,1.38,731,1.171,734,1.408,758,1.329,795,3.532,804,5.261,805,4.048,836,1.879,838,2.519,858,5.957,934,2.771,996,2.378,1202,3.681,1809,3.995,1958,6.035,2933,5.838,3382,6.834,3383,3.826,3384,6.604,3385,5.59,3386,6.604,3387,5.417,3388,7.263,3389,3.826,3390,3.826,3391,3.826,3392,5.59,3393,5.59,3394,5.59,3395,5.59,3396,5.59,3397,5.59,3398,5.59,3399,5.59,3400,3.826,3401,4.048,3402,5.59,3403,3.826,3404,6.476,3405,5.59,3406,6.476,3407,4.984,3408,6.476,3409,5.59,3410,5.59,3411,5.59,3412,6.476,3413,5.59,3414,5.59,3415,4.984,3416,4.286,3417,3.826,3418,3.826,3419,3.826,3420,3.826,3421,5.59,3422,5.59]],["title/modules/SettingsModule.html",[408,1.989,3423,3.666]],["body/modules/SettingsModule.html",[3,0.111,4,0.094,9,0.085,47,0.006,71,0.466,73,0.59,74,1.858,85,0.102,90,0.163,183,1.911,189,1.911,219,1.881,221,1.85,223,1.881,225,1.881,226,1.881,261,0.005,262,0.005,410,2.689,411,4.397,417,5.289,418,4.711,419,3.299,420,2.886,422,4.894,423,3.616,425,3.907,471,5.1,472,3.906,473,5.609,480,4.477,1221,5.511,1802,5.069,1959,4.74,2400,5.511,2461,5.511,3328,5.069,3382,5.069,3423,7.713,3424,5.511,3425,5.511,3426,5.511,3427,6.747,3428,6.181,3429,6.181,3430,6.181,3431,6.181,3432,6.181,3433,7.905,3434,5.511,3435,5.511,3436,5.069,3437,5.511,3438,6.181]],["title/components/SettingsPage.html",[0,0.205,225,0.965]],["body/components/SettingsPage.html",[0,0.295,1,0.833,2,1.211,3,0.074,4,0.062,5,0.819,6,0.933,7,0.889,8,0.889,9,0.057,13,1.744,14,2.692,15,0.742,16,1.707,17,1.912,18,0.78,19,1.231,20,0.793,21,1.231,23,1.191,25,0.196,26,0.529,32,0.713,36,2.938,37,1.014,44,0.807,47,0.006,48,0.561,52,0.453,53,0.73,60,1.288,61,1.106,71,0.327,73,0.394,77,1.098,81,0.742,85,0.068,90,0.109,110,2.036,111,1.46,112,2.977,113,2.111,114,1.838,115,0.889,116,1.231,117,1.414,118,0.742,119,1.909,120,0.889,121,1.485,122,0.833,123,0.86,124,0.846,125,0.889,126,0.833,127,0.889,128,0.846,129,0.86,130,0.889,131,0.86,132,0.889,133,0.86,134,0.889,135,0.833,136,0.86,137,0.889,138,0.86,139,0.889,140,0.874,141,0.833,142,1.282,143,0.961,144,1.271,145,0.833,146,1.271,147,0.819,148,1.94,149,0.833,150,0.683,151,0.889,152,0.86,153,1.271,154,0.833,155,1.325,156,0.833,157,0.833,158,0.86,159,0.889,160,0.833,161,0.889,162,0.86,163,0.793,164,1.414,165,0.86,166,0.889,167,0.846,168,1.607,169,0.889,170,0.86,171,0.889,172,0.86,173,0.846,174,0.889,175,0.846,176,0.889,177,0.846,178,0.833,179,0.889,180,0.846,181,1.18,182,0.889,183,0.846,184,0.889,185,0.846,186,0.889,187,0.833,188,0.86,189,0.846,190,0.945,191,0.889,192,0.833,193,0.889,194,0.846,195,0.846,196,0.889,197,0.846,198,1.485,199,0.806,200,0.889,201,0.86,202,1.271,203,0.889,204,0.86,205,0.889,206,0.846,207,0.889,208,0.833,209,0.846,210,0.833,211,0.889,212,0.833,213,0.874,214,1.47,215,0.833,216,0.833,217,0.86,218,0.889,219,0.833,220,1.778,221,0.819,222,0.889,223,0.833,224,1.414,225,1.518,226,0.833,227,0.889,228,0.86,229,1.271,230,1.271,231,0.86,232,0.889,233,0.86,234,0.889,235,0.846,236,0.889,237,0.819,238,0.833,239,0.86,240,0.889,241,0.86,242,0.889,243,1.172,244,1.461,245,1.271,246,0.833,247,0.874,248,1.2,249,0.806,250,0.846,251,0.874,252,0.846,253,0.889,254,0.846,255,0.889,256,0.833,257,0.889,258,0.846,259,0.874,260,0.889,261,0.004,262,0.004,318,1.517,404,2.517,405,2.491,406,2.456,407,2.139,420,1.926,524,2.139,605,1.716,606,1.488,607,1.611,608,1.716,695,1.449,696,1.714,697,2.129,701,1.87,707,1.716,708,1.645,711,2.026,716,1.794,717,2.606,719,1.794,727,1.488,728,1.517,729,2.171,730,1.488,731,2.108,734,1.517,740,3.063,741,3.13,756,3.59,759,1.794,762,2.139,763,1.794,770,3.15,811,2.342,812,2.404,813,2.139,818,3.163,819,2.606,825,2.342,826,2.342,833,2.081,840,2.987,866,2.716,894,2.139,901,2.509,1965,4.526,2247,3.677,3439,4.125,3440,6.891,3441,5.901,3442,8.279,3443,8.279,3444,8.279,3445,7.382,3446,5.901,3447,4.125,3448,4.125,3449,4.125,3450,4.125,3451,4.84,3452,4.125,3453,4.125,3454,4.125,3455,4.125]],["title/modules/SettingsRoutingModule.html",[408,1.989,3427,3.463]],["body/modules/SettingsRoutingModule.html",[0,0.4,3,0.12,4,0.102,9,0.093,47,0.007,71,0.457,73,0.641,85,0.111,90,0.177,93,1.495,190,1.076,214,1.312,219,1.645,221,1.619,223,1.645,224,1.378,225,1.645,226,1.645,261,0.005,262,0.005,408,2.794,410,2.921,423,3.135,425,4.111,436,5.151,437,5.309,438,2.128,445,5.909,451,5.508,454,5.903,464,4.243,480,4.864,492,4.625,1959,5.149,1965,5.149,3328,5.508,3382,5.508,3427,5.903,3433,8.137,3434,5.987,3435,5.987,3436,5.508,3437,5.987,3451,5.508,3456,6.715,3457,6.715]],["title/components/SettingsSessionsPage.html",[0,0.205,226,0.965]],["body/components/SettingsSessionsPage.html",[0,0.274,1,0.735,2,1.105,3,0.065,4,0.055,5,0.723,6,0.823,7,0.784,8,0.784,9,0.05,13,1.591,14,2.505,15,0.655,16,1.699,17,1.9,18,0.688,19,1.123,20,0.699,21,1.123,23,1.087,25,0.173,26,0.482,27,0.911,32,0.651,36,2.769,37,0.535,44,0.772,46,0.857,47,0.006,48,0.628,49,0.347,50,0.677,52,0.779,53,0.954,62,0.759,68,2.146,71,0.377,73,0.347,77,1.002,81,0.655,83,0.971,85,0.06,88,1.523,90,0.096,106,1.227,110,1.591,111,1.288,113,1.021,114,1.133,115,0.784,116,1.123,117,1.316,118,0.655,119,1.738,120,0.784,121,1.382,122,0.735,123,0.759,124,0.747,125,0.784,126,0.735,127,0.784,128,0.747,129,0.759,130,0.784,131,0.759,132,0.784,133,0.759,134,0.784,135,0.735,136,0.759,137,0.784,138,0.759,139,0.784,140,0.771,141,0.735,142,1.193,143,0.878,144,1.161,145,0.735,146,1.161,147,0.723,148,1.885,149,0.735,150,0.603,151,0.784,152,0.759,153,1.161,154,0.735,155,1.233,156,0.735,157,0.735,158,0.759,159,0.784,160,0.735,161,0.784,162,0.759,163,0.699,164,1.316,165,0.759,166,0.784,167,0.747,168,1.528,169,0.784,170,0.759,171,0.784,172,0.759,173,1.105,174,0.784,175,0.747,176,0.784,177,0.747,178,0.735,179,0.784,180,0.747,181,1.099,182,0.784,183,0.747,184,0.784,185,0.747,186,0.784,187,0.735,188,0.759,189,0.747,190,1.027,191,0.784,192,0.735,193,0.784,194,0.747,195,0.747,196,0.784,197,0.747,198,1.382,199,0.711,200,0.784,201,0.759,202,1.161,203,0.784,204,0.759,205,0.784,206,0.747,207,0.784,208,0.735,209,0.747,210,0.735,211,0.784,212,0.735,213,0.771,214,1.053,215,0.735,216,0.735,217,0.759,218,0.784,219,0.735,220,1.873,221,0.723,222,0.784,223,0.735,224,0.747,225,0.735,226,1.431,227,0.784,228,0.759,229,0.784,230,1.161,231,0.759,232,0.784,233,0.759,234,0.784,235,0.747,236,0.784,237,0.723,238,0.735,239,0.759,240,0.784,241,0.759,242,0.784,243,1.07,244,1.36,245,1.161,246,0.735,247,0.771,248,0.634,249,0.711,250,0.747,251,0.771,252,0.747,253,0.784,254,0.747,255,0.784,256,0.735,257,0.784,258,0.747,259,0.771,260,0.784,261,0.003,262,0.003,265,0.837,315,1.146,382,1.264,404,1.218,405,1.99,406,1.514,420,2.515,606,1.313,695,1.946,696,2.301,698,1.658,699,1.482,701,2.033,703,1.863,707,2.242,708,1.451,723,2.578,727,1.313,728,1.339,729,1.339,730,1.313,731,1.113,732,1.887,733,1.835,734,1.339,740,2.612,741,2.242,746,1.942,752,1.339,757,1.174,758,2.228,760,2.299,769,2.066,777,4.131,786,4.131,795,4.053,801,2.79,802,2.79,838,2.396,901,3.277,912,2.79,1280,3.711,1338,2.506,1611,2.79,1636,2.984,1901,4.131,1958,5.94,1992,5.804,2091,4.803,2239,3.162,2248,2.984,2287,2.79,2289,3.244,2323,2.984,2411,2.79,2511,3.244,2604,3.244,3318,5.815,3324,2.79,3416,2.79,3436,6.726,3451,6.208,3458,3.639,3459,6.414,3460,5.387,3461,6.414,3462,5.387,3463,5.387,3464,3.639,3465,5.387,3466,5.387,3467,5.387,3468,7.09,3469,3.639,3470,3.639,3471,5.387,3472,3.639,3473,3.639,3474,5.387,3475,3.639,3476,3.639,3477,3.639,3478,3.639,3479,3.639,3480,3.639,3481,3.639,3482,3.639,3483,3.639,3484,3.639,3485,3.639,3486,3.639,3487,3.639,3488,3.639,3489,3.639,3490,6.414,3491,3.639,3492,3.639,3493,3.639,3494,3.639,3495,5.387,3496,7.09,3497,5.387,3498,5.387,3499,5.387,3500,5.387,3501,2.984]],["title/components/SidebarNavigationComponent.html",[0,0.205,228,0.997]],["body/components/SidebarNavigationComponent.html",[0,0.298,1,0.847,2,1.225,3,0.075,4,0.063,5,0.833,6,0.949,7,0.904,8,0.904,9,0.058,15,0.755,16,1.708,17,1.912,18,0.793,19,1.246,20,0.806,21,1.246,23,1.206,25,0.199,26,0.535,27,1.077,31,4.58,32,0.722,37,0.617,44,0.739,46,0.507,47,0.006,48,0.598,49,0.287,50,0.664,52,0.461,53,0.743,68,2.328,71,0.381,73,0.4,77,1.49,81,0.755,85,0.069,90,0.111,91,0.768,112,2.116,113,1.676,114,1.306,115,0.904,116,1.246,117,1.427,118,0.755,119,1.698,120,0.904,121,1.499,122,0.847,123,0.875,124,0.861,125,0.904,126,0.847,127,0.904,128,0.861,129,0.875,130,0.904,131,0.875,132,0.904,133,0.875,134,0.904,135,0.847,136,0.875,137,0.904,138,0.875,139,0.904,140,0.889,141,0.847,142,1.549,143,0.973,144,1.287,145,0.847,146,1.287,147,0.833,148,1.947,149,0.847,150,0.695,151,0.904,152,0.875,153,1.287,154,0.847,155,1.337,156,0.847,157,0.847,158,0.875,159,0.904,160,0.847,161,0.904,162,0.875,163,0.806,164,1.427,165,0.875,166,0.904,167,0.861,168,1.729,169,0.904,170,0.875,171,0.904,172,0.875,173,0.861,174,0.904,175,0.861,176,0.904,177,0.861,178,0.847,179,0.904,180,0.861,181,1.191,182,0.904,183,0.861,184,0.904,185,0.861,186,0.904,187,0.847,188,0.875,189,0.861,190,0.957,191,0.904,192,0.847,193,0.904,194,0.861,195,0.861,196,0.904,197,0.861,198,1.499,199,0.82,200,0.904,201,0.875,202,1.287,203,0.904,204,0.875,205,0.904,206,0.861,207,0.904,208,0.847,209,0.861,210,0.847,211,0.904,212,0.847,213,0.889,214,1.167,215,0.847,216,0.847,217,0.875,218,0.904,219,0.847,220,1.67,221,0.833,222,0.904,223,0.847,224,0.861,225,0.847,226,0.847,227,0.904,228,1.581,229,1.887,230,1.287,231,0.875,232,0.904,233,0.875,234,0.904,235,0.861,236,0.904,237,0.833,238,0.847,239,0.875,240,0.904,241,0.875,242,0.904,243,1.186,244,1.474,245,1.287,246,0.847,247,1.698,248,0.73,249,0.82,250,0.861,251,0.889,252,0.861,253,0.904,254,0.861,255,0.904,256,0.847,257,0.904,258,0.861,259,0.889,260,0.904,261,0.004,262,0.004,289,1.378,315,0.863,382,1.457,396,3.726,404,2.536,405,1.676,406,1.745,438,1.329,454,3.038,695,1.03,696,2.02,697,2.155,698,1.911,699,1.708,701,1.329,703,2.02,711,3.416,712,2.958,716,1.824,719,1.824,737,1.745,738,1.708,739,2.462,762,2.175,763,1.824,779,2.241,812,1.708,820,3.013,887,2.551,891,3.74,950,2.762,951,2.462,952,2.65,953,2.239,954,2.307,956,3.933,999,2.175,1148,2.551,1149,4.2,1252,5.325,1338,2.889,1414,4.898,1486,4.58,1527,2.889,1545,2.551,2581,7.141,2911,3.74,2913,3.74,3502,8.01,3503,3.74,3504,5.325,3505,6.201,3506,5.325,3507,7.579,3508,4.194,3509,4.194,3510,4.194,3511,4.194,3512,4.194,3513,3.44,3514,3.44,3515,4.194,3516,4.194,3517,4.194,3518,4.194]],["title/interfaces/SinglePersonSchedule.html",[86,0.74,3519,3.921]],["body/interfaces/SinglePersonSchedule.html",[3,0.132,4,0.112,9,0.102,25,0.352,26,0.774,47,0.006,49,0.377,71,0.352,85,0.143,86,1.147,216,1.495,261,0.005,262,0.005,263,2.347,659,3.608,694,5.533,782,4.072,2722,6.492,3519,7.503,3520,6.602,3521,6.602]],["title/components/SnackbarComponent.html",[0,0.205,231,0.997]],["body/components/SnackbarComponent.html",[0,0.275,1,0.736,2,1.107,3,0.065,4,0.055,5,0.724,6,0.825,7,0.786,8,0.786,9,0.05,13,1.594,14,2.509,15,0.656,16,1.699,17,1.9,18,0.69,19,1.125,20,0.701,21,1.125,23,1.089,25,0.173,26,0.483,27,1.197,32,0.652,36,2.772,37,0.536,44,0.876,46,0.652,47,0.006,48,0.67,49,0.312,50,0.515,52,0.706,53,1.137,57,1.396,60,1.298,61,1.114,71,0.337,73,0.348,77,1.004,81,0.656,85,0.06,90,0.096,106,0.835,110,1.077,111,1.91,113,1.514,115,0.786,116,1.125,117,1.318,118,0.656,119,1.824,120,0.786,121,1.384,122,0.736,123,0.761,124,0.748,125,0.786,126,0.736,127,0.786,128,0.748,129,0.761,130,0.786,131,0.761,132,0.786,133,0.761,134,0.786,135,0.736,136,0.761,137,0.786,138,0.761,139,0.786,140,0.773,141,0.736,142,1.195,143,0.879,144,1.162,145,0.736,146,1.162,147,0.724,148,1.886,149,0.736,150,0.604,151,0.786,152,0.761,153,1.162,154,0.736,155,1.234,156,0.736,157,0.736,158,0.761,159,0.786,160,0.736,161,0.786,162,0.761,163,0.701,164,1.318,165,0.761,166,0.786,167,0.748,168,1.767,169,0.786,170,0.761,171,0.786,172,0.761,173,0.748,174,0.786,175,0.748,176,0.786,177,0.748,178,0.736,179,0.786,180,0.748,181,1.1,182,0.786,183,0.748,184,0.786,185,0.748,186,0.786,187,0.736,188,0.761,189,0.748,190,0.864,191,0.786,192,0.736,193,0.786,194,0.748,195,0.748,196,0.786,197,0.748,198,1.384,199,0.713,200,0.786,201,0.761,202,1.162,203,0.786,204,0.761,205,0.786,206,0.748,207,0.786,208,0.736,209,0.748,210,0.736,211,0.786,212,0.736,213,0.773,214,1.054,215,0.736,216,0.736,217,0.761,218,0.786,219,0.736,220,1.58,221,0.724,222,0.786,223,0.736,224,0.748,225,0.736,226,0.736,227,0.786,228,0.761,229,0.786,230,1.162,231,1.48,232,0.786,233,0.761,234,1.384,235,0.748,236,0.786,237,0.724,238,0.736,239,0.761,240,0.786,241,0.761,242,0.786,243,1.072,244,1.361,245,1.162,246,0.736,247,0.773,248,0.635,249,0.713,250,0.748,251,0.773,252,0.748,253,0.786,254,0.748,255,0.786,256,0.736,257,0.786,258,0.748,259,0.773,260,0.786,261,0.003,262,0.003,268,3.703,276,4.138,289,1.198,307,2.401,315,1.244,317,1.703,318,2.362,382,1.267,404,1.806,405,2.492,420,1.703,605,1.517,606,1.316,607,1.424,608,1.517,695,1.577,696,1.059,697,1.947,701,1.71,703,1.865,706,2.07,707,1.517,708,2.152,712,3.374,716,1.586,719,2.347,731,1.651,737,1.517,738,1.485,740,2.616,741,2.672,746,3.788,752,1.985,758,1.874,759,1.586,769,2.07,770,1.946,779,2.024,812,2.197,813,1.891,820,2.722,833,1.839,875,3.282,884,4.425,893,2.512,894,2.798,960,4.317,1064,2.402,1345,5.012,1421,4.167,1471,4.925,1832,2.07,1833,2.968,2222,2.796,2236,2.796,2953,2.991,3522,3.647,3523,6.422,3524,5.395,3525,6.422,3526,7.931,3527,5.395,3528,5.267,3529,5.395,3530,6.422,3531,3.251,3532,5.745,3533,3.647,3534,3.647,3535,4.811,3536,3.647,3537,3.647,3538,3.647,3539,5.395,3540,3.647,3541,3.647,3542,5.395,3543,3.647,3544,5.395,3545,3.647,3546,3.647,3547,3.647,3548,2.991,3549,2.641,3550,3.647,3551,3.647,3552,3.647,3553,3.647,3554,3.647,3555,2.991,3556,3.647,3557,3.647,3558,3.647,3559,3.647,3560,3.647,3561,3.647,3562,3.647,3563,3.647,3564,3.647,3565,3.647,3566,3.647,3567,3.647,3568,3.647,3569,5.395,3570,5.395,3571,5.395]],["title/interfaces/SnackbarData.html",[86,0.74,3549,3.463]],["body/interfaces/SnackbarData.html",[3,0.131,4,0.111,9,0.101,25,0.349,26,0.77,47,0.006,49,0.376,85,0.121,86,1.138,88,1.753,261,0.005,262,0.005,263,2.33,268,4.39,315,1.318,405,2.639,960,5.548,3528,7.712,3549,6.23,3555,7.48,3572,7.35]],["title/components/SnackbarOutletComponent.html",[0,0.205,233,0.997]],["body/components/SnackbarOutletComponent.html",[0,0.306,1,0.892,2,1.271,3,0.079,4,0.067,5,0.877,6,1,7,0.952,8,0.952,9,0.061,15,0.795,16,1.712,17,1.917,18,0.835,19,1.292,20,0.849,21,1.292,23,1.251,25,0.294,26,0.555,27,1.017,32,0.749,37,0.65,44,0.697,46,0.749,47,0.006,48,0.632,49,0.256,50,0.591,52,0.485,60,0.757,61,0.65,71,0.34,73,0.422,77,1.153,81,0.795,85,0.073,88,1.375,90,0.116,106,0.684,110,1.305,111,1.564,112,2.228,115,0.952,116,1.292,117,1.468,118,0.795,119,1.644,120,0.952,121,1.542,122,0.892,123,0.921,124,0.906,125,0.952,126,0.892,127,0.952,128,0.906,129,0.921,130,0.952,131,0.921,132,0.952,133,0.921,134,0.952,135,0.892,136,0.921,137,0.952,138,0.921,139,0.952,140,0.936,141,0.892,142,1.331,143,1.009,144,1.335,145,0.892,146,1.335,147,0.877,148,1.969,149,0.892,150,0.732,151,0.952,152,0.921,153,1.335,154,0.892,155,1.375,156,0.892,157,0.892,158,0.921,159,0.952,160,0.892,161,0.952,162,0.921,163,0.849,164,1.468,165,0.921,166,0.952,167,0.906,168,1.649,169,0.952,170,0.921,171,0.952,172,0.921,173,0.906,174,0.952,175,0.906,176,0.952,177,0.906,178,0.892,179,0.952,180,0.906,181,1.226,182,0.952,183,0.906,184,0.952,185,0.906,186,0.952,187,0.892,188,0.921,189,0.906,190,0.992,191,0.952,192,0.892,193,0.952,194,0.906,195,0.906,196,0.952,197,0.906,198,1.542,199,0.863,200,0.952,201,0.921,202,1.335,203,0.952,204,0.921,205,0.952,206,0.906,207,0.952,208,0.892,209,0.906,210,0.892,211,0.952,212,0.892,213,0.936,214,1.211,215,0.892,216,0.892,217,0.921,218,0.952,219,0.892,220,1.703,221,0.877,222,0.952,223,0.892,224,0.906,225,0.892,226,0.892,227,0.952,228,0.921,229,0.952,230,1.335,231,0.921,232,0.952,233,1.618,234,1.912,235,0.906,236,0.952,237,0.877,238,0.892,239,0.921,240,0.952,241,0.921,242,0.952,243,1.23,244,1.517,245,1.335,246,0.892,247,0.936,248,0.769,249,0.863,250,0.906,251,0.936,252,0.906,253,0.952,254,0.906,255,0.952,256,0.892,257,0.952,258,0.906,259,0.936,260,0.952,261,0.004,262,0.004,289,1.452,315,1.121,382,1.534,397,4.487,695,1.085,696,2.078,698,2.013,699,1.799,701,1.4,703,1.283,706,2.508,715,2.792,723,2.115,725,2.909,727,1.594,728,1.625,734,1.625,759,2.695,812,1.799,820,2.228,833,2.228,836,2.17,1285,3.939,1286,6.38,1287,5.524,1298,3.939,1471,4.751,1666,2.909,1839,3.2,2149,3.043,2584,6.915,3531,3.939,3532,6.133,3548,3.623,3549,5.618,3573,7.756,3574,6.38,3575,6.196,3576,6.196,3577,6.196,3578,4.418,3579,6.196,3580,4.418,3581,4.418,3582,4.418]],["title/injectables/SnackbarService.html",[329,1.794,3532,3.463]],["body/injectables/SnackbarService.html",[3,0.109,4,0.093,9,0.084,25,0.291,26,0.689,27,1.392,28,3.348,32,0.93,37,1.238,44,0.887,46,0.93,47,0.006,48,0.574,49,0.317,50,0.735,52,0.925,53,1.491,60,1.318,61,1.132,62,1.605,71,0.433,73,0.584,83,1.633,85,0.101,88,1.618,90,0.161,93,1.966,261,0.005,262,0.005,268,3.593,315,1.343,329,2.888,331,3.174,333,3.203,380,3.174,381,3.006,405,2.479,519,4.432,782,4.052,960,5.538,1293,6.862,1345,4.864,1394,3.593,1418,7.877,1458,5.456,1459,6.906,1471,5.902,3528,7.246,3532,5.574,3535,6.862,3549,4.432,3555,6.906,3574,7.507,3583,6.12,3584,6.12,3585,7.696,3586,6.12,3587,6.12,3588,7.696,3589,6.12,3590,7.696,3591,6.12,3592,6.12,3593,7.696,3594,6.12,3595,6.12,3596,6.12,3597,6.12]],["title/interfaces/Status.html",[81,0.861,86,0.74]],["body/interfaces/Status.html",[3,0.109,4,0.093,9,0.084,25,0.291,26,0.689,47,0.006,48,0.693,49,0.375,71,0.366,81,1.784,85,0.127,86,1.41,88,1.618,111,2.724,181,1.67,261,0.005,262,0.005,263,1.94,265,1.407,285,2.699,300,2.355,308,4.136,314,5.902,315,1.217,404,2.576,405,2.721,579,4.432,694,4.518,695,1.89,699,2.492,714,6.313,726,5.068,757,2.999,980,2.662,1373,5.302,2411,6.775,2715,5.068,2716,5.574,3598,5.456,3599,6.862,3600,8.506,3601,8.285,3602,6.775,3603,6.313,3604,5.902,3605,5.902,3606,5.902,3607,5.456,3608,5.456]],["title/pipes/StatusColorPipe.html",[1770,2.08,3609,3.666]],["body/pipes/StatusColorPipe.html",[3,0.126,4,0.106,9,0.097,13,2.073,15,1.263,32,0.848,44,0.684,46,0.848,47,0.006,48,0.667,49,0.289,50,0.67,52,0.771,60,1.202,61,1.231,71,0.398,73,0.67,81,1.263,82,4.621,85,0.116,90,0.185,106,1.434,261,0.005,262,0.005,712,2.985,766,5.382,1666,5.89,1770,3.641,1832,3.985,1833,5.283,2713,6.257,2716,6.062,3603,6.865,3609,6.419,3610,4.435,3611,8.37,3612,7.018,3613,8.37,3614,5.766,3615,7.018,3616,5.766,3617,7.018,3618,8.37]],["title/components/StatusLabelComponent.html",[0,0.205,235,0.981]],["body/components/StatusLabelComponent.html",[0,0.235,1,0.571,2,0.912,3,0.051,4,0.043,5,0.562,6,0.64,7,0.61,8,0.61,9,0.039,15,0.51,16,1.679,17,1.874,18,0.535,19,0.927,20,0.544,21,0.927,23,0.898,25,0.134,26,0.398,27,1.314,29,1.872,32,0.537,37,0.416,44,0.906,46,0.94,47,0.006,48,0.633,49,0.367,50,0.743,52,0.9,53,1.45,57,1.083,60,1.37,61,1.204,62,1.669,64,1.083,71,0.37,73,0.27,74,0.851,77,0.827,81,1.647,82,1.864,83,0.755,85,0.047,88,1.38,89,2.19,90,0.075,91,0.518,106,0.964,110,1.999,113,1.747,114,1.71,115,0.61,116,0.927,117,1.388,118,0.51,119,1.799,120,0.61,121,1.183,122,0.571,123,0.59,124,0.581,125,0.61,126,0.571,127,0.61,128,0.581,129,0.59,130,0.61,131,0.59,132,0.61,133,0.59,134,0.61,135,0.571,136,0.59,137,0.61,138,0.59,139,0.61,140,1.736,141,0.571,142,1.022,143,0.724,144,0.958,145,0.571,146,0.958,147,0.562,148,1.764,149,0.571,150,0.469,151,0.61,152,0.59,153,0.958,154,0.571,155,1.056,156,0.571,157,0.571,158,0.59,159,0.61,160,0.571,161,0.61,162,0.59,163,0.544,164,1.127,165,0.59,166,0.61,167,0.581,168,1.685,169,0.61,170,0.59,171,0.61,172,0.59,173,0.581,174,0.61,175,0.581,176,0.61,177,0.581,178,0.571,179,0.61,180,0.581,181,0.941,182,0.61,183,0.581,184,0.61,185,0.581,186,0.61,187,0.571,188,0.59,189,0.581,190,0.712,191,0.61,192,0.571,193,0.61,194,0.581,195,0.581,196,0.61,197,0.581,198,1.183,199,0.553,200,0.61,201,0.59,202,0.958,203,0.61,204,0.59,205,0.61,206,0.581,207,0.61,208,0.571,209,0.581,210,0.571,211,0.61,212,0.571,213,0.6,214,0.869,215,0.571,216,0.571,217,0.59,218,0.61,219,0.571,220,1.411,221,0.562,222,0.61,223,0.571,224,0.581,225,0.571,226,0.571,227,0.61,228,0.59,229,0.61,230,0.958,231,0.59,232,0.61,233,0.59,234,0.61,235,1.277,236,0.61,237,0.562,238,0.571,239,0.59,240,0.61,241,0.59,242,0.61,243,0.883,244,1.522,245,0.958,246,0.571,247,0.6,248,0.493,249,0.553,250,0.581,251,0.943,252,0.581,253,0.61,254,0.581,255,0.61,256,0.571,257,0.61,258,0.581,259,0.6,260,0.61,261,0.003,262,0.003,265,1.431,267,1.106,285,1.965,289,0.93,291,2.815,300,0.866,303,3.225,308,1.26,318,2.021,335,2.771,349,2.306,368,2.306,404,2.264,405,2.342,406,2.59,434,2.705,552,4.288,555,4.409,571,3.341,620,1.722,659,1.702,663,2.076,682,1.789,691,3.648,695,1.349,696,1.291,697,2.246,700,2.611,701,1.41,703,1.291,704,2.525,708,2.482,712,1.892,716,1.231,717,1.789,719,1.231,723,2.629,725,1.864,727,1.605,728,1.636,729,2.29,730,1.605,731,1.36,734,1.041,737,1.178,738,1.153,740,2.925,741,2.988,756,2.705,758,0.983,761,1.322,763,1.231,770,2.374,779,1.669,782,2.445,794,1.95,811,1.607,825,1.607,826,1.607,849,2.932,861,2.848,874,1.557,875,1.722,893,1.95,947,1.662,980,1.934,984,4.329,985,2.525,986,2.525,987,2.525,988,2.525,989,2.525,990,4.077,991,1.662,992,1.607,993,2.374,994,1.607,995,1.607,996,1.204,997,1.557,998,1.468,999,1.468,1000,1.607,1001,1.662,1002,2.525,1003,3.534,1004,2.027,1005,3.95,1006,1.607,1007,2.932,1008,1.557,1009,2.525,1010,1.979,1011,3.228,1012,1.511,1013,1.607,1014,2.525,1015,3.437,1016,1.607,1017,1.662,1018,1.607,1019,1.607,1020,1.607,1021,1.662,1022,2.525,1023,1.607,1024,1.607,1025,1.722,1026,1.662,1027,1.662,1028,1.662,1029,1.662,1032,1.722,1033,1.662,1042,1.789,1064,1.979,1070,1.722,1095,2.928,1096,3.41,1097,3.978,1318,1.722,1345,3.933,1360,4.508,1394,3.225,1421,3.424,1457,1.557,1721,2.171,1770,1.231,1836,3.471,1889,1.864,1890,1.864,1891,1.789,2058,2.05,2167,4.947,2168,3.41,2169,4.212,2182,3.221,2186,3.648,2192,2.05,2194,2.524,2196,2.322,2199,2.524,2200,2.322,2201,2.524,2202,2.171,2215,2.524,2216,2.524,2217,2.322,2218,2.171,2220,2.322,2221,2.05,2222,4.212,2223,2.322,2224,2.322,2225,2.322,2226,2.322,2227,3.965,2235,3.41,2236,2.171,2244,2.322,2468,2.322,2469,2.322,2694,2.322,2953,2.322,3144,2.171,3188,3.965,3514,2.322,3619,9.032,3620,8.053,3621,2.831,3622,5.493,3623,4.447,3624,7.133,3625,5.493,3626,4.447,3627,2.831,3628,4.447,3629,2.831,3630,2.831,3631,4.897,3632,2.831,3633,2.831,3634,2.831,3635,4.447,3636,2.831,3637,2.831,3638,2.831,3639,2.831,3640,2.831,3641,2.831,3642,2.831,3643,2.831,3644,2.831,3645,2.831,3646,2.831,3647,2.831,3648,2.831,3649,2.831,3650,2.831,3651,2.831,3652,4.447]],["title/injectables/StatusService.html",[329,1.794,556,3.293]],["body/injectables/StatusService.html",[3,0.074,4,0.063,9,0.057,25,0.198,27,1.375,32,0.717,37,0.612,44,0.852,46,1.056,47,0.007,48,0.652,49,0.36,50,0.834,52,1.013,62,1.238,68,3.274,71,0.394,73,0.397,81,1.822,83,1.11,85,0.069,88,1.876,89,3.677,90,0.11,91,0.761,93,1.681,106,1.377,129,1.575,142,1.715,143,1.47,150,1.251,181,1.186,190,1.33,261,0.004,262,0.004,265,1.836,315,0.858,321,3.546,329,2.227,330,4.567,331,2.157,340,5.122,380,2.157,381,2.043,382,1.445,501,2.53,520,2.865,524,3.079,555,5.017,556,4.089,571,4.593,579,5.468,615,3.708,632,5.678,651,5.293,694,4.687,757,3.023,782,1.851,855,4.771,1010,3.361,1152,3.751,1391,3.751,1861,3.411,1865,3.708,2675,4.869,2996,4.869,2998,4.3,2999,5.293,3624,7.118,3653,4.159,3654,5.937,3655,4.159,3656,5.937,3657,4.159,3658,5.293,3659,4.159,3660,8.221,3661,4.869,3662,4.159,3663,4.159,3664,4.159,3665,5.937,3666,4.159,3667,5.293,3668,4.159,3669,5.293,3670,3.708,3671,4.159,3672,4.159,3673,4.159,3674,4.159,3675,4.159,3676,4.159,3677,5.937,3678,5.937,3679,5.937,3680,4.159,3681,4.159,3682,4.159,3683,4.159,3684,4.159,3685,5.937,3686,4.159,3687,4.159,3688,4.159,3689,4.159,3690,4.159,3691,5.937,3692,4.159,3693,4.159]],["title/interfaces/StatusWithTasks.html",[86,0.74,579,3.463]],["body/interfaces/StatusWithTasks.html",[3,0.118,4,0.1,9,0.091,25,0.313,26,0.722,47,0.006,48,0.601,49,0.272,71,0.383,81,1.781,85,0.133,86,1.44,88,1.267,111,2.333,181,1.68,261,0.005,262,0.005,263,2.089,265,1.516,285,2.34,300,2.016,308,3.874,314,5.054,315,0.953,404,2.205,405,2.545,579,5.836,694,5.556,695,1.618,699,3.282,714,5.405,726,4.34,757,2.6,980,3.505,1373,4.54,2411,6.18,2715,4.34,2716,4.773,3598,5.876,3599,5.876,3600,7.761,3601,7.185,3602,6.18,3603,5.405,3604,5.054,3605,5.054,3606,5.054,3607,5.876,3608,5.876]],["title/classes/Story.html",[90,0.126,1927,3.463]],["body/classes/Story.html",[0,0.207,3,0.086,4,0.114,5,1.675,9,0.067,16,0.814,25,0.229,26,0.59,27,1.4,32,0.796,37,0.71,44,0.915,46,1.111,47,0.007,48,0.649,49,0.387,50,0.831,52,0.979,53,1.541,57,2.522,65,2.814,71,0.431,74,1.452,85,0.124,86,0.748,90,0.127,91,1.593,106,1.02,116,1.564,248,0.841,261,0.004,262,0.004,265,1.853,315,1.385,346,2.578,700,3.869,731,2.295,1064,2.933,1074,2.101,1801,3.18,1804,4.539,1807,4.539,1808,2.835,1809,2.657,1815,4.539,1927,6.661,1941,3.961,2119,6.125,2933,5.329,3401,4.773,3694,3.961,3695,6.688,3696,6.688,3697,6.59,3698,7.184,3699,6.59,3700,6.59,3701,6.59,3702,6.59,3703,5.875,3704,7.139,3705,6.59,3706,6.467,3707,4.83,3708,7.184,3709,5.875,3710,4.83,3711,4.83,3712,5.875,3713,4.83,3714,5.875,3715,4.83,3716,5.875,3717,4.83,3718,5.875,3719,4.83,3720,4.83,3721,4.306,3722,4.83,3723,5.405,3724,3.498,3725,5.875,3726,4.306,3727,5.053,3728,4.306,3729,3.961,3730,4.306,3731,4.306,3732,3.961,3733,4.306,3734,4.306,3735,6.688,3736,4.306,3737,5.875,3738,4.306,3739,4.306,3740,4.306,3741,4.306,3742,4.306,3743,4.306,3744,4.306,3745,4.306,3746,4.306,3747,4.306,3748,4.306,3749,4.306,3750,4.306,3751,7.519,3752,6.688,3753,3.961,3754,3.961,3755,4.306,3756,4.306,3757,4.306,3758,4.306]],["title/interfaces/StoryConfig.html",[86,0.74,3704,3.921]],["body/interfaces/StoryConfig.html",[0,0.226,3,0.094,4,0.119,5,1.809,9,0.073,16,0.888,25,0.25,26,0.626,27,1.314,46,0.947,47,0.007,49,0.396,50,0.902,57,2.675,65,2.941,71,0.439,74,1.584,85,0.129,86,0.816,90,0.139,91,1.279,106,1.082,116,1.862,248,0.918,261,0.004,262,0.004,263,1.67,265,2.053,315,1.402,346,2.813,509,4.251,700,4.102,731,2.398,1801,3.47,1804,4.814,1807,4.814,1808,3.094,1809,2.899,1815,5.751,1927,6.292,1941,4.322,2119,6.225,2933,5.756,3401,5.061,3694,4.322,3695,4.699,3696,4.699,3698,4.699,3703,4.699,3704,6.848,3706,6.847,3708,6.23,3709,4.699,3712,4.699,3714,4.699,3716,4.699,3718,4.699,3723,5.732,3724,3.817,3725,6.23,3726,4.699,3727,6.402,3728,4.699,3729,4.322,3730,4.699,3731,4.699,3732,6.848,3733,4.699,3734,4.699,3735,6.99,3736,4.699,3737,6.23,3738,4.699,3739,4.699,3740,4.699,3741,4.699,3742,4.699,3743,4.699,3744,4.699,3745,4.699,3746,4.699,3747,4.699,3748,4.699,3749,4.699,3750,4.699,3751,7.745,3752,6.99,3753,4.322,3754,4.322,3755,4.699,3756,4.699,3757,4.699,3758,4.699]],["title/classes/StoryPageConfig.html",[90,0.126,1815,3.293]],["body/classes/StoryPageConfig.html",[3,0.093,4,0.078,9,0.071,15,0.933,16,1.397,25,0.246,26,0.696,27,1.339,32,0.835,37,0.762,44,0.898,46,1.002,47,0.007,48,0.619,49,0.342,50,0.792,52,0.949,53,0.918,57,2.645,71,0.431,74,1.558,85,0.114,86,0.802,90,0.137,91,1.707,93,1.846,106,1.405,150,1.374,248,1.625,261,0.004,262,0.004,267,2.699,294,1.984,300,1.585,315,1.332,417,3.923,423,2.419,426,5.668,427,3.974,428,4.25,434,3.152,761,3.226,964,4.204,980,2.254,984,3.584,1004,2.362,1015,2.481,1064,3.076,1074,2.254,1093,2.362,1099,3.753,1127,5.005,1797,6.814,1798,7.653,1799,4.25,1800,7.73,1801,4.55,1802,4.25,1803,4.62,1804,3.57,1805,4.62,1806,4.62,1807,3.57,1808,3.042,1809,2.851,1810,5.668,1811,4.62,1812,4.62,1813,6.161,1814,4.62,1815,4.76,1816,6.377,1817,5.668,1818,6.161,1819,7.394,1820,4.62,1821,4.62,1822,4.62,1823,6.802,1824,6.161,1825,4.62,1826,4.62,1827,6.161,1828,4.62,1829,4.62,1830,4.25,1831,4.62,1832,2.942,1833,3.801,1834,6.161,1835,3.974,1836,4.913,1837,5.668,1838,4.62,1839,3.753,1840,4.62,1841,4.62,1842,5.668,1843,4.62,1844,5.668,1845,4.62,1846,4.62,1847,4.62,1928,6.161,1929,6.161,1930,6.161,3759,6.91,3760,5.182,3761,5.182,3762,5.182,3763,5.182,3764,5.182,3765,5.182,3766,5.182]],["title/classes/StoryTemplate.html",[90,0.126,3727,3.666]],["body/classes/StoryTemplate.html",[3,0.12,4,0.102,5,1.813,9,0.093,25,0.319,26,0.73,27,1.297,32,0.985,37,0.988,44,0.889,46,0.811,47,0.006,48,0.501,49,0.336,50,0.641,52,0.738,65,2.519,71,0.387,85,0.111,90,0.177,91,1.606,93,1.495,106,1.262,261,0.005,262,0.005,1064,3.628,1074,2.921,1798,7.669,1807,6.045,1808,3.942,1809,3.694,2119,6.475,3721,5.987,3727,6.251,3753,7.486,3767,6.715,3768,8.776,3769,8.151,3770,8.151,3771,6.715,3772,6.715,3773,6.715,3774,8.151,3775,8.151,3776,8.151,3777,5.987,3778,6.715]],["title/interfaces/Task.html",[86,0.74,181,0.819]],["body/interfaces/Task.html",[3,0.088,4,0.074,9,0.067,25,0.233,26,0.596,47,0.007,48,0.652,49,0.404,50,0.942,62,1.021,71,0.233,77,0.911,81,1.197,85,0.11,86,1.312,87,2.231,88,1.835,89,1.953,143,1.424,163,1.773,173,1.867,178,1.9,181,1.71,190,1.298,261,0.004,262,0.004,263,1.552,265,2.056,285,2.538,315,1.348,340,4.289,571,4.93,659,2.546,670,3.755,671,5.455,757,3.061,832,6.02,980,2.13,1062,4.016,1073,4.016,1282,4.088,1335,5.101,1465,5.455,1686,3.546,1768,4.818,1863,6.215,1954,4.811,1955,5.165,1962,2.875,1963,2.875,2030,5.101,2328,5.893,2715,4.38,3117,5.455,3602,5.793,3604,6.215,3605,6.215,3606,5.101,3724,3.546,3779,4.366,3780,6.215,3781,7.225,3782,5.869,3783,7.168,3784,5.93,3785,5.93,3786,4.818,3787,5.101,3788,3.755,3789,7.225,3790,4.366,3791,4.366,3792,4.016,3793,4.366,3794,4.366]],["title/components/TaskDialog.html",[0,0.205,237,0.949]],["body/components/TaskDialog.html",[0,0.239,1,0.588,2,0.933,3,0.052,4,0.044,5,0.578,6,0.659,7,0.627,8,0.627,9,0.04,13,1.343,14,2.185,15,0.524,16,1.681,17,1.878,18,0.551,19,0.948,20,1.075,21,0.948,23,0.918,25,0.138,26,0.407,27,1.367,28,2.75,29,2.155,30,3.853,31,3.683,32,0.549,34,4.266,35,4.848,36,2.469,37,0.669,38,2.388,40,3.284,41,3.995,42,4.29,43,4.354,44,0.89,46,0.676,47,0.006,48,0.602,49,0.352,50,0.534,52,0.798,53,1.287,57,1.115,58,3.132,60,1.3,61,1.155,62,2.011,63,2.678,65,2.572,66,4.044,68,2.814,71,0.428,72,2.006,73,0.278,74,0.875,75,1.917,76,1.71,77,1.041,78,1.653,79,2.233,80,2.233,81,0.818,82,1.917,83,0.777,84,2.233,85,0.092,86,0.451,87,3.579,88,1.51,89,3.132,90,0.077,91,1.255,92,2.233,93,1.407,94,2.233,95,3.293,96,2.233,97,3.487,98,2.109,99,3.487,100,2.109,101,2.233,102,2.233,103,1.469,104,1.469,105,1.653,106,0.704,108,2.006,113,0.817,114,0.907,115,0.627,116,0.948,117,1.148,118,0.524,119,1.34,120,0.627,121,1.205,122,0.588,123,0.607,124,0.597,125,0.627,126,0.588,127,0.627,128,0.597,129,0.607,130,0.627,131,0.607,132,0.627,133,0.607,134,0.627,135,0.588,136,0.607,137,0.627,138,0.607,139,0.627,140,0.617,141,0.588,142,1.536,143,0.911,144,0.98,145,0.588,146,0.98,147,0.578,148,1.778,149,0.588,150,0.482,151,0.627,152,0.607,153,0.98,154,0.588,155,1.459,156,0.588,157,0.588,158,0.607,159,0.627,160,0.588,161,0.627,162,0.607,163,0.56,164,1.148,165,0.607,166,0.627,167,0.597,168,1.384,169,0.627,170,0.607,171,0.627,172,0.607,173,0.597,174,0.627,175,0.597,176,0.627,177,0.597,178,1.129,179,0.627,180,0.597,181,1.464,182,0.627,183,0.597,184,0.627,185,0.597,186,0.627,187,0.588,188,0.607,189,0.597,190,0.728,191,0.627,192,0.588,193,0.627,194,0.597,195,0.597,196,0.627,197,0.597,198,1.205,199,0.569,200,0.627,201,0.607,202,0.98,203,0.627,204,0.607,205,0.627,206,0.597,207,0.627,208,0.588,209,0.597,210,0.588,211,0.627,212,0.588,213,0.617,214,0.888,215,0.588,216,0.588,217,0.607,218,0.627,219,0.588,220,1.43,221,0.578,222,0.627,223,0.588,224,0.597,225,0.588,226,0.588,227,0.627,228,0.607,229,0.627,230,0.98,231,0.607,232,0.627,233,0.607,234,0.627,235,0.597,236,0.627,237,1.255,238,0.588,239,0.607,240,0.627,241,0.607,242,0.627,243,0.903,244,1.186,245,0.98,246,0.588,247,0.617,248,0.507,249,0.569,250,0.597,251,0.617,252,0.597,253,0.627,254,0.597,255,0.627,256,0.588,257,0.627,258,0.597,259,0.617,260,0.627,261,0.003,262,0.003,265,1.046,275,4.162,285,1.624,294,1.74,303,1.71,311,2.766,556,5.229,571,4.171,602,1.602,612,4.966,613,5.498,616,2.109,625,2.233,691,3.729,695,0.715,701,0.923,734,1.071,757,1.467,758,1.011,782,1.296,810,3.535,832,3.132,965,1.84,1007,2.427,1149,3.829,1202,2.994,1219,4.052,1246,1.71,1394,3.284,1485,3.487,1486,3.487,1519,6.252,1527,2.006,1801,1.917,1954,1.653,1955,1.653,1962,1.71,1963,1.71,1964,1.771,2328,2.873,2687,4.588,3034,2.388,3035,2.388,3513,2.388,3780,3.487,3782,3.293,3795,2.388,3796,4.987,3797,4.054,3798,4.987,3799,4.987,3800,4.987,3801,4.987,3802,4.987,3803,4.987,3804,4.547,3805,4.547,3806,2.912,3807,2.912,3808,2.912,3809,2.912,3810,2.912,3811,4.054,3812,2.912,3813,4.054,3814,2.912,3815,2.912,3816,4.054,3817,3.729,3818,3.729,3819,4.848,3820,4.054,3821,2.912,3822,2.912,3823,2.912,3824,2.912,3825,2.912,3826,2.912,3827,4.054,3828,2.912,3829,2.912,3830,4.054,3831,2.912,3832,4.054,3833,2.912,3834,2.912,3835,2.388,3836,2.596,3837,4.29,3838,3.729,3839,2.596,3840,2.233,3841,4.29,3842,2.388,3843,2.388,3844,2.596,3845,2.596,3846,2.596,3847,2.596,3848,2.596,3849,4.054,3850,2.596,3851,2.596,3852,2.596,3853,2.388,3854,2.596,3855,2.596,3856,2.596,3857,2.596,3858,2.596,3859,2.596,3860,4.547,3861,4.547,3862,2.912]],["title/interfaces/TaskDialogData.html",[86,0.74,612,3.463]],["body/interfaces/TaskDialogData.html",[0,0.278,3,0.085,4,0.072,9,0.065,13,1.398,14,2.539,16,0.797,17,0.895,20,0.91,21,0.987,23,0.955,25,0.225,26,0.582,27,1.329,28,2.059,29,1.613,30,3.26,31,3.117,34,2.779,35,3.63,36,1.849,37,0.696,40,2.779,41,4.107,42,3.63,43,4.477,47,0.007,48,0.353,49,0.357,50,0.826,58,3.26,61,0.696,62,2.003,63,3.111,65,2.785,66,4.137,68,2.895,71,0.46,72,3.26,73,0.452,74,1.423,75,3.117,76,2.779,77,0.881,78,2.687,79,3.63,80,3.63,81,0.852,82,3.117,83,1.263,84,3.63,85,0.123,86,0.733,87,4.173,88,1.735,89,3.652,90,0.125,91,1.532,92,3.63,93,1.778,94,3.63,95,4.707,96,3.63,97,4.984,98,3.428,99,4.984,100,3.428,101,3.63,102,3.63,103,2.388,104,2.388,105,2.687,106,1.006,108,3.26,142,1.209,143,0.771,155,1.249,178,0.955,181,1.546,237,0.94,261,0.004,262,0.004,263,1.5,265,1.089,275,3.117,285,2.32,294,1.812,303,4.691,311,3.954,556,5.113,571,4.86,602,2.604,612,5.376,613,6.266,616,3.428,625,3.63,757,1.527,782,2.107,810,5.049,832,3.26,1149,3.744,1219,3.962,1246,2.779,1394,3.816,1519,6.307,1527,3.26,1801,4.887,1954,2.687,1955,2.687,1962,2.779,1963,2.779,1964,2.879,2328,2.991,2687,3.882,3034,3.882,3035,3.882,3513,3.882,3780,3.63,3782,3.428,3795,3.882,3796,4.22,3797,4.22,3798,4.22,3799,4.22,3800,4.22,3801,4.22,3802,4.22,3803,4.22,3811,4.22,3813,4.22,3816,4.22,3817,3.882,3818,3.882,3819,3.63,3820,4.22,3827,4.22,3830,4.22,3832,4.22,3835,3.882,3836,4.22,3837,3.63,3838,5.331,3839,4.22,3840,3.63,3841,3.63,3842,3.882,3843,3.882,3844,4.22,3845,4.22,3846,4.22,3847,4.22,3848,4.22,3849,5.795,3850,4.22,3851,4.22,3852,4.22,3853,3.882,3854,4.22,3855,4.22,3856,4.22,3857,4.22,3858,4.22,3859,4.22]],["title/components/TaskListPage.html",[0,0.205,238,0.965]],["body/components/TaskListPage.html",[0,0.211,1,0.487,2,0.804,3,0.043,4,0.037,5,0.479,6,0.546,7,0.52,8,0.52,9,0.033,15,0.435,16,1.663,17,1.857,18,0.457,19,1.186,20,0.464,21,0.817,23,0.791,25,0.115,26,0.351,27,1.327,30,4.61,32,0.473,37,0.576,44,0.893,46,0.887,47,0.007,48,0.607,49,0.355,50,0.701,52,0.807,53,1.007,60,1.367,61,1.173,62,1.47,65,1.854,68,2.54,71,0.423,73,0.23,74,0.726,77,0.729,81,1.269,82,1.59,83,0.644,85,0.04,87,1.1,88,1.459,89,2.492,90,0.064,91,1.29,93,1.265,106,1.092,109,2.718,110,1.846,111,1.386,112,1.218,113,2.13,114,1.946,115,0.52,116,0.817,117,1.373,118,0.435,119,1.557,120,0.52,121,1.065,122,0.487,123,0.503,124,0.495,125,0.52,126,0.487,127,0.52,128,0.495,129,0.503,130,0.52,131,0.503,132,0.52,133,0.503,134,0.52,135,0.487,136,0.503,137,0.52,138,0.503,139,0.52,140,0.512,141,0.487,142,1.311,143,1.09,144,0.844,145,0.487,146,0.844,147,0.479,148,1.68,149,0.487,150,1.035,151,0.52,152,0.503,153,0.844,154,0.487,155,1.355,156,0.487,157,0.487,158,0.503,159,0.52,160,0.487,161,0.52,162,0.503,163,0.464,164,1.014,165,0.503,166,0.52,167,0.495,168,1.262,169,0.52,170,0.503,171,0.52,172,0.503,173,1.373,174,0.52,175,0.495,176,0.52,177,0.495,178,0.487,179,0.52,180,0.495,181,1.647,182,0.52,183,0.495,184,0.52,185,0.495,186,0.52,187,0.487,188,0.503,189,0.495,190,1.001,191,0.52,192,0.487,193,0.52,194,0.495,195,0.495,196,0.52,197,0.495,198,1.065,199,0.472,200,0.52,201,0.503,202,0.844,203,0.52,204,0.503,205,0.52,206,0.495,207,0.52,208,0.487,209,0.495,210,0.487,211,0.52,212,0.487,213,0.512,214,0.765,215,0.487,216,0.487,217,0.503,218,0.52,219,0.487,220,1.303,221,0.479,222,0.52,223,0.487,224,0.495,225,0.487,226,0.487,227,0.52,228,0.503,229,0.52,230,0.844,231,0.503,232,0.52,233,0.503,234,0.52,235,0.495,236,0.52,237,0.479,238,1.148,239,0.503,240,0.52,241,0.503,242,0.52,243,0.778,244,1.047,245,0.844,246,0.487,247,0.512,248,0.42,249,0.472,250,0.495,251,0.512,252,0.495,253,0.52,254,0.495,255,0.52,256,0.487,257,0.52,258,0.495,259,0.512,260,0.52,261,0.002,262,0.002,267,2.614,282,1.289,289,0.793,300,0.739,315,0.349,333,1.005,353,1.469,368,1.252,370,1.218,404,1.311,405,1.878,406,2.056,438,0.765,539,5.489,540,5.967,541,5.489,542,5.489,543,4.229,553,1.59,554,3.287,555,4.139,556,4.856,557,3.375,558,3.763,559,4.288,566,4.053,571,1.469,599,2.299,600,1.59,601,1.526,602,1.328,603,1.59,604,1.98,605,1.005,606,1.413,607,0.943,608,1.005,619,1.371,620,1.469,621,1.851,622,2.153,625,3.003,629,2.153,631,2.153,632,1.98,682,3.122,692,3.212,693,3.003,694,2.299,695,1.803,696,1.651,697,2.65,701,2.328,702,1.328,703,1.944,706,1.371,707,2.934,708,3.027,710,2.153,711,1.924,712,1.666,713,1.98,715,1.526,716,2.149,717,3.122,719,2.149,723,1.156,725,1.59,727,1.413,728,1.441,729,1.818,730,0.871,731,1.198,734,1.441,737,1.63,738,1.595,740,2.871,741,2.366,746,3.572,752,0.888,756,1.469,757,1.264,758,1.975,759,2.719,760,3.593,761,1.127,762,1.252,763,1.05,764,1.526,765,1.417,766,1.851,767,1.749,771,4.118,777,3.003,778,3.492,782,2.199,786,3.003,793,1.371,794,1.663,795,2.475,796,2.153,798,2.153,799,2.153,801,1.851,802,1.851,803,1.98,804,1.749,805,1.749,806,2.153,808,3.492,810,4.455,811,1.371,812,2.012,813,2.031,820,1.218,822,3.212,825,1.371,826,1.371,832,2.698,833,1.218,839,3.492,840,1.749,894,1.252,902,2.698,951,1.417,962,1.417,998,1.252,1457,2.718,1487,4.053,1519,2.698,1835,3.003,1854,4.115,1860,1.749,1861,1.98,2169,1.851,2235,3.789,2236,1.851,2484,5.106,2493,1.98,2691,2.153,2692,2.153,2693,2.153,2694,1.98,3017,1.98,3018,4.053,3019,3.212,3022,2.153,3023,2.153,3025,2.153,3144,1.851,3180,2.153,3514,1.98,3783,1.98,3843,1.98,3853,1.98,3863,9.202,3864,7.547,3865,4.941,3866,4.941,3867,4.406,3868,4.941,3869,5.685,3870,3.916,3871,3.916,3872,3.916,3873,3.916,3874,5.685,3875,3.916,3876,3.916,3877,2.414,3878,3.916,3879,2.414,3880,3.916,3881,2.414,3882,3.916,3883,2.414,3884,3.916,3885,2.414,3886,3.916,3887,2.414,3888,2.414,3889,3.916,3890,2.414,3891,2.153,3892,2.414,3893,2.414,3894,2.414,3895,2.414,3896,2.414,3897,2.414,3898,2.414,3899,2.414,3900,2.414,3901,2.153,3902,2.153,3903,2.414,3904,2.414,3905,2.414,3906,2.414,3907,2.414,3908,2.414,3909,3.916,3910,3.916,3911,2.414,3912,2.414,3913,2.414,3914,2.414,3915,2.414,3916,3.916,3917,2.414,3918,2.414,3919,2.414,3920,2.414,3921,2.414,3922,2.414,3923,2.414,3924,2.414,3925,3.916,3926,2.414,3927,2.414,3928,2.414,3929,3.916,3930,3.916,3931,3.916,3932,2.414,3933,2.414,3934,3.916,3935,2.414]],["title/pipes/TaskPriorityIconPipe.html",[1770,2.08,3936,3.666]],["body/pipes/TaskPriorityIconPipe.html",[3,0.127,4,0.108,9,0.098,13,2.1,15,1.28,32,0.859,44,0.693,46,0.859,47,0.006,48,0.671,49,0.293,50,0.679,52,0.781,61,1.241,71,0.338,73,0.679,85,0.117,90,0.187,106,1.471,261,0.005,262,0.005,712,3.024,1770,3.669,1832,4.036,1833,5.224,3610,4.492,3614,5.81,3616,5.81,3819,6.468,3936,6.468,3937,6.468,3938,6.338,3939,8.434,3940,7.108,3941,5.83,3942,7.108,3943,5.83,3944,7.108,3945,5.83,3946,7.108,3947,5.83,3948,7.108,3949,5.83,3950,7.108]],["title/pipes/TaskPriorityPipe.html",[1770,2.08,3951,3.666]],["body/pipes/TaskPriorityPipe.html",[3,0.128,4,0.108,9,0.098,13,2.106,15,1.283,32,0.861,44,0.695,46,0.861,47,0.006,48,0.672,49,0.294,50,0.681,52,0.783,61,1.243,71,0.339,73,0.681,85,0.118,90,0.188,106,1.472,261,0.005,262,0.005,712,3.032,1770,3.675,1832,4.048,1833,5.228,3610,4.505,3614,5.82,3616,5.82,3837,6.479,3937,6.479,3941,5.847,3943,5.847,3945,5.847,3947,5.847,3949,5.847,3951,6.479,3952,7.129,3953,7.129,3954,7.129,3955,7.129,3956,7.129,3957,7.129,3958,7.129]],["title/injectables/TaskService.html",[329,1.794,555,2.807]],["body/injectables/TaskService.html",[3,0.047,4,0.04,9,0.036,20,1.683,25,0.125,26,0.375,27,1.352,32,0.506,37,0.878,44,0.824,46,0.988,47,0.007,48,0.61,49,0.337,50,0.78,52,1.005,60,0.896,61,0.386,62,1.67,68,3.185,71,0.416,73,0.251,81,1.364,83,0.701,85,0.043,88,1.87,89,3.727,90,0.069,91,1.386,93,1.329,106,1.399,109,2.876,136,1.58,142,1.49,143,1.497,150,1.4,155,0.805,181,1.725,190,1.214,216,1.651,237,1.185,261,0.003,262,0.003,265,1.88,267,1.026,268,1.226,273,1.902,275,1.729,282,4.044,287,2.014,300,1.6,303,3.504,319,1.902,320,1.809,321,3.625,329,1.572,330,4.296,331,1.362,340,4.301,344,2.887,353,1.597,380,1.362,381,1.29,501,1.597,524,3.095,555,2.46,557,3.492,559,4.438,571,3.181,599,2.46,600,1.729,601,1.659,602,1.444,603,1.729,612,3.787,613,1.902,616,1.902,659,3.278,666,4.323,667,2.154,668,2.154,674,2.154,678,3.736,679,3.443,693,3.213,694,4.8,757,2.979,782,2.657,793,1.491,795,2.648,804,1.902,805,1.902,810,4.935,1010,3.704,1039,2.014,1093,2.972,1094,4.577,1152,2.648,1156,4.608,1219,3.894,1246,1.542,1277,2.887,1297,1.902,1318,1.597,1335,3.213,1391,2.648,1421,2.876,1430,6.214,1457,3.283,1484,3.736,1512,3.213,1660,3.736,1742,6.121,1770,3.173,1854,3.443,1860,1.902,1863,2.014,1866,2.341,1964,1.597,2169,6.383,2675,3.437,2677,4.289,2996,3.437,2998,3.035,3173,2.341,3532,5.284,3548,2.154,3658,3.736,3660,7.943,3661,5.983,3667,3.736,3669,6.963,3670,3.736,3782,1.902,3788,5.81,3959,2.626,3960,8.007,3961,4.19,3962,4.19,3963,5.968,3964,4.19,3965,4.19,3966,4.19,3967,3.736,3968,4.19,3969,2.626,3970,8.007,3971,5.229,3972,4.19,3973,4.19,3974,2.626,3975,2.626,3976,2.626,3977,4.19,3978,2.626,3979,7.576,3980,2.626,3981,2.626,3982,4.19,3983,5.968,3984,2.626,3985,4.19,3986,2.626,3987,4.19,3988,2.626,3989,4.19,3990,2.626,3991,2.626,3992,2.341,3993,2.626,3994,2.626,3995,2.626,3996,5.229,3997,2.626,3998,5.229,3999,2.626,4000,2.626,4001,2.626,4002,2.626,4003,2.626,4004,2.626,4005,2.626,4006,2.626,4007,4.19,4008,4.19,4009,2.626,4010,2.626,4011,2.626,4012,2.341,4013,2.626,4014,2.626,4015,2.626,4016,2.626,4017,5.229,4018,2.626,4019,2.626,4020,2.626,4021,4.19,4022,2.626,4023,2.626,4024,2.626,4025,2.626,4026,2.626,4027,4.19,4028,2.626,4029,2.626,4030,2.626,4031,2.626,4032,4.19,4033,2.626,4034,2.626,4035,2.626,4036,2.626,4037,2.626,4038,2.626,4039,2.626,4040,2.626,4041,2.626,4042,4.19]],["title/pipes/TaskTypeIconPipe.html",[1770,2.08,4043,3.666]],["body/pipes/TaskTypeIconPipe.html",[3,0.126,4,0.107,9,0.097,13,2.088,15,1.272,32,0.854,44,0.689,46,0.854,47,0.006,48,0.669,49,0.37,50,0.675,52,0.777,61,1.236,71,0.336,73,0.675,85,0.117,90,0.186,106,1.468,181,1.211,261,0.005,262,0.005,712,3.006,810,4.466,1770,3.656,1832,4.013,1833,5.216,2328,4.466,3009,6.302,3610,4.466,3614,5.79,3616,5.79,3786,5.119,3787,5.42,3937,6.446,3938,6.302,4043,6.446,4044,8.406,4045,7.068,4046,6.302,4047,6.302,4048,6.302,4049,6.302,4050,6.302]],["title/pipes/TaskTypePipe.html",[1770,2.08,4051,3.666]],["body/pipes/TaskTypePipe.html",[3,0.104,4,0.088,9,0.08,13,1.717,15,1.046,32,0.702,44,0.801,46,0.993,47,0.006,48,0.741,49,0.41,50,0.785,52,0.903,60,1.276,61,1.371,71,0.391,73,0.555,85,0.096,90,0.153,106,1.42,181,1.276,261,0.005,262,0.005,315,1.253,353,3.536,405,2.765,659,2.225,711,4.753,712,3.496,810,3.673,1770,3.24,1832,3.3,1833,4.93,1901,4.457,1927,5.395,2328,3.673,2506,5.182,3610,3.673,3614,6.316,3616,5.131,3786,4.21,3817,4.767,3818,4.767,3838,4.767,3840,5.712,3841,6.648,3842,4.767,3937,6.648,4046,5.182,4047,5.182,4048,5.182,4049,5.182,4050,5.182,4051,5.712,4052,5.812,4053,5.812,4054,5.812,4055,5.812,4056,5.812,4057,5.812,4058,5.812,4059,5.812,4060,5.812,4061,5.812,4062,5.812,4063,5.812,4064,5.812,4065,5.812,4066,5.812,4067,5.812,4068,5.182,4069,5.812,4070,5.812,4071,5.812,4072,5.812,4073,5.812,4074,5.812,4075,5.812,4076,5.812,4077,5.812,4078,5.812]],["title/interfaces/TaskWithAdditionalData.html",[86,0.74,3788,3.666]],["body/interfaces/TaskWithAdditionalData.html",[3,0.094,4,0.079,9,0.072,25,0.249,26,0.624,47,0.007,48,0.519,49,0.386,50,0.795,62,1.452,71,0.249,77,1.295,81,0.944,85,0.115,86,1.343,87,3.797,88,1.749,89,3.322,143,1.452,163,1.843,173,1.604,178,1.922,181,1.703,190,1.115,261,0.004,262,0.004,263,1.662,265,1.798,285,2.826,315,1.289,340,4.44,571,3.189,659,2.007,670,5.34,671,4.3,757,2.798,832,4.797,980,3.029,1062,5.711,1073,5.711,1282,3.513,1335,4.02,1465,4.3,1686,5.044,1768,6.034,1863,4.02,1954,4.924,1955,5.062,1962,3.078,1963,3.078,2030,4.02,2328,6.058,2715,3.452,3117,4.3,3602,6.837,3604,5.34,3605,5.34,3606,4.02,3724,5.044,3779,4.674,3780,4.02,3781,4.674,3782,3.797,3783,5.711,3784,4.674,3785,4.674,3786,3.797,3787,4.02,3788,5.34,3789,8.237,3790,7.428,3791,6.209,3792,5.711,3793,7.428,3794,7.428]],["title/modules/TasksModule.html",[408,1.989,4079,3.666]],["body/modules/TasksModule.html",[3,0.096,4,0.081,9,0.074,47,0.007,49,0.221,71,0.472,73,0.511,74,1.608,85,0.088,90,0.141,126,1.81,128,1.84,167,1.84,175,1.84,177,1.84,178,1.425,180,1.84,181,1.209,215,1.81,235,1.84,237,1.781,238,1.81,243,1.402,261,0.004,262,0.004,410,2.327,411,4.007,417,5.091,418,4.293,419,2.855,420,2.498,422,4.46,423,3.295,425,3.56,433,4.102,471,4.647,472,3.38,473,5.112,614,4.77,773,4.77,1227,4.77,1228,4.102,1229,4.77,1242,4.102,2161,4.77,2326,4.77,2354,4.77,2371,4.77,2569,7.488,3609,6.876,3620,4.77,3819,4.102,3864,4.388,3936,6.876,3951,6.876,4043,6.876,4051,6.876,4079,7.759,4080,4.77,4081,4.77,4082,4.77,4083,6.494,4084,5.349,4085,5.349,4086,5.349,4087,5.349,4088,5.349,4089,5.349,4090,5.349,4091,5.349,4092,5.349,4093,4.77,4094,4.77,4095,4.77,4096,5.349,4097,5.349,4098,8.398,4099,7.057,4100,5.349,4101,5.349,4102,5.349]],["title/modules/TasksRoutingModule.html",[408,1.989,4083,3.463]],["body/modules/TasksRoutingModule.html",[0,0.392,3,0.121,4,0.103,9,0.093,28,2.949,47,0.007,71,0.453,73,0.647,85,0.112,90,0.179,93,1.509,126,1.655,129,1.71,190,1.313,199,1.602,215,1.655,216,1.368,238,1.655,261,0.005,262,0.005,408,2.821,410,2.949,423,3.165,425,4.135,436,5.18,437,5.323,438,2.149,445,5.924,464,4.284,492,4.67,694,4.813,954,3.729,1242,5.199,1248,5.199,1253,5.199,1254,5.199,1259,6.044,3864,5.56,4083,5.938,4093,6.044,4094,6.044,4095,6.044,4103,6.779,4104,6.044,4105,6.779]],["title/interfaces/TemplateDecoratorConfig.html",[86,0.74,4106,3.921]],["body/interfaces/TemplateDecoratorConfig.html",[3,0.11,4,0.093,5,1.757,9,0.085,16,1.535,25,0.292,26,0.691,47,0.007,49,0.348,50,0.844,71,0.401,85,0.156,86,0.951,93,2.125,106,1.478,261,0.005,262,0.005,263,1.947,285,2.449,315,1.423,731,2.947,868,4.71,1004,4.239,1804,4.231,1808,3.606,1809,3.379,1839,4.449,2119,5.553,3706,4.71,3723,5.038,3724,4.449,3754,5.038,4106,6.917,4107,5.477,4108,5.477,4109,7.887,4110,6.142,4111,5.477,4112,6.142,4113,6.142,4114,6.142,4115,6.142,4116,6.142,4117,7.714,4118,6.878,4119,7.52,4120,6.142,4121,6.878,4122,6.142,4123,6.878,4124,6.142,4125,6.142,4126,6.142,4127,6.142,4128,6.142,4129,5.477,4130,5.477,4131,6.142,4132,5.477,4133,6.142,4134,6.142,4135,5.477]],["title/classes/TestNgControl.html",[90,0.126,1097,3.463]],["body/classes/TestNgControl.html",[3,0.123,4,0.104,9,0.095,25,0.328,26,0.742,32,1.001,44,0.866,46,0.834,47,0.006,48,0.515,49,0.285,50,0.659,52,0.758,53,1.467,60,1.182,61,1.015,62,1.728,65,3.332,71,0.328,74,2.075,85,0.114,90,0.182,91,1.625,106,1.069,261,0.005,262,0.005,980,3.605,984,4.605,1015,4.63,1064,3.688,1074,3.002,1086,5.66,1093,3.145,1097,6.002,2200,7.555,4136,9.211,4137,6.901,4138,8.881,4139,8.287,4140,6.901,4141,8.287,4142,6.901,4143,8.287,4144,6.901,4145,8.287,4146,8.287]],["title/components/TextareaComponent.html",[0,0.205,239,0.997]],["body/components/TextareaComponent.html",[0,0.205,1,0.466,2,0.775,3,0.041,4,0.035,5,0.459,6,0.522,7,0.497,8,0.497,9,0.032,13,1.116,14,1.872,15,0.416,16,1.659,17,1.849,18,0.437,19,0.788,20,0.444,21,0.788,23,0.762,25,0.11,26,0.338,27,0.867,29,1.887,32,0.456,36,2.163,44,0.902,46,0.669,47,0.007,48,0.538,49,0.351,50,0.583,52,0.945,53,1.551,57,1.834,60,1.123,61,1.181,62,0.788,64,0.884,71,0.355,73,0.22,77,0.703,81,0.416,85,0.038,88,1.064,90,0.061,91,1.013,93,1.459,110,2.133,112,1.165,113,1.06,115,0.497,116,0.788,117,1.253,118,0.416,119,1.733,120,0.497,121,1.032,122,0.466,123,0.482,124,0.474,125,0.497,126,0.466,127,0.497,128,0.474,129,0.482,130,0.497,131,0.482,132,0.497,133,0.482,134,0.497,135,0.466,136,0.482,137,0.497,138,0.482,139,0.497,140,1.629,141,0.466,142,0.891,143,0.615,144,0.814,145,0.466,146,0.814,147,0.459,148,1.656,149,0.466,150,0.382,151,0.497,152,0.482,153,0.814,154,0.466,155,0.921,156,0.466,157,0.466,158,0.482,159,0.497,160,0.466,161,0.497,162,0.482,163,0.444,164,0.983,165,0.482,166,0.497,167,0.474,168,1.817,169,0.497,170,0.482,171,0.497,172,0.482,173,0.474,174,0.497,175,0.474,176,0.497,177,0.474,178,0.466,179,0.497,180,0.474,181,0.821,182,0.497,183,0.474,184,0.497,185,0.474,186,0.497,187,0.466,188,0.482,189,0.474,190,0.887,191,0.497,192,0.466,193,0.497,194,0.474,195,0.474,196,0.497,197,0.474,198,1.032,199,0.451,200,0.497,201,0.482,202,0.814,203,0.497,204,0.482,205,0.497,206,0.474,207,0.497,208,0.466,209,0.474,210,0.466,211,0.497,212,0.466,213,0.489,214,0.738,215,0.466,216,0.466,217,0.482,218,0.497,219,0.466,220,1.273,221,0.459,222,0.497,223,0.466,224,0.474,225,0.466,226,0.466,227,0.497,228,0.482,229,0.497,230,0.814,231,0.482,232,0.497,233,0.482,234,0.497,235,0.474,236,0.497,237,0.459,238,0.466,239,1.155,240,0.497,241,0.482,242,0.497,243,0.75,244,1.389,245,0.814,246,0.466,247,0.489,248,0.402,249,0.451,250,0.474,251,0.489,252,0.474,253,0.497,254,0.474,255,0.497,256,0.466,257,0.497,258,0.474,259,0.801,260,0.497,261,0.002,262,0.002,265,1.273,274,1.404,285,1.097,289,0.759,291,1.994,294,2.337,300,1.155,308,1.681,315,1.043,318,2.655,335,2.417,349,1.958,354,2.059,368,1.958,370,1.905,404,2.043,405,2.329,406,2.304,407,1.197,423,1.078,566,1.894,605,0.961,606,1.998,607,0.902,608,0.961,659,1.446,663,1.763,695,1.972,696,0.67,697,1.363,700,1.355,701,2.077,703,2.009,704,3.143,706,1.311,707,2.304,708,2.208,716,1.004,717,1.459,719,1.004,723,2.294,725,2.487,734,0.849,735,5.008,736,2.059,737,0.961,738,0.94,740,2.94,741,2.304,745,4.682,746,2.558,752,0.849,756,1.404,758,2.121,759,1.643,760,2.386,761,1.078,763,1.004,767,1.672,769,1.311,779,1.417,820,1.905,823,4.316,849,3.259,855,2.386,861,2.485,868,2.896,874,1.27,877,1.894,894,3.743,901,1.404,902,2.601,910,2.059,963,1.404,969,1.52,980,1.643,984,2.485,985,2.144,986,2.144,987,2.144,988,2.144,989,2.144,990,3.721,991,1.355,992,1.311,993,2.558,994,1.311,995,1.311,996,0.982,997,1.27,998,1.197,999,1.197,1000,1.311,1001,1.355,1002,2.144,1003,3.143,1004,1.721,1005,3.606,1006,1.311,1007,2.558,1008,1.27,1009,2.144,1010,1.681,1011,2.871,1012,1.232,1013,1.311,1014,2.144,1015,3.138,1016,1.311,1017,1.355,1018,1.311,1019,1.311,1020,1.311,1021,1.355,1022,2.144,1023,1.311,1024,1.311,1025,1.404,1026,1.355,1027,1.355,1028,1.355,1029,1.355,1030,1.672,1031,1.59,1032,1.404,1033,1.355,1035,2.601,1042,4.142,1093,1.721,1095,2.487,1098,2.059,1099,1.672,1100,1.771,1101,2.601,1107,5.566,1113,1.894,1310,1.958,1587,1.59,1634,3.471,1641,3.93,1645,5.674,1665,2.386,1832,1.311,1835,1.771,1903,2.735,1904,2.735,1907,3.471,1909,4.01,2239,1.355,2240,2.297,2241,1.894,2256,4.682,2257,5.444,2261,3.367,2263,3.367,2275,2.896,2282,2.059,2322,2.059,2323,1.894,2392,3.93,2467,2.059,2636,5.92,2723,2.601,2735,4.856,2794,3.471,2795,2.735,2835,3.93,2933,2.386,3144,2.896,3184,4.273,3287,2.896,3387,1.894,3401,1.672,4147,2.309,4148,3.777,4149,4.792,4150,3.777,4151,5.536,4152,5.536,4153,5.536,4154,5.536,4155,5.536,4156,5.536,4157,5.536,4158,5.536,4159,5.536,4160,5.536,4161,5.536,4162,4.792,4163,2.309,4164,2.309,4165,2.309,4166,2.309,4167,2.309,4168,2.309,4169,2.309,4170,2.309,4171,2.309,4172,2.309,4173,2.309,4174,2.309,4175,2.309,4176,2.309,4177,2.309,4178,2.309,4179,2.309,4180,2.309,4181,2.309,4182,2.309,4183,6.918,4184,2.309,4185,3.777,4186,2.309,4187,3.777,4188,2.309,4189,2.309,4190,3.777,4191,2.309,4192,2.309,4193,2.059,4194,4.792,4195,4.792,4196,4.792,4197,4.792,4198,4.792,4199,4.792,4200,4.792,4201,4.792,4202,4.792,4203,2.309,4204,2.309,4205,2.309,4206,2.309,4207,2.309,4208,2.309,4209,2.309,4210,3.777,4211,2.309,4212,2.309,4213,2.309,4214,2.309,4215,2.309,4216,2.309,4217,2.309,4218,2.309,4219,2.309,4220,2.309,4221,2.309,4222,4.792,4223,3.777,4224,3.777,4225,2.309,4226,2.309,4227,3.777,4228,2.309,4229,2.309,4230,2.309,4231,2.309,4232,2.309,4233,2.309,4234,2.309,4235,2.309,4236,2.309,4237,2.309,4238,2.309,4239,2.309,4240,2.309,4241,3.777,4242,2.309,4243,2.309,4244,2.309,4245,2.309,4246,2.309,4247,2.309,4248,7.47,4249,7.47,4250,2.309,4251,5.444,4252,2.309,4253,3.777,4254,2.309,4255,2.309,4256,2.309,4257,2.309,4258,2.309,4259,2.309,4260,2.309,4261,2.309,4262,2.309,4263,2.309,4264,2.309,4265,2.309,4266,3.777,4267,2.309,4268,2.309,4269,2.309,4270,2.309,4271,2.309,4272,2.309,4273,3.777,4274,2.059,4275,2.059]],["title/components/UpperNavigationComponent.html",[0,0.205,241,0.997]],["body/components/UpperNavigationComponent.html",[0,0.252,1,0.639,2,0.995,3,0.057,4,0.048,5,0.629,6,0.716,7,0.682,8,0.682,9,0.044,13,1.433,14,2.303,15,0.57,16,1.688,17,1.89,18,0.599,19,1.012,20,0.609,21,1.012,23,0.979,25,0.23,26,0.434,27,1.308,32,0.586,36,2.582,37,0.713,44,0.877,46,0.383,47,0.006,48,0.532,49,0.243,50,0.302,52,0.86,53,1.331,57,1.212,60,1.288,61,1.106,62,1.012,71,0.384,73,0.302,77,0.902,81,0.57,83,0.845,85,0.052,90,0.083,91,1.304,106,0.49,110,1.742,111,1.121,112,2.974,113,1.655,114,1.51,115,0.682,116,1.012,117,1.21,118,0.57,119,1.821,120,0.682,121,1.27,122,0.639,123,0.66,124,0.65,125,0.682,126,0.639,127,0.682,128,0.65,129,0.66,130,0.682,131,0.66,132,0.682,133,0.66,134,0.682,135,0.639,136,0.66,137,0.682,138,0.66,139,0.682,140,0.671,141,0.639,142,1.097,143,0.79,144,1.045,145,0.639,146,1.045,147,0.629,148,1.82,149,0.639,150,0.524,151,0.682,152,0.66,153,1.045,154,0.639,155,1.133,156,0.639,157,0.639,158,0.66,159,0.682,160,0.639,161,0.682,162,0.66,163,0.609,164,1.21,165,0.66,166,0.682,167,0.65,168,1.438,169,0.682,170,0.66,171,0.682,172,0.66,173,0.65,174,0.682,175,0.65,176,0.682,177,0.65,178,0.639,179,0.682,180,0.65,181,1.221,182,0.682,183,0.65,184,0.682,185,0.65,186,0.682,187,0.639,188,0.66,189,0.65,190,0.777,191,0.682,192,0.639,193,0.682,194,0.65,195,0.65,196,0.682,197,0.65,198,1.27,199,0.619,200,0.682,201,0.66,202,1.045,203,0.682,204,0.66,205,0.682,206,0.65,207,0.682,208,0.639,209,0.65,210,0.639,211,0.682,212,0.639,213,0.671,214,0.948,215,0.639,216,0.639,217,0.66,218,0.682,219,0.639,220,1.632,221,0.629,222,0.682,223,0.639,224,0.65,225,0.639,226,0.639,227,0.682,228,0.66,229,0.682,230,1.045,231,0.66,232,0.682,233,0.66,234,0.682,235,0.65,236,0.682,237,0.629,238,0.639,239,0.66,240,0.682,241,1.378,242,1.739,243,0.963,244,1.25,245,1.045,246,0.639,247,0.671,248,0.551,249,0.619,250,0.65,251,1.028,252,0.65,253,0.682,254,0.65,255,0.682,256,0.639,257,0.682,258,0.65,259,0.671,260,0.682,261,0.003,262,0.003,285,1.712,289,1.04,294,2.728,300,2.022,316,2.293,317,1.478,318,2.169,346,1.69,396,3.404,404,2.212,405,2.476,406,2.454,420,2.753,438,1.003,446,2.597,488,2.085,489,5.068,493,4.443,555,4.594,557,3.598,605,1.317,606,1.142,607,1.237,608,1.317,682,2.001,695,1.921,696,2.272,697,2.127,701,1.869,702,1.742,703,2.272,707,1.317,708,1.263,711,2.382,712,1.347,716,1.377,719,1.377,727,2.571,728,2.621,729,2.765,730,1.142,731,0.969,737,2.018,738,1.976,739,1.859,740,1.976,741,2.018,752,1.165,758,1.1,759,2.875,762,1.642,763,1.377,770,1.69,780,2.428,782,1.409,793,1.798,794,2.181,812,2.902,813,1.642,831,2.001,833,2.974,836,1.555,849,3.147,874,1.742,899,2.085,901,4.335,947,1.859,953,1.69,1043,2.597,1149,3.947,1280,3.341,1318,1.926,1338,2.181,1421,1.742,1545,1.926,1916,5.765,2058,2.293,2149,2.181,2202,2.428,2218,2.428,2240,1.926,2477,2.428,2588,8.093,2860,5.257,2866,2.597,3012,2.823,3138,2.597,3364,5.257,3445,6.703,3503,2.823,3504,4.325,3505,5.257,3506,4.325,3835,2.597,4276,9.077,4277,5.897,4278,7.518,4279,7.518,4280,5.897,4281,6.609,4282,6.609,4283,6.609,4284,6.609,4285,6.609,4286,3.166,4287,3.166,4288,3.166,4289,3.166,4290,3.166,4291,3.166,4292,3.166,4293,3.166,4294,3.166,4295,3.166,4296,3.166,4297,3.166,4298,3.166,4299,3.166,4300,4.851,4301,3.166,4302,3.166,4303,3.166,4304,3.166,4305,6.609,4306,3.166,4307,3.166,4308,3.166,4309,3.166,4310,4.851,4311,3.166,4312,5.897,4313,4.325]],["title/interfaces/User.html",[86,0.74,659,1.83]],["body/interfaces/User.html",[3,0.12,4,0.101,9,0.092,25,0.318,26,0.728,47,0.006,48,0.708,49,0.396,64,3.489,85,0.15,86,1.411,88,1.795,261,0.005,262,0.005,263,2.12,315,1.468,491,4.985,521,5.777,522,5.138,659,3.489,757,3.014,2250,6.253,2718,4.607,2719,5.129,2720,4.844,2721,4.607,2722,4.607]],["title/interfaces/UserData.html",[86,0.74,2722,3.293]],["body/interfaces/UserData.html",[3,0.122,4,0.103,9,0.094,25,0.324,26,0.737,47,0.006,48,0.712,49,0.387,64,2.609,85,0.151,86,1.42,88,1.805,261,0.005,262,0.005,263,2.16,315,1.464,491,4.39,521,5.803,522,5.165,659,3.381,757,3.03,2250,6.281,2718,4.695,2719,5.227,2720,4.937,2721,4.695,2722,5.666]],["title/injectables/UserService.html",[329,1.794,2484,3.463]],["body/injectables/UserService.html",[3,0.122,4,0.103,9,0.094,25,0.324,27,1.356,32,0.995,37,1.004,44,0.861,46,0.995,47,0.006,48,0.614,49,0.34,50,0.786,52,0.905,68,2.958,71,0.436,73,0.652,83,1.821,85,0.113,90,0.18,106,1.275,261,0.005,262,0.005,329,3.088,330,5.249,331,3.54,380,3.54,381,3.352,382,2.371,501,4.152,524,3.54,1010,3.664,2042,6.086,2484,5.962,2718,6.321,3521,6.086,4314,6.825,4315,9.177,4316,6.825,4317,6.825,4318,8.232,4319,6.825,4320,8.232,4321,6.825,4322,6.825]],["title/interfaces/UserSession.html",[86,0.74,3324,3.666]],["body/interfaces/UserSession.html",[3,0.125,4,0.106,9,0.096,25,0.331,26,0.747,47,0.006,49,0.406,85,0.115,86,1.079,88,1.843,261,0.005,262,0.005,263,2.209,285,2.784,315,1.413,509,5.07,757,2.982,1379,7.579,3324,6.392,4323,6.969,4324,9.241,4325,9.241,4326,9.241,4327,9.241,4328,9.241,4329,6.969,4330,6.969]],["title/classes/UserUtils.html",[90,0.126,2197,3.921]],["body/classes/UserUtils.html",[3,0.115,4,0.097,9,0.089,25,0.305,27,1.127,32,0.959,44,0.773,46,0.959,47,0.006,48,0.592,49,0.327,50,0.758,52,0.872,62,1.655,71,0.377,85,0.106,88,1.728,90,0.169,93,2.094,106,1.229,261,0.005,262,0.005,315,1.245,405,2.64,522,4.365,703,1.867,757,2.074,818,4.93,1074,2.796,1310,4.878,2197,6.509,3038,7.061,4251,7.076,4331,6.428,4332,7.936,4333,7.936,4334,7.936,4335,6.428,4336,7.936,4337,6.428,4338,6.428,4339,6.428,4340,8.99,4341,7.936,4342,7.936,4343,7.936,4344,7.936,4345,7.936,4346,7.936,4347,6.428,4348,8.609,4349,5.732,4350,6.428,4351,6.428,4352,6.428,4353,6.428,4354,5.732,4355,5.732,4356,6.428,4357,5.732,4358,6.428,4359,6.428,4360,6.428]],["title/interfaces/UserWithPrivileges.html",[86,0.74,2720,3.463]],["body/interfaces/UserWithPrivileges.html",[3,0.126,4,0.106,9,0.097,25,0.333,26,0.75,47,0.006,48,0.667,49,0.345,64,2.686,85,0.153,86,1.434,88,1.819,261,0.005,262,0.005,263,2.224,315,1.449,491,4.468,521,5.441,522,4.604,659,3.745,757,2.701,2250,5.89,2718,4.834,2719,5.382,2720,6.062,2721,6.38,2722,4.834]],["title/classes/Utils.html",[90,0.126,2142,3.921]],["body/classes/Utils.html",[3,0.092,4,0.078,9,0.071,25,0.409,26,0.74,27,1.173,32,0.934,44,0.805,46,0.998,47,0.007,48,0.616,49,0.341,50,0.846,52,1.01,60,0.878,61,0.754,85,0.085,88,1.487,90,0.181,93,1.142,106,1.442,119,1.087,261,0.004,262,0.004,265,1.98,282,4.907,285,1.993,294,3.161,300,2.366,313,5.263,315,1.442,321,3.608,703,2.398,724,5.982,752,1.887,764,5.598,812,2.795,863,6.119,1004,3.127,1074,2.231,1156,4.175,1310,4.955,1359,5.629,1492,3.533,1647,5.629,1652,8.197,1682,8.067,1839,3.715,2027,6.119,2077,6.896,2106,7.266,2142,5.629,3281,6.119,4129,4.573,4349,4.573,4361,5.129,4362,5.129,4363,5.129,4364,4.207,4365,5.129,4366,6.863,4367,6.863,4368,6.863,4369,5.129,4370,6.863,4371,5.129,4372,8.859,4373,6.863,4374,8.609,4375,6.863,4376,8.609,4377,5.129,4378,6.863,4379,6.863,4380,6.863,4381,6.863,4382,5.129,4383,6.863,4384,6.863,4385,6.863,4386,8.259,4387,7.734,4388,6.863,4389,8.259,4390,5.129,4391,5.129,4392,5.129,4393,5.129,4394,6.863,4395,5.129,4396,5.129]],["title/interfaces/ValidationError.html",[86,0.74,1035,3.293]],["body/interfaces/ValidationError.html",[3,0.126,4,0.107,9,0.097,25,0.335,26,0.752,29,2.403,47,0.006,49,0.404,64,3.212,85,0.116,86,1.299,261,0.005,262,0.005,263,2.234,265,1.621,268,4.488,308,3.137,309,5.405,315,1.39,996,3.569,1035,5.78,1038,4.914,1066,6.435,1068,6.435,1069,5.781,1119,5.781,4397,7.048,4398,7.048,4399,6.284,4400,7.048,4401,7.048,4402,6.883,4403,6.883,4404,8.391,4405,8.391,4406,8.391]],["title/pipes/ValidationErrorPipe.html",[1770,2.08,2597,3.921]],["body/pipes/ValidationErrorPipe.html",[3,0.124,4,0.105,9,0.096,13,2.05,15,1.249,32,0.839,44,0.676,46,0.839,47,0.006,48,0.664,49,0.286,50,0.662,52,0.914,61,1.357,71,0.33,73,0.662,85,0.115,90,0.183,106,1.075,261,0.005,262,0.005,265,1.912,268,3.882,315,1.202,321,2.768,712,3.786,1035,5.727,1038,4.312,1069,6.819,1093,3.163,1770,4.014,2597,6.819,2599,7.413,3610,4.385,3614,5.727,3616,5.727,4399,8.228,4402,6.819,4403,6.819,4407,8.314,4408,6.94,4409,6.94,4410,8.314,4411,6.94]],["title/directives/ViewContainerDirective.html",[118,0.861,258,0.981]],["body/directives/ViewContainerDirective.html",[3,0.13,4,0.11,9,0.1,15,1.304,16,1.437,25,0.344,26,0.764,27,1.212,37,1.065,44,0.831,46,0.875,47,0.006,48,0.54,49,0.352,50,0.691,71,0.344,73,0.691,85,0.12,90,0.191,118,1.535,244,1.808,249,1.415,258,1.75,259,1.808,261,0.005,262,0.005,1326,7.587,1889,4.769,4412,9.064,4413,7.243,4414,7.243,4415,7.243,4416,7.243]],["title/components/ViewOptionsComponent.html",[0,0.205,243,0.949]],["body/components/ViewOptionsComponent.html",[0,0.288,1,0.797,2,1.173,3,0.071,4,0.06,5,0.784,6,0.893,7,0.851,8,0.851,9,0.054,15,0.711,16,1.704,17,1.907,18,0.747,19,1.193,20,0.759,21,1.193,23,1.154,25,0.188,26,0.512,27,1.159,37,0.581,44,0.82,46,0.477,47,0.006,48,0.608,49,0.323,50,0.377,60,0.979,61,0.841,71,0.35,73,0.377,77,1.064,81,0.711,85,0.065,87,3.565,88,1.417,89,3.12,90,0.104,93,0.879,109,4.055,110,1.689,112,4.115,113,1.605,114,1.229,115,0.851,116,1.193,117,1.38,118,0.711,119,1.89,120,0.851,121,1.449,122,0.797,123,0.823,124,0.81,125,0.851,126,0.797,127,0.851,128,0.81,129,0.823,130,0.851,131,0.823,132,0.851,133,0.823,134,0.851,135,0.797,136,0.823,137,0.851,138,0.823,139,0.851,140,0.837,141,0.797,142,1.251,143,1.43,144,1.232,145,0.797,146,1.232,147,0.784,148,1.921,149,0.797,150,0.654,151,0.851,152,0.823,153,1.232,154,0.797,155,1.292,156,0.797,157,0.797,158,0.823,159,0.851,160,0.797,161,0.851,162,0.823,163,0.759,164,1.38,165,0.823,166,0.851,167,0.81,168,1.739,169,0.851,170,0.823,171,0.851,172,0.823,173,0.81,174,0.851,175,0.81,176,0.851,177,0.81,178,0.797,179,0.851,180,0.81,181,1.152,182,0.851,183,0.81,184,0.851,185,0.81,186,0.851,187,0.797,188,0.823,189,0.81,190,0.916,191,0.851,192,0.797,193,0.851,194,0.81,195,0.81,196,0.851,197,0.81,198,1.449,199,0.771,200,0.851,201,0.823,202,1.232,203,0.851,204,0.823,205,0.851,206,0.81,207,0.851,208,0.797,209,0.81,210,0.797,211,0.851,212,0.797,213,0.837,214,1.117,215,0.797,216,0.797,217,0.823,218,0.851,219,0.797,220,1.632,221,0.784,222,0.851,223,0.797,224,0.81,225,0.797,226,0.797,227,0.851,228,0.823,229,0.851,230,1.232,231,0.823,232,0.851,233,0.823,234,0.851,235,0.81,236,0.851,237,0.784,238,0.797,239,0.823,240,0.851,241,0.823,242,0.851,243,1.554,244,1.89,245,1.232,246,0.797,247,0.837,248,0.688,249,0.771,250,0.81,251,0.837,252,0.81,253,0.851,254,0.81,255,0.851,256,0.797,257,0.851,258,0.81,259,0.837,260,0.851,261,0.004,262,0.004,267,3.286,289,1.297,315,0.827,318,2.473,346,3.052,382,1.371,404,1.321,405,2.503,407,2.047,438,1.251,553,2.599,554,4.006,602,2.172,605,1.643,606,1.424,607,1.542,608,1.643,619,2.241,620,2.401,695,1.81,696,1.952,697,1.424,701,2.131,707,1.643,708,1.574,727,2.063,728,2.104,729,2.104,731,1.208,734,2.104,737,1.643,738,1.608,740,2.329,741,2.379,758,1.371,759,2.487,763,1.717,765,2.318,779,2.145,812,2.738,813,2.965,819,2.495,833,1.991,843,6.572,866,2.599,894,2.047,901,2.401,902,2.719,951,2.318,958,2.318,1174,2.599,1228,6.607,1457,3.698,1485,4.385,2239,2.318,4417,8.616,4418,3.52,4419,5.994,4420,5.098,4421,5.994,4422,5.718,4423,3.52,4424,5.994,4425,3.948,4426,5.994,4427,3.948,4428,3.52,4429,3.52,4430,3.52]],["title/components/ViewOptionsComponent-1.html",[0,0.17,243,0.791,752,1.465]],["body/components/ViewOptionsComponent-1.html",[0,0.268,1,0.704,2,1.07,3,0.062,4,0.053,5,0.692,6,0.789,7,0.751,8,0.751,9,0.048,15,0.627,16,1.696,17,1.897,18,0.659,19,1.088,20,0.67,21,1.088,23,1.053,25,0.248,26,0.467,27,1.23,37,0.513,44,0.844,46,0.421,47,0.006,48,0.582,49,0.322,50,0.333,60,1.336,61,1.147,62,1.088,65,2.346,71,0.384,73,0.333,74,1.048,77,0.971,81,0.627,85,0.058,87,3.387,88,1.334,89,2.964,90,0.092,93,0.776,110,2.305,112,4.367,113,1.755,114,1.624,115,0.751,116,1.088,117,1.424,118,0.627,119,1.926,120,0.751,121,1.347,122,0.704,123,0.727,124,0.715,125,0.751,126,0.704,127,0.751,128,0.715,129,1.304,130,0.751,131,0.727,132,0.751,133,0.727,134,0.751,135,0.704,136,0.727,137,0.751,138,0.727,139,0.751,140,0.739,141,0.704,142,1.163,143,1.385,144,1.124,145,0.704,146,1.124,147,0.692,148,1.865,149,0.704,150,0.577,151,0.751,152,0.727,153,1.124,154,0.704,155,1.429,156,0.704,157,0.704,158,0.727,159,0.751,160,0.704,161,0.751,162,0.727,163,0.67,164,1.283,165,0.727,166,0.751,167,0.715,168,1.716,169,0.751,170,0.727,171,0.751,172,0.727,173,0.715,174,0.751,175,0.715,176,0.751,177,0.715,178,0.704,179,0.751,180,0.715,181,1.071,182,0.751,183,0.715,184,0.751,185,0.715,186,0.751,187,0.704,188,0.727,189,0.715,190,1.112,191,0.751,192,0.704,193,0.751,194,0.715,195,0.715,196,0.751,197,0.715,198,1.347,199,0.681,200,0.751,201,0.727,202,1.124,203,0.751,204,0.727,205,0.751,206,0.715,207,0.751,208,0.704,209,0.715,210,0.704,211,0.751,212,0.704,213,0.739,214,1.019,215,0.704,216,1.262,217,0.727,218,0.751,219,0.704,220,1.55,221,0.692,222,0.751,223,0.704,224,0.715,225,0.704,226,0.704,227,0.751,228,0.727,229,0.751,230,1.124,231,0.727,232,0.751,233,0.727,234,0.751,235,0.715,236,0.751,237,0.692,238,0.704,239,0.727,240,0.751,241,0.727,242,0.751,243,1.476,244,1.835,245,1.124,246,0.704,247,0.739,248,0.607,249,0.681,250,0.715,251,0.739,252,0.715,253,0.751,254,0.715,255,0.751,256,0.704,257,0.751,258,0.715,259,0.739,260,0.751,261,0.003,262,0.003,289,1.145,294,1.997,318,2.553,346,3.705,382,1.211,404,1.746,405,2.59,406,1.45,407,1.808,438,1.105,553,2.295,554,3.831,602,1.917,605,2.171,606,1.258,607,2.038,608,2.171,619,1.979,620,2.12,695,1.986,696,2.265,697,1.882,701,2.2,703,1.816,707,2.171,708,2.493,711,1.712,712,1.483,727,2.682,728,2.734,729,2.734,730,1.258,731,1.596,732,1.808,733,1.758,734,2.3,737,2.171,738,2.125,740,2.827,741,2.888,752,1.282,758,1.211,759,3.019,763,2.269,765,2.046,779,1.957,812,3.027,813,3.242,819,2.203,833,2.632,866,2.295,894,1.808,901,2.12,902,2.401,912,2.673,951,2.046,958,3.063,1174,2.295,1228,6.741,1360,2.525,1457,4.291,1485,4.001,1854,4.894,1860,2.525,2149,2.401,2239,3.063,2240,2.12,3867,5.575,4104,4.652,4313,3.108,4418,3.108,4419,5.575,4420,4.652,4421,5.575,4423,3.108,4424,5.575,4426,5.575,4428,3.108,4429,3.108,4430,3.108,4431,8.79,4432,7.801,4433,6.252,4434,5.217,4435,3.486,4436,3.486,4437,3.486,4438,3.486,4439,3.486,4440,3.108,4441,5.217,4442,3.486,4443,3.486]],["title/interfaces/Workspace.html",[77,0.889,86,0.74]],["body/interfaces/Workspace.html",[3,0.125,4,0.106,9,0.096,25,0.332,26,0.747,47,0.006,48,0.716,49,0.39,71,0.332,77,1.818,85,0.115,86,1.382,88,1.777,143,1.454,195,1.712,261,0.005,262,0.005,263,2.212,265,1.605,315,1.29,509,5.075,757,3.095,2721,4.807,4444,6.979,4445,8.342,4446,8.342,4447,8.342,4448,9.245,4449,6.979]],["title/injectables/WorkspaceService.html",[329,1.794,1149,2.412]],["body/injectables/WorkspaceService.html",[3,0.085,4,0.072,9,0.065,25,0.225,26,0.582,27,1.365,32,0.786,37,1.092,44,0.88,46,1.046,47,0.007,48,0.646,49,0.357,50,0.826,52,1.028,57,1.813,60,1.272,61,0.697,62,1.667,68,3.284,71,0.398,73,0.452,77,1.853,83,1.264,85,0.078,88,1.663,90,0.125,91,1.359,106,1.297,142,1.21,150,1.388,190,1.42,247,1.776,261,0.004,262,0.004,265,1.99,282,3.471,315,1.074,321,3.341,329,2.44,330,5.038,331,2.457,333,3.326,335,4.553,340,5.556,344,4.48,356,7.106,357,6.712,380,2.457,381,2.327,382,1.645,501,2.882,520,3.264,524,3.373,757,2.955,1010,3.558,1094,5.695,1149,3.281,1152,4.11,1277,3.264,1363,5.334,1391,4.11,1666,4.282,1742,4.71,1768,6.067,2235,3.633,2509,4.224,2677,5.334,2998,4.71,3029,3.886,3321,5.799,4364,5.334,4450,4.738,4451,5.799,4452,5.799,4453,6.503,4454,6.503,4455,4.738,4456,6.503,4457,4.738,4458,6.503,4459,4.738,4460,4.738,4461,6.503,4462,4.738,4463,6.503,4464,4.738,4465,4.738,4466,5.799,4467,4.738,4468,4.738,4469,4.738,4470,4.738,4471,4.738,4472,4.738,4473,4.738,4474,6.503,4475,4.738]],["title/components/WorkspacesListPage.html",[0,0.205,246,0.965]],["body/components/WorkspacesListPage.html",[0,0.317,1,0.7,2,1.067,3,0.062,4,0.053,5,1.238,6,0.785,7,0.747,8,0.747,9,0.048,13,1.536,14,2.435,15,0.624,16,1.695,17,1.896,18,1.179,19,1.084,20,1.426,21,1.084,23,1.049,25,0.165,26,0.466,27,1.106,32,0.628,36,2.705,37,1.018,44,0.809,46,0.837,47,0.006,48,0.645,49,0.306,50,0.743,52,0.815,53,1.313,60,1.068,61,0.51,62,1.084,68,2.482,71,0.403,73,0.331,77,1.83,81,0.624,83,0.925,85,0.057,90,0.091,91,1.267,110,1.025,115,0.747,116,1.084,117,1.279,118,0.624,119,1.468,120,0.747,121,1.343,122,0.7,123,1.3,124,0.712,125,0.747,126,0.7,127,0.747,128,0.712,129,0.723,130,0.747,131,0.723,132,0.747,133,0.723,134,0.747,135,0.7,136,0.723,137,0.747,138,0.723,139,0.747,140,0.735,141,0.7,142,1.16,143,0.847,144,1.12,145,0.7,146,1.12,147,0.689,148,1.863,149,0.7,150,1.229,151,0.747,152,0.723,153,1.12,154,0.7,155,1.662,156,0.7,157,0.7,158,0.723,159,0.747,160,0.7,161,0.747,162,0.723,163,0.667,164,1.279,165,0.723,166,0.747,167,0.712,168,1.497,169,0.747,170,0.723,171,0.747,172,0.723,173,0.712,174,0.747,175,0.712,176,0.747,177,0.712,178,0.7,179,0.747,180,0.712,181,1.068,182,0.747,183,0.712,184,0.747,185,0.712,186,0.747,187,0.7,188,0.723,189,0.712,190,1.385,191,0.747,192,0.7,193,0.747,194,0.712,195,0.712,196,0.747,197,0.712,198,1.343,199,0.678,200,0.747,201,0.723,202,1.12,203,0.747,204,0.723,205,0.747,206,0.712,207,0.747,208,0.7,209,0.712,210,0.7,211,0.747,212,0.7,213,0.735,214,1.016,215,0.7,216,0.7,217,0.723,218,0.747,219,0.7,220,1.547,221,0.689,222,0.747,223,0.7,224,0.712,225,0.7,226,0.7,227,0.747,228,0.723,229,0.747,230,1.12,231,0.723,232,0.747,233,0.723,234,0.747,235,0.712,236,0.747,237,0.689,238,0.7,239,0.723,240,0.747,241,0.723,242,0.747,243,1.032,244,1.322,245,1.12,246,1.398,247,2.008,248,1.529,249,0.678,250,0.712,251,0.735,252,0.712,253,0.747,254,0.712,255,0.747,256,0.7,257,0.747,258,0.712,259,0.735,260,0.747,261,0.003,262,0.003,265,1.592,275,3.423,289,1.14,317,2.427,321,2.958,333,3.455,344,3.581,370,2.622,396,3.762,438,1.099,543,4.92,557,3.975,558,4.309,605,1.443,606,1.251,607,1.355,608,1.443,695,1.531,702,1.908,711,2.553,758,1.205,961,3.285,998,2.696,1010,2.314,1148,2.11,1149,4.073,1154,3.423,1172,2.389,1173,2.192,1187,2.284,1210,3.093,1244,6.964,1380,3.765,1446,4.635,1510,3.986,1513,3.986,1527,2.389,1545,3.162,1565,4.635,2875,4.635,2876,4.635,2880,4.635,2998,3.765,3017,2.845,3018,5.113,3019,4.263,3026,3.093,3029,2.845,3030,3.093,3036,4.635,3037,4.635,3143,4.263,3891,3.093,3901,3.093,3902,3.093,3967,4.635,4012,4.635,4476,8.491,4477,6.924,4478,5.198,4479,3.469,4480,5.198,4481,5.198,4482,3.469,4483,3.469,4484,5.198,4485,3.469,4486,5.198,4487,5.198,4488,3.469,4489,3.469,4490,3.469]],["title/dependencies.html",[411,3.268,4491,3.551]],["body/dependencies.html",[47,0.006,73,0.633,74,1.994,83,1.77,261,0.005,262,0.005,405,1.862,411,3.767,427,6.205,438,2.103,472,4.192,605,3.633,606,2.394,607,3.55,608,3.633,795,5.113,1112,4.805,1459,5.441,1560,5.088,1587,4.57,1611,6.205,1634,4.805,1636,5.441,1808,3.895,1809,3.649,1992,6.205,2140,5.441,2141,5.441,2560,5.915,2561,5.915,2723,4.57,2735,4.192,3416,5.088,4193,5.915,4440,5.915,4492,6.634,4493,9.686,4494,6.634,4495,8.091,4496,6.634,4497,6.634,4498,6.634,4499,6.634,4500,6.634,4501,6.634,4502,9.089,4503,6.634,4504,6.634,4505,6.634,4506,6.634,4507,6.634,4508,6.634,4509,6.634,4510,6.634,4511,6.634,4512,6.634,4513,6.634,4514,6.634,4515,6.634,4516,6.634,4517,6.634,4518,6.634,4519,6.634,4520,6.634,4521,6.634,4522,6.634,4523,6.634,4524,6.634,4525,6.634]],["title/miscellaneous/enumerations.html",[4526,2.744,4527,5.131]],["body/miscellaneous/enumerations.html",[20,1.521,25,0.304,47,0.006,49,0.264,60,1.355,61,1.485,142,1.472,155,1.521,181,1.095,261,0.005,262,0.005,264,5.245,273,5.73,274,4.812,282,4.222,285,2.297,303,3.755,308,3.521,309,4.904,310,5.245,318,2.91,613,5.73,752,2.353,810,4.041,831,4.999,894,4.102,1297,5.73,1413,5.702,1461,7.053,1689,5.245,2168,6.067,2328,4.999,2794,4.632,2795,4.632,3066,5.702,3069,7.053,3088,5.702,3089,5.702,3269,5.245,3270,6.488,3283,7.053,3284,5.702,3285,5.702,3287,4.904,3786,4.632,3787,4.904,3795,5.245,3837,6.067,3840,6.067,3841,6.067,3941,6.488,3943,6.488,3945,6.488,3947,6.488,3949,6.488,4526,4.405,4527,5.702,4528,6.395,4529,7.911,4530,6.395,4531,7.911,4532,6.395,4533,6.395,4534,5.702,4535,8.589,4536,8.589,4537,6.395,4538,7.911,4539,6.395,4540,7.911]],["title/miscellaneous/functions.html",[1678,4.413,4526,2.744]],["body/miscellaneous/functions.html",[0,0.296,5,1.854,16,1.167,17,0.983,21,1.084,23,1.049,25,0.247,46,1.175,47,0.006,48,0.725,49,0.397,50,0.928,52,0.95,61,0.765,64,1.99,66,3.635,85,0.086,88,1.497,90,0.182,118,0.936,147,1.032,248,1.549,261,0.004,262,0.004,268,3.635,315,1.411,333,3.455,353,3.162,372,3.986,491,3.696,731,2.118,764,5.465,864,5.31,923,6.387,935,5.68,996,2.211,1123,7.093,1155,5.127,1168,4.56,1666,3.423,1678,3.986,1757,6.387,1758,4.635,1759,6.174,1762,4.635,1810,5.68,1854,3.423,2116,4.635,2119,5.856,2196,5.68,2636,6.387,2638,6.174,2643,4.635,2817,5.68,3080,6.943,3501,5.68,3706,5.31,3729,5.68,3992,6.174,4106,5.68,4107,4.635,4108,8.094,4109,6.174,4111,4.635,4118,4.635,4119,6.174,4121,4.635,4123,4.635,4130,4.635,4132,4.635,4466,6.174,4526,3.581,4541,5.198,4542,6.925,4543,6.925,4544,8.894,4545,6.925,4546,6.925,4547,5.198,4548,6.925,4549,6.925,4550,7.787,4551,5.198,4552,5.198,4553,6.925,4554,6.925,4555,7.787,4556,6.925,4557,6.925,4558,5.198,4559,6.925,4560,5.198,4561,5.198,4562,6.925,4563,5.198,4564,5.198,4565,5.198,4566,5.198,4567,6.925,4568,5.198,4569,5.198,4570,5.198,4571,5.198,4572,5.198,4573,5.198,4574,5.198,4575,5.198,4576,5.198,4577,8.648,4578,5.198,4579,5.198,4580,5.198,4581,5.198,4582,5.198,4583,5.198,4584,5.198,4585,5.198,4586,5.198,4587,5.198,4588,5.198,4589,5.198,4590,6.174,4591,5.198,4592,5.198,4593,5.198,4594,5.198,4595,5.198,4596,5.198,4597,5.198,4598,5.198,4599,5.198,4600,5.198,4601,5.198,4602,5.198]],["title/index.html",[25,0.189,1373,2.744,1523,2.744]],["body/index.html",[4,0.099,17,1.64,47,0.006,136,1.364,143,1.065,163,1.257,181,1.12,214,1.278,261,0.005,262,0.005,370,3.298,401,7.15,410,2.844,454,4.736,461,5.83,672,5.808,694,3.838,724,4.736,836,4.442,1102,5.014,1281,6.15,1373,4.504,1409,4.736,1523,4.504,1697,7.417,1989,7.244,2029,5.014,2221,4.736,2715,5.28,3129,7.734,3365,5.83,3366,7.15,3371,5.83,3732,5.363,3792,5.363,4135,5.83,4451,7.15,4603,6.538,4604,6.538,4605,6.538,4606,6.538,4607,6.538,4608,6.538,4609,8.019,4610,8.674,4611,6.538,4612,9.043,4613,6.538,4614,6.538,4615,6.538,4616,5.83,4617,6.538,4618,6.538,4619,6.538,4620,8.679,4621,6.538,4622,6.538,4623,6.538,4624,6.538,4625,5.363,4626,7.417,4627,6.538,4628,6.538,4629,6.538,4630,6.538,4631,5.363,4632,8.019,4633,8.019,4634,8.019,4635,8.674,4636,6.538,4637,6.538,4638,6.538,4639,6.538,4640,5.83,4641,6.935,4642,6.538,4643,6.538,4644,6.538,4645,6.538,4646,6.538,4647,6.538,4648,6.538,4649,6.538,4650,6.538,4651,6.538]],["title/license.html",[1373,2.744,1523,2.744,3106,3.267]],["body/license.html",[4,0.123,28,2.897,29,2.271,47,0.005,190,1.299,261,0.005,262,0.005,297,5.108,370,4.411,372,6.707,420,3.11,564,4.824,831,4.209,861,3.454,1156,4.052,1661,7.232,1702,5.939,2933,4.209,3106,5.463,3777,5.939,4641,5.108,4652,6.661,4653,6.661,4654,9.329,4655,6.661,4656,6.661,4657,6.661,4658,6.661,4659,6.661,4660,6.661,4661,6.661,4662,6.661,4663,6.661,4664,6.661,4665,8.111,4666,6.661,4667,6.661,4668,8.745,4669,8.745,4670,6.661,4671,8.111,4672,6.661,4673,8.111,4674,8.111,4675,6.661,4676,6.661,4677,6.661,4678,6.661,4679,8.111,4680,6.661,4681,8.111,4682,6.661,4683,8.111,4684,8.111,4685,8.745,4686,8.111,4687,6.661,4688,6.661,4689,6.661,4690,6.661,4691,6.661,4692,6.661,4693,6.661,4694,6.661,4695,6.661,4696,6.661,4697,6.661,4698,6.661,4699,6.661,4700,6.661,4701,6.661,4702,6.661,4703,6.661,4704,6.661,4705,5.939,4706,6.661,4707,6.661,4708,6.661,4709,6.661,4710,6.661,4711,6.661,4712,8.111,4713,6.661,4714,6.661,4715,6.661,4716,6.661,4717,6.661,4718,5.939,4719,6.661,4720,6.661,4721,6.661,4722,6.661,4723,6.661]],["title/modules.html",[410,2.847]],["body/modules.html",[47,0.005,261,0.005,262,0.005,409,5.459,410,3.097,416,5.156,417,4.042,465,5.459,469,5.156,607,3.831,1213,5.459,1218,5.156,1579,5.459,1582,5.156,1992,7.522,2053,8.745,2695,5.459,2698,5.156,3423,5.459,3427,5.156,4079,5.459,4083,5.156,4364,7.983,4724,10.061,4725,9.733]],["title/overview.html",[4726,5.835]],["body/overview.html",[1,1.523,2,1.003,47,0.006,124,1.834,126,1.523,128,1.548,135,1.523,141,1.523,145,1.523,147,1.499,149,1.523,154,1.523,156,1.523,157,1.523,160,1.523,167,1.548,175,1.548,177,1.548,180,1.548,183,1.548,185,1.548,187,1.523,189,1.548,192,1.523,197,1.548,208,1.523,210,1.523,212,1.523,215,1.523,219,1.523,221,1.499,223,1.523,225,1.523,226,1.523,235,1.548,237,1.499,238,1.523,243,1.499,246,1.523,249,0.955,261,0.004,262,0.004,263,1.549,331,2.534,409,7.215,410,2.126,411,3.771,412,4.357,413,4.357,414,4.357,415,4.357,416,5.466,417,5.074,418,4.041,419,2.608,420,2.282,437,2.775,465,7.484,466,4.357,467,4.357,468,4.357,469,5.466,752,1.798,1074,2.126,1213,7.681,1214,4.357,1215,4.357,1216,4.357,1217,4.357,1218,5.466,1219,4.028,1579,6.209,1580,4.357,1581,4.357,1582,5.466,2470,4.008,2695,6.209,2696,4.357,2697,4.357,2698,5.466,3287,3.747,3423,7.528,3424,4.357,3425,4.357,3426,4.357,3427,5.466,3609,5.787,3610,3.088,3936,5.787,3951,5.787,4043,5.787,4051,5.787,4068,4.357,4079,7.71,4080,4.357,4081,4.357,4082,4.357,4083,5.466,4354,4.357,4726,4.357,4727,4.887,4728,4.887,4729,4.887,4730,4.887,4731,4.887]],["title/properties.html",[26,0.515,4491,3.551]],["body/properties.html",[26,0.703,47,0.006,261,0.006,262,0.006,2623,6.998,4732,7.849]],["title/routes.html",[437,3.715]],["body/routes.html",[47,0.006,261,0.006,262,0.006,437,4.478]],["title/miscellaneous/typealiases.html",[4526,2.744,4733,5.755]],["body/miscellaneous/typealiases.html",[25,0.34,47,0.005,49,0.295,88,1.374,216,1.708,261,0.005,262,0.005,405,2.375,1457,4.655,1848,5.483,1849,6.374,1853,7.545,2119,5.573,2735,5.348,2746,5.864,2747,7.643,2759,6.941,2761,7.146,2764,6.75,2790,6.941,2791,6.941,2792,6.941,2793,6.13,3269,5.864,3270,6.941,3275,7.545,3519,5.864,3520,6.374,3694,5.864,4526,4.925,4534,6.374,4734,7.149,4735,7.149,4736,9.319,4737,9.015,4738,8.463,4739,7.149,4740,7.149,4741,7.149,4742,7.149,4743,7.149]],["title/additional-documentation/architecture.html",[248,0.694,1665,2.517,4744,3.551]],["body/additional-documentation/architecture.html",[0,0.382,2,1.829,9,0.135,17,0.991,18,1.317,28,3.401,47,0.005,48,0.391,49,0.216,57,3.189,61,0.771,90,0.138,118,1.5,142,0.975,143,0.854,195,1.076,249,1.628,261,0.004,262,0.004,263,2.478,274,3.189,282,2.798,304,4.3,308,4.267,333,2.181,334,4.3,408,3.467,410,3.624,437,2.976,659,2.007,695,1.287,712,2.23,732,4.623,733,2.644,855,3.313,861,2.719,996,3.326,1012,2.798,1015,2.509,1040,8.237,1061,4.3,1074,3.624,1083,4.674,1102,7.172,1119,6.413,1123,4.3,1409,5.044,1415,7.732,1635,4.02,1665,4.941,1677,4.674,1678,4.02,1686,6.034,1770,3.401,1833,2.884,2012,5.34,2029,7.464,2030,5.996,2470,5.711,2471,7.428,2933,3.313,3120,4.674,3182,6.209,3501,5.711,3610,5.265,4452,4.674,4590,7.428,4631,7.809,4640,4.674,4641,6.976,4705,6.972,4744,6.972,4745,5.242,4746,6.963,4747,8.237,4748,9.238,4749,5.242,4750,5.242,4751,8.741,4752,4.3,4753,5.242,4754,5.242,4755,5.242,4756,5.242,4757,5.242,4758,5.242,4759,5.242,4760,5.242,4761,8.331,4762,6.963,4763,5.242,4764,5.242,4765,5.242,4766,5.242,4767,5.242,4768,4.674,4769,7.732,4770,5.242,4771,9.097,4772,5.242,4773,5.242,4774,5.242,4775,5.242,4776,5.242,4777,5.242,4778,5.242,4779,5.242,4780,5.242,4781,6.963,4782,5.242,4783,6.413,4784,5.242,4785,7.819,4786,5.242,4787,5.242,4788,5.242,4789,5.242,4790,5.242,4791,5.242,4792,5.242,4793,5.242,4794,5.242,4795,5.242,4796,5.242,4797,5.242,4798,5.242]],["title/additional-documentation/localization.html",[224,0.817,248,0.694,1665,2.517]],["body/additional-documentation/localization.html",[9,0.118,17,1.689,47,0.006,60,1.08,62,1.636,86,0.976,117,1.294,143,1.027,155,1.212,190,1.01,224,1.294,261,0.005,262,0.005,308,2.807,318,2.32,370,3.181,724,4.567,819,3.985,894,4.067,996,3.63,1008,3.469,1102,6.014,1379,5.172,1409,5.68,1421,4.314,1466,5.402,1635,6.545,1809,4.314,1989,4.836,2106,5.172,2267,5.172,2606,5.622,2715,4.152,2735,5.394,2764,4.567,2932,5.622,2933,3.985,3071,5.622,3387,5.172,3401,6.781,3404,6.992,3406,6.992,3407,5.622,3408,6.992,3412,7.962,3415,5.622,3416,4.836,3661,5.172,4274,5.622,4355,5.622,4357,5.622,4402,5.172,4403,5.172,4616,6.992,4620,5.622,4625,5.172,4626,5.172,4718,5.622,4747,7.61,4751,5.622,4752,5.172,4768,5.622,4769,6.992,4783,5.172,4799,6.306,4800,6.306,4801,6.306,4802,6.306,4803,6.306,4804,7.842,4805,6.306,4806,6.306,4807,6.306,4808,6.306,4809,6.306,4810,6.306,4811,7.842,4812,6.306,4813,6.306,4814,6.306,4815,6.306,4816,6.306,4817,8.93,4818,6.306,4819,6.306,4820,7.842,4821,7.842,4822,7.842,4823,6.306,4824,7.842,4825,6.306,4826,8.93,4827,6.306,4828,7.842,4829,6.306,4830,6.306,4831,6.306,4832,6.306,4833,6.306,4834,6.306,4835,6.306,4836,6.306]],["title/additional-documentation/continuos-integration.html",[164,0.7,248,0.594,1665,2.157,4837,3.044]],["body/additional-documentation/continuos-integration.html",[9,0.1,47,0.005,142,1.349,163,1.394,164,1.488,248,1.263,261,0.005,262,0.005,370,3.659,373,5.949,381,3.563,838,5.62,864,6.546,1409,6.182,1686,5.254,1697,5.949,1956,4.997,2012,6.546,3631,6.467,4275,6.467,4625,5.949,4626,5.949,4631,7.001,4641,6.546,4752,7.439,4783,7.001,4837,6.467,4838,7.254,4839,8.535,4840,7.254,4841,7.254,4842,7.254,4843,8.535,4844,7.254,4845,7.254,4846,7.254,4847,7.254,4848,7.254,4849,7.254,4850,7.254,4851,7.254,4852,7.254,4853,7.254,4854,7.254,4855,7.254,4856,7.254,4857,7.254,4858,7.254]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["0",{"_index":703,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{}}}],["0.0.14",{"_index":4732,"title":{},"body":{"properties.html":{}}}],["0.01rem",{"_index":816,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0.1",{"_index":2243,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{}}}],["0.1.43",{"_index":4517,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":4501,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":4525,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":4273,"title":{},"body":{"components/TextareaComponent.html":{}}}],["0.1s",{"_index":900,"title":{},"body":{"components/ButtonComponent.html":{}}}],["0.2",{"_index":751,"title":{},"body":{"components/BoardPage.html":{}}}],["0.25rem",{"_index":2953,"title":{},"body":{"components/OptionComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["0.2rem",{"_index":2282,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["0.2s",{"_index":762,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["0.33.0",{"_index":4518,"title":{},"body":{"dependencies.html":{}}}],["0.35rem",{"_index":3454,"title":{},"body":{"components/SettingsPage.html":{}}}],["0.4rem",{"_index":2280,"title":{},"body":{"components/InputComponent.html":{}}}],["0.4s",{"_index":2236,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["0.5",{"_index":760,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/MainViewComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["0.5rem",{"_index":723,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SelectComponent.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["0.5s",{"_index":837,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0.7",{"_index":913,"title":{},"body":{"components/CardComponent.html":{}}}],["0.75",{"_index":2092,"title":{},"body":{"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{}}}],["0.75em",{"_index":2291,"title":{},"body":{"components/InputComponent.html":{}}}],["0.75rem",{"_index":893,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/OptionComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["0.8125rem",{"_index":889,"title":{},"body":{"components/ButtonComponent.html":{}}}],["0.8rem",{"_index":2299,"title":{},"body":{"components/InputComponent.html":{}}}],["00b300",{"_index":3556,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["0a95d0",{"_index":829,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0px",{"_index":1299,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["0xffffffff",{"_index":3051,"title":{},"body":{"classes/Random.html":{}}}],["1",{"_index":752,"title":{"components/ViewOptionsComponent-1.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/MainViewComponent.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0",{"_index":3058,"title":{},"body":{"classes/Random.html":{}}}],["1.0.2",{"_index":4522,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":4507,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":4500,"title":{},"body":{"dependencies.html":{}}}],["1.11.2",{"_index":4511,"title":{},"body":{"dependencies.html":{}}}],["1.22.17",{"_index":4649,"title":{},"body":{"index.html":{}}}],["1.25rem",{"_index":890,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1.2em",{"_index":4261,"title":{},"body":{"components/TextareaComponent.html":{}}}],["1.4em",{"_index":4259,"title":{},"body":{"components/TextareaComponent.html":{}}}],["1.5",{"_index":897,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1.5em",{"_index":2109,"title":{},"body":{"components/IconComponent.html":{}}}],["1.5rem",{"_index":965,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/TaskDialog.html":{}}}],["1.6em",{"_index":4258,"title":{},"body":{"components/TextareaComponent.html":{}}}],["1.8em",{"_index":4257,"title":{},"body":{"components/TextareaComponent.html":{}}}],["1.8px",{"_index":2397,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["10",{"_index":818,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SettingsPage.html":{},"classes/UserUtils.html":{}}}],["100",{"_index":114,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["1000",{"_index":3560,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["10000000",{"_index":4359,"title":{},"body":{"classes/UserUtils.html":{}}}],["100px",{"_index":3185,"title":{},"body":{"components/SchedulePage.html":{}}}],["100vh",{"_index":957,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["10px",{"_index":112,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["11.5.1",{"_index":4513,"title":{},"body":{"dependencies.html":{}}}],["113",{"_index":4063,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["123456789",{"_index":3047,"title":{},"body":{"classes/Random.html":{}}}],["1240px",{"_index":976,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["12px",{"_index":1043,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["13",{"_index":4728,"title":{},"body":{"overview.html":{}}}],["13.2.0",{"_index":4493,"title":{},"body":{"dependencies.html":{}}}],["13.2.5",{"_index":4651,"title":{},"body":{"index.html":{}}}],["13.3.0",{"_index":4495,"title":{},"body":{"dependencies.html":{}}}],["130px",{"_index":3181,"title":{},"body":{"components/SchedulePage.html":{}}}],["15",{"_index":4727,"title":{},"body":{"overview.html":{}}}],["150",{"_index":4442,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["152",{"_index":4058,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["15px",{"_index":912,"title":{},"body":{"components/CardComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{}}}],["16",{"_index":3063,"title":{},"body":{"classes/Random.html":{}}}],["16.13.0",{"_index":4648,"title":{},"body":{"index.html":{}}}],["16px",{"_index":839,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["16x16",{"_index":1621,"title":{},"body":{"classes/Emoji.html":{}}}],["16}px",{"_index":686,"title":{},"body":{"components/BoardPage.html":{}}}],["18",{"_index":4729,"title":{},"body":{"overview.html":{}}}],["18000",{"_index":3064,"title":{},"body":{"classes/Random.html":{}}}],["182",{"_index":4073,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["183",{"_index":4076,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["189",{"_index":4077,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["1em",{"_index":735,"title":{},"body":{"components/BoardPage.html":{},"components/MainViewComponent.html":{},"components/TextareaComponent.html":{}}}],["1px",{"_index":769,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TextareaComponent.html":{}}}],["1rem",{"_index":708,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/InputAssigneeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/OptionComponent.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["1s",{"_index":3564,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["2",{"_index":831,"title":{},"body":{"components/BoardTaskComponent.html":{},"classes/Enum.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"classes/SelectionEditPlugin.html":{},"components/UpperNavigationComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["2.3.0",{"_index":4521,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":3932,"title":{},"body":{"components/TaskListPage.html":{}}}],["20",{"_index":3166,"title":{},"body":{"components/SchedulePage.html":{}}}],["200",{"_index":877,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/TextareaComponent.html":{}}}],["200px",{"_index":4313,"title":{},"body":{"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["2022",{"_index":4655,"title":{},"body":{"license.html":{}}}],["204",{"_index":4062,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["20px",{"_index":953,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["219",{"_index":4059,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["222",{"_index":2714,"title":{},"body":{"components/MockPage.html":{}}}],["24px",{"_index":884,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{},"components/SnackbarComponent.html":{}}}],["25",{"_index":891,"title":{},"body":{"components/ButtonComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["250ms",{"_index":748,"title":{},"body":{"components/BoardPage.html":{}}}],["250px",{"_index":3514,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["255",{"_index":4343,"title":{},"body":{"classes/UserUtils.html":{}}}],["25px",{"_index":910,"title":{},"body":{"components/CardComponent.html":{},"components/TextareaComponent.html":{}}}],["28px",{"_index":1041,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["29px",{"_index":3934,"title":{},"body":{"components/TaskListPage.html":{}}}],["2ecc71",{"_index":766,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"pipes/StatusColorPipe.html":{},"components/TaskListPage.html":{}}}],["2em",{"_index":4256,"title":{},"body":{"components/TextareaComponent.html":{}}}],["2px",{"_index":902,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["2rem",{"_index":702,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["2s",{"_index":767,"title":{},"body":{"components/BoardPage.html":{},"components/InputTaskPropertyComponent.html":{},"components/OptionComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["3",{"_index":1689,"title":{},"body":{"classes/Enum.html":{},"classes/SelectionEditPlugin.html":{},"miscellaneous/enumerations.html":{}}}],["3.7.0",{"_index":4512,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":3367,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["300",{"_index":2239,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["300px",{"_index":721,"title":{},"body":{"components/BoardPage.html":{},"components/SelectComponent.html":{}}}],["30px",{"_index":2935,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{}}}],["315px",{"_index":3452,"title":{},"body":{"components/SettingsPage.html":{}}}],["32px",{"_index":824,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["35",{"_index":4730,"title":{},"body":{"overview.html":{}}}],["36969",{"_index":3061,"title":{},"body":{"classes/Random.html":{}}}],["36px",{"_index":2251,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["39;one&#39",{"_index":1692,"title":{},"body":{"classes/Enum.html":{}}}],["39;three&#39",{"_index":1694,"title":{},"body":{"classes/Enum.html":{}}}],["39;two&#39",{"_index":1693,"title":{},"body":{"classes/Enum.html":{}}}],["3px",{"_index":2241,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["4",{"_index":3287,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["4.0.17",{"_index":4515,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":4514,"title":{},"body":{"dependencies.html":{}}}],["4.2.3",{"_index":4508,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":2235,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/WorkspaceService.html":{}}}],["4000",{"_index":3535,"title":{},"body":{"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{}}}],["400px",{"_index":1470,"title":{},"body":{"injectables/DialogService.html":{},"components/InputComponent.html":{}}}],["401",{"_index":1748,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["403",{"_index":2504,"title":{},"body":{"components/LoginPage.html":{}}}],["404",{"_index":2509,"title":{},"body":{"components/LoginPage.html":{},"injectables/WorkspaceService.html":{}}}],["40px",{"_index":756,"title":{},"body":{"components/BoardPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["41",{"_index":4346,"title":{},"body":{"classes/UserUtils.html":{}}}],["422",{"_index":3100,"title":{},"body":{"components/RegisterPage.html":{}}}],["4294967296",{"_index":3065,"title":{},"body":{"classes/Random.html":{}}}],["42px",{"_index":888,"title":{},"body":{"components/ButtonComponent.html":{}}}],["44px",{"_index":2283,"title":{},"body":{"components/InputComponent.html":{}}}],["450px",{"_index":974,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["45deg",{"_index":3568,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["46px",{"_index":2865,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["4a5465",{"_index":3618,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["4px",{"_index":840,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/MockPage.html":{},"components/SettingsPage.html":{},"components/TaskListPage.html":{}}}],["4rem",{"_index":962,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/TaskListPage.html":{}}}],["4s",{"_index":718,"title":{},"body":{"components/BoardPage.html":{},"components/DialogOutletComponent.html":{}}}],["5",{"_index":828,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/SchedulePage.html":{}}}],["50",{"_index":820,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["500",{"_index":770,"title":{},"body":{"components/BoardPage.html":{},"components/CardComponent.html":{},"components/DialogOutletComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["500px",{"_index":969,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/TextareaComponent.html":{}}}],["520px",{"_index":977,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["5px",{"_index":765,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/ForgotPasswordPage.html":{},"components/ListGroupComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["6",{"_index":4354,"title":{},"body":{"classes/UserUtils.html":{},"overview.html":{}}}],["6.1.0",{"_index":4502,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":4068,"title":{},"body":{"pipes/TaskTypePipe.html":{},"overview.html":{}}}],["600",{"_index":2240,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["60px",{"_index":1188,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["62px",{"_index":4312,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["64px",{"_index":952,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{}}}],["65535",{"_index":3062,"title":{},"body":{"classes/Random.html":{}}}],["7",{"_index":3141,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["7.1.0",{"_index":4510,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":4519,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsPage.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["720px",{"_index":978,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["74px",{"_index":3581,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["76",{"_index":4067,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["770px",{"_index":970,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["7px",{"_index":911,"title":{},"body":{"components/CardComponent.html":{}}}],["8.3.2",{"_index":4523,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2247,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SettingsPage.html":{}}}],["800",{"_index":739,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["800px",{"_index":3455,"title":{},"body":{"components/SettingsPage.html":{}}}],["80px",{"_index":887,"title":{},"body":{"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{}}}],["84",{"_index":4731,"title":{},"body":{"overview.html":{}}}],["89",{"_index":4072,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["8px",{"_index":3453,"title":{},"body":{"components/SettingsPage.html":{}}}],["9.2.1",{"_index":4504,"title":{},"body":{"dependencies.html":{}}}],["95",{"_index":4345,"title":{},"body":{"classes/UserUtils.html":{}}}],["950px",{"_index":973,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["987654321",{"_index":3049,"title":{},"body":{"classes/Random.html":{}}}],["_",{"_index":1839,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"components/SnackbarOutletComponent.html":{},"classes/StoryPageConfig.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/Utils.html":{}}}],["_args",{"_index":3768,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["_assignee",{"_index":2165,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["_blank",{"_index":1979,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["_checkifisrequired",{"_index":1120,"title":{},"body":{"components/ControlAccessor.html":{}}}],["_componentref",{"_index":1329,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["_config",{"_index":3695,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["_context",{"_index":2449,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["_control",{"_index":4138,"title":{},"body":{"classes/TestNgControl.html":{}}}],["_editor",{"_index":4210,"title":{},"body":{"components/TextareaComponent.html":{}}}],["_editor.getcontentheight",{"_index":4226,"title":{},"body":{"components/TextareaComponent.html":{}}}],["_editor.getmodel()?.ondidchangecontent",{"_index":4238,"title":{},"body":{"components/TextareaComponent.html":{}}}],["_editor.layout",{"_index":4235,"title":{},"body":{"components/TextareaComponent.html":{}}}],["_editor.ondidcontentsizechange(updateheight",{"_index":4237,"title":{},"body":{"components/TextareaComponent.html":{}}}],["_edits",{"_index":3308,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["_emojiconvertor",{"_index":1589,"title":{},"body":{"classes/Emoji.html":{}}}],["_filters",{"_index":1871,"title":{},"body":{"components/FiltersComponent.html":{}}}],["_icon",{"_index":2099,"title":{},"body":{"components/IconComponent.html":{}}}],["_index",{"_index":3578,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["_initcheckfortouch",{"_index":1130,"title":{},"body":{"components/ControlAccessor.html":{}}}],["_initialized",{"_index":2630,"title":{},"body":{"classes/Marked.html":{},"classes/Monaco.html":{}}}],["_isbuttondisabled",{"_index":4277,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["_isopen",{"_index":2375,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["_key",{"_index":3313,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["_main/_main.module",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["_main/components/main",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["_main/interfaces/color.interface",{"_index":3607,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["_main/services/api.service",{"_index":3999,"title":{},"body":{"injectables/TaskService.html":{}}}],["_main/services/dialog.service",{"_index":611,"title":{},"body":{"components/BoardPage.html":{}}}],["_main/validators/required.validator",{"_index":84,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["_meta",{"_index":1816,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["_persistentkey",{"_index":2956,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["_projectid",{"_index":2330,"title":{},"body":{"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{}}}],["_required",{"_index":1108,"title":{},"body":{"components/ControlAccessor.html":{}}}],["_story",{"_index":3696,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["_templateref",{"_index":2451,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["_tokens",{"_index":1649,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["_viewcontainer",{"_index":2457,"title":{},"body":{"directives/LetDirective.html":{}}}],["_viewcontainer.createembeddedview(_templateref",{"_index":2452,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["a[comparer",{"_index":3264,"title":{},"body":{"components/SelectComponent.html":{}}}],["ability",{"_index":2037,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["above",{"_index":1661,"title":{},"body":{"interfaces/EmojiToken.html":{},"license.html":{}}}],["absolute",{"_index":833,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["abstract",{"_index":4777,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["abstractcontrol",{"_index":4145,"title":{},"body":{"classes/TestNgControl.html":{}}}],["acc",{"_index":2694,"title":{},"body":{"injectables/MemberService.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["acc.set(member.user.id",{"_index":2693,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["acc.set(status.id",{"_index":3649,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["access",{"_index":334,"title":{},"body":{"injectables/ApiService.html":{},"injectables/GitIntegrationService.html":{},"additional-documentation/architecture.html":{}}}],["accessor",{"_index":1031,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["accessor.class",{"_index":1033,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["accessor.class.ts",{"_index":1060,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:127",{"_index":1079,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:135",{"_index":1076,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:142",{"_index":1077,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:148",{"_index":1078,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:18",{"_index":1075,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:24",{"_index":1082,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:28",{"_index":1085,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:42",{"_index":1087,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:63",{"_index":1089,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:70",{"_index":1091,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:72",{"_index":1071,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:82",{"_index":1080,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessors",{"_index":1064,"title":{},"body":{"components/ControlAccessor.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"directives/LetDirective.html":{},"classes/Monaco.html":{},"components/OptionComponent.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"classes/TestNgControl.html":{}}}],["account",{"_index":214,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{}}}],["account.githubusername",{"_index":2065,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["account.githubusername.replace",{"_index":2075,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["account.page",{"_index":480,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DeleteAccountPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["account.page'},{'name",{"_index":151,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["account.page.html",{"_index":1270,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.scss",{"_index":1269,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.ts",{"_index":1268,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.ts:10",{"_index":1271,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{}}}],["account.page.ts:12",{"_index":3331,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:13",{"_index":3137,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["account.page.ts:15",{"_index":3335,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:17",{"_index":1274,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{}}}],["account.page.ts:22",{"_index":1273,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.ts:28",{"_index":3334,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:36",{"_index":3333,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:42",{"_index":3332,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account/delete",{"_index":479,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DeleteAccountPage.html":{}}}],["account/restore",{"_index":486,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/RestoreAccountPage.html":{}}}],["account/settings",{"_index":3328,"title":{},"body":{"components/SettingsAccountPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["accounts.map((account",{"_index":1974,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["action",{"_index":864,"title":{},"body":{"components/ButtonComponent.html":{},"components/SettingsAccountPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/continuos-integration.html":{}}}],["actions",{"_index":838,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"additional-documentation/continuos-integration.html":{}}}],["activatedroute",{"_index":554,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/GithubIntegrationPage.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["active",{"_index":901,"title":{},"body":{"components/ButtonComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["activeworkspace",{"_index":2871,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["actual_component",{"_index":260,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["adapter",{"_index":4506,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":18,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/architecture.html":{}}}],["add(emails",{"_index":2669,"title":{},"body":{"injectables/MemberService.html":{}}}],["addcode",{"_index":3697,"title":{},"body":{"classes/Story.html":{}}}],["addcode(code",{"_index":3709,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["adddecorators",{"_index":1928,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["adddecorators(decorators",{"_index":1844,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["adddefaulttemplate",{"_index":3698,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["adddescription",{"_index":3699,"title":{},"body":{"classes/Story.html":{}}}],["adddescription(description",{"_index":3712,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["added",{"_index":2688,"title":{},"body":{"injectables/MemberService.html":{}}}],["addedmembers",{"_index":2649,"title":{},"body":{"components/MemberListComponent.html":{}}}],["adding",{"_index":4824,"title":{},"body":{"additional-documentation/localization.html":{}}}],["additional",{"_index":1665,"title":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}},"body":{"interfaces/EmojiToken.html":{},"components/InputComponent.html":{},"interfaces/RequestOptions.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["addmemberdialog",{"_index":1,"title":{"components/AddMemberDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["addmemberdialogdata",{"_index":39,"title":{"interfaces/AddMemberDialogData.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectMembersPage.html":{}}}],["addmembers",{"_index":33,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["addpanelclass",{"_index":1343,"title":{},"body":{"classes/DialogRef.html":{}}}],["addpanelclass(classes",{"_index":1356,"title":{},"body":{"classes/DialogRef.html":{}}}],["addprops",{"_index":3700,"title":{},"body":{"classes/Story.html":{}}}],["addprops(props",{"_index":3714,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["addrepository",{"_index":2418,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["address",{"_index":1923,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["adds",{"_index":2671,"title":{},"body":{"injectables/MemberService.html":{}}}],["addtemplate",{"_index":3701,"title":{},"body":{"classes/Story.html":{}}}],["addtemplate(template",{"_index":3716,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["adrian",{"_index":4662,"title":{},"body":{"license.html":{}}}],["advanced",{"_index":354,"title":{},"body":{"injectables/ApiService.html":{},"components/TextareaComponent.html":{}}}],["advised",{"_index":4720,"title":{},"body":{"license.html":{}}}],["after_each_line",{"_index":3285,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"miscellaneous/enumerations.html":{}}}],["afterclosed",{"_index":679,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"injectables/TaskService.html":{}}}],["aftereachline",{"_index":2795,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["afteropened",{"_index":1342,"title":{},"body":{"classes/DialogRef.html":{}}}],["afterselectiontext",{"_index":2772,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["afterselectiontext.match(/\\n/g",{"_index":2816,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["afterselectiontext.replace(/\\n[^]*$/g",{"_index":2825,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["afterselectiontextlinescount",{"_index":2815,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["afterselectiontextlinescount).length",{"_index":2824,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["afterviewinit",{"_index":1907,"title":{},"body":{"directives/FocusInitialDirective.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["agent",{"_index":3468,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype",{"_index":3462,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(\"browser",{"_index":3497,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(\"os",{"_index":3495,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(type",{"_index":3467,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agree",{"_index":3105,"title":{},"body":{"components/RegisterPage.html":{}}}],["agreement",{"_index":3107,"title":{},"body":{"components/RegisterPage.html":{}}}],["agreements",{"_index":3081,"title":{},"body":{"components/RegisterPage.html":{}}}],["aleksandra",{"_index":4656,"title":{},"body":{"license.html":{}}}],["alert",{"_index":123,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["alert(data",{"_index":1428,"title":{},"body":{"injectables/DialogService.html":{}}}],["alert.dialog.html",{"_index":272,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alert.dialog.scss",{"_index":271,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alert/information",{"_index":1431,"title":{},"body":{"injectables/DialogService.html":{}}}],["alertdialog",{"_index":122,"title":{"components/AlertDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["alertdialogdata",{"_index":278,"title":{"interfaces/AlertDialogData.html":{}},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{}}}],["alertdialogvariant",{"_index":273,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{},"miscellaneous/enumerations.html":{}}}],["alertdialogvariant.default",{"_index":323,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alertdialogvariant.important",{"_index":287,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["aliases",{"_index":4734,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":727,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["already",{"_index":2507,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["always",{"_index":463,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["american",{"_index":3414,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["anchor",{"_index":1654,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["and/or",{"_index":4676,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1102,"title":{},"body":{"components/ControlAccessor.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["angular.json",{"_index":4816,"title":{},"body":{"additional-documentation/localization.html":{}}}],["angular/animations",{"_index":4492,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":4494,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":873,"title":{},"body":{"components/ButtonComponent.html":{}}}],["angular/cdk/drag",{"_index":598,"title":{},"body":{"components/BoardPage.html":{},"modules/MainModule.html":{}}}],["angular/cdk/observers",{"_index":2522,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/overlay",{"_index":2524,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/platform",{"_index":2526,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/text",{"_index":2271,"title":{},"body":{"components/InputComponent.html":{}}}],["angular/common",{"_index":472,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":375,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"modules/MainModule.html":{},"interfaces/RequestOptions.html":{}}}],["angular/compiler",{"_index":4496,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":73,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":74,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AuthModule.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"classes/TestNgControl.html":{},"components/ViewOptionsComponent-1.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":4800,"title":{},"body":{"additional-documentation/localization.html":{}}}],["angular/material",{"_index":4497,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":2531,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/badge",{"_index":2533,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/checkbox",{"_index":2535,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/core",{"_index":2537,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/datepicker",{"_index":2539,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/dialog",{"_index":76,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"modules/MainModule.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["angular/material/form",{"_index":2542,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/icon",{"_index":2544,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/input",{"_index":2546,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/menu",{"_index":2548,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/progress",{"_index":2550,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/select",{"_index":2552,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/table",{"_index":2554,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/tabs",{"_index":2556,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/tooltip",{"_index":2558,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/platform",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{},"dependencies.html":{}}}],["angular/router",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"modules/SettingsRoutingModule.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["animating",{"_index":747,"title":{},"body":{"components/BoardPage.html":{}}}],["animation",{"_index":3563,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["animationname",{"_index":3525,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["antkowiak",{"_index":4663,"title":{},"body":{"license.html":{}}}],["any)._markastouched",{"_index":1131,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any)._rawvalidators",{"_index":1122,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any)._root",{"_index":3152,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["any).color",{"_index":2209,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["any).control._rawvalidators",{"_index":1125,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any).endcolumn",{"_index":2801,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["any).endlinenumber",{"_index":2805,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["any).id",{"_index":683,"title":{},"body":{"components/BoardPage.html":{}}}],["any).injector",{"_index":2618,"title":{},"body":{"modules/MainModule.html":{}}}],["any).injector.get(dialogservice",{"_index":1779,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["any).subscribe",{"_index":654,"title":{},"body":{"components/BoardPage.html":{}}}],["any).twemoji.parse(source",{"_index":1620,"title":{},"body":{"classes/Emoji.html":{}}}],["any)[a[0",{"_index":3311,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["any)[b[0",{"_index":3312,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["any)[charactersequence",{"_index":1618,"title":{},"body":{"classes/Emoji.html":{}}}],["any[]).concat",{"_index":2812,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["any[]).concat(this._meta.decorators",{"_index":1846,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["api",{"_index":335,"title":{},"body":{"injectables/ApiService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"injectables/WorkspaceService.html":{}}}],["apiservice",{"_index":330,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["apiurl",{"_index":336,"title":{},"body":{"injectables/ApiService.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["app.component",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routing",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["app/main/main.module",{"_index":2610,"title":{},"body":{"modules/MainModule.html":{}}}],["app/main/main.module';(@)ngmodule",{"_index":2518,"title":{},"body":{"modules/MainModule.html":{}}}],["appcomponent",{"_index":124,"title":{"components/AppComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["appfocusinitial",{"_index":1908,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["appfocusinitial]'},{'name",{"_index":255,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["application",{"_index":2012,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["apply",{"_index":1128,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/FilterCheckbox.html":{}}}],["apply(input",{"_index":1850,"title":{},"body":{"interfaces/FilterCheckbox.html":{}}}],["apply(tasks",{"_index":1864,"title":{},"body":{"classes/Filters.html":{}}}],["applybold",{"_index":4151,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applycode",{"_index":4152,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applycodeblock",{"_index":4153,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applyfilters",{"_index":3992,"title":{},"body":{"injectables/TaskService.html":{},"miscellaneous/functions.html":{}}}],["applyfilters(filters",{"_index":4571,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applyitalic",{"_index":4154,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applylink",{"_index":4155,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applylist",{"_index":4156,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applylistnumeric",{"_index":4157,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applyquote",{"_index":4158,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applyunderline",{"_index":4159,"title":{},"body":{"components/TextareaComponent.html":{}}}],["appmodule",{"_index":409,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":416,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":4744,"title":{"additional-documentation/architecture.html":{}},"body":{"additional-documentation/architecture.html":{}}}],["arg",{"_index":1939,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["args",{"_index":3753,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryTemplate.html":{}}}],["args.formcontrol",{"_index":3775,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["argtypes",{"_index":1943,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["arguments",{"_index":1049,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["arising",{"_index":4717,"title":{},"body":{"license.html":{}}}],["array",{"_index":1359,"title":{},"body":{"classes/DialogRef.html":{},"classes/Enum.html":{},"classes/Utils.html":{}}}],["array(difference).keys()].map((k",{"_index":3299,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["array.isarray(members",{"_index":2208,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["arraybuffer",{"_index":3126,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["artifacts",{"_index":4628,"title":{},"body":{"index.html":{}}}],["as.validator",{"_index":937,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["as.validator.ts",{"_index":4567,"title":{},"body":{"miscellaneous/functions.html":{}}}],["assets/mocks/calendar.svg",{"_index":4105,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["assets/mocks/dashboard.svg",{"_index":1258,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["assets/mocks/inbox.svg",{"_index":1586,"title":{},"body":{"modules/EmailsRoutingModule.html":{}}}],["assets/mocks/messages.svg",{"_index":2702,"title":{},"body":{"modules/MessagesRoutingModule.html":{}}}],["assign",{"_index":3960,"title":{},"body":{"injectables/TaskService.html":{}}}],["assign(member?.user.id",{"_index":2229,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assign(userid",{"_index":3968,"title":{},"body":{"injectables/TaskService.html":{}}}],["assigned",{"_index":1465,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["assignee",{"_index":822,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/TaskListPage.html":{}}}],["assignee'},{'name",{"_index":169,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["assignee(assignee",{"_index":2203,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component",{"_index":4087,"title":{},"body":{"modules/TasksModule.html":{}}}],["assignee.component.html",{"_index":2164,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.scss",{"_index":2163,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts",{"_index":2162,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:19",{"_index":2171,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:28",{"_index":2189,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:32",{"_index":2172,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:46",{"_index":2174,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:47",{"_index":2173,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:49",{"_index":2187,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:51",{"_index":2180,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:53",{"_index":2184,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:54",{"_index":2183,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:55",{"_index":2181,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:57",{"_index":2195,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:61",{"_index":2193,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:63",{"_index":2170,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:69",{"_index":2176,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:82",{"_index":2175,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:86",{"_index":2179,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:93",{"_index":2178,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.user.name[0",{"_index":2230,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee/input",{"_index":2161,"title":{},"body":{"components/InputAssigneeComponent.html":{},"modules/TasksModule.html":{}}}],["assigneecolor",{"_index":2166,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assigneecontrol",{"_index":3865,"title":{},"body":{"components/TaskListPage.html":{}}}],["assigneeid",{"_index":1863,"title":{},"body":{"classes/Filters.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["assignees",{"_index":821,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["async)?.name",{"_index":1201,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{}}}],["attach",{"_index":1512,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"interfaces/RequestOptions.html":{},"injectables/TaskService.html":{}}}],["attached",{"_index":670,"title":{},"body":{"components/BoardPage.html":{},"directives/FocusInitialDirective.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["attachgithubintegration",{"_index":1993,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["attachgithubintegration(projectid",{"_index":2005,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["attachgithubintegration(this.projectid",{"_index":2436,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["attribute",{"_index":2113,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{}}}],["auth",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/UpperNavigationComponent.html":{}}}],["auth.routing",{"_index":474,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/guard/logged",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/interfaces/user.interface",{"_index":3521,"title":{},"body":{"interfaces/SinglePersonSchedule.html":{},"injectables/UserService.html":{}}}],["auth/services/auth.service",{"_index":2477,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["auth/services/user.service",{"_index":2493,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskListPage.html":{}}}],["authentication",{"_index":3132,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["authmodule",{"_index":465,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authroutingmodule",{"_index":469,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":493,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["auto",{"_index":700,"title":{},"body":{"components/BoardPage.html":{},"components/DialogOutletComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"components/TextareaComponent.html":{}}}],["autocomplete",{"_index":989,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["autofillmonitor",{"_index":2258,"title":{},"body":{"components/InputComponent.html":{}}}],["automatically",{"_index":4624,"title":{},"body":{"index.html":{}}}],["available",{"_index":4364,"title":{},"body":{"classes/Utils.html":{},"injectables/WorkspaceService.html":{},"modules.html":{}}}],["avatar",{"_index":2250,"title":{},"body":{"components/InputAssigneeComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/SchedulePage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["awesome",{"_index":2096,"title":{},"body":{"components/IconComponent.html":{}}}],["b",{"_index":3211,"title":{},"body":{"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{}}}],["b[comparer",{"_index":3265,"title":{},"body":{"components/SelectComponent.html":{}}}],["back",{"_index":1922,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{}}}],["backdrop",{"_index":1370,"title":{},"body":{"classes/DialogRef.html":{}}}],["backdropclick",{"_index":1344,"title":{},"body":{"classes/DialogRef.html":{}}}],["background",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["backlog",{"_index":4441,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["badge",{"_index":4857,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["badges",{"_index":4855,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["banner",{"_index":768,"title":{},"body":{"components/BoardPage.html":{}}}],["bartosz",{"_index":4660,"title":{},"body":{"license.html":{}}}],["base",{"_index":1061,"title":{},"body":{"components/ControlAccessor.html":{},"classes/Emoji.html":{},"additional-documentation/architecture.html":{}}}],["based",{"_index":1701,"title":{},"body":{"classes/Enum.html":{}}}],["basic",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["before",{"_index":894,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/localization.html":{}}}],["before_each_line",{"_index":3284,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"miscellaneous/enumerations.html":{}}}],["beforeclosed",{"_index":1322,"title":{},"body":{"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{}}}],["beforeeachline",{"_index":2794,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["beforeselectiontext",{"_index":2771,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["beforeselectiontext.match(/\\n/g",{"_index":2821,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["beforeselectiontext.replace(/.*\\n/g",{"_index":2822,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["begin",{"_index":3600,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["behavior",{"_index":860,"title":{},"body":{"components/ButtonComponent.html":{}}}],["behaviorsubject",{"_index":1394,"title":{},"body":{"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["behaviorsubject(false",{"_index":2182,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["behaviorsubject(matdialogstate.closed",{"_index":1354,"title":{},"body":{"classes/DialogRef.html":{}}}],["behaviorsubject>(new",{"_index":3590,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["below",{"_index":316,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["beneath",{"_index":2263,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["between",{"_index":733,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["bezier(0",{"_index":750,"title":{},"body":{"components/BoardPage.html":{}}}],["binary",{"_index":4665,"title":{},"body":{"license.html":{}}}],["bind",{"_index":3778,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["binding",{"_index":290,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/IconComponent.html":{}}}],["blob",{"_index":3127,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["block",{"_index":758,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["blockquote",{"_index":4264,"title":{},"body":{"components/TextareaComponent.html":{}}}],["blocks",{"_index":4779,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["blur",{"_index":1018,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["board",{"_index":129,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["board'},{'name",{"_index":127,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["board(projectid",{"_index":3656,"title":{},"body":{"injectables/StatusService.html":{}}}],["board.page.html",{"_index":538,"title":{},"body":{"components/BoardPage.html":{}}}],["board.page.scss",{"_index":537,"title":{},"body":{"components/BoardPage.html":{}}}],["board.push([task",{"_index":3689,"title":{},"body":{"injectables/StatusService.html":{}}}],["board.push(other",{"_index":3693,"title":{},"body":{"injectables/StatusService.html":{}}}],["boardpage",{"_index":126,"title":{"components/BoardPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["boards",{"_index":705,"title":{},"body":{"components/BoardPage.html":{}}}],["boardtaskcomponent",{"_index":128,"title":{"components/BoardTaskComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["body",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["bold",{"_index":2469,"title":{},"body":{"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/StatusLabelComponent.html":{}}}],["boolean",{"_index":285,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/UserSession.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["boolean(repositoryname.match(new",{"_index":2076,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["bootstrap",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":740,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/DialogOutletComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["bottom",{"_index":734,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["box",{"_index":814,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SelectComponent.html":{}}}],["branch",{"_index":1956,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"additional-documentation/continuos-integration.html":{}}}],["brands",{"_index":4440,"title":{},"body":{"components/ViewOptionsComponent-1.html":{},"dependencies.html":{}}}],["break",{"_index":1127,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/ExtendedMeta.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"classes/StoryPageConfig.html":{}}}],["british",{"_index":3409,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["browse",{"_index":4724,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1992,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["browseranimationsmodule",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["bsd",{"_index":4652,"title":{},"body":{"license.html":{}}}],["bubbles",{"_index":1057,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["build",{"_index":4626,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["building",{"_index":4640,"title":{},"body":{"index.html":{},"additional-documentation/architecture.html":{}}}],["buildpropsstring",{"_index":4543,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildpropsstring(props",{"_index":4118,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["buildtemplate",{"_index":4545,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildtemplate(selector",{"_index":4121,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["buildthe",{"_index":4627,"title":{},"body":{"index.html":{}}}],["business",{"_index":4708,"title":{},"body":{"license.html":{}}}],["button",{"_index":317,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["button'},{'name",{"_index":132,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["button.component.html",{"_index":848,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":847,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button:not(.button",{"_index":885,"title":{},"body":{"components/ButtonComponent.html":{}}}],["buttoncomponent",{"_index":131,"title":{"components/ButtonComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["buttons",{"_index":270,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/RegisterPage.html":{}}}],["c",{"_index":3777,"title":{},"body":{"classes/StoryTemplate.html":{},"license.html":{}}}],["c.charcodeat(0",{"_index":4351,"title":{},"body":{"classes/UserUtils.html":{}}}],["calc($padding",{"_index":2288,"title":{},"body":{"components/InputComponent.html":{}}}],["calc($size",{"_index":830,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["calc(100",{"_index":951,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["calc(50",{"_index":2246,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["calc(var",{"_index":896,"title":{},"body":{"components/ButtonComponent.html":{}}}],["calendar",{"_index":4104,"title":{},"body":{"modules/TasksRoutingModule.html":{},"components/ViewOptionsComponent-1.html":{}}}],["call",{"_index":1467,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/RequestOptions.html":{}}}],["callback",{"_index":1003,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["called",{"_index":1005,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/DialogRef.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["camelcase",{"_index":4384,"title":{},"body":{"classes/Utils.html":{}}}],["canactivate",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/LoggedInUsersGuard.html":{}}}],["cancel",{"_index":34,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["cancelable",{"_index":1058,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["cancels",{"_index":3979,"title":{},"body":{"injectables/TaskService.html":{}}}],["canceltext",{"_index":320,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"injectables/DialogService.html":{},"interfaces/ErrorValidationTree.html":{},"injectables/TaskService.html":{}}}],["card",{"_index":904,"title":{},"body":{"components/CardComponent.html":{}}}],["card'},{'name",{"_index":134,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["card.component.html",{"_index":906,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":905,"title":{},"body":{"components/CardComponent.html":{}}}],["cardcomponent",{"_index":133,"title":{"components/CardComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["case",{"_index":1833,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"components/IconComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"classes/StoryPageConfig.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"additional-documentation/architecture.html":{}}}],["catch",{"_index":658,"title":{},"body":{"components/BoardPage.html":{}}}],["catcherror",{"_index":1741,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["catcherror((e",{"_index":1745,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["catchresponse",{"_index":4546,"title":{},"body":{"miscellaneous/functions.html":{}}}],["catchresponse(message",{"_index":4574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["caused",{"_index":4710,"title":{},"body":{"license.html":{}}}],["cdk",{"_index":743,"title":{},"body":{"components/BoardPage.html":{}}}],["cdkdragdrop",{"_index":562,"title":{},"body":{"components/BoardPage.html":{}}}],["cdref",{"_index":3204,"title":{},"body":{"components/SelectComponent.html":{}}}],["cell",{"_index":3180,"title":{},"body":{"components/SchedulePage.html":{},"components/TaskListPage.html":{}}}],["center",{"_index":729,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["change",{"_index":136,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{}}}],["changedate",{"_index":777,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["changedate(date",{"_index":786,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["changedate(session.lastused",{"_index":3500,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["changedate(subtask.deadline",{"_index":3931,"title":{},"body":{"components/TaskListPage.html":{}}}],["changedate(task.deadline",{"_index":808,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["changeddate",{"_index":2306,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["changedetection",{"_index":3193,"title":{},"body":{"components/SelectComponent.html":{}}}],["changedetectionstrategy",{"_index":3231,"title":{},"body":{"components/SelectComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":3194,"title":{},"body":{"components/SelectComponent.html":{}}}],["changedetectorref",{"_index":3205,"title":{},"body":{"components/SelectComponent.html":{}}}],["changelanguage",{"_index":3388,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["changepasswordpage",{"_index":135,"title":{"components/ChangePasswordPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["changes",{"_index":1007,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"injectables/ProjectService.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TextareaComponent.html":{}}}],["changestatus",{"_index":3961,"title":{},"body":{"injectables/TaskService.html":{}}}],["changestatus(statusid",{"_index":3973,"title":{},"body":{"injectables/TaskService.html":{}}}],["changeworkspace",{"_index":2989,"title":{},"body":{"injectables/ProjectService.html":{}}}],["changeworkspace(projectid",{"_index":2991,"title":{},"body":{"injectables/ProjectService.html":{}}}],["changeworkspace(this.projectid",{"_index":1543,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["char",{"_index":4374,"title":{},"body":{"classes/Utils.html":{}}}],["char.length",{"_index":4396,"title":{},"body":{"classes/Utils.html":{}}}],["character",{"_index":4372,"title":{},"body":{"classes/Utils.html":{}}}],["character.tolowercase",{"_index":4394,"title":{},"body":{"classes/Utils.html":{}}}],["character.touppercase",{"_index":4393,"title":{},"body":{"classes/Utils.html":{}}}],["charactersequence",{"_index":1603,"title":{},"body":{"classes/Emoji.html":{}}}],["charactersequencetounicode",{"_index":1590,"title":{},"body":{"classes/Emoji.html":{}}}],["charactersequencetounicode(charactersequence",{"_index":1601,"title":{},"body":{"classes/Emoji.html":{}}}],["check",{"_index":764,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ControlAccessor.html":{},"interfaces/EmojiToken.html":{},"interfaces/ErrorValidationTree.html":{},"components/TaskListPage.html":{},"classes/Utils.html":{},"miscellaneous/functions.html":{}}}],["checkbox",{"_index":981,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{}}}],["checkbox'},{'name",{"_index":139,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["checkbox.component.html",{"_index":983,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":982,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.ng",{"_index":1036,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":138,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["checkboxes",{"_index":1065,"title":{},"body":{"components/ControlAccessor.html":{}}}],["checks",{"_index":2027,"title":{},"body":{"injectables/GitIntegrationService.html":{},"classes/Utils.html":{}}}],["child",{"_index":725,"title":{},"body":{"components/BoardPage.html":{},"components/ControlAccessor.html":{},"components/RestoreAccountPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["child)::before",{"_index":3933,"title":{},"body":{"components/TaskListPage.html":{}}}],["children",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["choose",{"_index":2038,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["ci/cd",{"_index":4838,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["city",{"_index":4329,"title":{},"body":{"interfaces/UserSession.html":{}}}],["class",{"_index":90,"title":{"classes/DialogRef.html":{},"classes/ESet.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/Marked.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"classes/PersistentMap.html":{},"classes/Random.html":{},"classes/SelectionEditPlugin.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"classes/TestNgControl.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ExtendedMeta.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["class.important",{"_index":277,"title":{},"body":{"components/AlertDialog.html":{}}}],["classes",{"_index":1074,"title":{},"body":{"components/ControlAccessor.html":{},"classes/DialogRef.html":{},"classes/ESet.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/Marked.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"classes/PersistentMap.html":{},"classes/Random.html":{},"classes/SelectionEditPlugin.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"classes/TestNgControl.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["classes/control",{"_index":2272,"title":{},"body":{"components/InputComponent.html":{}}}],["classes/story.class",{"_index":4110,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["classes/utils.class",{"_index":2143,"title":{},"body":{"components/IconComponent.html":{}}}],["clause",{"_index":4653,"title":{},"body":{"license.html":{}}}],["clean",{"_index":4603,"title":{},"body":{"index.html":{}}}],["clear",{"_index":2957,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["clearcomponent",{"_index":1288,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["cli",{"_index":4650,"title":{},"body":{"index.html":{}}}],["click",{"_index":251,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["clickable",{"_index":844,"title":{},"body":{"components/ButtonComponent.html":{}}}],["clicked",{"_index":1371,"title":{},"body":{"classes/DialogRef.html":{}}}],["clickstoppropagationdirective",{"_index":250,"title":{"directives/ClickStopPropagationDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["close",{"_index":1345,"title":{},"body":{"classes/DialogRef.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{}}}],["close(dialogresult",{"_index":1374,"title":{},"body":{"classes/DialogRef.html":{}}}],["close(uid",{"_index":3585,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["closeall",{"_index":1418,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{}}}],["closed",{"_index":296,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/GitIntegrationService.html":{}}}],["closenavelement",{"_index":2844,"title":{},"body":{"components/NavElementComponent.html":{}}}],["closeprofile",{"_index":4281,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["closes",{"_index":293,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["closeworkspace",{"_index":2872,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["closing",{"_index":1365,"title":{},"body":{"classes/DialogRef.html":{}}}],["cluster_appmodule",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":466,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":467,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":468,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":1214,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":1215,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_imports",{"_index":1216,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_providers",{"_index":1217,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_emailsmodule",{"_index":1580,"title":{},"body":{"modules/EmailsModule.html":{},"overview.html":{}}}],["cluster_emailsmodule_imports",{"_index":1581,"title":{},"body":{"modules/EmailsModule.html":{},"overview.html":{}}}],["cluster_messagesmodule",{"_index":2696,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_messagesmodule_imports",{"_index":2697,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":3424,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":3426,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":3425,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":4080,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_declarations",{"_index":4082,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":4081,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["code",{"_index":2933,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SettingsLocalizationPage.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"components/TextareaComponent.html":{},"license.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["collapsed",{"_index":720,"title":{},"body":{"components/BoardPage.html":{}}}],["colon",{"_index":1630,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["colonstounicode",{"_index":1591,"title":{},"body":{"classes/Emoji.html":{}}}],["colonstounicode(source",{"_index":1604,"title":{},"body":{"classes/Emoji.html":{}}}],["color",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"pipes/TaskTypePipe.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["color.hsl(hue",{"_index":4344,"title":{},"body":{"classes/UserUtils.html":{}}}],["color.pipe",{"_index":4097,"title":{},"body":{"modules/TasksModule.html":{}}}],["color.pipe.ts",{"_index":3612,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["color.pipe.ts:8",{"_index":3615,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["color.rgb(155",{"_index":4071,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["color.rgb(231",{"_index":4066,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["color.rgb(46",{"_index":4061,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["color.rgb(52",{"_index":4057,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["color.rgb(88",{"_index":4075,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["colorstyle",{"_index":3530,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["cols",{"_index":4162,"title":{},"body":{"components/TextareaComponent.html":{}}}],["column",{"_index":699,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["columns",{"_index":714,"title":{},"body":{"components/BoardPage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["combinelatest",{"_index":3670,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["combinelatest([this.list(projectid",{"_index":3677,"title":{},"body":{"injectables/StatusService.html":{}}}],["combinepropsstring",{"_index":4549,"title":{},"body":{"miscellaneous/functions.html":{}}}],["combinepropsstring(...propsstrings",{"_index":4132,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["combinepropsstring(defpropsstring",{"_index":4120,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["command",{"_index":4616,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{}}}],["commit",{"_index":835,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["commonmodule",{"_index":471,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["compare",{"_index":3199,"title":{},"body":{"components/SelectComponent.html":{}}}],["compare(a",{"_index":3210,"title":{},"body":{"components/SelectComponent.html":{}}}],["comparer",{"_index":3203,"title":{},"body":{"components/SelectComponent.html":{}}}],["comparewith",{"_index":4597,"title":{},"body":{"miscellaneous/functions.html":{}}}],["complete",{"_index":1653,"title":{},"body":{"interfaces/EmojiToken.html":{},"interfaces/ErrorValidationTree.html":{}}}],["completed",{"_index":3784,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["completes",{"_index":356,"title":{},"body":{"injectables/ApiService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["compodoc",{"_index":4642,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":4499,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["component.ts",{"_index":4780,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["component_template",{"_index":120,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["components/board",{"_index":4085,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/button/button.component",{"_index":2562,"title":{},"body":{"modules/MainModule.html":{}}}],["components/card/card.component",{"_index":2563,"title":{},"body":{"modules/MainModule.html":{}}}],["components/checkbox/checkbox.component",{"_index":2564,"title":{},"body":{"modules/MainModule.html":{}}}],["components/dialog",{"_index":2565,"title":{},"body":{"modules/MainModule.html":{}}}],["components/filters/filters.component",{"_index":2567,"title":{},"body":{"modules/MainModule.html":{}}}],["components/icon/icon.component",{"_index":2568,"title":{},"body":{"modules/MainModule.html":{}}}],["components/input",{"_index":2569,"title":{},"body":{"modules/MainModule.html":{},"modules/TasksModule.html":{}}}],["components/input/input.component",{"_index":2571,"title":{},"body":{"modules/MainModule.html":{}}}],["components/integration",{"_index":1221,"title":{},"body":{"modules/DashboardModule.html":{},"modules/SettingsModule.html":{}}}],["components/list",{"_index":3431,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/main",{"_index":2572,"title":{},"body":{"modules/MainModule.html":{}}}],["components/member",{"_index":1224,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/nav",{"_index":2573,"title":{},"body":{"modules/MainModule.html":{}}}],["components/option/option.component",{"_index":2578,"title":{},"body":{"modules/MainModule.html":{}}}],["components/select/select.component",{"_index":2579,"title":{},"body":{"modules/MainModule.html":{}}}],["components/sidebar",{"_index":2580,"title":{},"body":{"modules/MainModule.html":{}}}],["components/snackbar",{"_index":2583,"title":{},"body":{"modules/MainModule.html":{}}}],["components/snackbar/snackbar.component",{"_index":2585,"title":{},"body":{"modules/MainModule.html":{}}}],["components/status",{"_index":4091,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/textarea/textarea.component",{"_index":2586,"title":{},"body":{"modules/MainModule.html":{}}}],["components/upper",{"_index":2587,"title":{},"body":{"modules/MainModule.html":{}}}],["components/view",{"_index":1227,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["componenttemplatedecorator",{"_index":3729,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"miscellaneous/functions.html":{}}}],["componenttemplatedecorator(props",{"_index":4111,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["componenttemplatedecorator(this.props",{"_index":3755,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["componentwrapperdecorator",{"_index":3723,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"interfaces/TemplateDecoratorConfig.html":{}}}],["componentwrapperdecorator((deftemplate",{"_index":4112,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["concurrently",{"_index":4509,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":4669,"title":{},"body":{"license.html":{}}}],["config",{"_index":3706,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["config.class",{"_index":1941,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.class.ts",{"_index":1799,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["config.class.ts:12",{"_index":1931,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["config.class.ts:22",{"_index":3759,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["config.class.ts:31",{"_index":3761,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["config.class.ts:54",{"_index":3763,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["config.class.ts:60",{"_index":3764,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["config.class.ts:65",{"_index":3760,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["config.class.ts:74",{"_index":3766,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["config.class.ts:78",{"_index":3762,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["config.code",{"_index":3743,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.config.selector",{"_index":3738,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.description",{"_index":3741,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.html",{"_index":3745,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.multiple",{"_index":3737,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.multiple.options",{"_index":3740,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.multiple.prop",{"_index":3739,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.selector",{"_index":4114,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["config.template.template",{"_index":3736,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.wrapwithdiv",{"_index":4122,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["configurable",{"_index":269,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["configuration",{"_index":374,"title":{},"body":{"injectables/ApiService.html":{},"modules/MainModule.html":{}}}],["configure",{"_index":355,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["confirm",{"_index":275,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["confirm(data",{"_index":1435,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmation",{"_index":298,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["confirmed",{"_index":4012,"title":{},"body":{"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["confirmprojectdelete",{"_index":1419,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmprojectdelete(project",{"_index":1437,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmtext",{"_index":319,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["confirmworkspacedelete",{"_index":1420,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmworkspacedelete(workspace",{"_index":1439,"title":{},"body":{"injectables/DialogService.html":{}}}],["connect",{"_index":2438,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["connected",{"_index":3789,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["connection",{"_index":2010,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{}}}],["connecttogithub",{"_index":2419,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["connectwithissueongithub",{"_index":3790,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["connectwithpullrequestongithub",{"_index":3794,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["consequential",{"_index":4700,"title":{},"body":{"license.html":{}}}],["console.error('persistentmap",{"_index":2979,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["console.log",{"_index":646,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{}}}],["console.log(_edits",{"_index":3317,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["console.log(data",{"_index":4019,"title":{},"body":{"injectables/TaskService.html":{}}}],["console.log(editor",{"_index":3307,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["console.log(installation_id",{"_index":2089,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["console.log(properties",{"_index":1826,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["console.log(selections",{"_index":3309,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["console.warn('unknown",{"_index":4078,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["const",{"_index":93,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"modules/MainModule.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/TextareaComponent.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["constructor(_viewcontainer",{"_index":2450,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["constructor(activatedroute",{"_index":553,"title":{},"body":{"components/BoardPage.html":{},"components/GithubIntegrationPage.html":{},"components/MockPage.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["constructor(apiservice",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["constructor(args",{"_index":3769,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["constructor(authservice",{"_index":919,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["constructor(config",{"_index":3703,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["constructor(data",{"_index":38,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/TaskDialog.html":{}}}],["constructor(dialogservice",{"_index":780,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/DialogOutletComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/UpperNavigationComponent.html":{}}}],["constructor(el",{"_index":1910,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["constructor(gitintegrationservice",{"_index":2421,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["constructor(httpclient",{"_index":341,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(injector",{"_index":2616,"title":{},"body":{"modules/MainModule.html":{}}}],["constructor(matdialog",{"_index":1425,"title":{},"body":{"injectables/DialogService.html":{}}}],["constructor(memberservice",{"_index":2650,"title":{},"body":{"components/MemberListComponent.html":{}}}],["constructor(meta",{"_index":1817,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["constructor(ngcontrol",{"_index":1070,"title":{},"body":{"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["constructor(private",{"_index":382,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardTaskComponent.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"interceptors/ErrorInterceptor.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"injectables/ProjectService.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{}}}],["constructor(public",{"_index":1889,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/OptionComponent.html":{},"components/StatusLabelComponent.html":{},"directives/ViewContainerDirective.html":{}}}],["constructor(ref",{"_index":2943,"title":{},"body":{"components/OptionComponent.html":{}}}],["constructor(router",{"_index":2474,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"injectables/RouterExtensionsService.html":{}}}],["constructor(seed",{"_index":3043,"title":{},"body":{"classes/Random.html":{}}}],["constructor(sessionservice",{"_index":3464,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["constructor(snackbarservice",{"_index":3531,"title":{},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["constructor(taskservice",{"_index":3161,"title":{},"body":{"components/SchedulePage.html":{}}}],["constructor(undefined",{"_index":2959,"title":{},"body":{"classes/PersistentMap.html":{}}}],["constructor(userservice",{"_index":3330,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["constructor(viewcontainerref",{"_index":4414,"title":{},"body":{"directives/ViewContainerDirective.html":{}}}],["constructor(workspaceservice",{"_index":1148,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["consume",{"_index":1663,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["container",{"_index":259,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["container.directive",{"_index":1317,"title":{},"body":{"components/DialogOutletComponent.html":{},"modules/MainModule.html":{}}}],["container.directive.ts",{"_index":4413,"title":{},"body":{"directives/ViewContainerDirective.html":{}}}],["container.directive.ts:6",{"_index":4415,"title":{},"body":{"directives/ViewContainerDirective.html":{}}}],["container.directive.ts:7",{"_index":4416,"title":{},"body":{"directives/ViewContainerDirective.html":{}}}],["container.scrollwidth",{"_index":4229,"title":{},"body":{"components/TextareaComponent.html":{}}}],["container.style.height",{"_index":4232,"title":{},"body":{"components/TextareaComponent.html":{}}}],["container.style.width",{"_index":4230,"title":{},"body":{"components/TextareaComponent.html":{}}}],["containerwidth",{"_index":4227,"title":{},"body":{"components/TextareaComponent.html":{}}}],["containerwidth}px",{"_index":4231,"title":{},"body":{"components/TextareaComponent.html":{}}}],["containing",{"_index":1444,"title":{},"body":{"injectables/DialogService.html":{}}}],["contains",{"_index":1115,"title":{},"body":{"components/ControlAccessor.html":{},"classes/Enum.html":{}}}],["content",{"_index":731,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"components/TaskListPage.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/functions.html":{}}}],["content.cdk",{"_index":753,"title":{},"body":{"components/BoardPage.html":{}}}],["content_right",{"_index":1461,"title":{},"body":{"injectables/DialogService.html":{},"miscellaneous/enumerations.html":{}}}],["contentchildren",{"_index":3232,"title":{},"body":{"components/SelectComponent.html":{}}}],["contentchildren(optioncomponent",{"_index":3228,"title":{},"body":{"components/SelectComponent.html":{}}}],["contentheight",{"_index":4224,"title":{},"body":{"components/TextareaComponent.html":{}}}],["contentheight}px",{"_index":4233,"title":{},"body":{"components/TextareaComponent.html":{}}}],["context",{"_index":3113,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["continue",{"_index":4036,"title":{},"body":{"injectables/TaskService.html":{}}}],["continuos",{"_index":4837,"title":{"additional-documentation/continuos-integration.html":{}},"body":{"additional-documentation/continuos-integration.html":{}}}],["contract",{"_index":4713,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":4681,"title":{},"body":{"license.html":{}}}],["control",{"_index":1015,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"classes/FormControlStoryPageConfig.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["control's",{"_index":1006,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["control.errors",{"_index":1034,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["control?.errors",{"_index":2279,"title":{},"body":{"components/InputComponent.html":{}}}],["controlaccessor",{"_index":140,"title":{"components/ControlAccessor.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["controlaccessor:127",{"_index":1025,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:135",{"_index":1001,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:142",{"_index":1017,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:148",{"_index":1021,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:18",{"_index":991,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:22",{"_index":2315,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["controlaccessor:28",{"_index":1880,"title":{},"body":{"components/FiltersComponent.html":{}}}],["controlaccessor:30",{"_index":3639,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["controlaccessor:32",{"_index":2313,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["controlaccessor:51",{"_index":2270,"title":{},"body":{"components/InputComponent.html":{}}}],["controlaccessor:65",{"_index":2185,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["controlaccessor:82",{"_index":1030,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["controlobject",{"_index":3774,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["controls",{"_index":4400,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["controltype",{"_index":4529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["controlvalueaccessor",{"_index":1067,"title":{},"body":{"components/ControlAccessor.html":{}}}],["convenient",{"_index":4833,"title":{},"body":{"additional-documentation/localization.html":{}}}],["conventions",{"_index":4750,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["convert",{"_index":4388,"title":{},"body":{"classes/Utils.html":{}}}],["convertedemoji",{"_index":1672,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["convertfunction",{"_index":1668,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["convertfunction(token.emoji",{"_index":1673,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["converts",{"_index":4383,"title":{},"body":{"classes/Utils.html":{}}}],["cookie",{"_index":3131,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["copyright",{"_index":4654,"title":{},"body":{"license.html":{}}}],["core",{"_index":2141,"title":{},"body":{"components/IconComponent.html":{},"interfaces/SelectLabel.html":{},"dependencies.html":{}}}],["correctdata",{"_index":3091,"title":{},"body":{"components/RegisterPage.html":{}}}],["country",{"_index":4330,"title":{},"body":{"interfaces/UserSession.html":{}}}],["create",{"_index":142,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["create(project",{"_index":2994,"title":{},"body":{"injectables/ProjectService.html":{}}}],["create(projectid",{"_index":3658,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["create(workspace",{"_index":4454,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["create/general",{"_index":1260,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["create/members",{"_index":1261,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["created",{"_index":3661,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{},"additional-documentation/localization.html":{}}}],["createinjector",{"_index":1289,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["createinjector(data",{"_index":1301,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["createnewtask",{"_index":4282,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["createproject",{"_index":2873,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["createprojectmemberspage",{"_index":141,"title":{"components/CreateProjectMembersPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["createprojectpage",{"_index":145,"title":{"components/CreateProjectPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["creates",{"_index":1152,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["createsubscription",{"_index":1144,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["createsubtask",{"_index":778,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["createsubtask(task",{"_index":3878,"title":{},"body":{"components/TaskListPage.html":{}}}],["createworkspace",{"_index":3507,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["createworkspacepage",{"_index":147,"title":{"components/CreateWorkspacePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["creating",{"_index":1062,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["creation",{"_index":1160,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["credentials",{"_index":3130,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["css",{"_index":1358,"title":{},"body":{"classes/DialogRef.html":{},"components/IconComponent.html":{}}}],["cubic",{"_index":749,"title":{},"body":{"components/BoardPage.html":{}}}],["cuepic",{"_index":4048,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cuissue",{"_index":4047,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cupriorityhigh",{"_index":3948,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cupriorityhighest",{"_index":3950,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritylow",{"_index":3944,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritylowest",{"_index":3942,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritymedium",{"_index":3946,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["current",{"_index":1379,"title":{},"body":{"classes/DialogRef.html":{},"interfaces/UserSession.html":{},"additional-documentation/localization.html":{}}}],["currentdate",{"_index":3479,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentdate.diff(sessiondate",{"_index":3482,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentdate.year",{"_index":3480,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentheight",{"_index":2376,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["currentlabel",{"_index":3252,"title":{},"body":{"components/SelectComponent.html":{}}}],["currentlabel.control.setvalue(option?.viewvalue",{"_index":3254,"title":{},"body":{"components/SelectComponent.html":{}}}],["currentlabel.icon",{"_index":3255,"title":{},"body":{"components/SelectComponent.html":{}}}],["currentlabel.optioncomponent",{"_index":3257,"title":{},"body":{"components/SelectComponent.html":{}}}],["currentuserid",{"_index":1859,"title":{},"body":{"classes/Filters.html":{}}}],["cursor",{"_index":737,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["cursorstatecomputer",{"_index":3275,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["custom",{"_index":1063,"title":{},"body":{"components/ControlAccessor.html":{},"classes/DialogRef.html":{},"interfaces/EmojiToken.html":{},"modules/MainModule.html":{}}}],["cusubtask",{"_index":4050,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cutask",{"_index":4046,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cuuserstory",{"_index":4049,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cypress",{"_index":4638,"title":{},"body":{"index.html":{}}}],["czemar/cli",{"_index":2072,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["czerniak",{"_index":4659,"title":{},"body":{"license.html":{}}}],["czy",{"_index":3343,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["d",{"_index":3487,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["damage",{"_index":4723,"title":{},"body":{"license.html":{}}}],["damages",{"_index":4701,"title":{},"body":{"license.html":{}}}],["dark",{"_index":4220,"title":{},"body":{"components/TextareaComponent.html":{}}}],["dashboard",{"_index":1252,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/SidebarNavigationComponent.html":{}}}],["dashboard.routing",{"_index":1230,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard/classes/user.class",{"_index":2198,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["dashboard/dialogs/add",{"_index":1166,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["dashboard/interfaces/git",{"_index":1962,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["dashboard/interfaces/project",{"_index":600,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["dashboard/interfaces/project.interface",{"_index":602,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/SchedulePage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["dashboard/interfaces/workspace.interface",{"_index":78,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/ProjectService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["dashboard/services/git",{"_index":1964,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["dashboard/services/member.service",{"_index":603,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/MemberListComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["dashboard/services/project.service",{"_index":604,"title":{},"body":{"components/BoardPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{}}}],["dashboard/services/workspace.service",{"_index":3835,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{}}}],["dashboardmodule",{"_index":1213,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardroutingmodule",{"_index":1218,"title":{"modules/DashboardRoutingModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["data",{"_index":28,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"injectables/SnackbarService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"modules/TasksRoutingModule.html":{},"license.html":{},"additional-documentation/architecture.html":{}}}],["data.canceltext",{"_index":327,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.confirmtext",{"_index":328,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.message",{"_index":326,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.task?.name",{"_index":3860,"title":{},"body":{"components/TaskDialog.html":{}}}],["data.title",{"_index":325,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.variant",{"_index":322,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["database",{"_index":3606,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["date",{"_index":173,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["date().gettime",{"_index":3053,"title":{},"body":{"classes/Random.html":{}}}],["date:'d",{"_index":3176,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:'eee",{"_index":3177,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:'mmmm",{"_index":3174,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'d",{"_index":3190,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'eee",{"_index":3191,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'mmmm",{"_index":3189,"title":{},"body":{"components/SchedulePage.html":{}}}],["dateformat",{"_index":3402,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["dateformat.example",{"_index":3422,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["dateformats",{"_index":3386,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["datepicker",{"_index":2325,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["dates",{"_index":3160,"title":{},"body":{"components/SchedulePage.html":{}}}],["day",{"_index":3186,"title":{},"body":{"components/SchedulePage.html":{}}}],["dayjs",{"_index":795,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SchedulePage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["dayjs().format(format",{"_index":3399,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["dayjs().todate",{"_index":3164,"title":{},"body":{"components/SchedulePage.html":{}}}],["dayjs(date",{"_index":802,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["days",{"_index":3142,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["dd",{"_index":805,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["de",{"_index":3404,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["deadline",{"_index":832,"title":{},"body":{"components/BoardTaskComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["debug",{"_index":4550,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decimal",{"_index":4269,"title":{},"body":{"components/TextareaComponent.html":{}}}],["declarations",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["decoration",{"_index":4270,"title":{},"body":{"components/TextareaComponent.html":{}}}],["decorator",{"_index":4590,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["decorator.function",{"_index":3731,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["decorator.function.ts",{"_index":4108,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["decorator.helper",{"_index":3726,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["decorator.ts",{"_index":4782,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["decorators",{"_index":57,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/DialogOutletComponent.html":{},"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/WorkspaceService.html":{},"additional-documentation/architecture.html":{}}}],["decorators/service.decorator",{"_index":377,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DialogService.html":{}}}],["dedicated",{"_index":4771,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["deep",{"_index":1904,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["deep.mat",{"_index":2321,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["default",{"_index":60,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/localization.html":{}}}],["default_config",{"_index":1942,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["default_metadata",{"_index":1813,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["defaults",{"_index":2108,"title":{},"body":{"components/IconComponent.html":{}}}],["define",{"_index":4786,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["defines",{"_index":992,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["definition",{"_index":2103,"title":{},"body":{"components/IconComponent.html":{}}}],["defpropsstring",{"_index":4115,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["delete",{"_index":150,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["delete(id",{"_index":3321,"title":{},"body":{"injectables/SessionsService.html":{},"injectables/WorkspaceService.html":{}}}],["delete(key",{"_index":2963,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["delete(projectid",{"_index":2996,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["delete(url",{"_index":345,"title":{},"body":{"injectables/ApiService.html":{}}}],["deleteaccount",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"components/DeleteAccountPage.html":{}}}],["deleteaccount(token",{"_index":1272,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["deleteaccountconfirmation",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteaccountconfirmation(token",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteaccountmailcheck",{"_index":3329,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["deleteaccountpage",{"_index":149,"title":{"components/DeleteAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["deleteconnectedgithubaccount",{"_index":1994,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deleteconnectedgithubaccount(githubaccountid",{"_index":2008,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deleted",{"_index":1277,"title":{},"body":{"components/DeleteAccountPage.html":{},"interceptors/ErrorInterceptor.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["deletegithubintegration",{"_index":1995,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deletegithubintegration(projectid",{"_index":2014,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deletemember",{"_index":2648,"title":{},"body":{"components/MemberListComponent.html":{}}}],["deletemember(id",{"_index":2654,"title":{},"body":{"components/MemberListComponent.html":{}}}],["deleteproject",{"_index":2874,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["deleteproject(project",{"_index":2889,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["deletes",{"_index":2998,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["deletesession",{"_index":3463,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["deletesession(id",{"_index":3471,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["deletetask",{"_index":3870,"title":{},"body":{"components/TaskListPage.html":{}}}],["deletetask(task",{"_index":3880,"title":{},"body":{"components/TaskListPage.html":{}}}],["deletewithconfirmation",{"_index":3962,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletewithconfirmation(projectid",{"_index":3977,"title":{},"body":{"injectables/TaskService.html":{}}}],["deleteworkspace",{"_index":2875,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["deleteworkspace(workspace",{"_index":4478,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["deletion",{"_index":3143,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/WorkspacesListPage.html":{}}}],["dependencies",{"_index":411,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":344,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DialogService.html":{},"modules/MainModule.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["deploy",{"_index":4843,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["deploy.yml",{"_index":4844,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["deprecated",{"_index":3009,"title":{},"body":{"injectables/ProjectService.html":{},"pipes/TaskTypeIconPipe.html":{}}}],["describe",{"_index":1083,"title":{},"body":{"components/ControlAccessor.html":{},"additional-documentation/architecture.html":{}}}],["description",{"_index":265,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/IntegrationEntryComponent.html":{},"modules/MainModule.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["descriptor",{"_index":1765,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["descriptor.value",{"_index":1767,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["destroy",{"_index":1112,"title":{},"body":{"components/ControlAccessor.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"dependencies.html":{}}}],["destroyed",{"_index":1111,"title":{},"body":{"components/ControlAccessor.html":{}}}],["detach",{"_index":2349,"title":{},"body":{"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{}}}],["details",{"_index":2252,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["determine",{"_index":3602,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["deutsch",{"_index":3405,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["dev",{"_index":4621,"title":{},"body":{"index.html":{}}}],["development",{"_index":4609,"title":{},"body":{"index.html":{}}}],["dezaktywujacy",{"_index":3357,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["dialog",{"_index":20,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{}}}],["dialog's",{"_index":302,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"classes/DialogRef.html":{}}}],["dialog'},{'name",{"_index":121,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["dialog.afterclosed().subscribe",{"_index":1473,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialog.close",{"_index":1477,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogoutlet",{"_index":1297,"title":{},"body":{"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/MainViewComponent.html":{},"injectables/TaskService.html":{},"miscellaneous/enumerations.html":{}}}],["dialogoutlet.content_right",{"_index":4017,"title":{},"body":{"injectables/TaskService.html":{}}}],["dialogoutletcomponent",{"_index":152,"title":{"components/DialogOutletComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["dialogposition",{"_index":1389,"title":{},"body":{"classes/DialogRef.html":{}}}],["dialogref",{"_index":40,"title":{"classes/DialogRef.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["dialogresult",{"_index":1377,"title":{},"body":{"classes/DialogRef.html":{}}}],["dialogs",{"_index":1415,"title":{},"body":{"injectables/DialogService.html":{},"additional-documentation/architecture.html":{}}}],["dialogs/add",{"_index":1231,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dialogs/alert/alert.dialog",{"_index":1460,"title":{},"body":{"injectables/DialogService.html":{},"modules/MainModule.html":{}}}],["dialogs/task/task.dialog",{"_index":614,"title":{},"body":{"components/BoardPage.html":{},"modules/TasksModule.html":{}}}],["dialogservice",{"_index":557,"title":{"injectables/DialogService.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["dialogservice.alert",{"_index":1780,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["dialogsmap",{"_index":1416,"title":{},"body":{"injectables/DialogService.html":{}}}],["difference",{"_index":3295,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["direct",{"_index":4695,"title":{},"body":{"license.html":{}}}],["direction",{"_index":698,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["directive",{"_index":118,"title":{"directives/ClickStopPropagationDirective.html":{},"directives/FocusInitialDirective.html":{},"directives/LetDirective.html":{},"directives/ViewContainerDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["directive.ts",{"_index":4784,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["directives",{"_index":249,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["directives/click",{"_index":2589,"title":{},"body":{"modules/MainModule.html":{}}}],["directives/focus",{"_index":2591,"title":{},"body":{"modules/MainModule.html":{}}}],["directives/let.directive",{"_index":2593,"title":{},"body":{"modules/MainModule.html":{}}}],["directives/view",{"_index":2594,"title":{},"body":{"modules/MainModule.html":{}}}],["directory",{"_index":4631,"title":{},"body":{"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["disable",{"_index":1099,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/ExtendedMeta.html":{},"components/InputComponent.html":{},"classes/StoryPageConfig.html":{},"components/TextareaComponent.html":{}}}],["disabled",{"_index":1022,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["disableeditingfunctions",{"_index":1823,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["disclaimed",{"_index":4691,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4674,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2404,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["disconnect(account",{"_index":1976,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["display",{"_index":695,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/architecture.html":{}}}],["display:flex;gap:1rem",{"_index":4124,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["displayed",{"_index":314,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["displays",{"_index":1157,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["dist",{"_index":4630,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":4678,"title":{},"body":{"license.html":{}}}],["dni",{"_index":3363,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["docs",{"_index":3752,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["docs_preset_control_accessor",{"_index":1938,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["document.addeventlistener('domcontentloaded",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["document.body.classlist.remove('preload",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('div",{"_index":2740,"title":{},"body":{"classes/Monaco.html":{}}}],["documentation",{"_index":4641,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["dodac",{"_index":3341,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["done",{"_index":3603,"title":{},"body":{"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"interfaces/StatusWithTasks.html":{}}}],["download",{"_index":3124,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["drag",{"_index":744,"title":{},"body":{"components/BoardPage.html":{}}}],["dragdropmodule",{"_index":2520,"title":{},"body":{"modules/MainModule.html":{}}}],["dragging",{"_index":754,"title":{},"body":{"components/BoardPage.html":{}}}],["drop",{"_index":546,"title":{},"body":{"components/BoardPage.html":{},"modules/MainModule.html":{}}}],["drop(event",{"_index":561,"title":{},"body":{"components/BoardPage.html":{}}}],["due",{"_index":807,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["dummy",{"_index":2739,"title":{},"body":{"classes/Monaco.html":{}}}],["duration",{"_index":3528,"title":{},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["dynamic",{"_index":4498,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1756,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e.error.message",{"_index":1751,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e.status",{"_index":1747,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e2e",{"_index":4639,"title":{},"body":{"index.html":{}}}],["e[0",{"_index":1725,"title":{},"body":{"classes/Enum.html":{}}}],["e[1",{"_index":1723,"title":{},"body":{"classes/Enum.html":{}}}],["each",{"_index":4751,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["ease",{"_index":719,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["edit",{"_index":155,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/localization.html":{}}}],["edit.plugin",{"_index":2734,"title":{},"body":{"classes/Monaco.html":{}}}],["edit.plugin.ts",{"_index":3270,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["edit.plugin.ts:109",{"_index":3280,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["edit.plugin.ts:122",{"_index":3278,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["edit.plugin.ts:154",{"_index":3276,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["edit.range",{"_index":2800,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edit.range.startcolumn",{"_index":2802,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edit.range.startlinenumber",{"_index":2806,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edit.range?.endcolumn",{"_index":2799,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edit.range?.endlinenumber",{"_index":2804,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edit.range?.startcolumn",{"_index":2798,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edit.range?.startlinenumber",{"_index":2803,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edited",{"_index":4832,"title":{},"body":{"additional-documentation/localization.html":{}}}],["editing",{"_index":1521,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["edition",{"_index":2266,"title":{},"body":{"components/InputComponent.html":{}}}],["editoperation",{"_index":2761,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["editor",{"_index":2735,"title":{},"body":{"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/TextareaComponent.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/localization.html":{}}}],["editor.create(container",{"_index":4211,"title":{},"body":{"components/TextareaComponent.html":{}}}],["editor.create(dummy",{"_index":2741,"title":{},"body":{"classes/Monaco.html":{}}}],["editor.executeedits",{"_index":2796,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["editor.getmodel",{"_index":2814,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["editor.getmodel()?.getlinelength(selection.endlinenumber",{"_index":3291,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["editor.getselections",{"_index":2832,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["editor.istandalonecodeeditor",{"_index":4205,"title":{},"body":{"components/TextareaComponent.html":{}}}],["editproject",{"_index":1499,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["editproject(project",{"_index":2892,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["editprojectmemberspage",{"_index":154,"title":{"components/EditProjectMembersPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["editprojectpage",{"_index":156,"title":{"components/EditProjectPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["editprojectwithworkspace",{"_index":1500,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["editprojectwithworkspace(newworkspaceid",{"_index":1505,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["edits",{"_index":2760,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["edits.push",{"_index":2820,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edittask",{"_index":3871,"title":{},"body":{"components/TaskListPage.html":{}}}],["edittask(task",{"_index":3882,"title":{},"body":{"components/TaskListPage.html":{}}}],["editworkspace",{"_index":2876,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["editworkspace(workspace",{"_index":4481,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["editworkspacepage",{"_index":157,"title":{"components/EditWorkspacePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["el",{"_index":1912,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["element",{"_index":117,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/localization.html":{}}}],["element'},{'name",{"_index":203,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["element.component",{"_index":2577,"title":{},"body":{"modules/MainModule.html":{}}}],["element.component.html",{"_index":2841,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.scss",{"_index":2840,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts",{"_index":2839,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:12",{"_index":2850,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:15",{"_index":2851,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:17",{"_index":2856,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:19",{"_index":2859,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:22",{"_index":2858,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:24",{"_index":2849,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:28",{"_index":2854,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:31",{"_index":2852,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:34",{"_index":2855,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:42",{"_index":2853,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.scrollheight",{"_index":685,"title":{},"body":{"components/BoardPage.html":{}}}],["element.scrollheight}px",{"_index":3928,"title":{},"body":{"components/TaskListPage.html":{}}}],["element.style.maxheight",{"_index":687,"title":{},"body":{"components/BoardPage.html":{}}}],["element/nav",{"_index":2576,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementComponent.html":{}}}],["elementref",{"_index":849,"title":{},"body":{"components/ButtonComponent.html":{},"directives/FocusInitialDirective.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["elements",{"_index":845,"title":{},"body":{"components/ButtonComponent.html":{}}}],["email",{"_index":64,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["emails",{"_index":999,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"injectables/MemberService.html":{},"components/SelectComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["emails.routing",{"_index":1584,"title":{},"body":{"modules/EmailsModule.html":{}}}],["emailsmessages",{"_index":3518,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["emailsmodule",{"_index":1579,"title":{"modules/EmailsModule.html":{}},"body":{"modules/EmailsModule.html":{},"modules.html":{},"overview.html":{}}}],["emailsroutingmodule",{"_index":1582,"title":{"modules/EmailsRoutingModule.html":{}},"body":{"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["emailvalidator",{"_index":3080,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/functions.html":{}}}],["emitevent",{"_index":2318,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["emits",{"_index":1110,"title":{},"body":{"components/ControlAccessor.html":{},"classes/DialogRef.html":{}}}],["emoji",{"_index":1587,"title":{"classes/Emoji.html":{}},"body":{"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Marked.html":{},"components/TextareaComponent.html":{},"dependencies.html":{}}}],["emoji._emojiconvertor.replace_colons(source",{"_index":1617,"title":{},"body":{"classes/Emoji.html":{}}}],["emoji.aliases",{"_index":1615,"title":{},"body":{"classes/Emoji.html":{}}}],["emoji.charactersequencetounicode",{"_index":1671,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["emoji.colonstounicode(`:${emojiname",{"_index":1616,"title":{},"body":{"classes/Emoji.html":{}}}],["emoji.emojinametounicode",{"_index":1670,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["emoji_aliases",{"_index":1614,"title":{},"body":{"classes/Emoji.html":{}}}],["emoji_sequence_aliases",{"_index":1612,"title":{},"body":{"classes/Emoji.html":{}}}],["emoji_sequence_regex",{"_index":1631,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["emoji_sequence_regex.exec(src",{"_index":1657,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["emojiconvertor",{"_index":1594,"title":{},"body":{"classes/Emoji.html":{}}}],["emojiconvertor.addaliases(emoji_aliases",{"_index":1599,"title":{},"body":{"classes/Emoji.html":{}}}],["emojiconvertor.allow_caps",{"_index":1598,"title":{},"body":{"classes/Emoji.html":{}}}],["emojiconvertor.allow_native",{"_index":1597,"title":{},"body":{"classes/Emoji.html":{}}}],["emojiconvertor.replace_mode",{"_index":1595,"title":{},"body":{"classes/Emoji.html":{}}}],["emojiname",{"_index":1608,"title":{},"body":{"classes/Emoji.html":{}}}],["emojinametounicode",{"_index":1592,"title":{},"body":{"classes/Emoji.html":{}}}],["emojinametounicode(emojiname",{"_index":1606,"title":{},"body":{"classes/Emoji.html":{}}}],["emojitoken",{"_index":1624,"title":{"interfaces/EmojiToken.html":{}},"body":{"interfaces/EmojiToken.html":{}}}],["emojitype",{"_index":1627,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["empty",{"_index":1742,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["en",{"_index":3406,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["enabled",{"_index":4217,"title":{},"body":{"components/TextareaComponent.html":{}}}],["end",{"_index":836,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SnackbarOutletComponent.html":{},"components/UpperNavigationComponent.html":{},"index.html":{}}}],["endcolumn",{"_index":2780,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["endcursorstate",{"_index":3274,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["endline",{"_index":3294,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["endlinenumber",{"_index":2779,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["endpoints",{"_index":4644,"title":{},"body":{"index.html":{}}}],["english",{"_index":3408,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["enter",{"_index":949,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["entity",{"_index":4447,"title":{},"body":{"interfaces/Workspace.html":{}}}],["entries",{"_index":1680,"title":{},"body":{"classes/Enum.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"classes/SelectionEditPlugin.html":{}}}],["entries(enumtype",{"_index":1683,"title":{},"body":{"classes/Enum.html":{}}}],["entry",{"_index":2248,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["entry'},{'name",{"_index":184,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["entry.component",{"_index":3430,"title":{},"body":{"modules/SettingsModule.html":{}}}],["entry.component.html",{"_index":2403,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.scss",{"_index":2402,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts",{"_index":2401,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:10",{"_index":2408,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:11",{"_index":2406,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:12",{"_index":2409,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:14",{"_index":2405,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:18",{"_index":2410,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:9",{"_index":2407,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry/integration",{"_index":2400,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"modules/SettingsModule.html":{}}}],["enum",{"_index":311,"title":{"classes/Enum.html":{}},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"classes/Enum.html":{},"components/RegisterPage.html":{},"classes/SelectionEditPlugin.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["enum.entries(subtasktype",{"_index":3827,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["enum.entries(tasktype",{"_index":3832,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["enum.entries(testenum",{"_index":1690,"title":{},"body":{"classes/Enum.html":{}}}],["enum.isnumeric(enumtype",{"_index":1714,"title":{},"body":{"classes/Enum.html":{}}}],["enum.keys(testenum",{"_index":1705,"title":{},"body":{"classes/Enum.html":{}}}],["enum.ts",{"_index":4788,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enum.values(testenum",{"_index":1708,"title":{},"body":{"classes/Enum.html":{}}}],["enumerable",{"_index":304,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"additional-documentation/architecture.html":{}}}],["enumeration",{"_index":4787,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enumerations",{"_index":4527,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":4785,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enumtype",{"_index":1691,"title":{},"body":{"classes/Enum.html":{}}}],["environment",{"_index":373,"title":{},"body":{"injectables/ApiService.html":{},"components/MainViewComponent.html":{},"additional-documentation/continuos-integration.html":{}}}],["environment.apiurl",{"_index":371,"title":{},"body":{"injectables/ApiService.html":{}}}],["environment.version",{"_index":2626,"title":{},"body":{"components/MainViewComponent.html":{}}}],["epic",{"_index":3786,"title":{},"body":{"interfaces/Task.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"miscellaneous/enumerations.html":{}}}],["error",{"_index":1038,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["error('method",{"_index":1410,"title":{},"body":{"classes/DialogRef.html":{}}}],["error('this",{"_index":2052,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["error(`method",{"_index":1408,"title":{},"body":{"classes/DialogRef.html":{}}}],["error(error",{"_index":1793,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["error.error.message",{"_index":3101,"title":{},"body":{"components/RegisterPage.html":{}}}],["error.interface.ts",{"_index":4398,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["error.pipe",{"_index":2600,"title":{},"body":{"modules/MainModule.html":{}}}],["error.pipe.ts",{"_index":4408,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["error.pipe.ts:15",{"_index":4409,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["error.status",{"_index":2503,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["error/validation",{"_index":2599,"title":{},"body":{"modules/MainModule.html":{},"pipes/ValidationErrorPipe.html":{}}}],["errorinterceptor",{"_index":1727,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"modules/MainModule.html":{}}}],["errors",{"_index":1069,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["errorvalidationtree",{"_index":1757,"title":{"interfaces/ErrorValidationTree.html":{}},"body":{"interfaces/ErrorValidationTree.html":{},"miscellaneous/functions.html":{}}}],["errorvalidationtree[identifier",{"_index":1773,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["errorvalidationtree[identifier][status",{"_index":1776,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["es",{"_index":1809,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsLocalizationPage.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/TemplateDecoratorConfig.html":{},"dependencies.html":{},"additional-documentation/localization.html":{}}}],["eset",{"_index":1487,"title":{"classes/ESet.html":{}},"body":{"classes/ESet.html":{},"components/TaskListPage.html":{}}}],["eslint",{"_index":1098,"title":{},"body":{"components/ControlAccessor.html":{},"components/TextareaComponent.html":{}}}],["eslint/component",{"_index":1103,"title":{},"body":{"components/ControlAccessor.html":{}}}],["español",{"_index":3410,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["estimated",{"_index":3785,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["estimateddate",{"_index":3780,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["etc",{"_index":1066,"title":{},"body":{"components/ControlAccessor.html":{},"components/IconComponent.html":{},"interfaces/RequestOptions.html":{},"interfaces/ValidationError.html":{}}}],["even",{"_index":4719,"title":{},"body":{"license.html":{}}}],["event",{"_index":564,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/SchedulePage.html":{},"license.html":{}}}],["event('click",{"_index":1056,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["event.container",{"_index":656,"title":{},"body":{"components/BoardPage.html":{}}}],["event.container.data",{"_index":648,"title":{},"body":{"components/BoardPage.html":{}}}],["event.currentindex",{"_index":649,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer",{"_index":655,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer.data",{"_index":647,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer.data[previoustaskindex",{"_index":645,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer.element.nativeelement.dataset['index",{"_index":636,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previousindex",{"_index":644,"title":{},"body":{"components/BoardPage.html":{}}}],["event.stoppropagation",{"_index":1054,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["eventemitter",{"_index":2382,"title":{},"body":{"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{}}}],["events",{"_index":898,"title":{},"body":{"components/ButtonComponent.html":{},"classes/DialogRef.html":{},"components/InputComponent.html":{},"interfaces/RequestOptions.html":{}}}],["ex",{"_index":2030,"title":{},"body":{"injectables/GitIntegrationService.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"additional-documentation/architecture.html":{}}}],["example",{"_index":996,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"modules/MainModule.html":{},"interfaces/Project.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/SettingsLocalizationPage.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["example.page.html",{"_index":4591,"title":{},"body":{"miscellaneous/functions.html":{}}}],["example.page.scss",{"_index":4592,"title":{},"body":{"miscellaneous/functions.html":{}}}],["examplemodule",{"_index":2519,"title":{},"body":{"modules/MainModule.html":{}}}],["exclusive",{"_index":3059,"title":{},"body":{"classes/Random.html":{}}}],["execute",{"_index":4634,"title":{},"body":{"index.html":{}}}],["executed",{"_index":865,"title":{},"body":{"components/ButtonComponent.html":{}}}],["executeedits",{"_index":2748,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["executeedits(editor",{"_index":2758,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["executeselectionedits",{"_index":3271,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["executeselectionedits(edits",{"_index":3273,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["exemplary",{"_index":4699,"title":{},"body":{"license.html":{}}}],["exist",{"_index":4475,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["existing",{"_index":3791,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["expanded",{"_index":3935,"title":{},"body":{"components/TaskListPage.html":{}}}],["expandedsubtasks",{"_index":3866,"title":{},"body":{"components/TaskListPage.html":{}}}],["expect",{"_index":3128,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["expecttofail",{"_index":4553,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expecttofail(val",{"_index":4579,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expecttopass",{"_index":4556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expecttopass(val",{"_index":4580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expired",{"_index":1755,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["exportdeclarations",{"_index":2607,"title":{},"body":{"modules/MainModule.html":{}}}],["exported",{"_index":2608,"title":{},"body":{"modules/MainModule.html":{}}}],["exports",{"_index":464,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["exposeallpossibilities",{"_index":3725,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["express",{"_index":4682,"title":{},"body":{"license.html":{}}}],["ext",{"_index":1622,"title":{},"body":{"classes/Emoji.html":{}}}],["extended",{"_index":1073,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["extended.class.ts",{"_index":2747,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"miscellaneous/typealiases.html":{}}}],["extended.class.ts:110",{"_index":2783,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:15",{"_index":2768,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:154",{"_index":2787,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:161",{"_index":2785,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:168",{"_index":2789,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:34",{"_index":2762,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:44",{"_index":2781,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:64",{"_index":2775,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:72",{"_index":2765,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:76",{"_index":2773,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extendedmeta",{"_index":1797,"title":{"interfaces/ExtendedMeta.html":{}},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["extends",{"_index":980,"title":{},"body":{"components/CheckboxComponent.html":{},"classes/ESet.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"classes/FormControlStoryPageConfig.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"classes/StoryPageConfig.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{}}}],["extension",{"_index":1635,"title":{},"body":{"interfaces/EmojiToken.html":{},"classes/Marked.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["extension.ts",{"_index":1626,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["extensions",{"_index":2642,"title":{},"body":{"classes/Marked.html":{}}}],["extensions.service",{"_index":80,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["extensions.service.ts",{"_index":3146,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["extensions.service.ts:7",{"_index":3148,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["extensions.service.ts:9",{"_index":3150,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["extensions/marked",{"_index":2637,"title":{},"body":{"classes/Marked.html":{}}}],["external",{"_index":2606,"title":{},"body":{"modules/MainModule.html":{},"additional-documentation/localization.html":{}}}],["extract",{"_index":4829,"title":{},"body":{"additional-documentation/localization.html":{}}}],["extract:i18neach",{"_index":4831,"title":{},"body":{"additional-documentation/localization.html":{}}}],["extractpropsstring",{"_index":4557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractpropsstring(deftemplate",{"_index":4116,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["extractpropsstring(template",{"_index":4130,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["f1",{"_index":4836,"title":{},"body":{"additional-documentation/localization.html":{}}}],["f39c12",{"_index":2713,"title":{},"body":{"components/MockPage.html":{},"pipes/StatusColorPipe.html":{}}}],["fa",{"_index":2104,"title":{},"body":{"components/IconComponent.html":{}}}],["faaddresscard",{"_index":3442,"title":{},"body":{"components/SettingsPage.html":{}}}],["faangledown",{"_index":1916,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["fabold",{"_index":4194,"title":{},"body":{"components/TextareaComponent.html":{}}}],["facheck",{"_index":539,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["fachevrondown",{"_index":3233,"title":{},"body":{"components/SelectComponent.html":{}}}],["fachevronright",{"_index":540,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["facirclenodes",{"_index":3443,"title":{},"body":{"components/SettingsPage.html":{}}}],["faclose",{"_index":3526,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["facode",{"_index":4195,"title":{},"body":{"components/TextareaComponent.html":{}}}],["facodecommit",{"_index":541,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["facodepullrequest",{"_index":542,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["facog",{"_index":4278,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["fafilecode",{"_index":4196,"title":{},"body":{"components/TextareaComponent.html":{}}}],["fafilter",{"_index":4424,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["fagithub",{"_index":4432,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["faglobe",{"_index":3444,"title":{},"body":{"components/SettingsPage.html":{}}}],["faitalic",{"_index":4197,"title":{},"body":{"components/TextareaComponent.html":{}}}],["falink",{"_index":4198,"title":{},"body":{"components/TextareaComponent.html":{}}}],["falist",{"_index":4199,"title":{},"body":{"components/TextareaComponent.html":{}}}],["falistnumeric",{"_index":4200,"title":{},"body":{"components/TextareaComponent.html":{}}}],["false",{"_index":294,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"interfaces/ExtendedMeta.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"classes/Marked.html":{},"classes/Monaco.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/RegisterPage.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{}}}],["faminus",{"_index":2393,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["fapentosquare",{"_index":4426,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["faplus",{"_index":543,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/InputTaskPropertyComponent.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["faquestion",{"_index":2144,"title":{},"body":{"components/IconComponent.html":{}}}],["faquoteleft",{"_index":4201,"title":{},"body":{"components/TextareaComponent.html":{}}}],["fas",{"_index":2123,"title":{},"body":{"components/IconComponent.html":{}}}],["fasignout",{"_index":4279,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["faunderline",{"_index":4202,"title":{},"body":{"components/TextareaComponent.html":{}}}],["fauser",{"_index":3445,"title":{},"body":{"components/SettingsPage.html":{},"components/UpperNavigationComponent.html":{}}}],["fff",{"_index":834,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["field",{"_index":993,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"modules/MainModule.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["fields",{"_index":1129,"title":{},"body":{"components/ControlAccessor.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["filename",{"_index":4757,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["files",{"_index":4625,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["fill",{"_index":995,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["filter",{"_index":1457,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["filter((closed",{"_index":2057,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["filter((e",{"_index":1721,"title":{},"body":{"classes/Enum.html":{},"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["filter((v",{"_index":1716,"title":{},"body":{"classes/Enum.html":{}}}],["filter.label",{"_index":1900,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filter.type",{"_index":1902,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filter.value",{"_index":1897,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filtercheckbox",{"_index":1848,"title":{"interfaces/FilterCheckbox.html":{}},"body":{"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"miscellaneous/typealiases.html":{}}}],["filteredprops",{"_index":4125,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["filters",{"_index":1854,"title":{"classes/Filters.html":{}},"body":{"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/functions.html":{}}}],["filters'},{'name",{"_index":159,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["filters(filters",{"_index":1884,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.html",{"_index":1870,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.scss",{"_index":1869,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.map((filter",{"_index":1886,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.operator",{"_index":3994,"title":{},"body":{"injectables/TaskService.html":{}}}],["filters.operator.ts",{"_index":4542,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filterscomponent",{"_index":158,"title":{"components/FiltersComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["filterscontrol",{"_index":3867,"title":{},"body":{"components/TaskListPage.html":{},"components/ViewOptionsComponent-1.html":{}}}],["filtertype",{"_index":1853,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"miscellaneous/typealiases.html":{}}}],["filtervalue",{"_index":1895,"title":{},"body":{"components/FiltersComponent.html":{}}}],["final",{"_index":3601,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["finally",{"_index":4236,"title":{},"body":{"components/TextareaComponent.html":{}}}],["find",{"_index":4378,"title":{},"body":{"classes/Utils.html":{}}}],["finished",{"_index":357,"title":{},"body":{"injectables/ApiService.html":{},"classes/DialogRef.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["finishing",{"_index":662,"title":{},"body":{"components/BoardPage.html":{}}}],["first",{"_index":724,"title":{},"body":{"components/BoardPage.html":{},"directives/FocusInitialDirective.html":{},"classes/Utils.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["fitness",{"_index":4688,"title":{},"body":{"license.html":{}}}],["flex",{"_index":696,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["floating",{"_index":2261,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["floatinglabel",{"_index":2256,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["fn",{"_index":1014,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["focus",{"_index":850,"title":{},"body":{"components/ButtonComponent.html":{},"directives/FocusInitialDirective.html":{}}}],["focusableoption",{"_index":846,"title":{},"body":{"components/ButtonComponent.html":{}}}],["focused",{"_index":2274,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["focusinitialdirective",{"_index":254,"title":{"directives/FocusInitialDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["folder",{"_index":4769,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["following",{"_index":4668,"title":{},"body":{"license.html":{}}}],["font",{"_index":1042,"title":{},"body":{"components/CheckboxComponent.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["fontawesome",{"_index":2561,"title":{},"body":{"modules/MainModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":2559,"title":{},"body":{"modules/MainModule.html":{}}}],["foreach((c",{"_index":4246,"title":{},"body":{"components/TextareaComponent.html":{}}}],["forgot",{"_index":161,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["forgotpasswordpage",{"_index":160,"title":{"components/ForgotPasswordPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["form",{"_index":29,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"license.html":{}}}],["formarray",{"_index":1879,"title":{},"body":{"components/FiltersComponent.html":{}}}],["format",{"_index":3398,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["formcontrol",{"_index":65,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"classes/TestNgControl.html":{},"components/ViewOptionsComponent-1.html":{}}}],["formcontrol(filter.value",{"_index":1887,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formcontrol(null",{"_index":1519,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/IntegrationGithubComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["formcontrol(projectid",{"_index":1531,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["formcontrol(taskpriority.medium",{"_index":3820,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formcontrol(this.data.subtask",{"_index":3816,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formcontrol(workspaceid",{"_index":1178,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["formcontrolstorypageconfig",{"_index":1925,"title":{"classes/FormControlStoryPageConfig.html":{}},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["formfields",{"_index":3090,"title":{},"body":{"components/RegisterPage.html":{}}}],["formgroup",{"_index":63,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["forms",{"_index":861,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"license.html":{},"additional-documentation/architecture.html":{}}}],["formsmodule",{"_index":2529,"title":{},"body":{"modules/MainModule.html":{}}}],["formvalue",{"_index":1893,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formvalue.push(filter",{"_index":1898,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formvalues",{"_index":101,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["fortawesome/angular",{"_index":2560,"title":{},"body":{"modules/MainModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":2140,"title":{},"body":{"components/IconComponent.html":{},"interfaces/SelectLabel.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":605,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["forwards",{"_index":3565,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["found",{"_index":2132,"title":{},"body":{"components/IconComponent.html":{}}}],["fragment",{"_index":2285,"title":{},"body":{"components/InputComponent.html":{}}}],["fragments",{"_index":2284,"title":{},"body":{"components/InputComponent.html":{}}}],["fromevent",{"_index":2202,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["fromevent(document",{"_index":2218,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["full",{"_index":1254,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["fullname",{"_index":1951,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["function",{"_index":1004,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/TextareaComponent.html":{},"classes/Utils.html":{}}}],["functionality",{"_index":4781,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["functions",{"_index":1678,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Enum.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["functions/component",{"_index":3730,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["functions/get",{"_index":1811,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["future",{"_index":4823,"title":{},"body":{"additional-documentation/localization.html":{}}}],["g",{"_index":4135,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"index.html":{}}}],["gb",{"_index":3407,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["general",{"_index":843,"title":{},"body":{"components/ButtonComponent.html":{},"components/ViewOptionsComponent.html":{}}}],["generate",{"_index":1660,"title":{},"body":{"interfaces/EmojiToken.html":{},"injectables/TaskService.html":{}}}],["generates",{"_index":3989,"title":{},"body":{"injectables/TaskService.html":{}}}],["generation",{"_index":3045,"title":{},"body":{"classes/Random.html":{}}}],["generator.js",{"_index":4858,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["geoip",{"_index":4324,"title":{},"body":{"interfaces/UserSession.html":{}}}],["german",{"_index":4802,"title":{},"body":{"additional-documentation/localization.html":{}}}],["germany",{"_index":4803,"title":{},"body":{"additional-documentation/localization.html":{}}}],["get('/user/integration/github",{"_index":2064,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["get(id",{"_index":4458,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["get(projectid",{"_index":2999,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{}}}],["get(url",{"_index":358,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(workspaceid",{"_index":3851,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["getallproperties",{"_index":1810,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{},"miscellaneous/functions.html":{}}}],["getallproperties(obj",{"_index":4582,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getallproperties(this._meta.component.prototype",{"_index":1825,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["getassignee",{"_index":2188,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["getcolorbyid",{"_index":4332,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyid(id",{"_index":4334,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyusername",{"_index":4333,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyusername(username",{"_index":4336,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorstyle",{"_index":3546,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["getcolumnscontainerheight",{"_index":547,"title":{},"body":{"components/BoardPage.html":{}}}],["getcolumnscontainerheight(mapkey",{"_index":565,"title":{},"body":{"components/BoardPage.html":{}}}],["getconnectedgithubaccounts",{"_index":1996,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getconnectedprojects",{"_index":3376,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["getconnectedprojects(account",{"_index":1980,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["getcontrol",{"_index":1086,"title":{},"body":{"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"classes/TestNgControl.html":{}}}],["getcontrol(index",{"_index":1875,"title":{},"body":{"components/FiltersComponent.html":{}}}],["getdates",{"_index":3171,"title":{},"body":{"components/SchedulePage.html":{}}}],["geterrors",{"_index":1090,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getfilters",{"_index":1881,"title":{},"body":{"components/FiltersComponent.html":{}}}],["getgithubaccountconnectedprojects",{"_index":1997,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getgithubaccountconnectedprojects(account",{"_index":1982,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["getgithubintegration",{"_index":1998,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getheight",{"_index":2129,"title":{},"body":{"components/IconComponent.html":{}}}],["geticon",{"_index":2125,"title":{},"body":{"components/IconComponent.html":{}}}],["geticondefinition",{"_index":2130,"title":{},"body":{"components/IconComponent.html":{}}}],["getinitialized",{"_index":2730,"title":{},"body":{"classes/Monaco.html":{}}}],["getisanydialogopen",{"_index":1455,"title":{},"body":{"injectables/DialogService.html":{}}}],["getisopen",{"_index":2192,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/StatusLabelComponent.html":{}}}],["getmodel",{"_index":2827,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["getmyself",{"_index":4315,"title":{},"body":{"injectables/UserService.html":{}}}],["getname",{"_index":1084,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getprojectid",{"_index":2337,"title":{},"body":{"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{}}}],["getprops",{"_index":3721,"title":{},"body":{"classes/Story.html":{},"classes/StoryTemplate.html":{}}}],["getrenderer",{"_index":2631,"title":{},"body":{"classes/Marked.html":{}}}],["getrequired",{"_index":1081,"title":{},"body":{"components/ControlAccessor.html":{}}}],["gets",{"_index":1363,"title":{},"body":{"classes/DialogRef.html":{},"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["getselectionedits",{"_index":3272,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["getselectionedits(edits",{"_index":3277,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["getselector",{"_index":3765,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["getsnakecasename",{"_index":2135,"title":{},"body":{"components/IconComponent.html":{}}}],["getsnapshot",{"_index":3149,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["getstate",{"_index":1346,"title":{},"body":{"classes/DialogRef.html":{}}}],["getstatus",{"_index":3872,"title":{},"body":{"components/TaskListPage.html":{}}}],["getstatus(statusid",{"_index":3884,"title":{},"body":{"components/TaskListPage.html":{}}}],["getstyle",{"_index":2133,"title":{},"body":{"components/IconComponent.html":{}}}],["getsubscription",{"_index":1497,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["getsubtaskscontainerheight",{"_index":3873,"title":{},"body":{"components/TaskListPage.html":{}}}],["getsubtaskscontainerheight(taskid",{"_index":3886,"title":{},"body":{"components/TaskListPage.html":{}}}],["gettasksfromstatus",{"_index":548,"title":{},"body":{"components/BoardPage.html":{}}}],["gettasksfromstatus(statusid",{"_index":569,"title":{},"body":{"components/BoardPage.html":{}}}],["getter",{"_index":2117,"title":{},"body":{"components/IconComponent.html":{}}}],["getting",{"_index":1523,"title":{"index.html":{},"license.html":{}},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"index.html":{}}}],["getvalue",{"_index":1088,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getvalueinrange(selection",{"_index":2828,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["getviewvalue",{"_index":2949,"title":{},"body":{"components/OptionComponent.html":{}}}],["getwidth",{"_index":2128,"title":{},"body":{"components/IconComponent.html":{}}}],["git",{"_index":1988,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["gitaccount",{"_index":1945,"title":{"interfaces/GitAccount.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/SettingsIntegrationsPage.html":{}}}],["gitaccountwithusage",{"_index":1957,"title":{"interfaces/GitAccountWithUsage.html":{}},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["github",{"_index":163,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"additional-documentation/continuos-integration.html":{}}}],["github'},{'name",{"_index":186,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["github.component",{"_index":1223,"title":{},"body":{"modules/DashboardModule.html":{}}}],["github.component.html",{"_index":2415,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.scss",{"_index":2414,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts",{"_index":2413,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:14",{"_index":2423,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:16",{"_index":2429,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:17",{"_index":2422,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:21",{"_index":2428,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:25",{"_index":2425,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:31",{"_index":2426,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:39",{"_index":2424,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:45",{"_index":2427,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.dev",{"_index":2931,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["github/integration",{"_index":1222,"title":{},"body":{"modules/DashboardModule.html":{},"components/IntegrationGithubComponent.html":{}}}],["github/workflows",{"_index":4841,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["githubaccountid",{"_index":2011,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubaccounts",{"_index":1968,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["githubintegration",{"_index":2982,"title":{},"body":{"interfaces/Project.html":{}}}],["githubintegrationpage",{"_index":162,"title":{"components/GithubIntegrationPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["githubissuelist",{"_index":1999,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubissuelist(projectid",{"_index":2019,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubpulllist",{"_index":2000,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubpulllist(projectid",{"_index":2021,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubusername",{"_index":1948,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["gitintegration",{"_index":1952,"title":{"interfaces/GitIntegration.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["gitintegrationservice",{"_index":1219,"title":{"injectables/GitIntegrationService.html":{}},"body":{"modules/DashboardModule.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["gitissue",{"_index":1954,"title":{"interfaces/GitIssue.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputIssueComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["gitpull",{"_index":1955,"title":{"interfaces/GitPull.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputPullRequestComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["gitrepositories",{"_index":1953,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["gitrepository",{"_index":1950,"title":{"interfaces/GitRepository.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IntegrationGithubComponent.html":{}}}],["give",{"_index":997,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["given",{"_index":1445,"title":{},"body":{"injectables/DialogService.html":{},"classes/Enum.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{}}}],["global",{"_index":4602,"title":{},"body":{"miscellaneous/functions.html":{}}}],["go",{"_index":4619,"title":{},"body":{"index.html":{}}}],["going",{"_index":1278,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["goods",{"_index":4704,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4725,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":960,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["greater",{"_index":4587,"title":{},"body":{"miscellaneous/functions.html":{}}}],["green",{"_index":3555,"title":{},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["group",{"_index":930,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{}}}],["group'},{'name",{"_index":191,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["group.component",{"_index":3432,"title":{},"body":{"modules/SettingsModule.html":{}}}],["group.component.html",{"_index":2464,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.scss",{"_index":2463,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.ts",{"_index":2462,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.ts:13",{"_index":2466,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.ts:9",{"_index":2465,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group/list",{"_index":2461,"title":{},"body":{"components/ListGroupComponent.html":{},"modules/SettingsModule.html":{}}}],["grouped",{"_index":4776,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["grouping",{"_index":4446,"title":{},"body":{"interfaces/Workspace.html":{}}}],["grow",{"_index":2287,"title":{},"body":{"components/InputComponent.html":{},"components/MainViewComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{}}}],["guard",{"_index":2470,"title":{"guards/LoggedInUsersGuard.html":{}},"body":{"overview.html":{},"additional-documentation/architecture.html":{}}}],["guard.ts",{"_index":4791,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["guards",{"_index":2471,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"additional-documentation/architecture.html":{}}}],["h1",{"_index":4255,"title":{},"body":{"components/TextareaComponent.html":{}}}],["h2",{"_index":963,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/TextareaComponent.html":{}}}],["h3",{"_index":736,"title":{},"body":{"components/BoardPage.html":{},"components/TextareaComponent.html":{}}}],["h4",{"_index":2467,"title":{},"body":{"components/ListGroupComponent.html":{},"components/TextareaComponent.html":{}}}],["h5",{"_index":4260,"title":{},"body":{"components/TextareaComponent.html":{}}}],["h6",{"_index":4262,"title":{},"body":{"components/TextareaComponent.html":{}}}],["h:mm",{"_index":3488,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["handleerror",{"_index":2483,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["handleerror(error",{"_index":2486,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["has(object",{"_index":4368,"title":{},"body":{"classes/Utils.html":{}}}],["hasgithubintegration",{"_index":2001,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["hasgithubintegration(projectid",{"_index":2023,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["header",{"_index":726,"title":{},"body":{"components/BoardPage.html":{},"components/CardComponent.html":{},"components/InputTaskPropertyComponent.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["headers",{"_index":3112,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["heading",{"_index":827,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/SchedulePage.html":{}}}],["height",{"_index":697,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["hello",{"_index":4758,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["here",{"_index":1281,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"index.html":{}}}],["hh:mm",{"_index":806,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["hidden",{"_index":715,"title":{},"body":{"components/BoardPage.html":{},"components/DialogOutletComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{}}}],["hide",{"_index":1290,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["hidenavigation",{"_index":1257,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["high",{"_index":3947,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["highest",{"_index":3949,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["highlight.js",{"_index":4193,"title":{},"body":{"components/TextareaComponent.html":{},"dependencies.html":{}}}],["highly",{"_index":3365,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["hint",{"_index":1645,"title":{},"body":{"interfaces/EmojiToken.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["hljs",{"_index":4192,"title":{},"body":{"components/TextareaComponent.html":{}}}],["hljs.configure",{"_index":4208,"title":{},"body":{"components/TextareaComponent.html":{}}}],["hljs.highlightelement(c",{"_index":4247,"title":{},"body":{"components/TextareaComponent.html":{}}}],["holder",{"_index":4693,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4680,"title":{},"body":{"license.html":{}}}],["hook",{"_index":1513,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"directives/FocusInitialDirective.html":{},"components/WorkspacesListPage.html":{}}}],["host",{"_index":289,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["host.focused",{"_index":2290,"title":{},"body":{"components/InputComponent.html":{}}}],["host.ng",{"_index":2295,"title":{},"body":{"components/InputComponent.html":{}}}],["host:not(.focused",{"_index":2293,"title":{},"body":{"components/InputComponent.html":{}}}],["hostbinding",{"_index":307,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/DialogOutletComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/OptionComponent.html":{},"components/SnackbarComponent.html":{}}}],["hostbinding('class.focused",{"_index":2273,"title":{},"body":{"components/InputComponent.html":{}}}],["hostbinding('class.important",{"_index":306,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["hostbinding('style.animation",{"_index":3544,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["hostbinding('style.height",{"_index":2157,"title":{},"body":{"components/IconComponent.html":{}}}],["hostbinding('style.width",{"_index":1312,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/IconComponent.html":{}}}],["hostbinding('value",{"_index":2951,"title":{},"body":{"components/OptionComponent.html":{}}}],["hostbindings",{"_index":276,"title":{},"body":{"components/AlertDialog.html":{},"components/DialogOutletComponent.html":{},"components/IconComponent.html":{},"components/SnackbarComponent.html":{}}}],["hostlistener",{"_index":1053,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hostlistener('click",{"_index":1052,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hostlisteners",{"_index":1048,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hosts",{"_index":2112,"title":{},"body":{"components/IconComponent.html":{}}}],["hover",{"_index":763,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["hr",{"_index":4263,"title":{},"body":{"components/TextareaComponent.html":{}}}],["html",{"_index":116,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["htmlelement",{"_index":566,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["http",{"_index":369,"title":{},"body":{"injectables/ApiService.html":{}}}],["http://localhost:4200",{"_index":4623,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":2528,"title":{},"body":{"modules/MainModule.html":{}}}],["httpclient",{"_index":342,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["httpclientmodule",{"_index":2527,"title":{},"body":{"modules/MainModule.html":{}}}],["httpcontext",{"_index":3118,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httpevent",{"_index":1739,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":1735,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpheaders",{"_index":3119,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httpinterceptor",{"_index":1740,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpparams",{"_index":3121,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httprequest",{"_index":1734,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["https://google.com",{"_index":4250,"title":{},"body":{"components/TextareaComponent.html":{}}}],["https://nodejs.org/en",{"_index":4613,"title":{},"body":{"index.html":{}}}],["https://twemoji.maxcdn.com",{"_index":1623,"title":{},"body":{"classes/Emoji.html":{}}}],["https://workflow.adiantek.ovh/${this.form.value.language}/settings/localization",{"_index":3419,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["hue",{"_index":4342,"title":{},"body":{"classes/UserUtils.html":{}}}],["human",{"_index":4402,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"additional-documentation/localization.html":{}}}],["i18n",{"_index":4817,"title":{},"body":{"additional-documentation/localization.html":{}}}],["icon",{"_index":711,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/SelectLabel.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"pipes/TaskTypePipe.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["icon'},{'name",{"_index":166,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["icon(value",{"_index":2145,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.html",{"_index":2098,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":2097,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.hide",{"_index":882,"title":{},"body":{"components/ButtonComponent.html":{}}}],["icon.pipe",{"_index":4099,"title":{},"body":{"modules/TasksModule.html":{}}}],["icon.pipe.ts",{"_index":3938,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskTypeIconPipe.html":{}}}],["icon.pipe.ts:10",{"_index":4045,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["icon.pipe.ts:7",{"_index":3940,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["iconcomponent",{"_index":165,"title":{"components/IconComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["icondefinition",{"_index":852,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{},"components/OptionComponent.html":{},"interfaces/SelectLabel.html":{}}}],["iconname",{"_index":2120,"title":{},"body":{"components/IconComponent.html":{}}}],["iconprefix",{"_index":2122,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":608,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["id",{"_index":757,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/ModifyUser.html":{},"components/NavElementWorkspaceComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{}}}],["id).subscribe",{"_index":2661,"title":{},"body":{"components/MemberListComponent.html":{}}}],["identifier",{"_index":1768,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"injectables/ProjectService.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"injectables/WorkspaceService.html":{}}}],["idof",{"_index":549,"title":{},"body":{"components/BoardPage.html":{}}}],["idof(o",{"_index":572,"title":{},"body":{"components/BoardPage.html":{}}}],["ids",{"_index":2683,"title":{},"body":{"injectables/MemberService.html":{}}}],["ignore",{"_index":1107,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["ignored_properties",{"_index":1814,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["ignored_properties.includes(property",{"_index":1841,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["ignoreevent",{"_index":4222,"title":{},"body":{"components/TextareaComponent.html":{}}}],["image",{"_index":954,"title":{},"body":{"components/ChangePasswordPage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"modules/EmailsRoutingModule.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"modules/TasksRoutingModule.html":{}}}],["img",{"_index":2712,"title":{},"body":{"components/MockPage.html":{}}}],["implemented",{"_index":1411,"title":{},"body":{"classes/DialogRef.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectPage.html":{},"interceptors/ErrorInterceptor.html":{},"directives/FocusInitialDirective.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"components/WorkspacesListPage.html":{}}}],["implied",{"_index":4683,"title":{},"body":{"license.html":{}}}],["import",{"_index":71,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["import('../settings/settings.module').then((m",{"_index":1255,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["import('../tasks/tasks.module').then((m",{"_index":1265,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["import('./auth/auth.module').then((m",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./dashboard/dashboard.module').then((m",{"_index":457,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./emails/emails.module').then((m",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./messages/messages.module').then((m",{"_index":455,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":274,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/architecture.html":{}}}],["important_data",{"_index":3088,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["importexports",{"_index":2605,"title":{},"body":{"modules/MainModule.html":{}}}],["imports",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"interfaces/ExtendedMeta.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"classes/StoryPageConfig.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{}}}],["imports/no",{"_index":4191,"title":{},"body":{"components/TextareaComponent.html":{}}}],["incidental",{"_index":4697,"title":{},"body":{"license.html":{}}}],["include",{"_index":825,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["included",{"_index":4853,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["including",{"_index":4685,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":3057,"title":{},"body":{"classes/Random.html":{}}}],["increase",{"_index":3368,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["independent",{"_index":4605,"title":{},"body":{"index.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":1760,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["indexes",{"_index":3298,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["indexes.map((line",{"_index":3300,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["indexof",{"_index":4389,"title":{},"body":{"classes/Utils.html":{}}}],["indicate",{"_index":295,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["indicates",{"_index":312,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["indirect",{"_index":4696,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["infomracja",{"_index":3352,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["information",{"_index":855,"title":{},"body":{"components/ButtonComponent.html":{},"components/ControlAccessor.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/StatusService.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["information's",{"_index":4748,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["inherited",{"_index":990,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"classes/FormControlStoryPageConfig.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["init",{"_index":2632,"title":{},"body":{"classes/Marked.html":{},"classes/Monaco.html":{},"classes/SelectionEditPlugin.html":{}}}],["init(prototype",{"_index":3279,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["initassigneechanging",{"_index":3874,"title":{},"body":{"components/TaskListPage.html":{}}}],["initial",{"_index":4268,"title":{},"body":{"components/TextareaComponent.html":{}}}],["initial.directive",{"_index":2592,"title":{},"body":{"modules/MainModule.html":{}}}],["initial.directive.ts",{"_index":1906,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["initial.directive.ts:19",{"_index":1913,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["initial.directive.ts:9",{"_index":1911,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["initialization",{"_index":1009,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["initialize",{"_index":1072,"title":{},"body":{"components/ControlAccessor.html":{},"directives/FocusInitialDirective.html":{}}}],["initialized",{"_index":2726,"title":{},"body":{"classes/Monaco.html":{}}}],["inject",{"_index":72,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["inject(mat_dialog_data",{"_index":58,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["injectable",{"_index":329,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["injectables",{"_index":331,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"overview.html":{}}}],["injection",{"_index":3967,"title":{},"body":{"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["injector",{"_index":1295,"title":{},"body":{"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"modules/MainModule.html":{}}}],["injector.create",{"_index":1333,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["injects",{"_index":280,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["inline",{"_index":1641,"title":{},"body":{"interfaces/EmojiToken.html":{},"components/ForgotPasswordPage.html":{},"components/TextareaComponent.html":{}}}],["input",{"_index":168,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["input'},{'name",{"_index":171,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["input.component.html",{"_index":2255,"title":{},"body":{"components/InputComponent.html":{}}}],["input.component.scss",{"_index":2254,"title":{},"body":{"components/InputComponent.html":{}}}],["input/input.component",{"_index":3236,"title":{},"body":{"components/SelectComponent.html":{}}}],["input::placeholder",{"_index":2294,"title":{},"body":{"components/InputComponent.html":{}}}],["inputassigneecomponent",{"_index":167,"title":{"components/InputAssigneeComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["inputcomponent",{"_index":170,"title":{"components/InputComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["inputdatetimecomponent",{"_index":172,"title":{"components/InputDateTimeComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["inputissuecomponent",{"_index":175,"title":{"components/InputIssueComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["inputpullrequestcomponent",{"_index":177,"title":{"components/InputPullRequestComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["inputs",{"_index":779,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/DialogOutletComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["inputstring",{"_index":4387,"title":{},"body":{"classes/Utils.html":{}}}],["inputtaskpropertycomponent",{"_index":180,"title":{"components/InputTaskPropertyComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["inserttextafterselection",{"_index":2749,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["inserttextafterselection(editor",{"_index":2763,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["inserttextat",{"_index":2750,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["inserttextat(editor",{"_index":2766,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["inserttextbeforeandaftereachselection",{"_index":2751,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["inserttextbeforeandaftereachselection(editor",{"_index":2769,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["inserttextbeforeselection",{"_index":2752,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["inserttextbeforeselection(editor",{"_index":2774,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["insiders",{"_index":2934,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["insiders://vscode.git/clone?url=https://github.com/${project.githubintegration",{"_index":2929,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["install",{"_index":4610,"title":{},"body":{"index.html":{}}}],["installand",{"_index":4617,"title":{},"body":{"index.html":{}}}],["installation_id",{"_index":2087,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["installationid",{"_index":2035,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["instance",{"_index":284,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"classes/Monaco.html":{}}}],["instance.__proto__",{"_index":2743,"title":{},"body":{"classes/Monaco.html":{}}}],["instances",{"_index":4601,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instead",{"_index":3792,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"index.html":{}}}],["int",{"_index":3116,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["integration",{"_index":164,"title":{"additional-documentation/continuos-integration.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/continuos-integration.html":{}}}],["integration.gitrepositories",{"_index":2435,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["integration.interface",{"_index":1963,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["integration.interface.ts",{"_index":1947,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["integration.page",{"_index":1251,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["integration.page.html",{"_index":2084,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.scss",{"_index":2083,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.ts",{"_index":2082,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.ts:10",{"_index":2085,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.ts:16",{"_index":2086,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.service",{"_index":1246,"title":{},"body":{"modules/DashboardModule.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["integration.service.ts",{"_index":1987,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:103",{"_index":2026,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:108",{"_index":2017,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:20",{"_index":2004,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:28",{"_index":2036,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:45",{"_index":2034,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:51",{"_index":2018,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:55",{"_index":2007,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:61",{"_index":2016,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:76",{"_index":2009,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:80",{"_index":2015,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:84",{"_index":2024,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:88",{"_index":2020,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:92",{"_index":2022,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration/github",{"_index":1250,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/GithubIntegrationPage.html":{}}}],["integrationentrycomponent",{"_index":183,"title":{"components/IntegrationEntryComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["integrationgithubcomponent",{"_index":185,"title":{"components/IntegrationGithubComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["integrations",{"_index":1965,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{}}}],["integrations'},{'name",{"_index":222,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["integrations.page",{"_index":3434,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["integrations.page.html",{"_index":1966,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.scss",{"_index":1967,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts",{"_index":1960,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:17",{"_index":3377,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:21",{"_index":3381,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:25",{"_index":3380,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:38",{"_index":3378,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:44",{"_index":3379,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations/settings",{"_index":1959,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["intercept",{"_index":1731,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":1733,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":1726,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1728,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptors/error.interceptor",{"_index":2595,"title":{},"body":{"modules/MainModule.html":{}}}],["interface",{"_index":86,"title":{"interfaces/AddMemberDialogData.html":{},"interfaces/AlertDialogData.html":{},"interfaces/EmojiToken.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"interfaces/ModifyUser.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/StoryConfig.html":{},"interfaces/Task.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/EmojiToken.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"interfaces/ModifyUser.html":{},"classes/MonacoExtended.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{},"additional-documentation/localization.html":{}}}],["interfaces",{"_index":263,"title":{},"body":{"interfaces/AddMemberDialogData.html":{},"interfaces/AlertDialogData.html":{},"interfaces/EmojiToken.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"interfaces/ModifyUser.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/StoryConfig.html":{},"interfaces/Task.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["interfaces/project.interface",{"_index":3004,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{}}}],["interfaces/request",{"_index":378,"title":{},"body":{"injectables/ApiService.html":{}}}],["interfaces/session.interface",{"_index":3475,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["interfaces/status.interface",{"_index":615,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{}}}],["interfaces/task.interface",{"_index":616,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["interfaces/workspace.interface",{"_index":3029,"title":{},"body":{"components/ProjectsListPage.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["interruption",{"_index":4709,"title":{},"body":{"license.html":{}}}],["interval",{"_index":2043,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["interval(100).pipe",{"_index":2055,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["invalid",{"_index":2297,"title":{},"body":{"components/InputComponent.html":{}}}],["invalid.ng",{"_index":1037,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["ip",{"_index":4325,"title":{},"body":{"interfaces/UserSession.html":{}}}],["isanydialogopen",{"_index":1424,"title":{},"body":{"injectables/DialogService.html":{}}}],["isbuttondisabled",{"_index":4283,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["isdisabled",{"_index":1023,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["isequal",{"_index":3235,"title":{},"body":{"components/SelectComponent.html":{}}}],["isequal(a",{"_index":3266,"title":{},"body":{"components/SelectComponent.html":{}}}],["isfiltersopen",{"_index":4433,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["isgithubintegrationavailable",{"_index":3798,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["isletter",{"_index":4366,"title":{},"body":{"classes/Utils.html":{}}}],["isletter(char",{"_index":4370,"title":{},"body":{"classes/Utils.html":{}}}],["isloggedin",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnumeric",{"_index":1681,"title":{},"body":{"classes/Enum.html":{}}}],["isnumeric(enumtype",{"_index":1695,"title":{},"body":{"classes/Enum.html":{}}}],["isopen",{"_index":2167,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["isopen(val",{"_index":2215,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["isopen(value",{"_index":2346,"title":{},"body":{"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{}}}],["isopenchange",{"_index":2379,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["isownerofrepository",{"_index":2002,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["isownerofrepository(repositoryname",{"_index":2025,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["issubtasksrow",{"_index":3868,"title":{},"body":{"components/TaskListPage.html":{}}}],["issue",{"_index":2328,"title":{},"body":{"components/InputIssueComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"miscellaneous/enumerations.html":{}}}],["issue'},{'name",{"_index":176,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["issue.component",{"_index":4088,"title":{},"body":{"modules/TasksModule.html":{}}}],["issue.component.html",{"_index":2329,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["issue.component.ts",{"_index":2327,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["issue.component.ts:13",{"_index":2334,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["issue.component.ts:20",{"_index":2338,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["issue.component.ts:24",{"_index":2342,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["issue.component.ts:29",{"_index":2340,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["issue.component.ts:33",{"_index":2336,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["issue.component.ts:35",{"_index":2333,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["issue.component.ts:41",{"_index":2335,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["issue.title",{"_index":2353,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["issue/input",{"_index":2326,"title":{},"body":{"components/InputIssueComponent.html":{},"modules/TasksModule.html":{}}}],["issueattachgithub",{"_index":3793,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["issuelist",{"_index":3799,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["issues",{"_index":2331,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["it's",{"_index":2029,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsAccountPage.html":{},"index.html":{},"additional-documentation/architecture.html":{}}}],["it\\'s",{"_index":3375,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["italian",{"_index":4809,"title":{},"body":{"additional-documentation/localization.html":{}}}],["italiano",{"_index":3411,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["italy",{"_index":4810,"title":{},"body":{"additional-documentation/localization.html":{}}}],["items",{"_index":728,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["javascript\\n",{"_index":4252,"title":{},"body":{"components/TextareaComponent.html":{}}}],["jego",{"_index":3361,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["jesli",{"_index":3350,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["join",{"_index":4129,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"classes/Utils.html":{}}}],["js",{"_index":1611,"title":{},"body":{"classes/Emoji.html":{},"modules/MainModule.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{}}}],["json",{"_index":386,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["json.parse(localstorage.getitem(persistentkey",{"_index":2978,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["json.stringify([...this.entries",{"_index":2975,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["justify",{"_index":730,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["k",{"_index":1713,"title":{},"body":{"classes/Enum.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"classes/SelectionEditPlugin.html":{}}}],["karma",{"_index":4636,"title":{},"body":{"index.html":{}}}],["key",{"_index":1492,"title":{},"body":{"classes/ESet.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"classes/PersistentMap.html":{},"classes/SelectionEditPlugin.html":{},"classes/Utils.html":{}}}],["keydown",{"_index":1383,"title":{},"body":{"classes/DialogRef.html":{}}}],["keydownevents",{"_index":1347,"title":{},"body":{"classes/DialogRef.html":{}}}],["keyframes",{"_index":3569,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["keys",{"_index":1682,"title":{},"body":{"classes/Enum.html":{},"classes/Utils.html":{}}}],["keys(enumtype",{"_index":1703,"title":{},"body":{"classes/Enum.html":{}}}],["key}]=\"${key",{"_index":4128,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["kingdom",{"_index":4805,"title":{},"body":{"additional-documentation/localization.html":{}}}],["konta",{"_index":3349,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["konto",{"_index":3358,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["label",{"_index":704,"title":{},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["label'},{'name",{"_index":236,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["label.component",{"_index":4092,"title":{},"body":{"modules/TasksModule.html":{}}}],["label.component.html",{"_index":3623,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.scss",{"_index":3622,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts",{"_index":3621,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:16",{"_index":3632,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:17",{"_index":3627,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:18",{"_index":3629,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:19",{"_index":3630,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:20",{"_index":3628,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:28",{"_index":3626,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:34",{"_index":3640,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:36",{"_index":3641,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:37",{"_index":3638,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:39",{"_index":3644,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:43",{"_index":3643,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:47",{"_index":3634,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:59",{"_index":3633,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:63",{"_index":3637,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:70",{"_index":3636,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.model",{"_index":3239,"title":{},"body":{"components/SelectComponent.html":{}}}],["label.model.ts",{"_index":3268,"title":{},"body":{"interfaces/SelectLabel.html":{}}}],["label/status",{"_index":3620,"title":{},"body":{"components/StatusLabelComponent.html":{},"modules/TasksModule.html":{}}}],["label::after",{"_index":2298,"title":{},"body":{"components/InputComponent.html":{}}}],["labels",{"_index":2411,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["landing",{"_index":188,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["landingpagecomponent",{"_index":187,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["language",{"_index":3401,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"components/TextareaComponent.html":{},"additional-documentation/localization.html":{}}}],["language.name",{"_index":3421,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["languages",{"_index":3387,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"components/TextareaComponent.html":{},"additional-documentation/localization.html":{}}}],["last",{"_index":998,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/WorkspacesListPage.html":{}}}],["lastused",{"_index":4326,"title":{},"body":{"interfaces/UserSession.html":{}}}],["layout",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["leas",{"_index":1699,"title":{},"body":{"classes/Enum.html":{}}}],["leave",{"_index":2667,"title":{},"body":{"injectables/MemberService.html":{}}}],["leave(projectid",{"_index":2673,"title":{},"body":{"injectables/MemberService.html":{}}}],["left",{"_index":707,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["legend",{"_index":115,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["length",{"_index":2817,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"miscellaneous/functions.html":{}}}],["length.validator",{"_index":1170,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["length.validator.ts",{"_index":4562,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letcontext",{"_index":2445,"title":{"interfaces/LetContext.html":{}},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["letdirective",{"_index":256,"title":{"directives/LetDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["letter",{"_index":4373,"title":{},"body":{"classes/Utils.html":{}}}],["letters",{"_index":4754,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["level",{"_index":1640,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["lg",{"_index":972,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["li",{"_index":2244,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/StatusLabelComponent.html":{}}}],["liability",{"_index":4712,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4694,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4365,"title":{},"body":{"classes/Utils.html":{}}}],["library",{"_index":4646,"title":{},"body":{"index.html":{}}}],["libs/monaco/monaco.lib",{"_index":4189,"title":{},"body":{"components/TextareaComponent.html":{}}}],["license",{"_index":3106,"title":{"license.html":{}},"body":{"components/RegisterPage.html":{},"license.html":{}}}],["lifecycle",{"_index":1380,"title":{},"body":{"classes/DialogRef.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"directives/FocusInitialDirective.html":{},"components/WorkspacesListPage.html":{}}}],["limitafter",{"_index":3158,"title":{},"body":{"components/SchedulePage.html":{}}}],["limitbefore",{"_index":3159,"title":{},"body":{"components/SchedulePage.html":{}}}],["limited",{"_index":4686,"title":{},"body":{"license.html":{}}}],["line",{"_index":1101,"title":{},"body":{"components/ControlAccessor.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"classes/SelectionEditPlugin.html":{},"components/TextareaComponent.html":{}}}],["linenumber",{"_index":2767,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["link",{"_index":1282,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["linkoverride",{"_index":2638,"title":{},"body":{"classes/Marked.html":{},"miscellaneous/functions.html":{}}}],["linkoverride(renderer",{"_index":2643,"title":{},"body":{"classes/Marked.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":190,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"license.html":{},"additional-documentation/localization.html":{}}}],["list'},{'name",{"_index":198,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["list(projectid",{"_index":2675,"title":{},"body":{"injectables/MemberService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["list.component",{"_index":1226,"title":{},"body":{"modules/DashboardModule.html":{}}}],["list.component.html",{"_index":2647,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.scss",{"_index":2646,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts",{"_index":2645,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:13",{"_index":2658,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:15",{"_index":2657,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:18",{"_index":2652,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:21",{"_index":2653,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:24",{"_index":2651,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:33",{"_index":2655,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:39",{"_index":2656,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.page",{"_index":1242,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["list.page.html",{"_index":3019,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.scss",{"_index":3018,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts",{"_index":3017,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:104",{"_index":3890,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:119",{"_index":3879,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:127",{"_index":3883,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:133",{"_index":3881,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:139",{"_index":3888,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:143",{"_index":3887,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:17",{"_index":3028,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:18",{"_index":3027,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:20",{"_index":3026,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:22",{"_index":3021,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:33",{"_index":3895,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:34",{"_index":3892,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:35",{"_index":3893,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:36",{"_index":3894,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:37",{"_index":3891,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:39",{"_index":3900,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:41",{"_index":3023,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{}}}],["list.page.ts:42",{"_index":3902,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:43",{"_index":3899,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:44",{"_index":3898,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:45",{"_index":3025,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{}}}],["list.page.ts:47",{"_index":3901,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:49",{"_index":3022,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{}}}],["list.page.ts:50",{"_index":3896,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:52",{"_index":3897,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:53",{"_index":3876,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:54",{"_index":4483,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:62",{"_index":4479,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:75",{"_index":4482,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:79",{"_index":4485,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:94",{"_index":3885,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:98",{"_index":3877,"title":{},"body":{"components/TaskListPage.html":{}}}],["list/member",{"_index":1225,"title":{},"body":{"modules/DashboardModule.html":{},"components/MemberListComponent.html":{}}}],["list/projects",{"_index":1241,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ProjectsListPage.html":{}}}],["list/task",{"_index":3864,"title":{},"body":{"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["list/workspaces",{"_index":1244,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/WorkspacesListPage.html":{}}}],["listed",{"_index":4815,"title":{},"body":{"additional-documentation/localization.html":{}}}],["listelement",{"_index":2842,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["listgroupcomponent",{"_index":189,"title":{"components/ListGroupComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["lists",{"_index":2677,"title":{},"body":{"injectables/MemberService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["listwithtasks",{"_index":3654,"title":{},"body":{"injectables/StatusService.html":{}}}],["listwithtasks(projectid",{"_index":3665,"title":{},"body":{"injectables/StatusService.html":{}}}],["literal",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"interfaces/StoryConfig.html":{},"interfaces/UserSession.html":{},"interfaces/Workspace.html":{}}}],["load",{"_index":1446,"title":{},"body":{"injectables/DialogService.html":{},"components/WorkspacesListPage.html":{}}}],["loadchildren",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["loadcomponent",{"_index":1291,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["loadcomponent(component",{"_index":1304,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["loader",{"_index":856,"title":{},"body":{"components/ButtonComponent.html":{}}}],["loadgithubintegration",{"_index":1970,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["loadissues",{"_index":2332,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["loadoptions",{"_index":3200,"title":{},"body":{"components/SelectComponent.html":{}}}],["loadparamsfromurl",{"_index":35,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["loadplugins",{"_index":2725,"title":{},"body":{"classes/Monaco.html":{}}}],["loadproject",{"_index":1501,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["loadproject(id",{"_index":1508,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["loadpullrequests",{"_index":2358,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["loadrepositories",{"_index":2420,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["loads",{"_index":1510,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["loadworkspace",{"_index":1568,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["loadworkspace(id",{"_index":1570,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["loadworkspaces",{"_index":4477,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["local",{"_index":2604,"title":{},"body":{"modules/MainModule.html":{},"components/SettingsSessionsPage.html":{}}}],["locales",{"_index":4818,"title":{},"body":{"additional-documentation/localization.html":{}}}],["localization",{"_index":224,"title":{"additional-documentation/localization.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/localization.html":{}}}],["localization.page",{"_index":3435,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["localization.page.html",{"_index":3385,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.scss",{"_index":3384,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts",{"_index":3383,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:12",{"_index":3403,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:17",{"_index":3417,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:48",{"_index":3400,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:56",{"_index":3389,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:60",{"_index":3390,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:64",{"_index":3391,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization/settings",{"_index":3382,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["localize`are",{"_index":667,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`cancel",{"_index":674,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`close",{"_index":1481,"title":{},"body":{"injectables/DialogService.html":{}}}],["localize`dd",{"_index":3393,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localize`dd.mm.yyyy",{"_index":3396,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localize`delete",{"_index":1484,"title":{},"body":{"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`email",{"_index":3103,"title":{},"body":{"components/RegisterPage.html":{}}}],["localize`epic",{"_index":4070,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`given",{"_index":926,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["localize`high",{"_index":3957,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`highest",{"_index":3958,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`if",{"_index":669,"title":{},"body":{"components/BoardPage.html":{}}}],["localize`issue",{"_index":4065,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`low",{"_index":3955,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`lowest",{"_index":3954,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`medium",{"_index":3956,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`merge",{"_index":673,"title":{},"body":{"components/BoardPage.html":{}}}],["localize`mm/dd/yyyy",{"_index":3395,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localize`ok",{"_index":1785,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`only",{"_index":1862,"title":{},"body":{"classes/Filters.html":{}}}],["localize`something",{"_index":1782,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`subtask",{"_index":4074,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`success",{"_index":1781,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`task",{"_index":4056,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`user",{"_index":2506,"title":{},"body":{"components/LoginPage.html":{},"pipes/TaskTypePipe.html":{}}}],["localize`username",{"_index":3104,"title":{},"body":{"components/RegisterPage.html":{}}}],["localize`workspace",{"_index":4474,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["localize`wrong",{"_index":2510,"title":{},"body":{"components/LoginPage.html":{}}}],["localize`yyyy",{"_index":3392,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localized",{"_index":4799,"title":{},"body":{"additional-documentation/localization.html":{}}}],["localstorage.getitem('logged",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["localstorage.getitem(persistentkey",{"_index":2977,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["localstorage.removeitem('logged",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["localstorage.removeitem(this._persistentkey",{"_index":2968,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["localstorage.setitem('logged",{"_index":2495,"title":{},"body":{"components/LoginPage.html":{}}}],["localstorage.setitem(this._persistentkey",{"_index":2974,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["located",{"_index":4783,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["location.href",{"_index":3418,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["location.reload",{"_index":682,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/EditProjectMembersPage.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["lodash",{"_index":1808,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/TemplateDecoratorConfig.html":{},"dependencies.html":{}}}],["log",{"_index":1280,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/LoginPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/UpperNavigationComponent.html":{}}}],["logged",{"_index":2508,"title":{},"body":{"components/LoginPage.html":{}}}],["loggedinusersguard",{"_index":439,"title":{"guards/LoggedInUsersGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoggedInUsersGuard.html":{}}}],["logic",{"_index":4775,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["login",{"_index":488,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/UpperNavigationComponent.html":{}}}],["login'},{'name",{"_index":193,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["login(this.form.value",{"_index":2498,"title":{},"body":{"components/LoginPage.html":{}}}],["login(undefined",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.page.html",{"_index":2481,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":2480,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":192,"title":{"components/LoginPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["loginsubscription",{"_index":2482,"title":{},"body":{"components/LoginPage.html":{}}}],["logo",{"_index":950,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{}}}],["logout",{"_index":489,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/RestoreAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["loss",{"_index":4706,"title":{},"body":{"license.html":{}}}],["low",{"_index":3943,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["lower",{"_index":4753,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["lowest",{"_index":3941,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["m",{"_index":1789,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["m.authmodule",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.dashboardmodule",{"_index":458,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.emailsmodule",{"_index":453,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.messagesmodule",{"_index":456,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.settingsmodule",{"_index":1256,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["m.tasksmodule",{"_index":1266,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["m_w",{"_index":3040,"title":{},"body":{"classes/Random.html":{}}}],["m_z",{"_index":3041,"title":{},"body":{"classes/Random.html":{}}}],["ma",{"_index":3359,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["mail",{"_index":4608,"title":{},"body":{"index.html":{}}}],["maila",{"_index":3356,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["main",{"_index":195,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/architecture.html":{}}}],["main/_main.module",{"_index":1802,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"modules/SettingsModule.html":{},"classes/StoryPageConfig.html":{}}}],["main/classes/control",{"_index":1032,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["main/classes/dialog",{"_index":1314,"title":{},"body":{"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{}}}],["main/classes/e",{"_index":3903,"title":{},"body":{"components/TaskListPage.html":{}}}],["main/classes/enum.class",{"_index":3836,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["main/classes/filters.class",{"_index":3905,"title":{},"body":{"components/TaskListPage.html":{}}}],["main/classes/persistent",{"_index":609,"title":{},"body":{"components/BoardPage.html":{}}}],["main/classes/random.class",{"_index":4338,"title":{},"body":{"classes/UserUtils.html":{}}}],["main/components/snackbar/snackbar.interface",{"_index":3592,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["main/decorators/service",{"_index":4467,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["main/decorators/service.decorator",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SnackbarService.html":{}}}],["main/dialogs/alert/alert.dialog",{"_index":3991,"title":{},"body":{"injectables/TaskService.html":{}}}],["main/directives/view",{"_index":1316,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["main/interfaces/filters.interface",{"_index":1860,"title":{},"body":{"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent-1.html":{}}}],["main/libs/emoji/emoji",{"_index":1632,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["main/libs/emoji/emoji.lib",{"_index":1633,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["main/libs/marked/marked.lib",{"_index":4203,"title":{},"body":{"components/TextareaComponent.html":{}}}],["main/operators/apply",{"_index":3993,"title":{},"body":{"injectables/TaskService.html":{}}}],["main/pages/mock/mock.page",{"_index":1248,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["main/services/api.service",{"_index":2042,"title":{},"body":{"injectables/GitIntegrationService.html":{},"injectables/UserService.html":{}}}],["main/services/dialog.service",{"_index":793,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/MainViewComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["main/services/router",{"_index":79,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["main/services/snackbar.service",{"_index":3548,"title":{},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/TaskService.html":{}}}],["main/validators/email.validator",{"_index":3087,"title":{},"body":{"components/RegisterPage.html":{}}}],["main/validators/max",{"_index":1169,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["main/validators/password.validator",{"_index":933,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["main/validators/required.validator",{"_index":934,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{}}}],["main/validators/same",{"_index":936,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["mainly",{"_index":4797,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["mainmodule",{"_index":417,"title":{"modules/MainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"interfaces/ExtendedMeta.html":{},"modules/MainModule.html":{},"modules/SettingsModule.html":{},"classes/StoryPageConfig.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["mainmodule.injector",{"_index":2617,"title":{},"body":{"modules/MainModule.html":{}}}],["maintained",{"_index":4745,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["mainviewcomponent",{"_index":194,"title":{"components/MainViewComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["make",{"_index":4357,"title":{},"body":{"classes/UserUtils.html":{},"additional-documentation/localization.html":{}}}],["making",{"_index":4825,"title":{},"body":{"additional-documentation/localization.html":{}}}],["manage",{"_index":1414,"title":{},"body":{"injectables/DialogService.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["management",{"_index":4451,"title":{},"body":{"injectables/WorkspaceService.html":{},"index.html":{}}}],["map",{"_index":782,"title":{},"body":{"components/BoardTaskComponent.html":{},"injectables/DialogService.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/SinglePersonSchedule.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["map(([key",{"_index":4127,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["map(([statuses",{"_index":3679,"title":{},"body":{"injectables/StatusService.html":{}}}],["map(([tasks",{"_index":4031,"title":{},"body":{"injectables/TaskService.html":{}}}],["map((accounts",{"_index":1973,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["map((c",{"_index":4350,"title":{},"body":{"classes/UserUtils.html":{}}}],["map((character",{"_index":4391,"title":{},"body":{"classes/Utils.html":{}}}],["map((e",{"_index":1724,"title":{},"body":{"classes/Enum.html":{}}}],["map((format",{"_index":3397,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["map((members",{"_index":2691,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["map((projects",{"_index":2078,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["map((response",{"_index":2047,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["map((v",{"_index":1719,"title":{},"body":{"classes/Enum.html":{}}}],["map((workspace",{"_index":3033,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["map((workspaces",{"_index":3012,"title":{},"body":{"injectables/ProjectService.html":{},"components/UpperNavigationComponent.html":{}}}],["map(projectid",{"_index":2678,"title":{},"body":{"injectables/MemberService.html":{}}}],["map.class",{"_index":610,"title":{},"body":{"components/BoardPage.html":{}}}],["map.class.ts",{"_index":2955,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["map.class.ts:11",{"_index":2964,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:17",{"_index":2967,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:23",{"_index":2965,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:27",{"_index":2961,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:6",{"_index":2962,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.delete(uid",{"_index":3596,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["map.set(uid",{"_index":3594,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["mapkey",{"_index":568,"title":{},"body":{"components/BoardPage.html":{}}}],["marcin",{"_index":4658,"title":{},"body":{"license.html":{}}}],["margin",{"_index":701,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/OptionComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["mark",{"_index":3501,"title":{},"body":{"components/SettingsSessionsPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["markdown",{"_index":4212,"title":{},"body":{"components/TextareaComponent.html":{}}}],["marked",{"_index":1634,"title":{"classes/Marked.html":{}},"body":{"interfaces/EmojiToken.html":{},"classes/Marked.html":{},"components/TextareaComponent.html":{},"dependencies.html":{}}}],["marked._initialized",{"_index":2640,"title":{},"body":{"classes/Marked.html":{}}}],["marked.getrenderer",{"_index":4187,"title":{},"body":{"components/TextareaComponent.html":{}}}],["marked.init",{"_index":4206,"title":{},"body":{"components/TextareaComponent.html":{}}}],["marked.js",{"_index":1646,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["marked.parse(this.editor?.getvalue",{"_index":4243,"title":{},"body":{"components/TextareaComponent.html":{}}}],["marked.rendererextension",{"_index":1675,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["marked.tokenizerextension",{"_index":1674,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["marked.use",{"_index":2641,"title":{},"body":{"classes/Marked.html":{}}}],["mask",{"_index":3042,"title":{},"body":{"classes/Random.html":{}}}],["master",{"_index":4846,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["mat",{"_index":878,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/IconComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["mat_dialog_data",{"_index":75,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/DialogOutletComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["matautocompletemodule",{"_index":2530,"title":{},"body":{"modules/MainModule.html":{}}}],["matbadgemodule",{"_index":2532,"title":{},"body":{"modules/MainModule.html":{}}}],["match",{"_index":1647,"title":{},"body":{"interfaces/EmojiToken.html":{},"interfaces/ErrorValidationTree.html":{},"classes/Utils.html":{}}}],["match(error",{"_index":1794,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["match(value",{"_index":1790,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["match[0",{"_index":1662,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["match[1",{"_index":1664,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["matcheckboxmodule",{"_index":2534,"title":{},"body":{"modules/MainModule.html":{}}}],["matching",{"_index":262,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["matchsequence",{"_index":1656,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["matchsequence[0",{"_index":1658,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["matchsequence[1",{"_index":1659,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["matdatepickermodule",{"_index":2538,"title":{},"body":{"modules/MainModule.html":{}}}],["matdialog",{"_index":1426,"title":{},"body":{"injectables/DialogService.html":{}}}],["matdialogmodule",{"_index":2540,"title":{},"body":{"modules/MainModule.html":{}}}],["matdialogref",{"_index":41,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["matdialogstate",{"_index":1381,"title":{},"body":{"classes/DialogRef.html":{}}}],["material",{"_index":2095,"title":{},"body":{"components/IconComponent.html":{},"modules/MainModule.html":{}}}],["materials",{"_index":4677,"title":{},"body":{"license.html":{}}}],["matformfieldmodule",{"_index":2541,"title":{},"body":{"modules/MainModule.html":{}}}],["math.abs(startline",{"_index":3296,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["math.min(1000",{"_index":4228,"title":{},"body":{"components/TextareaComponent.html":{}}}],["math.min(500",{"_index":4225,"title":{},"body":{"components/TextareaComponent.html":{}}}],["math.min(startline",{"_index":3297,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["math.random",{"_index":3060,"title":{},"body":{"classes/Random.html":{}}}],["maticonmodule",{"_index":2543,"title":{},"body":{"modules/MainModule.html":{}}}],["matinputmodule",{"_index":2545,"title":{},"body":{"modules/MainModule.html":{}}}],["matmenumodule",{"_index":2547,"title":{},"body":{"modules/MainModule.html":{}}}],["matnativedatemodule",{"_index":2536,"title":{},"body":{"modules/MainModule.html":{}}}],["matprogressspinnermodule",{"_index":2549,"title":{},"body":{"modules/MainModule.html":{}}}],["matselectmodule",{"_index":2551,"title":{},"body":{"modules/MainModule.html":{}}}],["mattablemodule",{"_index":2553,"title":{},"body":{"modules/MainModule.html":{}}}],["mattabsmodule",{"_index":2555,"title":{},"body":{"modules/MainModule.html":{}}}],["mattooltipmodule",{"_index":2557,"title":{},"body":{"modules/MainModule.html":{}}}],["max",{"_index":717,"title":{},"body":{"components/BoardPage.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["maxlength",{"_index":4405,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["maxlengthvalidator",{"_index":1168,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"miscellaneous/functions.html":{}}}],["maxlengthvalidator(50",{"_index":1162,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["maxlengthvalidator(length",{"_index":4586,"title":{},"body":{"miscellaneous/functions.html":{}}}],["md",{"_index":971,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["medium",{"_index":3945,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["member",{"_index":19,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["member.dialog",{"_index":1167,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{}}}],["member.dialog.html",{"_index":24,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["member.dialog.scss",{"_index":22,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["member.dialog.ts",{"_index":12,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["member.dialog.ts:21",{"_index":69,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:22",{"_index":70,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:24",{"_index":67,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:26",{"_index":45,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:29",{"_index":59,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:34",{"_index":56,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:41",{"_index":55,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:47",{"_index":51,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:58",{"_index":54,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.interface",{"_index":601,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["member.interface.ts",{"_index":2987,"title":{},"body":{"interfaces/ProjectMember.html":{}}}],["member.user.name",{"_index":2232,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.name[0",{"_index":2231,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.surname",{"_index":2233,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.username",{"_index":2234,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member/add",{"_index":11,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{}}}],["memberlist",{"_index":1145,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/MemberListComponent.html":{}}}],["memberlistcomponent",{"_index":197,"title":{"components/MemberListComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["members",{"_index":109,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{}}}],["members'},{'name",{"_index":144,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["members(members",{"_index":2207,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["members.page",{"_index":1233,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["members.page.html",{"_index":1143,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.scss",{"_index":1142,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.ts",{"_index":1141,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.ts:106",{"_index":1506,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:116",{"_index":1504,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:122",{"_index":1516,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:140",{"_index":1511,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:21",{"_index":1161,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:25",{"_index":1518,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:26",{"_index":1163,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:30",{"_index":1520,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:33",{"_index":1159,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:35",{"_index":1164,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.ts:36",{"_index":1528,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:37",{"_index":1165,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:39",{"_index":1150,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:42",{"_index":1524,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:46",{"_index":1522,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:48",{"_index":1526,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:49",{"_index":1503,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:65",{"_index":1151,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:74",{"_index":1158,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:80",{"_index":1509,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:91",{"_index":1517,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.reduce((acc",{"_index":2692,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["members.values",{"_index":2213,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["members/create",{"_index":1140,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["members/edit",{"_index":1237,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{}}}],["membersarray",{"_index":2212,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["memberservice",{"_index":559,"title":{"injectables/MemberService.html":{}},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["menu",{"_index":4267,"title":{},"body":{"components/TextareaComponent.html":{}}}],["merchantability",{"_index":4687,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1807,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{}}}],["merge(this._story",{"_index":3750,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["mergeconfig",{"_index":3702,"title":{},"body":{"classes/Story.html":{}}}],["mergeconfig(config",{"_index":3718,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["merged",{"_index":671,"title":{},"body":{"components/BoardPage.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["mergedpulllist",{"_index":3781,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["mergemap",{"_index":2044,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["mergemap((url",{"_index":2049,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["message",{"_index":268,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{},"injectables/TaskService.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"miscellaneous/functions.html":{}}}],["messages",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SidebarNavigationComponent.html":{},"index.html":{}}}],["messages.routing",{"_index":2700,"title":{},"body":{"modules/MessagesModule.html":{}}}],["messagesmodule",{"_index":2695,"title":{"modules/MessagesModule.html":{}},"body":{"modules/MessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["messagesroutingmodule",{"_index":2698,"title":{"modules/MessagesRoutingModule.html":{}},"body":{"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["met",{"_index":4670,"title":{},"body":{"license.html":{}}}],["meta",{"_index":1800,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["meta['decorators",{"_index":1845,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["method",{"_index":368,"title":{},"body":{"injectables/ApiService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["methodologies",{"_index":4746,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["methods",{"_index":32,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["middle",{"_index":2286,"title":{},"body":{"components/InputComponent.html":{}}}],["min",{"_index":722,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["minimap",{"_index":4216,"title":{},"body":{"components/TextareaComponent.html":{}}}],["minlength",{"_index":4404,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["miragejs",{"_index":4516,"title":{},"body":{"dependencies.html":{}}}],["miscellaneous",{"_index":4526,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mm",{"_index":804,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["mock",{"_index":2704,"title":{},"body":{"components/MockPage.html":{}}}],["mock'},{'name",{"_index":200,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["mock.page.html",{"_index":2706,"title":{},"body":{"components/MockPage.html":{}}}],["mock.page.scss",{"_index":2705,"title":{},"body":{"components/MockPage.html":{}}}],["mockpage",{"_index":199,"title":{"components/MockPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["modal",{"_index":1443,"title":{},"body":{"injectables/DialogService.html":{}}}],["mode",{"_index":2835,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"components/TextareaComponent.html":{}}}],["model",{"_index":1011,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"classes/MonacoExtended.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["model.getlinecontent(selection.endlinenumber",{"_index":2823,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["model.getlinelength(line",{"_index":3302,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["modification",{"_index":4666,"title":{},"body":{"license.html":{}}}],["modify",{"_index":4456,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["modifyuser",{"_index":2718,"title":{"interfaces/ModifyUser.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserWithPrivileges.html":{}}}],["module",{"_index":408,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}},"body":{"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"additional-documentation/architecture.html":{}}}],["module.ts",{"_index":4772,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["modulemetadata",{"_index":1803,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["modulemetadata(merge",{"_index":1820,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["modules",{"_index":410,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectPage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["moduser",{"_index":4320,"title":{},"body":{"injectables/UserService.html":{}}}],["moment",{"_index":4842,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["monaco",{"_index":2723,"title":{"classes/Monaco.html":{}},"body":{"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"components/TextareaComponent.html":{},"dependencies.html":{}}}],["monaco._initialized",{"_index":2737,"title":{},"body":{"classes/Monaco.html":{}}}],["monaco.editor.endoflinepreference.lf",{"_index":2829,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["monaco.editor.icursorstatecomputer",{"_index":4743,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["monaco.editor.iidentifiedsingleeditoperation",{"_index":2792,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"miscellaneous/typealiases.html":{}}}],["monaco.editor.istandalonecodeeditor",{"_index":2790,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"miscellaneous/typealiases.html":{}}}],["monaco.init",{"_index":4207,"title":{},"body":{"components/TextareaComponent.html":{}}}],["monaco.loadplugins",{"_index":2738,"title":{},"body":{"classes/Monaco.html":{}}}],["monaco.selection",{"_index":2791,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"miscellaneous/typealiases.html":{}}}],["monacoeditor",{"_index":2759,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"miscellaneous/typealiases.html":{}}}],["monacoextended",{"_index":2745,"title":{"classes/MonacoExtended.html":{}},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["monacoextended.inserttextat(editor",{"_index":2807,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["monacoextended.inserttextbeforeandaftereachselection",{"_index":2837,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["monacoextended.removetextbeforeandaftereachselection",{"_index":2836,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["monacoextended.selectionendswith(editor",{"_index":2819,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["monacoextended.selectionstartwith(editor",{"_index":2818,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["month",{"_index":3483,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["more",{"_index":4747,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["more_vert",{"_index":2864,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["move",{"_index":661,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"injectables/ProjectService.html":{}}}],["moved",{"_index":2993,"title":{},"body":{"injectables/ProjectService.html":{}}}],["moveiteminarray",{"_index":596,"title":{},"body":{"components/BoardPage.html":{}}}],["moveiteminarray(event.container.data",{"_index":657,"title":{},"body":{"components/BoardPage.html":{}}}],["mozliwosc",{"_index":3360,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["multi",{"_index":2609,"title":{},"body":{"modules/MainModule.html":{}}}],["multiple",{"_index":3732,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"index.html":{}}}],["n",{"_index":4251,"title":{},"body":{"components/TextareaComponent.html":{},"classes/UserUtils.html":{}}}],["na",{"_index":3344,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["named",{"_index":4752,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["naming",{"_index":4749,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["native",{"_index":870,"title":{},"body":{"components/ButtonComponent.html":{}}}],["nav",{"_index":202,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["navelementcomponent",{"_index":201,"title":{"components/NavElementComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["navelementworkspacecomponent",{"_index":204,"title":{"components/NavElementWorkspaceComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["navigatebyurl",{"_index":2918,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["navigates",{"_index":1154,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["navigation",{"_index":3504,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation'},{'name",{"_index":230,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["navigation.component",{"_index":2582,"title":{},"body":{"modules/MainModule.html":{}}}],["navigation.component.html",{"_index":3506,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.scss",{"_index":3505,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts",{"_index":3503,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:14",{"_index":3509,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:15",{"_index":4286,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:16",{"_index":3511,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:18",{"_index":3510,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:20",{"_index":3508,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:24",{"_index":4291,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:40",{"_index":4301,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:42",{"_index":4296,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:43",{"_index":4299,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:44",{"_index":4297,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:45",{"_index":4298,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:47",{"_index":4295,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:48",{"_index":4294,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:50",{"_index":4288,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:56",{"_index":4290,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:62",{"_index":4289,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:65",{"_index":4292,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:74",{"_index":4287,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:77",{"_index":4293,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation/sidebar",{"_index":2581,"title":{},"body":{"modules/MainModule.html":{},"components/SidebarNavigationComponent.html":{}}}],["navigation/upper",{"_index":2588,"title":{},"body":{"modules/MainModule.html":{},"components/UpperNavigationComponent.html":{}}}],["need",{"_index":1466,"title":{},"body":{"injectables/DialogService.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/RequestOptions.html":{},"components/SettingsAccountPage.html":{},"additional-documentation/localization.html":{}}}],["needed",{"_index":3660,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["negligence",{"_index":4716,"title":{},"body":{"license.html":{}}}],["neutral",{"_index":958,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["new",{"_index":62,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"classes/Marked.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/localization.html":{}}}],["newly",{"_index":1432,"title":{},"body":{"injectables/DialogService.html":{}}}],["newpropsstring",{"_index":4117,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["newstatus",{"_index":641,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatus.final",{"_index":665,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatus.id",{"_index":652,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatusindex",{"_index":637,"title":{},"body":{"components/BoardPage.html":{}}}],["newtask",{"_index":4027,"title":{},"body":{"injectables/TaskService.html":{}}}],["newvalue",{"_index":4143,"title":{},"body":{"classes/TestNgControl.html":{}}}],["newworkspaceid",{"_index":1507,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/ProjectService.html":{}}}],["next",{"_index":1100,"title":{},"body":{"components/ControlAccessor.html":{},"interceptors/ErrorInterceptor.html":{},"components/RegisterPage.html":{},"components/TextareaComponent.html":{}}}],["next(value",{"_index":1788,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["next.handle(req).pipe",{"_index":1744,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nextstage",{"_index":3072,"title":{},"body":{"components/RegisterPage.html":{}}}],["ng",{"_index":1903,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["ngafterviewinit",{"_index":1909,"title":{},"body":{"directives/FocusInitialDirective.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["ngcontrol",{"_index":984,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{}}}],["ngcontrol.control?.errors",{"_index":4253,"title":{},"body":{"components/TextareaComponent.html":{}}}],["nglet",{"_index":2447,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["nglet(value",{"_index":2454,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["nglet]'},{'name",{"_index":257,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["ngmodule",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["ngmoduleconfig",{"_index":2603,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.declarations",{"_index":2613,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.exportdeclarations",{"_index":2614,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.importexports",{"_index":2612,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.imports",{"_index":2611,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.providers",{"_index":2615,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmodulemetadata",{"_index":1805,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["ngneat/until",{"_index":1560,"title":{},"body":{"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"dependencies.html":{}}}],["ngondestroy",{"_index":550,"title":{},"body":{"components/BoardPage.html":{},"components/ControlAccessor.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["ngoninit",{"_index":36,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["node",{"_index":2221,"title":{},"body":{"components/InputAssigneeComponent.html":{},"injectables/RouterExtensionsService.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"index.html":{}}}],["node.children[0",{"_index":3153,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["node.js",{"_index":4611,"title":{},"body":{"index.html":{}}}],["node.value.params",{"_index":3154,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["none",{"_index":899,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["not(.add",{"_index":2237,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(.add):hover",{"_index":2238,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(.collapsed",{"_index":709,"title":{},"body":{"components/BoardPage.html":{}}}],["not(.line",{"_index":2245,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(:last",{"_index":3144,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["notation",{"_index":1639,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["notice",{"_index":4673,"title":{},"body":{"license.html":{}}}],["notified",{"_index":1364,"title":{},"body":{"classes/DialogRef.html":{}}}],["now",{"_index":2091,"title":{},"body":{"components/GithubIntegrationPage.html":{},"components/SettingsSessionsPage.html":{}}}],["npm",{"_index":4612,"title":{},"body":{"index.html":{}}}],["null",{"_index":1093,"title":{},"body":{"components/ControlAccessor.html":{},"components/EditProjectMembersPage.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"classes/MonacoExtended.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/StoryPageConfig.html":{},"injectables/TaskService.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"pipes/ValidationErrorPipe.html":{}}}],["null].includes(this.control.value",{"_index":2350,"title":{},"body":{"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{}}}],["number",{"_index":88,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/ModifyUser.html":{},"classes/MonacoExtended.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["number(!this.taskmap.get(mapkey",{"_index":684,"title":{},"body":{"components/BoardPage.html":{}}}],["number(e[1",{"_index":1722,"title":{},"body":{"classes/Enum.html":{}}}],["number(event.container.element.nativeelement.dataset['index",{"_index":638,"title":{},"body":{"components/BoardPage.html":{}}}],["number(k",{"_index":1712,"title":{},"body":{"classes/Enum.html":{}}}],["number(key",{"_index":1710,"title":{},"body":{"classes/Enum.html":{}}}],["number(projectid",{"_index":100,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["number(this.expandedsubtasks.has(taskid",{"_index":3927,"title":{},"body":{"components/TaskListPage.html":{}}}],["number(this.form?.controls[index].value",{"_index":1896,"title":{},"body":{"components/FiltersComponent.html":{}}}],["number(v",{"_index":1717,"title":{},"body":{"classes/Enum.html":{}}}],["number(workspaceid",{"_index":98,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["numberrepresentation",{"_index":4348,"title":{},"body":{"classes/UserUtils.html":{}}}],["numbers",{"_index":4254,"title":{},"body":{"components/TextareaComponent.html":{}}}],["numeric",{"_index":1698,"title":{},"body":{"classes/Enum.html":{}}}],["o",{"_index":574,"title":{},"body":{"components/BoardPage.html":{}}}],["obj",{"_index":4583,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":282,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/architecture.html":{}}}],["object.entries(edits).sort((a",{"_index":3310,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["object.entries(enumtype",{"_index":1720,"title":{},"body":{"classes/Enum.html":{}}}],["object.entries(filteredprops",{"_index":4126,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["object.hasownproperty(key",{"_index":4395,"title":{},"body":{"classes/Utils.html":{}}}],["object.keys(enumtype",{"_index":1709,"title":{},"body":{"classes/Enum.html":{}}}],["object.keys(enumtype).filter((k",{"_index":1711,"title":{},"body":{"classes/Enum.html":{}}}],["object.values(enumtype",{"_index":1715,"title":{},"body":{"classes/Enum.html":{}}}],["object.values(taskpriority",{"_index":3830,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["obs",{"_index":1746,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["observable",{"_index":68,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"classes/DialogRef.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"injectables/SessionsService.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["observable((subscriber",{"_index":1786,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["observables",{"_index":1771,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["observe",{"_index":3114,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["observersmodule",{"_index":2521,"title":{},"body":{"modules/MainModule.html":{}}}],["occurrence",{"_index":4379,"title":{},"body":{"classes/Utils.html":{}}}],["of(true",{"_index":4015,"title":{},"body":{"injectables/TaskService.html":{}}}],["offset",{"_index":895,"title":{},"body":{"components/ButtonComponent.html":{},"classes/SelectionEditPlugin.html":{}}}],["ol",{"_index":4266,"title":{},"body":{"components/TextareaComponent.html":{}}}],["omit",{"_index":3724,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{}}}],["omit(props",{"_index":3754,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"interfaces/TemplateDecoratorConfig.html":{}}}],["onblur",{"_index":2278,"title":{},"body":{"components/InputComponent.html":{}}}],["onclick",{"_index":1047,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["onclick(event",{"_index":1051,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["ondestroy",{"_index":536,"title":{},"body":{"components/BoardPage.html":{},"components/ControlAccessor.html":{},"components/EditProjectPage.html":{}}}],["one",{"_index":1686,"title":{},"body":{"classes/Enum.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["onfocus",{"_index":2276,"title":{},"body":{"components/InputComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["only_my_tasks",{"_index":1856,"title":{},"body":{"classes/Filters.html":{}}}],["only_my_tasks(currentuserid",{"_index":1857,"title":{},"body":{"classes/Filters.html":{}}}],["onprojectidchange",{"_index":3804,"title":{},"body":{"components/TaskDialog.html":{}}}],["onprojectidchange(projectid",{"_index":3811,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["onsameurlnavigation",{"_index":460,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["onsuccess",{"_index":650,"title":{},"body":{"components/BoardPage.html":{}}}],["onworkspaceidchange",{"_index":3805,"title":{},"body":{"components/TaskDialog.html":{}}}],["onworkspaceidchange(workspaceid",{"_index":3813,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["opacity",{"_index":746,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/MainViewComponent.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["open",{"_index":1421,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"additional-documentation/localization.html":{}}}],["open(addmemberdialog",{"_index":1179,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["open(component",{"_index":1441,"title":{},"body":{"injectables/DialogService.html":{}}}],["open(taskdialog",{"_index":677,"title":{},"body":{"components/BoardPage.html":{}}}],["openaddmembersdialog",{"_index":1146,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["openbelow",{"_index":4280,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["opencreatenewtaskdialog",{"_index":3963,"title":{},"body":{"injectables/TaskService.html":{}}}],["opencreatesubtaskdialog",{"_index":3964,"title":{},"body":{"injectables/TaskService.html":{}}}],["opencreatesubtaskdialog(projectid",{"_index":3982,"title":{},"body":{"injectables/TaskService.html":{}}}],["opened",{"_index":1433,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{}}}],["openeditor",{"_index":4160,"title":{},"body":{"components/TextareaComponent.html":{}}}],["openedittaskdialog",{"_index":3965,"title":{},"body":{"injectables/TaskService.html":{}}}],["openedittaskdialog(projectid",{"_index":3985,"title":{},"body":{"injectables/TaskService.html":{}}}],["openerrordialog",{"_index":1422,"title":{},"body":{"injectables/DialogService.html":{}}}],["openerrordialog(error",{"_index":1447,"title":{},"body":{"injectables/DialogService.html":{}}}],["opening",{"_index":1367,"title":{},"body":{"classes/DialogRef.html":{}}}],["opennavelement",{"_index":2845,"title":{},"body":{"components/NavElementComponent.html":{}}}],["opennewtaskdialog",{"_index":551,"title":{},"body":{"components/BoardPage.html":{}}}],["openpreview",{"_index":4161,"title":{},"body":{"components/TextareaComponent.html":{}}}],["openprofile",{"_index":4284,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["openproject",{"_index":3020,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["openproject(project",{"_index":3024,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["opens",{"_index":1430,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/TaskService.html":{}}}],["openwithlocalvscode",{"_index":2877,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscode(project",{"_index":2896,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscodeinsiders",{"_index":2878,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscodeinsiders(project",{"_index":2898,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithvscode",{"_index":2879,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithvscode(project",{"_index":2900,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openworkspace",{"_index":2880,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["openworkspace(workspace",{"_index":4484,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["option",{"_index":1851,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/SelectComponent.html":{}}}],["option'},{'name",{"_index":207,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["option.assigneeid",{"_index":1867,"title":{},"body":{"classes/Filters.html":{}}}],["option.component.html",{"_index":2939,"title":{},"body":{"components/OptionComponent.html":{}}}],["option.component.scss",{"_index":2938,"title":{},"body":{"components/OptionComponent.html":{}}}],["option.ref.nativeelement.addeventlistener('click",{"_index":3247,"title":{},"body":{"components/SelectComponent.html":{}}}],["option/option.component",{"_index":3237,"title":{},"body":{"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{}}}],["option?.icon",{"_index":3256,"title":{},"body":{"components/SelectComponent.html":{}}}],["option?.value",{"_index":3261,"title":{},"body":{"components/SelectComponent.html":{}}}],["optional",{"_index":50,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":4773,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["optioncomponent",{"_index":206,"title":{"components/OptionComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["options",{"_index":346,"title":{},"body":{"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"interfaces/RequestOptions.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options'},{'name",{"_index":245,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["options.component",{"_index":1229,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["options.component.html",{"_index":4420,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.scss",{"_index":4419,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts",{"_index":4418,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:12",{"_index":4427,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:13",{"_index":4425,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:15",{"_index":4429,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:16",{"_index":4428,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:17",{"_index":4438,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:19",{"_index":4423,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:20",{"_index":4439,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:22",{"_index":4422,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:23",{"_index":4437,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:26",{"_index":4435,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:29",{"_index":4436,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:31",{"_index":4434,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.interface",{"_index":379,"title":{},"body":{"injectables/ApiService.html":{}}}],["options.interface.ts",{"_index":3111,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["options/view",{"_index":1228,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["origin",{"_index":3516,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["originalmethod.apply(this",{"_index":1769,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["os",{"_index":3493,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["osname",{"_index":3490,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["other[1].find((status",{"_index":3690,"title":{},"body":{"injectables/StatusService.html":{}}}],["otherwise",{"_index":1156,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{},"license.html":{}}}],["out",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RestoreAccountPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"modules/TasksModule.html":{},"components/UpperNavigationComponent.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/SnackbarOutletComponent.html":{}}}],["outlet'},{'name",{"_index":153,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["outlet(outlet",{"_index":1319,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component",{"_index":2566,"title":{},"body":{"modules/MainModule.html":{}}}],["outlet.component.html",{"_index":1287,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["outlet.component.scss",{"_index":1286,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["outlet.component.ts",{"_index":1285,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["outlet.component.ts:11",{"_index":3576,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["outlet.component.ts:14",{"_index":1311,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component.ts:15",{"_index":1298,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["outlet.component.ts:18",{"_index":1296,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component.ts:22",{"_index":1307,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component.ts:37",{"_index":1305,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component.ts:45",{"_index":1300,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component.ts:53",{"_index":1302,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component.ts:63",{"_index":1308,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component.ts:67",{"_index":1303,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet/dialog",{"_index":1284,"title":{},"body":{"components/DialogOutletComponent.html":{},"modules/MainModule.html":{}}}],["outlet/snackbar",{"_index":2584,"title":{},"body":{"modules/MainModule.html":{},"components/SnackbarOutletComponent.html":{}}}],["outletcomponent",{"_index":1463,"title":{},"body":{"injectables/DialogService.html":{}}}],["outletcomponent.renderdialog(component",{"_index":1468,"title":{},"body":{"injectables/DialogService.html":{}}}],["outlets",{"_index":1417,"title":{},"body":{"injectables/DialogService.html":{}}}],["outline",{"_index":892,"title":{},"body":{"components/ButtonComponent.html":{}}}],["output",{"_index":2392,"title":{},"body":{"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/TextareaComponent.html":{}}}],["outputs",{"_index":2378,"title":{},"body":{"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{}}}],["overflow",{"_index":706,"title":{},"body":{"components/BoardPage.html":{},"components/DialogOutletComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["overlay",{"_index":1360,"title":{},"body":{"classes/DialogRef.html":{},"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["overlay's",{"_index":1369,"title":{},"body":{"classes/DialogRef.html":{}}}],["overlayminwidth",{"_index":3197,"title":{},"body":{"components/SelectComponent.html":{}}}],["overlaymodule",{"_index":2523,"title":{},"body":{"modules/MainModule.html":{}}}],["override",{"_index":1890,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/StatusLabelComponent.html":{}}}],["overrides/link.override",{"_index":2639,"title":{},"body":{"classes/Marked.html":{}}}],["overview",{"_index":4726,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviewrulerlanes",{"_index":4218,"title":{},"body":{"components/TextareaComponent.html":{}}}],["owned",{"_index":2032,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsAccountPage.html":{}}}],["owner",{"_index":2028,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["p",{"_index":964,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/ExtendedMeta.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"classes/StoryPageConfig.html":{}}}],["p.project",{"_index":3015,"title":{},"body":{"injectables/ProjectService.html":{}}}],["package",{"_index":4491,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":110,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["page",{"_index":248,"title":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/continuos-integration.html":{}}}],["page'},{'name",{"_index":148,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["page.component",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":2443,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.scss",{"_index":2442,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":2441,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:8",{"_index":2444,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/landing",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{}}}],["pages/board/board.page",{"_index":4093,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/change",{"_index":475,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/create",{"_index":1232,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/delete",{"_index":478,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/edit",{"_index":1236,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/forgot",{"_index":481,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/github",{"_index":1249,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["pages/login/login.page",{"_index":483,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/mock/mock.page",{"_index":2596,"title":{},"body":{"modules/MainModule.html":{}}}],["pages/projects",{"_index":1240,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/register/register.page",{"_index":484,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/restore",{"_index":485,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/schedule/schedule.page",{"_index":4094,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/settings",{"_index":3433,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["pages/settings/settings.page",{"_index":3457,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["pages/task",{"_index":4095,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/workspaces",{"_index":1243,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pane",{"_index":1361,"title":{},"body":{"classes/DialogRef.html":{}}}],["param",{"_index":321,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"directives/FocusInitialDirective.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"classes/MonacoExtended.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2060,"title":{},"body":{"injectables/GitIntegrationService.html":{},"interfaces/RequestOptions.html":{},"injectables/RouterExtensionsService.html":{}}}],["paramsinheritancestrategy",{"_index":462,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["parent",{"_index":1335,"title":{},"body":{"components/DialogOutletComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["parenttask",{"_index":3983,"title":{},"body":{"injectables/TaskService.html":{}}}],["parenttask.id",{"_index":4025,"title":{},"body":{"injectables/TaskService.html":{}}}],["parenttaskid",{"_index":3782,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["parser",{"_index":1636,"title":{},"body":{"interfaces/EmojiToken.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{}}}],["part",{"_index":3120,"title":{},"body":{"interfaces/RequestOptions.html":{},"additional-documentation/architecture.html":{}}}],["partial",{"_index":1801,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["particular",{"_index":4689,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":4385,"title":{},"body":{"classes/Utils.html":{}}}],["pass",{"_index":283,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{}}}],["passable",{"_index":3133,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["passed",{"_index":313,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ControlAccessor.html":{},"classes/Utils.html":{}}}],["passes",{"_index":1153,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["passthrough",{"_index":301,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["password",{"_index":491,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"interfaces/ModifyUser.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"miscellaneous/functions.html":{}}}],["password'},{'name",{"_index":137,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["password.page",{"_index":477,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["password.page.html",{"_index":917,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.scss",{"_index":916,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.ts",{"_index":915,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.ts:14",{"_index":1917,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:16",{"_index":920,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:17",{"_index":1919,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:19",{"_index":1920,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:24",{"_index":921,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.ts:28",{"_index":1918,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:29",{"_index":932,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:34",{"_index":929,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:47",{"_index":922,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password/change",{"_index":476,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordPage.html":{}}}],["password/forgot",{"_index":482,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ForgotPasswordPage.html":{}}}],["passwords",{"_index":927,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["passwordvalidator",{"_index":923,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{},"miscellaneous/functions.html":{}}}],["patch",{"_index":337,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["patch(url",{"_index":360,"title":{},"body":{"injectables/ApiService.html":{}}}],["path",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"interfaces/RequestOptions.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pathmatch",{"_index":1253,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pattern",{"_index":4406,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["pending",{"_index":851,"title":{},"body":{"components/ButtonComponent.html":{}}}],["pentosquare",{"_index":4421,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["people",{"_index":2672,"title":{},"body":{"injectables/MemberService.html":{},"components/SchedulePage.html":{}}}],["per",{"_index":3605,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["perform",{"_index":862,"title":{},"body":{"components/ButtonComponent.html":{}}}],["period",{"_index":3373,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["permanently",{"_index":3370,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["permitted",{"_index":4667,"title":{},"body":{"license.html":{}}}],["persistentkey",{"_index":594,"title":{},"body":{"components/BoardPage.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["persistentmap",{"_index":593,"title":{"classes/PersistentMap.html":{}},"body":{"components/BoardPage.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["persistentmapoptions",{"_index":2960,"title":{"interfaces/PersistentMapOptions.html":{}},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["person",{"_index":3183,"title":{},"body":{"components/SchedulePage.html":{}}}],["personal_data",{"_index":3089,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["pewno",{"_index":3345,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["picker",{"_index":2307,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["pipe",{"_index":1770,"title":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}},"body":{"interfaces/ErrorValidationTree.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{},"additional-documentation/architecture.html":{}}}],["pipe(filter((result",{"_index":1480,"title":{},"body":{"injectables/DialogService.html":{}}}],["pipe(map((projects",{"_index":1983,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["pipe(map((workspace",{"_index":3852,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["pipe(skip(1",{"_index":4309,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["pipe(take(1",{"_index":1323,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["pipe(untildestroyed(this",{"_index":1567,"title":{},"body":{"components/EditProjectPage.html":{}}}],["pipe.ts",{"_index":4794,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["pipeline",{"_index":4839,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["pipes",{"_index":3610,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["pipes/status",{"_index":4096,"title":{},"body":{"modules/TasksModule.html":{}}}],["pipes/task",{"_index":4098,"title":{},"body":{"modules/TasksModule.html":{}}}],["pipes/validation",{"_index":2598,"title":{},"body":{"modules/MainModule.html":{}}}],["pipetransform",{"_index":3616,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}}}],["pl",{"_index":3412,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["pl.xlf",{"_index":4821,"title":{},"body":{"additional-documentation/localization.html":{}}}],["placed",{"_index":4778,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["placeholder",{"_index":745,"title":{},"body":{"components/BoardPage.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TextareaComponent.html":{}}}],["platformmodule",{"_index":2525,"title":{},"body":{"modules/MainModule.html":{}}}],["please",{"_index":2514,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["plugins/selection",{"_index":2733,"title":{},"body":{"classes/Monaco.html":{}}}],["plus",{"_index":4486,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["pointer",{"_index":738,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SelectComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["poland",{"_index":4812,"title":{},"body":{"additional-documentation/localization.html":{}}}],["polish",{"_index":4811,"title":{},"body":{"additional-documentation/localization.html":{}}}],["polski",{"_index":3413,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["populatedtasks",{"_index":3916,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatedtasks.push",{"_index":3922,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatedtasks.push(task",{"_index":3919,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatesubtasks",{"_index":3875,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatesubtasks(tasklist",{"_index":3889,"title":{},"body":{"components/TaskListPage.html":{}}}],["popup",{"_index":3342,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["position",{"_index":812,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/DeleteAccountPage.html":{},"classes/DialogRef.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["possibility",{"_index":4721,"title":{},"body":{"license.html":{}}}],["post",{"_index":338,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["post(url",{"_index":362,"title":{},"body":{"injectables/ApiService.html":{}}}],["postgithubintegration",{"_index":2003,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["postgithubintegration(installationid",{"_index":2033,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["powerful",{"_index":4604,"title":{},"body":{"index.html":{}}}],["predicate",{"_index":1827,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["prefix",{"_index":883,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{}}}],["prefix:not(.pending",{"_index":886,"title":{},"body":{"components/ButtonComponent.html":{}}}],["preparedusername",{"_index":2074,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["press",{"_index":4835,"title":{},"body":{"additional-documentation/localization.html":{}}}],["preview",{"_index":4183,"title":{},"body":{"components/TextareaComponent.html":{}}}],["previousstage",{"_index":3073,"title":{},"body":{"components/RegisterPage.html":{}}}],["previousstatus",{"_index":639,"title":{},"body":{"components/BoardPage.html":{}}}],["previousstatusindex",{"_index":635,"title":{},"body":{"components/BoardPage.html":{}}}],["previoustaskindex",{"_index":643,"title":{},"body":{"components/BoardPage.html":{}}}],["primary",{"_index":866,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["principle",{"_index":4762,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["priority",{"_index":3819,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityIconPipe.html":{},"modules/TasksModule.html":{}}}],["priority.enum",{"_index":3839,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["priority.enum.ts",{"_index":4538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["priority.pipe",{"_index":4100,"title":{},"body":{"modules/TasksModule.html":{}}}],["priority.pipe.ts",{"_index":3952,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["priority.pipe.ts:7",{"_index":3953,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["privacy",{"_index":3108,"title":{},"body":{"components/RegisterPage.html":{}}}],["private",{"_index":91,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"classes/Monaco.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["privileges",{"_index":2721,"title":{},"body":{"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/Workspace.html":{}}}],["process",{"_index":1991,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["procurement",{"_index":4702,"title":{},"body":{"license.html":{}}}],["production",{"_index":4848,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["profile",{"_index":3364,"title":{},"body":{"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["profits",{"_index":4707,"title":{},"body":{"license.html":{}}}],["programmatic",{"_index":1028,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["progress",{"_index":2716,"title":{},"body":{"components/MockPage.html":{},"interfaces/RequestOptions.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"interfaces/StatusWithTasks.html":{}}}],["project",{"_index":143,"title":{"interfaces/Project.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["project's",{"_index":2985,"title":{},"body":{"interfaces/Project.html":{}}}],["project'},{'name",{"_index":146,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["project.githubintegration",{"_index":2069,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["project.id",{"_index":2921,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["project.interface",{"_index":4449,"title":{},"body":{"interfaces/Workspace.html":{}}}],["project.name",{"_index":1485,"title":{},"body":{"injectables/DialogService.html":{},"components/TaskDialog.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["project.name).join",{"_index":1985,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["project.page",{"_index":1234,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["project.page.html",{"_index":1192,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{}}}],["project.page.scss",{"_index":1191,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{}}}],["project.page.ts",{"_index":1190,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{}}}],["project.page.ts:105",{"_index":1552,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:22",{"_index":1554,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:24",{"_index":1198,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:27",{"_index":1556,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:28",{"_index":1197,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{}}}],["project.page.ts:32",{"_index":1196,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:33",{"_index":1557,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:34",{"_index":1199,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:36",{"_index":1200,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:37",{"_index":1555,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:38",{"_index":1193,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:39",{"_index":1558,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:40",{"_index":1550,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:59",{"_index":1194,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:68",{"_index":1551,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:72",{"_index":1195,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:88",{"_index":1553,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.project",{"_index":3035,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["project.service",{"_index":2045,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["project/create",{"_index":1189,"title":{},"body":{"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["project/edit",{"_index":1238,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectPage.html":{}}}],["projectid",{"_index":89,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["projectid(value",{"_index":2343,"title":{},"body":{"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{}}}],["projectid/edit",{"_index":1262,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectid/edit/general",{"_index":1263,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectid/edit/members",{"_index":1264,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectlist",{"_index":2687,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["projectmember",{"_index":599,"title":{"interfaces/ProjectMember.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["projectmembers",{"_index":2983,"title":{},"body":{"interfaces/Project.html":{}}}],["projects",{"_index":209,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["projects.filter",{"_index":2079,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["projects.map((project",{"_index":1984,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["projects.push(...workspace.projectswithprivileges.map((p",{"_index":3014,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projects/spaces",{"_index":4445,"title":{},"body":{"interfaces/Workspace.html":{}}}],["projectservice",{"_index":558,"title":{"injectables/ProjectService.html":{}},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["projectslistpage",{"_index":208,"title":{"components/ProjectsListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["projectswithprivileges",{"_index":4448,"title":{},"body":{"interfaces/Workspace.html":{}}}],["projectwithpriv.project.name",{"_index":2930,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["prompt",{"_index":994,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["prop",{"_index":3733,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["propagate",{"_index":1013,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["propagation",{"_index":1046,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["propagation.directive",{"_index":2590,"title":{},"body":{"modules/MainModule.html":{}}}],["propagation.directive.ts",{"_index":1045,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["propagation.directive.ts:8",{"_index":1050,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["propagation]'},{'name",{"_index":253,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["properly",{"_index":2517,"title":{},"body":{"modules/MainModule.html":{}}}],["properties",{"_index":26,"title":{"properties.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"properties.html":{}}}],["properties.function",{"_index":1812,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["properties.function.ts",{"_index":4559,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties.map",{"_index":1828,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["property",{"_index":761,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"classes/FormControlStoryPageConfig.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["property'},{'name",{"_index":182,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["property.component",{"_index":4090,"title":{},"body":{"modules/TasksModule.html":{}}}],["property.component.html",{"_index":2374,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["property.component.ts",{"_index":2372,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["property.component.ts:10",{"_index":2381,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["property.component.ts:12",{"_index":2380,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["property.component.ts:23",{"_index":2391,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["property.component.ts:26",{"_index":2383,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["property.component.ts:27",{"_index":2386,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["property.component.ts:29",{"_index":2388,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["property.component.ts:31",{"_index":2390,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["property.component.ts:32",{"_index":2389,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["property.component.ts:40",{"_index":2385,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["property.component.ts:44",{"_index":2384,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["property.startswith('ng",{"_index":1840,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["property/input",{"_index":2371,"title":{},"body":{"components/InputTaskPropertyComponent.html":{},"modules/TasksModule.html":{}}}],["property[0",{"_index":1838,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["propertydescriptor",{"_index":1766,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["propertykey",{"_index":1764,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["propertypredicate",{"_index":1929,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["propertypredicate(property",{"_index":1837,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["props",{"_index":2119,"title":{},"body":{"components/IconComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["props.content",{"_index":4113,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["propsstring",{"_index":4119,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["propsstrings",{"_index":4572,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propsstrings.join",{"_index":4133,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["protect",{"_index":4789,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["protocol",{"_index":4850,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["prototype",{"_index":2742,"title":{},"body":{"classes/Monaco.html":{},"classes/SelectionEditPlugin.html":{}}}],["prototype.executeselectionedits",{"_index":3305,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["prototype.getselectionedits",{"_index":3303,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["provide",{"_index":1095,"title":{},"body":{"components/ControlAccessor.html":{},"components/DialogOutletComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["provided",{"_index":372,"title":{},"body":{"injectables/ApiService.html":{},"components/ControlAccessor.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["providedin",{"_index":380,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["provider.helper",{"_index":2201,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["provider.helper.ts",{"_index":4137,"title":{},"body":{"classes/TestNgControl.html":{}}}],["provider.helper.ts:4",{"_index":4140,"title":{},"body":{"classes/TestNgControl.html":{}}}],["provider.helper.ts:5",{"_index":4142,"title":{},"body":{"classes/TestNgControl.html":{}}}],["provider.helper.ts:8",{"_index":4144,"title":{},"body":{"classes/TestNgControl.html":{}}}],["providers",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"components/ControlAccessor.html":{},"modules/DashboardModule.html":{},"components/DialogOutletComponent.html":{},"interfaces/ExtendedMeta.html":{},"components/InputAssigneeComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{}}}],["przywrocenia",{"_index":3362,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interfaces/ExtendedMeta.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["publishes",{"_index":4851,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["pull",{"_index":178,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["pull.title",{"_index":2370,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["pulllist",{"_index":3800,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["pulls",{"_index":2357,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["purple",{"_index":2323,"title":{},"body":{"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TextareaComponent.html":{}}}],["purpose",{"_index":4690,"title":{},"body":{"license.html":{}}}],["push",{"_index":4845,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["put",{"_index":339,"title":{},"body":{"injectables/ApiService.html":{}}}],["put(url",{"_index":364,"title":{},"body":{"injectables/ApiService.html":{}}}],["query",{"_index":3122,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["querylist",{"_index":3227,"title":{},"body":{"components/SelectComponent.html":{}}}],["queryoptions",{"_index":3198,"title":{},"body":{"components/SelectComponent.html":{}}}],["queryselectorall('pre",{"_index":4245,"title":{},"body":{"components/TextareaComponent.html":{}}}],["question",{"_index":2105,"title":{},"body":{"components/IconComponent.html":{}}}],["question_mark",{"_index":2159,"title":{},"body":{"components/IconComponent.html":{}}}],["r",{"_index":1375,"title":{},"body":{"classes/DialogRef.html":{}}}],["radius",{"_index":741,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/DialogOutletComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MockPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["random",{"_index":3038,"title":{"classes/Random.html":{}},"body":{"classes/Random.html":{},"classes/UserUtils.html":{}}}],["random(id",{"_index":4339,"title":{},"body":{"classes/UserUtils.html":{}}}],["random(numberrepresentation",{"_index":4360,"title":{},"body":{"classes/UserUtils.html":{}}}],["random.random",{"_index":4341,"title":{},"body":{"classes/UserUtils.html":{}}}],["randomnumber",{"_index":4340,"title":{},"body":{"classes/UserUtils.html":{}}}],["range",{"_index":2797,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["raw",{"_index":1628,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["reactiveformsmodule",{"_index":473,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["readable",{"_index":4403,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"additional-documentation/localization.html":{}}}],["readme.md",{"_index":4856,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["readonly",{"_index":1836,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{}}}],["readonlyarray",{"_index":3135,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["ready",{"_index":4618,"title":{},"body":{"index.html":{}}}],["rebuild",{"_index":4847,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["receive",{"_index":1924,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["recommended",{"_index":3366,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["recoveraccount",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["red",{"_index":908,"title":{},"body":{"components/CardComponent.html":{},"components/InputComponent.html":{}}}],["redirectto",{"_index":1259,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["redistribution",{"_index":4664,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":4671,"title":{},"body":{"license.html":{}}}],["reduce((sum",{"_index":4352,"title":{},"body":{"classes/UserUtils.html":{}}}],["ref",{"_index":2940,"title":{},"body":{"components/OptionComponent.html":{}}}],["ref.class",{"_index":1315,"title":{},"body":{"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{}}}],["ref.class.ts",{"_index":1341,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:10",{"_index":1355,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:12",{"_index":1376,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:26",{"_index":1366,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:33",{"_index":1362,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:39",{"_index":1372,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:45",{"_index":1368,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:5",{"_index":1352,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:52",{"_index":1382,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:59",{"_index":1390,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:67",{"_index":1393,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:7",{"_index":1353,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:71",{"_index":1357,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:75",{"_index":1386,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:79",{"_index":1378,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:8",{"_index":1351,"title":{},"body":{"classes/DialogRef.html":{}}}],["reference",{"_index":281,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"injectables/DialogService.html":{},"directives/FocusInitialDirective.html":{}}}],["regex",{"_index":1652,"title":{},"body":{"interfaces/EmojiToken.html":{},"classes/Utils.html":{}}}],["regexindexof",{"_index":4367,"title":{},"body":{"classes/Utils.html":{}}}],["regexindexof(string",{"_index":4375,"title":{},"body":{"classes/Utils.html":{}}}],["regexp",{"_index":2077,"title":{},"body":{"injectables/GitIntegrationService.html":{},"classes/Utils.html":{}}}],["register",{"_index":490,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["register'},{'name",{"_index":211,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["register(this.form.value",{"_index":3099,"title":{},"body":{"components/RegisterPage.html":{}}}],["register(undefined",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.page.html",{"_index":3068,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":3067,"title":{},"body":{"components/RegisterPage.html":{}}}],["registeronchange",{"_index":985,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registeronchange(fn",{"_index":1000,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched",{"_index":986,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched(fn",{"_index":1016,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registeroutlet",{"_index":1423,"title":{},"body":{"injectables/DialogService.html":{}}}],["registeroutlet(outlet",{"_index":1449,"title":{},"body":{"injectables/DialogService.html":{}}}],["registerpage",{"_index":210,"title":{"components/RegisterPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["registers",{"_index":1002,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerstage",{"_index":3069,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["registerstage.important_data",{"_index":3085,"title":{},"body":{"components/RegisterPage.html":{}}}],["registerstage.personal_data",{"_index":3096,"title":{},"body":{"components/RegisterPage.html":{}}}],["registersubscription",{"_index":3070,"title":{},"body":{"components/RegisterPage.html":{}}}],["regular",{"_index":4503,"title":{},"body":{"dependencies.html":{}}}],["relative",{"_index":813,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/MockPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["reload",{"_index":461,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["remember",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["remembered",{"_index":4327,"title":{},"body":{"interfaces/UserSession.html":{}}}],["removal",{"_index":2013,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["remove",{"_index":1387,"title":{},"body":{"classes/DialogRef.html":{},"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{}}}],["remove(projectid",{"_index":2680,"title":{},"body":{"injectables/MemberService.html":{}}}],["removepanelclass",{"_index":1348,"title":{},"body":{"classes/DialogRef.html":{}}}],["removepanelclass(classes",{"_index":1385,"title":{},"body":{"classes/DialogRef.html":{}}}],["removes",{"_index":2682,"title":{},"body":{"injectables/MemberService.html":{}}}],["removetextat",{"_index":2753,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["removetextat(editor",{"_index":2776,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["removetextbeforeandaftereachselection",{"_index":2754,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["removetextbeforeandaftereachselection(editor",{"_index":2782,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["renderdialog",{"_index":1292,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["renderdialog(component",{"_index":1306,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["renderer",{"_index":2636,"title":{},"body":{"classes/Marked.html":{},"components/TextareaComponent.html":{},"miscellaneous/functions.html":{}}}],["renderer(token",{"_index":1667,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["repeat",{"_index":956,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{}}}],["repeatpassword",{"_index":924,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["replace",{"_index":4755,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["replaces",{"_index":1637,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["replaysubject",{"_index":3996,"title":{},"body":{"injectables/TaskService.html":{}}}],["report",{"_index":3123,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["reportprogress",{"_index":3115,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["repositories",{"_index":2040,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["repository",{"_index":672,"title":{},"body":{"components/BoardPage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/Project.html":{},"index.html":{}}}],["repository.fullname",{"_index":2439,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositorylist",{"_index":2416,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositorylistloaded",{"_index":2417,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositoryname",{"_index":2006,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["reproduce",{"_index":4675,"title":{},"body":{"license.html":{}}}],["req",{"_index":1737,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["request",{"_index":340,"title":{},"body":{"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/InputPullRequestComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"injectables/WorkspaceService.html":{}}}],["request'},{'name",{"_index":179,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["request(method",{"_index":366,"title":{},"body":{"injectables/ApiService.html":{}}}],["request.component",{"_index":4089,"title":{},"body":{"modules/TasksModule.html":{}}}],["request.component.html",{"_index":2356,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["request.component.ts",{"_index":2355,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["request.component.ts:15",{"_index":2360,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["request.component.ts:22",{"_index":2363,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["request.component.ts:26",{"_index":2365,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["request.component.ts:31",{"_index":2364,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["request.component.ts:35",{"_index":2362,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["request.component.ts:37",{"_index":2359,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["request.component.ts:43",{"_index":2361,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["request/input",{"_index":2354,"title":{},"body":{"components/InputPullRequestComponent.html":{},"modules/TasksModule.html":{}}}],["requested",{"_index":1029,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["requestoptions",{"_index":347,"title":{"interfaces/RequestOptions.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["requests",{"_index":3117,"title":{},"body":{"interfaces/RequestOptions.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["required",{"_index":1068,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"interfaces/ValidationError.html":{}}}],["required::after",{"_index":2281,"title":{},"body":{"components/InputComponent.html":{}}}],["requiredvalidator",{"_index":66,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"miscellaneous/functions.html":{}}}],["requires",{"_index":4355,"title":{},"body":{"classes/UserUtils.html":{},"additional-documentation/localization.html":{}}}],["reset",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordPage.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordPage.html":{},"components/SettingsAccountPage.html":{}}}],["resetpassword(undefined",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetsubscription",{"_index":918,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["resolved",{"_index":4840,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["response",{"_index":1772,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"interfaces/RequestOptions.html":{}}}],["response.deleted",{"_index":2501,"title":{},"body":{"components/LoginPage.html":{}}}],["response.id]).subscribe",{"_index":1185,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["response.link",{"_index":2048,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["response.operator.ts",{"_index":4548,"title":{},"body":{"miscellaneous/functions.html":{}}}],["response?.error?.status",{"_index":1774,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["response?.status",{"_index":1775,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["responsetype",{"_index":385,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/RequestOptions.html":{}}}],["responsibility",{"_index":4761,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["restore",{"_index":213,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["restoreaccountpage",{"_index":212,"title":{"components/RestoreAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["result",{"_index":676,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"interfaces/ErrorValidationTree.html":{},"classes/Random.html":{}}}],["result).subscribe",{"_index":681,"title":{},"body":{"components/BoardPage.html":{}}}],["results",{"_index":261,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["retain",{"_index":4672,"title":{},"body":{"license.html":{}}}],["return",{"_index":106,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"classes/Marked.html":{},"injectables/MemberService.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"injectables/RouterExtensionsService.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{}}}],["returned",{"_index":4401,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["returns",{"_index":52,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["reversible",{"_index":3372,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["revert",{"_index":3374,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["revive",{"_index":1279,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["rgb(0",{"_index":817,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{}}}],["rgba(0",{"_index":2242,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{}}}],["right",{"_index":759,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/OptionComponent.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["ripple",{"_index":2324,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["root",{"_index":381,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"additional-documentation/continuos-integration.html":{}}}],["root'},{'name",{"_index":125,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["rotate",{"_index":3567,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["rotate(45deg",{"_index":3566,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["rotate(90deg",{"_index":713,"title":{},"body":{"components/BoardPage.html":{},"components/ForgotPasswordPage.html":{},"components/TaskListPage.html":{}}}],["router",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["routerextensions",{"_index":42,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["routerextensionsservice",{"_index":43,"title":{"injectables/RouterExtensionsService.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/RouterExtensionsService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["routerlink",{"_index":2847,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["routermodule",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":492,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":459,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":437,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"overview.html":{},"routes.html":{},"additional-documentation/architecture.html":{}}}],["routetoproject",{"_index":2881,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routetoproject(project",{"_index":2903,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routetoworkspace",{"_index":2882,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routing.ts",{"_index":4774,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["row",{"_index":771,"title":{},"body":{"components/BoardPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{}}}],["row.hasownproperty('withsubtasks",{"_index":3906,"title":{},"body":{"components/TaskListPage.html":{}}}],["row.name",{"_index":3036,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["row.user.email",{"_index":2663,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.name",{"_index":2664,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.surname",{"_index":2665,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.username",{"_index":2662,"title":{},"body":{"components/MemberListComponent.html":{}}}],["rows",{"_index":3184,"title":{},"body":{"components/SchedulePage.html":{},"components/TextareaComponent.html":{}}}],["rsync",{"_index":4849,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["rule",{"_index":1650,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["rule.exec(src",{"_index":1655,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["run",{"_index":1989,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["running",{"_index":4632,"title":{},"body":{"index.html":{}}}],["runs",{"_index":4852,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["rxjs",{"_index":83,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":3512,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["s",{"_index":3683,"title":{},"body":{"injectables/StatusService.html":{}}}],["s.user.id",{"_index":4035,"title":{},"body":{"injectables/TaskService.html":{}}}],["same",{"_index":928,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["sameasselected",{"_index":3201,"title":{},"body":{"components/SelectComponent.html":{}}}],["sameasselected(option",{"_index":3216,"title":{},"body":{"components/SelectComponent.html":{}}}],["sameasvalidator",{"_index":935,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{},"miscellaneous/functions.html":{}}}],["sameasvalidator('password",{"_index":925,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["sameasvalidator(comparewith",{"_index":4596,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sampandonte/untitled",{"_index":2984,"title":{},"body":{"interfaces/Project.html":{}}}],["save",{"_index":1202,"title":{},"body":{"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{}}}],["savefilters",{"_index":1872,"title":{},"body":{"components/FiltersComponent.html":{}}}],["savestate",{"_index":2958,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["scale(1",{"_index":880,"title":{},"body":{"components/ButtonComponent.html":{}}}],["scale(1.02",{"_index":3517,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["scale(2",{"_index":2398,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["scaley",{"_index":2866,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["schedule",{"_index":216,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/typealiases.html":{}}}],["schedule(projectid",{"_index":3987,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.page.html",{"_index":3157,"title":{},"body":{"components/SchedulePage.html":{}}}],["schedule.page.scss",{"_index":3156,"title":{},"body":{"components/SchedulePage.html":{}}}],["schedule.tasks.get(null).push(task",{"_index":4041,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.has(null",{"_index":4039,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.set(dayjs(task.estimateddate).format('yyyy",{"_index":4038,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.set(null",{"_index":4040,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedulepage",{"_index":215,"title":{"components/SchedulePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["schedules",{"_index":4032,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedules.find((s",{"_index":4034,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedules.push",{"_index":4033,"title":{},"body":{"injectables/TaskService.html":{}}}],["screen",{"_index":967,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["script",{"_index":4854,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["scrollbeyondlastline",{"_index":4213,"title":{},"body":{"components/TextareaComponent.html":{}}}],["search",{"_index":2106,"title":{},"body":{"components/IconComponent.html":{},"classes/Utils.html":{},"additional-documentation/localization.html":{}}}],["second",{"_index":4614,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["section",{"_index":819,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SettingsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/localization.html":{}}}],["sections",{"_index":3178,"title":{},"body":{"components/SchedulePage.html":{}}}],["secure",{"_index":2512,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["security",{"_index":3369,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["see",{"_index":1040,"title":{},"body":{"components/CheckboxComponent.html":{},"additional-documentation/architecture.html":{}}}],["seed",{"_index":3046,"title":{},"body":{"classes/Random.html":{}}}],["select",{"_index":2168,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"miscellaneous/enumerations.html":{}}}],["select'},{'name",{"_index":218,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["select(member",{"_index":2177,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["select(option",{"_index":3218,"title":{},"body":{"components/SelectComponent.html":{}}}],["select(status",{"_index":3635,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["select.component.html",{"_index":3196,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.scss",{"_index":3195,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectcomponent",{"_index":217,"title":{"components/SelectComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["selected",{"_index":2941,"title":{},"body":{"components/OptionComponent.html":{},"components/SelectComponent.html":{}}}],["selectedvalue",{"_index":2826,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selectedvalue?.endswith(text",{"_index":2831,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selectedvalue?.startswith(text",{"_index":2830,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selection",{"_index":2764,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/localization.html":{}}}],["selection.endcolumn",{"_index":2811,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selection.endlinenumber",{"_index":2810,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["selection.startcolumn",{"_index":2809,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selection.startlinenumber",{"_index":2808,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["selectioneditoperation",{"_index":2793,"title":{"interfaces/SelectionEditOperation.html":{}},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["selectioneditoperationconverter",{"_index":3288,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditoperationconverter[_key",{"_index":3315,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditoperationorder",{"_index":3286,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditoperationtype",{"_index":3283,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"miscellaneous/enumerations.html":{}}}],["selectioneditoperationtype.after",{"_index":3290,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditoperationtype.aftereachline",{"_index":3301,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditoperationtype.before",{"_index":3289,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditoperationtype.beforeeachline",{"_index":3292,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditplugin",{"_index":2732,"title":{"classes/SelectionEditPlugin.html":{}},"body":{"classes/Monaco.html":{},"classes/SelectionEditPlugin.html":{}}}],["selectioneditplugin.executeselectionedits.bind(this)(edits",{"_index":3306,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditplugin.getselectionedits.bind(this)(edits",{"_index":3304,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditplugin.init(prototype",{"_index":2744,"title":{},"body":{"classes/Monaco.html":{}}}],["selectionendswith",{"_index":2755,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["selectionendswith(editor",{"_index":2784,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selections",{"_index":2770,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["selections.map((selection",{"_index":2813,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selections.some",{"_index":2834,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selectionstartwith",{"_index":2756,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["selectionstartwith(editor",{"_index":2786,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selectlabel",{"_index":3238,"title":{"interfaces/SelectLabel.html":{}},"body":{"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["self",{"_index":966,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["send",{"_index":352,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["sends",{"_index":350,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["separated",{"_index":4768,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["sequence",{"_index":1629,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["sequence.aliases",{"_index":1613,"title":{},"body":{"classes/Emoji.html":{},"interfaces/EmojiToken.html":{}}}],["serba",{"_index":4657,"title":{},"body":{"license.html":{}}}],["server",{"_index":3129,"title":{},"body":{"interfaces/RequestOptions.html":{},"index.html":{}}}],["serves",{"_index":4834,"title":{},"body":{"additional-documentation/localization.html":{}}}],["service",{"_index":333,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SnackbarService.html":{},"components/TaskListPage.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["service.ts",{"_index":4796,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["services",{"_index":4705,"title":{},"body":{"license.html":{},"additional-documentation/architecture.html":{}}}],["services/api.service",{"_index":2601,"title":{},"body":{"modules/MainModule.html":{}}}],["services/auth.service",{"_index":938,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["services/dialog.service",{"_index":2602,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["services/git",{"_index":1245,"title":{},"body":{"modules/DashboardModule.html":{}}}],["services/project.service",{"_index":1172,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["services/sessions.service",{"_index":3476,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["services/status.service",{"_index":617,"title":{},"body":{"components/BoardPage.html":{}}}],["services/task.service",{"_index":618,"title":{},"body":{"components/BoardPage.html":{}}}],["services/workspace.service",{"_index":1173,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["servicevalidator",{"_index":4466,"title":{},"body":{"injectables/WorkspaceService.html":{},"miscellaneous/functions.html":{}}}],["servicevalidator(errorvalidationtree",{"_index":1762,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"miscellaneous/functions.html":{}}}],["servicevalidator({delete",{"_index":4464,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["session",{"_index":1754,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["session.geoip.city",{"_index":3498,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["session.geoip.country",{"_index":3499,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["session.useragent",{"_index":3496,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate",{"_index":801,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["sessiondate.format('ll",{"_index":3484,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('lll",{"_index":3485,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('mmmm",{"_index":3486,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('yyyy",{"_index":803,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TaskListPage.html":{}}}],["sessiondate.year",{"_index":3481,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions",{"_index":3451,"title":{},"body":{"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{}}}],["sessions'},{'name",{"_index":227,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["sessions.page",{"_index":3437,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["sessions.page.html",{"_index":3460,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.scss",{"_index":3459,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts",{"_index":3458,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:14",{"_index":3465,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:17",{"_index":3473,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:21",{"_index":3470,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:36",{"_index":3469,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:49",{"_index":3472,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions/settings",{"_index":3436,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{}}}],["sessionservice",{"_index":3466,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessionslist",{"_index":3461,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessionsservice",{"_index":3318,"title":{"injectables/SessionsService.html":{}},"body":{"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{}}}],["set",{"_index":291,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"modules/AuthRoutingModule.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/DialogOutletComponent.html":{},"classes/ESet.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"classes/PersistentMap.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["set(key",{"_index":2966,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["set.class",{"_index":3904,"title":{},"body":{"components/TaskListPage.html":{}}}],["set.class.ts",{"_index":1489,"title":{},"body":{"classes/ESet.html":{}}}],["set.class.ts:2",{"_index":1491,"title":{},"body":{"classes/ESet.html":{}}}],["setactiveoption",{"_index":3202,"title":{},"body":{"components/SelectComponent.html":{}}}],["setactiveoption(option",{"_index":3220,"title":{},"body":{"components/SelectComponent.html":{}}}],["setanimationname",{"_index":3527,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["setanimationname(name",{"_index":3542,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["setassignee(assignee",{"_index":2190,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["setdisabledstate",{"_index":987,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1020,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["setfilters(filters",{"_index":1883,"title":{},"body":{"components/FiltersComponent.html":{}}}],["seticon(value",{"_index":2127,"title":{},"body":{"components/IconComponent.html":{}}}],["setisopen(val",{"_index":2194,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["setisopen(value",{"_index":2341,"title":{},"body":{"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{}}}],["setmembers(members",{"_index":2191,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["setnewpassword",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{}}}],["setnewpassword(this.token",{"_index":945,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["setnewpassword(token",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["setnglet(value",{"_index":2459,"title":{},"body":{"directives/LetDirective.html":{}}}],["setoutlet(outlet",{"_index":1313,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["setprojectid(value",{"_index":2339,"title":{},"body":{"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{}}}],["setstatuses(statuses",{"_index":3642,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["setter",{"_index":2118,"title":{},"body":{"components/IconComponent.html":{}}}],["settimeout",{"_index":875,"title":{},"body":{"components/ButtonComponent.html":{},"components/DialogOutletComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["setting",{"_index":931,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["settings",{"_index":220,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["settings.page.html",{"_index":3441,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.page.scss",{"_index":3440,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.routing",{"_index":3438,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settingsaccountpage",{"_index":219,"title":{"components/SettingsAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["settingsintegrationspage",{"_index":221,"title":{"components/SettingsIntegrationsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["settingslocalizationpage",{"_index":223,"title":{"components/SettingsLocalizationPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["settingsmodule",{"_index":3423,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingspage",{"_index":225,"title":{"components/SettingsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["settingsroutingmodule",{"_index":3427,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["settingssessionspage",{"_index":226,"title":{"components/SettingsSessionsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["settitle",{"_index":1930,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["settitle(title",{"_index":1842,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["setup_action",{"_index":2088,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["shadow",{"_index":815,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{}}}],["shall",{"_index":4692,"title":{},"body":{"license.html":{}}}],["shape",{"_index":4793,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["share",{"_index":4795,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["shared",{"_index":3371,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["shopping_cart",{"_index":2139,"title":{},"body":{"components/IconComponent.html":{}}}],["shoppingcart",{"_index":2138,"title":{},"body":{"components/IconComponent.html":{}}}],["shoulddelete",{"_index":2833,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["show",{"_index":1293,"title":{},"body":{"components/DialogOutletComponent.html":{},"injectables/SnackbarService.html":{}}}],["show(message",{"_index":3588,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["showalert",{"_index":1777,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["showalert(m",{"_index":1791,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["showarrow",{"_index":2843,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["shown",{"_index":857,"title":{},"body":{"components/ButtonComponent.html":{}}}],["showoptions",{"_index":2848,"title":{},"body":{"components/NavElementComponent.html":{}}}],["shows",{"_index":4480,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["shrink",{"_index":1338,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/InputComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["side",{"_index":959,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["sidebar",{"_index":229,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["sidebarnavigationcomponent",{"_index":228,"title":{"components/SidebarNavigationComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["sie",{"_index":3347,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["simple",{"_index":266,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["single",{"_index":3182,"title":{},"body":{"components/SchedulePage.html":{},"additional-documentation/architecture.html":{}}}],["singlepersonschedule",{"_index":3519,"title":{"interfaces/SinglePersonSchedule.html":{}},"body":{"interfaces/SinglePersonSchedule.html":{},"miscellaneous/typealiases.html":{}}}],["singleschedule.user.name.substring(0",{"_index":3175,"title":{},"body":{"components/SchedulePage.html":{}}}],["site",{"_index":2513,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["size",{"_index":823,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"classes/Emoji.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["skip",{"_index":4302,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["skiplocationchange",{"_index":2919,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["sm",{"_index":968,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["small",{"_index":3631,"title":{},"body":{"components/StatusLabelComponent.html":{},"additional-documentation/continuos-integration.html":{}}}],["smaller",{"_index":4358,"title":{},"body":{"classes/UserUtils.html":{}}}],["smile",{"_index":1638,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["snackbar",{"_index":234,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["snackbar'},{'name",{"_index":232,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["snackbar.component.html",{"_index":3524,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar.component.scss",{"_index":3523,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar.interface",{"_index":3550,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.interface",{"_index":3580,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["snackbar:not(:last",{"_index":3582,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["snackbarcomponent",{"_index":231,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["snackbardata",{"_index":3549,"title":{"interfaces/SnackbarData.html":{}},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{}}}],["snackbardata['color",{"_index":3553,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbardata['duration",{"_index":3552,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbardata['message",{"_index":3551,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbaroutletcomponent",{"_index":233,"title":{"components/SnackbarOutletComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["snackbars",{"_index":3574,"title":{},"body":{"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{}}}],["snackbarservice",{"_index":3532,"title":{"injectables/SnackbarService.html":{}},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"injectables/TaskService.html":{}}}],["snake",{"_index":2137,"title":{},"body":{"components/IconComponent.html":{}}}],["snake_case",{"_index":4386,"title":{},"body":{"classes/Utils.html":{}}}],["snakecase",{"_index":3281,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"classes/Utils.html":{}}}],["snakecase(inputstring",{"_index":4381,"title":{},"body":{"classes/Utils.html":{}}}],["snakecase(key).touppercase",{"_index":3314,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["snakecasename",{"_index":2101,"title":{},"body":{"components/IconComponent.html":{}}}],["snapshot",{"_index":3147,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["software",{"_index":4679,"title":{},"body":{"license.html":{}}}],["solid",{"_index":606,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"license.html":{}}}],["source.subscribe",{"_index":1787,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["space",{"_index":732,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["spaces",{"_index":4756,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["spain",{"_index":4808,"title":{},"body":{"additional-documentation/localization.html":{}}}],["span",{"_index":2249,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["spanish",{"_index":4807,"title":{},"body":{"additional-documentation/localization.html":{}}}],["special",{"_index":4698,"title":{},"body":{"license.html":{}}}],["specific",{"_index":3970,"title":{},"body":{"injectables/TaskService.html":{}}}],["specified",{"_index":863,"title":{},"body":{"components/ButtonComponent.html":{},"classes/Utils.html":{}}}],["specify",{"_index":309,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/ValidationError.html":{},"miscellaneous/enumerations.html":{}}}],["specyfic",{"_index":4588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["speed",{"_index":4606,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":879,"title":{},"body":{"components/ButtonComponent.html":{},"modules/MainModule.html":{}}}],["spinner.hide",{"_index":881,"title":{},"body":{"components/ButtonComponent.html":{}}}],["split",{"_index":4349,"title":{},"body":{"classes/UserUtils.html":{},"classes/Utils.html":{}}}],["splitindex",{"_index":2147,"title":{},"body":{"components/IconComponent.html":{}}}],["splitter",{"_index":4767,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src.indexof",{"_index":1644,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["src/.../alert.dialog.ts",{"_index":4528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../apply",{"_index":4541,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../catch",{"_index":4547,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../color.interface.ts",{"_index":4735,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../component",{"_index":4544,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../control",{"_index":4530,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../debug.decorator.ts",{"_index":4551,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../dialog.service.ts",{"_index":4532,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../email.validator.ts",{"_index":4552,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../filters.interface.ts",{"_index":4738,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../get",{"_index":4558,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../link.override.ts",{"_index":4560,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../max",{"_index":4561,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../monaco",{"_index":4737,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../page.decorator.ts",{"_index":4563,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../password.validator.ts",{"_index":4564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../register.page.ts",{"_index":4533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../required.validator.ts",{"_index":4565,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../same",{"_index":4566,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../schedule.interface.ts",{"_index":4740,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../selection",{"_index":4534,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../service",{"_index":4569,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../service.decorator.ts",{"_index":4568,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../story.class.ts",{"_index":4739,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../task",{"_index":4535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../task.dialog.ts",{"_index":4537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../typings.ts",{"_index":4736,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../validator",{"_index":4554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app",{"_index":4770,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src/app/_main/_main.module.ts",{"_index":2515,"title":{},"body":{"modules/MainModule.html":{}}}],["src/app/_main/classes/control",{"_index":1059,"title":{},"body":{"components/ControlAccessor.html":{}}}],["src/app/_main/classes/dialog",{"_index":1340,"title":{},"body":{"classes/DialogRef.html":{}}}],["src/app/_main/classes/e",{"_index":1488,"title":{},"body":{"classes/ESet.html":{}}}],["src/app/_main/classes/enum.class.ts",{"_index":1676,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:10",{"_index":1696,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:32",{"_index":1704,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:48",{"_index":1707,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:70",{"_index":1684,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/filters.class.ts",{"_index":1855,"title":{},"body":{"classes/Filters.html":{}}}],["src/app/_main/classes/filters.class.ts:5",{"_index":1858,"title":{},"body":{"classes/Filters.html":{}}}],["src/app/_main/classes/monaco",{"_index":2746,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/_main/classes/persistent",{"_index":2954,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["src/app/_main/classes/random.class.ts",{"_index":3039,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:17",{"_index":3052,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:2",{"_index":3048,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:3",{"_index":3050,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:4",{"_index":3044,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/utils.class.ts",{"_index":4361,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:12",{"_index":4377,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:22",{"_index":4382,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:45",{"_index":4369,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:59",{"_index":4371,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/components/button/button.component.ts",{"_index":841,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:17",{"_index":867,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:24",{"_index":859,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:29",{"_index":854,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:34",{"_index":853,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:39",{"_index":872,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:44",{"_index":869,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/card/card.component.ts",{"_index":903,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/_main/components/card/card.component.ts:8",{"_index":907,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/_main/components/checkbox/checkbox.component.ts",{"_index":979,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/_main/components/dialog",{"_index":1283,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts",{"_index":1868,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:12",{"_index":1874,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:21",{"_index":1882,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:25",{"_index":1878,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:26",{"_index":1873,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:32",{"_index":1876,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:37",{"_index":1877,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts",{"_index":2093,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:100",{"_index":2124,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:105",{"_index":2121,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:113",{"_index":2136,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:19",{"_index":2107,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:35",{"_index":2102,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:52",{"_index":2126,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:59",{"_index":2114,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:66",{"_index":2111,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:73",{"_index":2131,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:83",{"_index":2134,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:95",{"_index":2115,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/input",{"_index":2300,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["src/app/_main/components/input/input.component.ts",{"_index":2253,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:18",{"_index":2269,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:23",{"_index":2260,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:28",{"_index":2268,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:33",{"_index":2264,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:38",{"_index":2262,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:43",{"_index":2265,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:49",{"_index":2259,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/main",{"_index":2619,"title":{},"body":{"components/MainViewComponent.html":{}}}],["src/app/_main/components/nav",{"_index":2838,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["src/app/_main/components/option/option.component.ts",{"_index":2937,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:10",{"_index":2946,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:11",{"_index":2945,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:13",{"_index":2948,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:15",{"_index":2950,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:17",{"_index":2944,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:19",{"_index":2947,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/select/select",{"_index":3267,"title":{},"body":{"interfaces/SelectLabel.html":{}}}],["src/app/_main/components/select/select.component.ts",{"_index":3192,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:104",{"_index":3221,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:112",{"_index":3217,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:119",{"_index":3219,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:126",{"_index":3212,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:30",{"_index":3223,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:31",{"_index":3225,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:32",{"_index":3229,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:34",{"_index":3208,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:35",{"_index":3207,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:37",{"_index":3224,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:38",{"_index":3230,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:42",{"_index":3226,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:45",{"_index":3206,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:51",{"_index":3215,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:65",{"_index":3214,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:77",{"_index":3209,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:81",{"_index":3222,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:88",{"_index":3213,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/sidebar",{"_index":3502,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["src/app/_main/components/snackbar",{"_index":3573,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts",{"_index":3522,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:12",{"_index":3545,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:15",{"_index":3538,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:18",{"_index":3537,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:21",{"_index":3536,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:24",{"_index":3534,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:27",{"_index":3539,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:29",{"_index":3547,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:36",{"_index":3533,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:40",{"_index":3541,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:46",{"_index":3540,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:53",{"_index":3543,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.interface.ts",{"_index":3572,"title":{},"body":{"interfaces/SnackbarData.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts",{"_index":4147,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:131",{"_index":4180,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:135",{"_index":4181,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:148",{"_index":4177,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:156",{"_index":4169,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:164",{"_index":4172,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:172",{"_index":4173,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:180",{"_index":4174,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:190",{"_index":4175,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:200",{"_index":4176,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:207",{"_index":4170,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:215",{"_index":4171,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:31",{"_index":4164,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:36",{"_index":4168,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:41",{"_index":4166,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:46",{"_index":4165,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:48",{"_index":4167,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:50",{"_index":4163,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:52",{"_index":4182,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:53",{"_index":4186,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:55",{"_index":4188,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:57",{"_index":4184,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:89",{"_index":4179,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:95",{"_index":4178,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/upper",{"_index":4276,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["src/app/_main/decorators/debug.decorator.ts",{"_index":4575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/page.decorator",{"_index":1210,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["src/app/_main/decorators/page.decorator.ts",{"_index":4589,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/service",{"_index":1758,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/service.decorator.ts",{"_index":4598,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts",{"_index":264,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:50",{"_index":279,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:58",{"_index":305,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:67",{"_index":288,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:73",{"_index":292,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:80",{"_index":299,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/directives/click",{"_index":1044,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["src/app/_main/directives/focus",{"_index":1905,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["src/app/_main/directives/let.directive.ts",{"_index":2446,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["src/app/_main/directives/let.directive.ts:11",{"_index":2456,"title":{},"body":{"directives/LetDirective.html":{}}}],["src/app/_main/directives/let.directive.ts:18",{"_index":2458,"title":{},"body":{"directives/LetDirective.html":{}}}],["src/app/_main/directives/view",{"_index":4412,"title":{},"body":{"directives/ViewContainerDirective.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts",{"_index":1729,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:11",{"_index":1738,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:13",{"_index":1736,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:8",{"_index":1732,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interfaces/color.interface.ts",{"_index":4741,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/_main/interfaces/filters.interface.ts",{"_index":1849,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/_main/interfaces/filters.interface.ts:9",{"_index":1852,"title":{},"body":{"interfaces/FilterCheckbox.html":{}}}],["src/app/_main/interfaces/request",{"_index":3110,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["src/app/_main/interfaces/validation",{"_index":4397,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["src/app/_main/libs/emoji/emoji.lib.ts",{"_index":1588,"title":{},"body":{"classes/Emoji.html":{}}}],["src/app/_main/libs/emoji/emoji.lib.ts:15",{"_index":1607,"title":{},"body":{"classes/Emoji.html":{}}}],["src/app/_main/libs/emoji/emoji.lib.ts:19",{"_index":1605,"title":{},"body":{"classes/Emoji.html":{}}}],["src/app/_main/libs/emoji/emoji.lib.ts:23",{"_index":1602,"title":{},"body":{"classes/Emoji.html":{}}}],["src/app/_main/libs/emoji/emoji.lib.ts:27",{"_index":1610,"title":{},"body":{"classes/Emoji.html":{}}}],["src/app/_main/libs/emoji/emoji.lib.ts:6",{"_index":1600,"title":{},"body":{"classes/Emoji.html":{}}}],["src/app/_main/libs/marked/extensions/marked",{"_index":1625,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["src/app/_main/libs/marked/marked.lib.ts",{"_index":2629,"title":{},"body":{"classes/Marked.html":{}}}],["src/app/_main/libs/marked/marked.lib.ts:18",{"_index":2634,"title":{},"body":{"classes/Marked.html":{}}}],["src/app/_main/libs/marked/marked.lib.ts:6",{"_index":2633,"title":{},"body":{"classes/Marked.html":{}}}],["src/app/_main/libs/marked/marked.lib.ts:8",{"_index":2635,"title":{},"body":{"classes/Marked.html":{}}}],["src/app/_main/libs/marked/overrides/link.override.ts",{"_index":4584,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/libs/monaco/monaco.lib.ts",{"_index":2724,"title":{},"body":{"classes/Monaco.html":{}}}],["src/app/_main/libs/monaco/monaco.lib.ts:11",{"_index":2728,"title":{},"body":{"classes/Monaco.html":{}}}],["src/app/_main/libs/monaco/monaco.lib.ts:17",{"_index":2729,"title":{},"body":{"classes/Monaco.html":{}}}],["src/app/_main/libs/monaco/monaco.lib.ts:5",{"_index":2727,"title":{},"body":{"classes/Monaco.html":{}}}],["src/app/_main/libs/monaco/monaco.lib.ts:7",{"_index":2731,"title":{},"body":{"classes/Monaco.html":{}}}],["src/app/_main/libs/monaco/plugins/selection",{"_index":3269,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/_main/libs/monaco/typings.ts",{"_index":4742,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/_main/operators/apply",{"_index":4570,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/operators/catch",{"_index":4573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/pages/mock/mock.page.ts",{"_index":2703,"title":{},"body":{"components/MockPage.html":{}}}],["src/app/_main/pages/mock/mock.page.ts:12",{"_index":2709,"title":{},"body":{"components/MockPage.html":{}}}],["src/app/_main/pages/mock/mock.page.ts:14",{"_index":2708,"title":{},"body":{"components/MockPage.html":{}}}],["src/app/_main/pages/mock/mock.page.ts:9",{"_index":2707,"title":{},"body":{"components/MockPage.html":{}}}],["src/app/_main/pipes/validation",{"_index":4407,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["src/app/_main/services/api.service",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/WorkspaceService.html":{}}}],["src/app/_main/services/api.service.ts",{"_index":332,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:18",{"_index":343,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:30",{"_index":367,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:44",{"_index":359,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:54",{"_index":363,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:64",{"_index":348,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:74",{"_index":365,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:84",{"_index":361,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/dialog.service",{"_index":3030,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["src/app/_main/services/dialog.service.ts",{"_index":1413,"title":{},"body":{"injectables/DialogService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/_main/services/dialog.service.ts:114",{"_index":1436,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:118",{"_index":1438,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:128",{"_index":1440,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:23",{"_index":1453,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:24",{"_index":1452,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:27",{"_index":1454,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:29",{"_index":1456,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:31",{"_index":1427,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:44",{"_index":1442,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:78",{"_index":1434,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:84",{"_index":1450,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:93",{"_index":1429,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:99",{"_index":1448,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/router",{"_index":3145,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["src/app/_main/services/snackbar.service.ts",{"_index":3583,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:11",{"_index":3584,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:14",{"_index":3591,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:16",{"_index":3589,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:26",{"_index":3586,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:31",{"_index":3587,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/validators/email.validator.ts",{"_index":4576,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/validators/max",{"_index":4585,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/validators/password.validator.ts",{"_index":4593,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/validators/required.validator",{"_index":1171,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["src/app/_main/validators/required.validator.ts",{"_index":4594,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/validators/same",{"_index":4595,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.ts",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":470,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.routing.ts",{"_index":487,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/guard/logged",{"_index":2472,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["src/app/auth/interfaces/user.interface.ts",{"_index":2719,"title":{},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["src/app/auth/pages/change",{"_index":914,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["src/app/auth/pages/delete",{"_index":1267,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["src/app/auth/pages/forgot",{"_index":1915,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["src/app/auth/pages/login/login.page.ts",{"_index":2479,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:14",{"_index":2485,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:21",{"_index":2492,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:22",{"_index":2490,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:27",{"_index":2491,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:33",{"_index":2489,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:40",{"_index":2488,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:66",{"_index":2487,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/register/register.page.ts",{"_index":3066,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/auth/pages/register/register.page.ts:21",{"_index":3074,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:24",{"_index":3084,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:25",{"_index":3086,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:26",{"_index":3083,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:28",{"_index":3079,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:33",{"_index":3082,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:51",{"_index":3076,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:66",{"_index":3077,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:70",{"_index":3078,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:91",{"_index":3075,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/restore",{"_index":3136,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["src/app/auth/services/auth.service.ts",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:12",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:30",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:42",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:47",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:51",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:55",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:59",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:63",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:67",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:9",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/user.service.ts",{"_index":4314,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/services/user.service.ts:12",{"_index":4319,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/services/user.service.ts:16",{"_index":4317,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/services/user.service.ts:9",{"_index":4316,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/dashboard/classes/user.class.ts",{"_index":4331,"title":{},"body":{"classes/UserUtils.html":{}}}],["src/app/dashboard/classes/user.class.ts:15",{"_index":4337,"title":{},"body":{"classes/UserUtils.html":{}}}],["src/app/dashboard/classes/user.class.ts:5",{"_index":4335,"title":{},"body":{"classes/UserUtils.html":{}}}],["src/app/dashboard/components/integration",{"_index":2412,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["src/app/dashboard/components/member",{"_index":2644,"title":{},"body":{"components/MemberListComponent.html":{}}}],["src/app/dashboard/components/view",{"_index":4417,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["src/app/dashboard/dashboard.module.ts",{"_index":1220,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/dashboard/dashboard.routing.ts",{"_index":1247,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["src/app/dashboard/dialogs/add",{"_index":10,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["src/app/dashboard/interfaces/git",{"_index":1946,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["src/app/dashboard/interfaces/project",{"_index":2986,"title":{},"body":{"interfaces/ProjectMember.html":{}}}],["src/app/dashboard/interfaces/project.interface",{"_index":2910,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["src/app/dashboard/interfaces/project.interface.ts",{"_index":2981,"title":{},"body":{"interfaces/Project.html":{}}}],["src/app/dashboard/interfaces/workspace.interface",{"_index":2911,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["src/app/dashboard/interfaces/workspace.interface.ts",{"_index":4444,"title":{},"body":{"interfaces/Workspace.html":{}}}],["src/app/dashboard/pages/create",{"_index":1139,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["src/app/dashboard/pages/edit",{"_index":1496,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["src/app/dashboard/pages/github",{"_index":2081,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["src/app/dashboard/pages/projects",{"_index":3016,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["src/app/dashboard/pages/workspaces",{"_index":4476,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["src/app/dashboard/services/git",{"_index":1986,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["src/app/dashboard/services/member.service.ts",{"_index":2666,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:11",{"_index":2668,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:19",{"_index":2676,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:29",{"_index":2681,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:39",{"_index":2674,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:49",{"_index":2670,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:61",{"_index":2679,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/project.service",{"_index":2912,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["src/app/dashboard/services/project.service.ts",{"_index":2988,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:12",{"_index":2990,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:20",{"_index":3000,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:29",{"_index":2997,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:38",{"_index":3003,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:47",{"_index":2995,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:58",{"_index":2992,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:65",{"_index":3001,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/workspace.service",{"_index":2913,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["src/app/dashboard/services/workspace.service.ts",{"_index":4450,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:14",{"_index":4453,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:27",{"_index":4459,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:36",{"_index":4457,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:45",{"_index":4462,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:53",{"_index":4460,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:62",{"_index":4455,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:74",{"_index":4465,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/emails/emails.module.ts",{"_index":1583,"title":{},"body":{"modules/EmailsModule.html":{}}}],["src/app/emails/emails.routing.ts",{"_index":1585,"title":{},"body":{"modules/EmailsRoutingModule.html":{}}}],["src/app/hello",{"_index":4763,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src/app/landing",{"_index":2440,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["src/app/messages/messages.module.ts",{"_index":2699,"title":{},"body":{"modules/MessagesModule.html":{}}}],["src/app/messages/messages.routing.ts",{"_index":2701,"title":{},"body":{"modules/MessagesRoutingModule.html":{}}}],["src/app/settings/components/integration",{"_index":2399,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["src/app/settings/components/list",{"_index":2460,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["src/app/settings/interfaces/session.interface",{"_index":3325,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/interfaces/session.interface.ts",{"_index":4323,"title":{},"body":{"interfaces/UserSession.html":{}}}],["src/app/settings/pages/settings",{"_index":1958,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{}}}],["src/app/settings/pages/settings/settings.page",{"_index":3429,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/settings/pages/settings/settings.page.ts",{"_index":3439,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:10",{"_index":3450,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:11",{"_index":3449,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:12",{"_index":3448,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:13",{"_index":3446,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:17",{"_index":3447,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/services/sessions.service.ts",{"_index":3319,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/services/sessions.service.ts:12",{"_index":3323,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/services/sessions.service.ts:16",{"_index":3322,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/services/sessions.service.ts:9",{"_index":3320,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/settings.module.ts",{"_index":3428,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/settings/settings.routing.ts",{"_index":3456,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/tasks/components/board",{"_index":772,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["src/app/tasks/components/input",{"_index":2160,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{}}}],["src/app/tasks/components/status",{"_index":3619,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["src/app/tasks/components/view",{"_index":4431,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts",{"_index":3795,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:102",{"_index":3814,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:108",{"_index":3812,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:124",{"_index":3809,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:130",{"_index":3808,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:141",{"_index":3807,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:38",{"_index":3829,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:40",{"_index":3833,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:41",{"_index":3828,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:42",{"_index":3831,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:44",{"_index":3826,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:45",{"_index":3834,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:46",{"_index":3824,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:47",{"_index":3823,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:48",{"_index":3825,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:50",{"_index":3822,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:52",{"_index":3821,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:68",{"_index":3806,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:71",{"_index":3815,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:79",{"_index":3810,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/enums/task",{"_index":4540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/tasks/interfaces/schedule.interface.ts",{"_index":3520,"title":{},"body":{"interfaces/SinglePersonSchedule.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/interfaces/status.interface.ts",{"_index":3598,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["src/app/tasks/interfaces/task.interface.ts",{"_index":3779,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["src/app/tasks/pages/board/board.page.ts",{"_index":535,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:134",{"_index":577,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:150",{"_index":573,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:154",{"_index":567,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:158",{"_index":580,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:30",{"_index":586,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:31",{"_index":583,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:32",{"_index":584,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:33",{"_index":585,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:34",{"_index":582,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:36",{"_index":595,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:37",{"_index":589,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:39",{"_index":591,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:40",{"_index":581,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:41",{"_index":588,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:42",{"_index":587,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:43",{"_index":590,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:44",{"_index":560,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:66",{"_index":570,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:70",{"_index":576,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:76",{"_index":575,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:80",{"_index":563,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts",{"_index":3155,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:16",{"_index":3170,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:17",{"_index":3169,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:19",{"_index":3165,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:20",{"_index":3167,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:21",{"_index":3168,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:23",{"_index":3172,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:37",{"_index":3162,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:50",{"_index":3163,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/task",{"_index":3863,"title":{},"body":{"components/TaskListPage.html":{}}}],["src/app/tasks/pipes/status",{"_index":3611,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["src/app/tasks/pipes/task",{"_index":3937,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["src/app/tasks/services/status.service.ts",{"_index":3653,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:11",{"_index":3655,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:19",{"_index":3664,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:29",{"_index":3663,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:39",{"_index":3659,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:49",{"_index":3668,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:59",{"_index":3662,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:63",{"_index":3666,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:74",{"_index":3657,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/task.service.ts",{"_index":3959,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:100",{"_index":3976,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:110",{"_index":3978,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:136",{"_index":3986,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:166",{"_index":3981,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:193",{"_index":3984,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:224",{"_index":3988,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:262",{"_index":3969,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:275",{"_index":3974,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:32",{"_index":3966,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:51",{"_index":3980,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:72",{"_index":3975,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:86",{"_index":3990,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/tasks.module.ts",{"_index":4084,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/tasks/tasks.routing.ts",{"_index":4103,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["src/environments/environment",{"_index":376,"title":{},"body":{"injectables/ApiService.html":{},"components/MainViewComponent.html":{}}}],["src/locales",{"_index":4822,"title":{},"body":{"additional-documentation/localization.html":{}}}],["src/locales/messages.pl",{"_index":4820,"title":{},"body":{"additional-documentation/localization.html":{}}}],["src/stories/helpers/classes/form",{"_index":1926,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["src/stories/helpers/classes/story",{"_index":1798,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{}}}],["src/stories/helpers/classes/story.class.ts",{"_index":3694,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"miscellaneous/typealiases.html":{}}}],["src/stories/helpers/classes/story.class.ts:100",{"_index":3717,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:115",{"_index":3711,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:125",{"_index":3722,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:129",{"_index":3720,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:29",{"_index":3707,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:30",{"_index":3705,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:64",{"_index":3719,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:68",{"_index":3713,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:80",{"_index":3715,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:86",{"_index":3710,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/control",{"_index":4539,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/stories/helpers/functions/component",{"_index":4107,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["src/stories/helpers/functions/get",{"_index":4581,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/tests/helpers/ng",{"_index":4136,"title":{},"body":{"classes/TestNgControl.html":{}}}],["src/tests/helpers/validator",{"_index":4578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stage",{"_index":3071,"title":{},"body":{"components/RegisterPage.html":{},"additional-documentation/localization.html":{}}}],["start",{"_index":961,"title":{},"body":{"components/ChangePasswordPage.html":{},"interfaces/EmojiToken.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/WorkspacesListPage.html":{}}}],["start(src",{"_index":1643,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["start:docsapi",{"_index":4643,"title":{},"body":{"index.html":{}}}],["start:test",{"_index":4637,"title":{},"body":{"index.html":{}}}],["startcolumn",{"_index":2778,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["started",{"_index":1373,"title":{"index.html":{},"license.html":{}},"body":{"classes/DialogRef.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"index.html":{}}}],["startgithubintegration",{"_index":1990,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["starting",{"_index":4380,"title":{},"body":{"classes/Utils.html":{}}}],["startline",{"_index":3293,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["startlinenumber",{"_index":2777,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["startnavigate",{"_index":4622,"title":{},"body":{"index.html":{}}}],["startpos",{"_index":4376,"title":{},"body":{"classes/Utils.html":{}}}],["state",{"_index":663,"title":{},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/DialogRef.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["statement",{"_index":3109,"title":{},"body":{"components/RegisterPage.html":{}}}],["states",{"_index":4806,"title":{},"body":{"additional-documentation/localization.html":{}}}],["static",{"_index":1310,"title":{},"body":{"components/DialogOutletComponent.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"classes/Marked.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/TextareaComponent.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{}}}],["staticlabel",{"_index":2257,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["statistics",{"_index":3037,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["status",{"_index":81,"title":{"interfaces/Status.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["status.begin)?.id",{"_index":3856,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["status.id",{"_index":632,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{}}}],["status.name",{"_index":691,"title":{},"body":{"components/BoardPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{}}}],["status.tasks",{"_index":3691,"title":{},"body":{"injectables/StatusService.html":{}}}],["status.tasks.push(task",{"_index":3692,"title":{},"body":{"injectables/StatusService.html":{}}}],["status/column",{"_index":3599,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["status['name",{"_index":3617,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["statuscolor",{"_index":3613,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["statuscolorpipe",{"_index":3609,"title":{"pipes/StatusColorPipe.html":{}},"body":{"pipes/StatusColorPipe.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["statuses",{"_index":3624,"title":{},"body":{"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{}}}],["statuses(statuses",{"_index":3645,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statuses.find((status",{"_index":3855,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["statuses.foreach((status",{"_index":3680,"title":{},"body":{"injectables/StatusService.html":{}}}],["statuses.map((s",{"_index":3682,"title":{},"body":{"injectables/StatusService.html":{}}}],["statuses.map((status",{"_index":3686,"title":{},"body":{"injectables/StatusService.html":{}}}],["statuses.reduce((acc",{"_index":3648,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statuseswithsubtasks",{"_index":3685,"title":{},"body":{"injectables/StatusService.html":{}}}],["statusid",{"_index":571,"title":{},"body":{"components/BoardPage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["statusid)?.name",{"_index":3915,"title":{},"body":{"components/TaskListPage.html":{}}}],["statusid)?.tasks",{"_index":633,"title":{},"body":{"components/BoardPage.html":{}}}],["statuslabelcomponent",{"_index":235,"title":{"components/StatusLabelComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["statuslist",{"_index":30,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["statuslistsubscription",{"_index":544,"title":{},"body":{"components/BoardPage.html":{}}}],["statusmap",{"_index":3625,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statusmap.get(statusid)?.name",{"_index":3652,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statusservice",{"_index":556,"title":{"injectables/StatusService.html":{}},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["statuswithtasks",{"_index":579,"title":{"interfaces/StatusWithTasks.html":{}},"body":{"components/BoardPage.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{}}}],["statuswithtasks).tasks",{"_index":3681,"title":{},"body":{"injectables/StatusService.html":{}}}],["step",{"_index":4615,"title":{},"body":{"index.html":{}}}],["stop",{"_index":252,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/EmojiToken.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["store",{"_index":4599,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stored",{"_index":4629,"title":{},"body":{"index.html":{}}}],["story",{"_index":1927,"title":{"classes/Story.html":{}},"body":{"classes/FormControlStoryPageConfig.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"pipes/TaskTypePipe.html":{}}}],["story.class",{"_index":3773,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["storybook/angular",{"_index":1804,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"interfaces/TemplateDecoratorConfig.html":{}}}],["storybook/angular/dist/ts3.9/client/preview/types",{"_index":1806,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["storyconfig",{"_index":3704,"title":{"interfaces/StoryConfig.html":{}},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["storyfn",{"_index":3708,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["storypageconfig",{"_index":1815,"title":{"classes/StoryPageConfig.html":{}},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{}}}],["storypageconfig:22",{"_index":1932,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["storypageconfig:31",{"_index":1934,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["storypageconfig:54",{"_index":1936,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["storypageconfig:60",{"_index":1937,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["storypageconfig:65",{"_index":1933,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["storypageconfig:78",{"_index":1935,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["storytemplate",{"_index":3727,"title":{"classes/StoryTemplate.html":{}},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryTemplate.html":{}}}],["strict",{"_index":4714,"title":{},"body":{"license.html":{}}}],["string",{"_index":315,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"interfaces/Task.html":{},"components/TaskListPage.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/functions.html":{}}}],["string.substring(startpos).search(regex",{"_index":4390,"title":{},"body":{"classes/Utils.html":{}}}],["strings",{"_index":4828,"title":{},"body":{"additional-documentation/localization.html":{}}}],["structure",{"_index":4792,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["studio",{"_index":2932,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"additional-documentation/localization.html":{}}}],["style",{"_index":868,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/TextareaComponent.html":{}}}],["style.animation",{"_index":3529,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["style.height",{"_index":2100,"title":{},"body":{"components/IconComponent.html":{}}}],["style.width",{"_index":1294,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/IconComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["styles/typography",{"_index":811,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["styling",{"_index":310,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"miscellaneous/enumerations.html":{}}}],["sub",{"_index":2936,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["subject",{"_index":1094,"title":{},"body":{"components/ControlAccessor.html":{},"classes/DialogRef.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["subject.next(tasks",{"_index":4004,"title":{},"body":{"injectables/TaskService.html":{}}}],["subject.pipe(applyfilters(filters",{"_index":4005,"title":{},"body":{"injectables/TaskService.html":{}}}],["submit",{"_index":858,"title":{},"body":{"components/ButtonComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{}}}],["submitcreate",{"_index":1147,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["submitupdate",{"_index":1502,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["subscribe",{"_index":947,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["subscribe((response",{"_index":2500,"title":{},"body":{"components/LoginPage.html":{}}}],["subscribe((result",{"_index":675,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["subscriber.complete",{"_index":1796,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscriber.error(error",{"_index":1795,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscriber.next(value",{"_index":1792,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscription",{"_index":592,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["subscriptions",{"_index":1515,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["substitute",{"_index":4703,"title":{},"body":{"license.html":{}}}],["subtask",{"_index":810,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["subtask.id",{"_index":3929,"title":{},"body":{"components/TaskListPage.html":{}}}],["subtask.name",{"_index":3930,"title":{},"body":{"components/TaskListPage.html":{}}}],["subtask.statusid",{"_index":3688,"title":{},"body":{"injectables/StatusService.html":{}}}],["subtasks",{"_index":3783,"title":{},"body":{"interfaces/Task.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["subtasktype",{"_index":3840,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["subtasktype.subtask",{"_index":3817,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{}}}],["subtasktypes",{"_index":3801,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["success",{"_index":1778,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"components/GithubIntegrationPage.html":{}}}],["successfully",{"_index":4008,"title":{},"body":{"injectables/TaskService.html":{}}}],["such",{"_index":4722,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":1104,"title":{},"body":{"components/ControlAccessor.html":{}}}],["sum",{"_index":4353,"title":{},"body":{"classes/UserUtils.html":{}}}],["super",{"_index":2976,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["super(merge",{"_index":1944,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["super(ngcontrol",{"_index":1891,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["super.clear",{"_index":2969,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["super.delete(key",{"_index":2971,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["super.set(key",{"_index":2973,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["support",{"_index":2053,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules.html":{}}}],["supports",{"_index":2094,"title":{},"body":{"components/IconComponent.html":{}}}],["sure",{"_index":668,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["surname",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["suspended",{"_index":1949,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IntegrationEntryComponent.html":{}}}],["svg",{"_index":607,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"classes/Emoji.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{},"modules.html":{}}}],["swagger",{"_index":4645,"title":{},"body":{"index.html":{}}}],["switch",{"_index":1832,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"classes/StoryPageConfig.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/TextareaComponent.html":{}}}],["switchmap",{"_index":3997,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((confirmed",{"_index":4011,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((newtask",{"_index":4026,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((task",{"_index":4023,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((updatedtask",{"_index":4020,"title":{},"body":{"injectables/TaskService.html":{}}}],["system",{"_index":2511,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsSessionsPage.html":{}}}],["t",{"_index":349,"title":{},"body":{"injectables/ApiService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["table",{"_index":1835,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["tabs",{"_index":4430,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["tabuckner/material",{"_index":4505,"title":{},"body":{"dependencies.html":{}}}],["tak",{"_index":3351,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["take",{"_index":1318,"title":{},"body":{"components/DialogOutletComponent.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/StatusLabelComponent.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["take(1",{"_index":2058,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["taken",{"_index":3102,"title":{},"body":{"components/RegisterPage.html":{}}}],["tap",{"_index":3998,"title":{},"body":{"injectables/TaskService.html":{}}}],["tap((data",{"_index":4018,"title":{},"body":{"injectables/TaskService.html":{}}}],["target",{"_index":1763,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["targeted",{"_index":1384,"title":{},"body":{"classes/DialogRef.html":{}}}],["targetheight",{"_index":2377,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["task",{"_index":181,"title":{"interfaces/Task.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["task'},{'name",{"_index":130,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["task).subscribe",{"_index":3925,"title":{},"body":{"components/TaskListPage.html":{}}}],["task).subscribe((task",{"_index":3924,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.assigneeid",{"_index":1866,"title":{},"body":{"classes/Filters.html":{},"injectables/TaskService.html":{}}}],["task.component",{"_index":4086,"title":{},"body":{"modules/TasksModule.html":{}}}],["task.component.html",{"_index":776,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.scss",{"_index":775,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts",{"_index":774,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:16",{"_index":785,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:19",{"_index":784,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:22",{"_index":783,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:24",{"_index":791,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:25",{"_index":792,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:26",{"_index":781,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:30",{"_index":789,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:36",{"_index":790,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:42",{"_index":788,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:50",{"_index":787,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.dialog.html",{"_index":3797,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["task.dialog.scss",{"_index":3796,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["task.estimateddate",{"_index":4037,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.id",{"_index":692,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["task.id).pipe(switchmap",{"_index":4014,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.interface",{"_index":3608,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["task.name",{"_index":693,"title":{},"body":{"components/BoardPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["task.parenttaskid",{"_index":3918,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.property.component.scss",{"_index":2373,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["task.pull",{"_index":664,"title":{},"body":{"components/BoardPage.html":{}}}],["task.service",{"_index":3671,"title":{},"body":{"injectables/StatusService.html":{}}}],["task.statusid",{"_index":651,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{}}}],["task.subtasks",{"_index":3920,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.subtasks.length",{"_index":3921,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.subtasks?.filter((subtask",{"_index":3687,"title":{},"body":{"injectables/StatusService.html":{}}}],["task.subtasks?.length",{"_index":3684,"title":{},"body":{"injectables/StatusService.html":{}}}],["task/board",{"_index":773,"title":{},"body":{"components/BoardTaskComponent.html":{},"modules/TasksModule.html":{}}}],["task:last",{"_index":742,"title":{},"body":{"components/BoardPage.html":{}}}],["task:not(.cdk",{"_index":755,"title":{},"body":{"components/BoardPage.html":{}}}],["task?.name",{"_index":809,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["taskcreate",{"_index":3862,"title":{},"body":{"components/TaskDialog.html":{}}}],["taskdialog",{"_index":237,"title":{"components/TaskDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["taskdialogdata",{"_index":612,"title":{"interfaces/TaskDialogData.html":{}},"body":{"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["taskdialogvariant",{"_index":613,"title":{},"body":{"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"miscellaneous/enumerations.html":{}}}],["taskdialogvariant.create",{"_index":678,"title":{},"body":{"components/BoardPage.html":{},"injectables/TaskService.html":{}}}],["taskdialogvariant.edit",{"_index":4016,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskid",{"_index":2169,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["tasklist",{"_index":3869,"title":{},"body":{"components/TaskListPage.html":{}}}],["tasklist.filter((task",{"_index":3917,"title":{},"body":{"components/TaskListPage.html":{}}}],["tasklistpage",{"_index":238,"title":{"components/TaskListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["taskmap",{"_index":545,"title":{},"body":{"components/BoardPage.html":{}}}],["taskpriorities",{"_index":3802,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["taskpriority",{"_index":3837,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["taskpriorityicon",{"_index":3939,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["taskpriorityiconpipe",{"_index":3936,"title":{"pipes/TaskPriorityIconPipe.html":{}},"body":{"pipes/TaskPriorityIconPipe.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["taskprioritypipe",{"_index":3951,"title":{"pipes/TaskPriorityPipe.html":{}},"body":{"pipes/TaskPriorityPipe.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["tasks",{"_index":694,"title":{},"body":{"components/BoardPage.html":{},"classes/Filters.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"index.html":{}}}],["tasks.filter((task",{"_index":1865,"title":{},"body":{"classes/Filters.html":{},"injectables/StatusService.html":{}}}],["tasks.routing",{"_index":4102,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks/dialogs/task/task.dialog",{"_index":3995,"title":{},"body":{"injectables/TaskService.html":{}}}],["tasks/enums/task",{"_index":3838,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{}}}],["tasks/interfaces/schedule.interface",{"_index":3173,"title":{},"body":{"components/SchedulePage.html":{},"injectables/TaskService.html":{}}}],["tasks/interfaces/status.interface",{"_index":82,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["tasks/interfaces/task.interface",{"_index":1861,"title":{},"body":{"classes/Filters.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{}}}],["tasks/services/status.service",{"_index":3843,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["tasks/services/task.service",{"_index":794,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["taskservice",{"_index":555,"title":{"injectables/TaskService.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["tasksmodule",{"_index":4079,"title":{"modules/TasksModule.html":{}},"body":{"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksroutingmodule",{"_index":4083,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tasktype",{"_index":3841,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["tasktype.epic",{"_index":4069,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["tasktype.issue",{"_index":4064,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["tasktype.task",{"_index":3818,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{}}}],["tasktype.user_story",{"_index":4060,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["tasktypeicon",{"_index":4044,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["tasktypeiconpipe",{"_index":4043,"title":{"pipes/TaskTypeIconPipe.html":{}},"body":{"pipes/TaskTypeIconPipe.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["tasktypepipe",{"_index":4051,"title":{"pipes/TaskTypePipe.html":{}},"body":{"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["tasktypes",{"_index":3803,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["taskwithadditionaldata",{"_index":3788,"title":{"interfaces/TaskWithAdditionalData.html":{}},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["td",{"_index":4271,"title":{},"body":{"components/TextareaComponent.html":{}}}],["temp",{"_index":2970,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["template.class",{"_index":3728,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["template.class.ts",{"_index":3767,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["template.class.ts:12",{"_index":3772,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["template.class.ts:16",{"_index":3771,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["template.class.ts:5",{"_index":3770,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["template.match(/(?]*(?=>)/g)?.[0",{"_index":4131,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["templatedecoratorconfig",{"_index":4106,"title":{"interfaces/TemplateDecoratorConfig.html":{}},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["templateref",{"_index":2448,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["test",{"_index":1700,"title":{},"body":{"classes/Enum.html":{},"injectables/GitIntegrationService.html":{}}}],["testenum",{"_index":1685,"title":{},"body":{"classes/Enum.html":{}}}],["testing",{"_index":2200,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{}}}],["testing.helper.ts",{"_index":4555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["testngcontrol",{"_index":1097,"title":{"classes/TestNgControl.html":{}},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{}}}],["tests",{"_index":1697,"title":{},"body":{"classes/Enum.html":{},"index.html":{},"additional-documentation/continuos-integration.html":{}}}],["tests/helpers/ng",{"_index":2199,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["text",{"_index":318,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"interfaces/EmojiToken.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/OptionComponent.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/localization.html":{}}}],["textarea",{"_index":4148,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea'},{'name",{"_index":240,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["textarea.component.html",{"_index":4150,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea.component.scss",{"_index":4149,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea.theme",{"_index":4204,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textareacomponent",{"_index":239,"title":{"components/TextareaComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["th",{"_index":4272,"title":{},"body":{"components/TextareaComponent.html":{}}}],["theirs",{"_index":4600,"title":{},"body":{"miscellaneous/functions.html":{}}}],["theme",{"_index":4219,"title":{},"body":{"components/TextareaComponent.html":{}}}],["theory",{"_index":4711,"title":{},"body":{"license.html":{}}}],["this._args",{"_index":3776,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["this._assignee",{"_index":2204,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this._checkifisrequired",{"_index":1118,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this._config",{"_index":3734,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this._config.config.selector",{"_index":3756,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this._config.props",{"_index":3757,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this._config.template.props",{"_index":3758,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this._context",{"_index":2453,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["this._context.nglet",{"_index":2455,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["this._control",{"_index":4146,"title":{},"body":{"classes/TestNgControl.html":{}}}],["this._filters",{"_index":1888,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this._icon",{"_index":2146,"title":{},"body":{"components/IconComponent.html":{}}}],["this._initcheckfortouch",{"_index":1117,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this._initialized",{"_index":2736,"title":{},"body":{"classes/Monaco.html":{}}}],["this._isbuttondisabled",{"_index":4305,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this._isopen",{"_index":2394,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["this._meta",{"_index":1818,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._meta.argtypes",{"_index":1824,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._meta.argtypes[property",{"_index":1834,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._meta.component.prototype[property",{"_index":1831,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._meta.decorators",{"_index":1819,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._meta.metadata",{"_index":1821,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._meta.selector",{"_index":1847,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._meta.title",{"_index":1843,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._persistentkey",{"_index":2980,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["this._projectid",{"_index":2344,"title":{},"body":{"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{}}}],["this._required",{"_index":1105,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this._story",{"_index":3735,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.activatedroute.data.subscribe",{"_index":2710,"title":{},"body":{"components/MockPage.html":{}}}],["this.activatedroute.snapshot.params",{"_index":619,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/MemberListComponent.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.activatedroute.snapshot.queryparams",{"_index":939,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/GithubIntegrationPage.html":{}}}],["this.active",{"_index":2860,"title":{},"body":{"components/NavElementComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["this.activeworkspace",{"_index":2914,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.add(key",{"_index":1495,"title":{},"body":{"classes/ESet.html":{}}}],["this.addcode(config.code",{"_index":3744,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.adddefaulttemplate",{"_index":3747,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.adddescription(config.description",{"_index":3742,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.addprops(this.props",{"_index":3749,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.addtemplate(config.html",{"_index":3746,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.afterclosed",{"_index":1405,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.afterclosed$.complete",{"_index":1399,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.afterclosed$.next(dialogresult",{"_index":1398,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.afteropened",{"_index":1404,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.afteropened$.complete",{"_index":1400,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.alert(data",{"_index":1482,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.animationname",{"_index":3561,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.apiservice",{"_index":2063,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/auth/delete",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.delete(`/auth/delete/confirm",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.delete(`/project/${projectid",{"_index":3006,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/integration/github",{"_index":2067,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/member",{"_index":2686,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/status/${status.id",{"_index":3676,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/task/${taskid",{"_index":4010,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.delete(`/session/${id",{"_index":3327,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.apiservice.delete(`/user/integration/github/${githubaccountid",{"_index":2066,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/workspace/${id}`).pipe(this.validate('delete",{"_index":4470,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.get('/user/integration/github/repository",{"_index":2061,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get('/user/integration/github/repository').pipe",{"_index":2046,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get('/workspace').pipe",{"_index":3011,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.get(`/auth/me",{"_index":4322,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.get(`/project/${projectid",{"_index":3005,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.get(`/project/${projectid}/integration/git/issue",{"_index":2070,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get(`/project/${projectid}/integration/git/pull",{"_index":2071,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get(`/project/${projectid}/member",{"_index":2684,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.get(`/project/${projectid}/status",{"_index":3672,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.get(`/project/${projectid}/status/${statusid",{"_index":3673,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.get(`/project/${projectid}/task`).subscribe((tasks",{"_index":4003,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.get(`/session",{"_index":3326,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.apiservice.get(`/workspace",{"_index":4472,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.get(`/workspace/${id",{"_index":4469,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.post('/project",{"_index":3008,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.post(`/auth/delete/recover",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/login",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/logout",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/password/recover",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/password/reset",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/register",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/project/${projectid}/integration/github",{"_index":2062,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/project/${projectid}/status",{"_index":3674,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.post(`/project/${projectid}/task",{"_index":4006,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.post(`/project/member",{"_index":2689,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.post(`/user/integration/github",{"_index":2059,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/workspace",{"_index":4473,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.put(`/auth/edit",{"_index":4321,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.put(`/project/${project.id",{"_index":3007,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.put(`/project/${projectid}/member",{"_index":2685,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.put(`/project/${projectid}/status/${status.id",{"_index":3675,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.put(`/project/${projectid}/task/${task.id",{"_index":4009,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.put(`/project/${projectid}/task/${taskid",{"_index":4042,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.put(`/project/${projectid}/workspace/${newworkspaceid",{"_index":3010,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.put(`/workspace/${workspace.id",{"_index":4471,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiurl",{"_index":384,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.assigneecolor",{"_index":2205,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.assigneecontrol.valuechanges.subscribe((assignee",{"_index":3926,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.authservice",{"_index":944,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.authservice.deleteaccount().subscribe",{"_index":3340,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.authservice.deleteaccountconfirmation(token).subscribe",{"_index":1276,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["this.authservice.isloggedin",{"_index":2478,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["this.authservice.logout().subscribe",{"_index":3138,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["this.authservice.recoveraccount().subscribe",{"_index":3139,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["this.authservice.resetpassword(this.form.value).subscribe",{"_index":1921,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["this.authservice.resetpassword(this.form.value.email).subscribe",{"_index":3339,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.beforeclosed",{"_index":1406,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.beforeclosed$.complete",{"_index":1401,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.beforeclosed$.next(dialogresult",{"_index":1396,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.board",{"_index":623,"title":{},"body":{"components/BoardPage.html":{}}}],["this.cdref.detectchanges",{"_index":3251,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.changeddate.setvalue(this.changedate(value",{"_index":2319,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.changeddate.valuechanges.subscribe((date",{"_index":2316,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.changelanguage",{"_index":3420,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["this.clearcomponent",{"_index":1324,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.close",{"_index":2222,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.closenavelement",{"_index":2862,"title":{},"body":{"components/NavElementComponent.html":{}}}],["this.closeprofile",{"_index":4310,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.closeworkspace",{"_index":2916,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.color",{"_index":3554,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.compare(option.value",{"_index":3249,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.confirm",{"_index":1483,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.control",{"_index":1121,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.disable",{"_index":1134,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.enable",{"_index":1135,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.errors",{"_index":1114,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.markastouched",{"_index":1132,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.setvalue('create",{"_index":2347,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["this.control.setvalue('detach",{"_index":2348,"title":{},"body":{"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{}}}],["this.control.setvalue(_editor.getvalue",{"_index":4239,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.control.setvalue(formvalue",{"_index":1899,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.control.setvalue(null",{"_index":2367,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["this.control.setvalue(option?.value",{"_index":3263,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.control.setvalue(this.changedate(date",{"_index":2317,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.control.value",{"_index":1113,"title":{},"body":{"components/ControlAccessor.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["this.control.valuechanges.subscribe",{"_index":3243,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.create(projectid",{"_index":4028,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.create(task.projectid",{"_index":4024,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.createinjector(data",{"_index":1321,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.createsubscription",{"_index":1182,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["this.createsubscription?.closed",{"_index":1181,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["this.currentheight",{"_index":2395,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["this.data",{"_index":94,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.data.projectid",{"_index":99,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.data.variant",{"_index":286,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["this.data.workspaceid",{"_index":97,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.delete(key",{"_index":1494,"title":{},"body":{"classes/ESet.html":{}}}],["this.delete(projectid",{"_index":4013,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.deleteaccount(token",{"_index":1275,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["this.destroy$.complete",{"_index":1137,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.destroy$.next(null",{"_index":1136,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.dialogref.close([formvalues.email",{"_index":107,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["this.dialogref.close(false",{"_index":108,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.dialogref.close(formvalues",{"_index":3859,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.dialogref.close(true",{"_index":324,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["this.dialogs$.getvalue().size",{"_index":1462,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogs$.next(this.dialogsmap",{"_index":1475,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogservice",{"_index":666,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"injectables/TaskService.html":{}}}],["this.dialogservice.closeall",{"_index":1750,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.dialogservice.confirmprojectdelete(project).subscribe",{"_index":2922,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["this.dialogservice.confirmworkspacedelete(this.workspace).subscribe",{"_index":2924,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.dialogservice.confirmworkspacedelete(workspace).subscribe",{"_index":4489,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.dialogservice.openerrordialog($localize`your",{"_index":1753,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.dialogservice.registeroutlet(outlet",{"_index":1320,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.dialogsmap",{"_index":1451,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogsmap.delete(uid",{"_index":1474,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogsmap.foreach((dialog",{"_index":1476,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogsmap.set(uid",{"_index":1472,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.disableeditingfunctions",{"_index":1822,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this.duration",{"_index":3557,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.editor",{"_index":4240,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.editor?.executeselectionedits",{"_index":4248,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.editor?.focus",{"_index":4249,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.editproject",{"_index":1541,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.editprojectwithworkspace(newworkspaceid",{"_index":1540,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.el.nativeelement.__ngcontext__[33].focus",{"_index":1914,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["this.elementref.nativeelement.focus",{"_index":876,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.error",{"_index":2505,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.filters.entries",{"_index":1894,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filters.push(filters.only_my_tasks(user.id",{"_index":3913,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.filterscontrol.valuechanges.subscribe((filters",{"_index":3914,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.focused",{"_index":2277,"title":{},"body":{"components/InputComponent.html":{}}}],["this.form",{"_index":1885,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.form.addcontrol('id",{"_index":1530,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.form.addcontrol('workspaceid",{"_index":1177,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["this.form.get('newworkspaceid')?.value",{"_index":1539,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.form.get('projectid')?.valuechanges.subscribe(this.onprojectidchange.bind(this",{"_index":3846,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.get('workspaceid')?.valuechanges.subscribe(this.onworkspaceidchange.bind(this",{"_index":3845,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.get(field)?.invalid",{"_index":3094,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.get(field)?.markastouched",{"_index":3092,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.get(field)?.updatevalueandvalidity",{"_index":3093,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.invalid",{"_index":105,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.markallastouched",{"_index":103,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue",{"_index":95,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue(project",{"_index":1562,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.form.patchvalue(response",{"_index":3337,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.form.patchvalue(task",{"_index":3844,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue(workspace",{"_index":1536,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.form.updatevalueandvalidity",{"_index":104,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.valid",{"_index":943,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.form.value",{"_index":102,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.value.password",{"_index":946,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["this.form.value.repository",{"_index":2437,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.form?.controls[index",{"_index":1892,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.getcolumnscontainerheight(this.idof(board[0",{"_index":688,"title":{},"body":{"components/BoardPage.html":{}}}],["this.getconnectedprojects(account).pipe(take(1",{"_index":1975,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.getselectionedits(edits",{"_index":3316,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["this.getsubscription",{"_index":1534,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.getsubscription.unsubscribe",{"_index":1548,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.githubaccounts",{"_index":1971,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.githubintegrationservice.isownerofrepository(&#39;@czemar/cli&#39",{"_index":2031,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.githubintegrationservice.isownerofrepository('@czemar/cli",{"_index":2073,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.githubintegrationservice.startgithubintegration",{"_index":2041,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.gitintegrationservice",{"_index":1981,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.deleteconnectedgithubaccount(account.id).subscribe",{"_index":1977,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.getconnectedgithubaccounts().pipe",{"_index":1972,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.getgithubintegration().subscribe((integration",{"_index":2433,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.gitintegrationservice.githubissuelist(projectid",{"_index":2352,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["this.gitintegrationservice.githubpulllist(projectid",{"_index":2369,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["this.gitintegrationservice.hasgithubintegration(projectid!).subscribe((value",{"_index":3857,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.gitintegrationservice.postgithubintegration(installation_id).subscribe",{"_index":2090,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["this.gitintegrationservice.startgithubintegration().subscribe",{"_index":2430,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.handleerror(e",{"_index":2499,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.has(key",{"_index":1493,"title":{},"body":{"classes/ESet.html":{}}}],["this.hide",{"_index":1332,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.host.viewcontainerref",{"_index":1327,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.httpclient.request(method",{"_index":383,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.image",{"_index":2711,"title":{},"body":{"components/MockPage.html":{}}}],["this.injector",{"_index":1336,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.input.input.nativeelement.clientwidth",{"_index":3241,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.input.nativeelement",{"_index":4209,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.isgithubintegrationavailable",{"_index":3858,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.isopen",{"_index":2225,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(false",{"_index":2224,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(true",{"_index":2223,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(val",{"_index":2216,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.value",{"_index":2217,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isownerofrepository(project.githubintegration",{"_index":2080,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.issues",{"_index":2351,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["this.list(projectid).pipe",{"_index":2690,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.list(projectid).pipe(take(1",{"_index":4029,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.get(projectid",{"_index":4001,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.has(projectid",{"_index":4000,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.set(projectid",{"_index":4002,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.loadcomponent(component",{"_index":1325,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.loadgithubintegration",{"_index":1969,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.loadissues",{"_index":2345,"title":{},"body":{"components/InputIssueComponent.html":{}}}],["this.loadoptions",{"_index":3242,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.loadparamsfromurl",{"_index":92,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.loadproject(projectid",{"_index":1532,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.loadpullrequests",{"_index":2366,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["this.loadrepositories",{"_index":2431,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.loadworkspace(workspaceid",{"_index":1576,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["this.loadworkspaces",{"_index":4487,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.loginsubscription",{"_index":2496,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginsubscription.closed",{"_index":2497,"title":{},"body":{"components/LoginPage.html":{}}}],["this.m_w",{"_index":3054,"title":{},"body":{"classes/Random.html":{}}}],["this.m_z",{"_index":3056,"title":{},"body":{"classes/Random.html":{}}}],["this.mask",{"_index":3055,"title":{},"body":{"classes/Random.html":{}}}],["this.matdialog.open(component",{"_index":1469,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.memberlist",{"_index":1180,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/MemberListComponent.html":{}}}],["this.members",{"_index":629,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.members$.next(members",{"_index":2211,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.members$.next(membersarray",{"_index":2214,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.memberservice.add(result",{"_index":1546,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.memberservice.add(this.memberlist",{"_index":1184,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.memberservice.list(projectid",{"_index":2659,"title":{},"body":{"components/MemberListComponent.html":{}}}],["this.memberservice.list(projectid).pipe",{"_index":3908,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.memberservice.list(projectid).pipe(take(1",{"_index":4030,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.memberservice.map(projectid",{"_index":630,"title":{},"body":{"components/BoardPage.html":{}}}],["this.memberservice.remove(this.projectid",{"_index":2660,"title":{},"body":{"components/MemberListComponent.html":{}}}],["this.mergeconfig",{"_index":3751,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.mode",{"_index":4241,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.name",{"_index":2152,"title":{},"body":{"components/IconComponent.html":{}}}],["this.ngcontrol",{"_index":1124,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":1116,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol?.control",{"_index":1109,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol?.name?.tostring",{"_index":1106,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.onprojectidchange(projectid",{"_index":3848,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.onworkspaceidchange(workspaceid",{"_index":3847,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.open",{"_index":2226,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.open(alertdialog",{"_index":1479,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.opennavelement",{"_index":2861,"title":{},"body":{"components/NavElementComponent.html":{}}}],["this.openprofile",{"_index":4311,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.openworkspace",{"_index":2915,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.outlets.get(outlet",{"_index":1464,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.outlets.set(outlet",{"_index":1478,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.output.nativeelement",{"_index":4244,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.output.nativeelement.innerhtml",{"_index":4242,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.overlay?.nativeelement.contains(e.target",{"_index":2220,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.overlayminwidth",{"_index":3240,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.prefix",{"_index":2150,"title":{},"body":{"components/IconComponent.html":{}}}],["this.project",{"_index":621,"title":{},"body":{"components/BoardPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/TaskListPage.html":{}}}],["this.project$.subscribe((project",{"_index":1561,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.project$.subscribe((workspace",{"_index":1535,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.projectid",{"_index":620,"title":{},"body":{"components/BoardPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.projectid).subscribe",{"_index":3651,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.projectid]).subscribe",{"_index":1547,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.projectlist",{"_index":3849,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.projects",{"_index":3031,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["this.projectservice",{"_index":1542,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{}}}],["this.projectservice.create(this.form.value).subscribe((response",{"_index":1183,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.projectservice.delete(project.id).subscribe",{"_index":2923,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["this.projectservice.get(id",{"_index":1533,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.projectservice.get(projectid",{"_index":622,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.projectservice.get(projectid).pipe(map((project",{"_index":2068,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.projectservice.update(this.form.value).subscribe",{"_index":1544,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.propertypredicate(p",{"_index":1829,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this.props",{"_index":3748,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.pulls",{"_index":2368,"title":{},"body":{"components/InputPullRequestComponent.html":{}}}],["this.queryoptions",{"_index":3245,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.queryoptions.foreach((option",{"_index":3246,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.queryoptions?.changes.subscribe",{"_index":3244,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.ref.nativeelement.innertext",{"_index":2952,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.registersubscription",{"_index":3097,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registersubscription.closed",{"_index":3098,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.repositorylist",{"_index":2434,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.repositorylistloaded",{"_index":2432,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.request('delete",{"_index":390,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('get",{"_index":388,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('patch",{"_index":392,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('post",{"_index":389,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('put",{"_index":391,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.resetsubscription",{"_index":941,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["this.resetsubscription.closed",{"_index":942,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["this.router",{"_index":2917,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.router.navigate",{"_index":1545,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/LoginPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["this.router.navigate(['/']).then",{"_index":1212,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["this.router.navigate(['/auth/delete",{"_index":1752,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.router.navigate(['/auth/login",{"_index":948,"title":{},"body":{"components/ChangePasswordPage.html":{},"interceptors/ErrorInterceptor.html":{},"guards/LoggedInUsersGuard.html":{}}}],["this.router.navigate(['/auth/restore",{"_index":2502,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigate([this.workspaceid]).then",{"_index":1186,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.router.routerstate.snapshot",{"_index":3151,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["this.routerextensions.snapshot.params",{"_index":96,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.sameasselected(option",{"_index":3262,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.savestate",{"_index":2972,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["this.select(this.queryoptions?.get(index",{"_index":3248,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selected$.getvalue",{"_index":3253,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selected$.next(currentlabel",{"_index":3258,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selected$.value.optioncomponent",{"_index":3259,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selected$.value.optioncomponent?.value",{"_index":3260,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.sessionservice.delete(id).subscribe",{"_index":3494,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.sessionservice.list",{"_index":3478,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.sessionslist",{"_index":3477,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.setactiveoption(option",{"_index":3250,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.setanimationname('close",{"_index":3558,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.show",{"_index":1331,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.showarrow$.next(boolean(this.listelement?.nativeelement.children.length",{"_index":2863,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["this.size",{"_index":2156,"title":{},"body":{"components/IconComponent.html":{}}}],["this.snackbars$.next(map",{"_index":3595,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbars$.next(new",{"_index":3597,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbars$.value",{"_index":3593,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbarservice.close(this.uid",{"_index":3559,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.snackbarservice.show($localize`task",{"_index":4007,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.snackbarservice.snackbars",{"_index":3579,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["this.stage",{"_index":3095,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.state$.complete",{"_index":1402,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.state$.next(matdialogstate.closed",{"_index":1397,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.state$.next(matdialogstate.closing",{"_index":1395,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.state$.next(matdialogstate.open",{"_index":1403,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.state$.value",{"_index":1412,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.statuses$.next(statuses",{"_index":3646,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.statuslist",{"_index":625,"title":{},"body":{"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["this.statuslist$.subscribe((list",{"_index":3911,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.statuslist$.subscribe((statuses",{"_index":3854,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.statuslist$.subscribe((statuslist",{"_index":628,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslist.find((status",{"_index":631,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.statuslist[newstatusindex",{"_index":642,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslist[previousstatusindex",{"_index":640,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslistsubscription",{"_index":627,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslistsubscription?.unsubscribe",{"_index":634,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statusmap",{"_index":3647,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.statusservice.board(projectid",{"_index":624,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statusservice.list(projectid",{"_index":3853,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["this.statusservice.listwithtasks(projectid",{"_index":626,"title":{},"body":{"components/BoardPage.html":{}}}],["this.targetheight}px",{"_index":2396,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["this.task).subscribe",{"_index":797,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["this.task).subscribe((task",{"_index":800,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["this.taskid",{"_index":2227,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.tasklist",{"_index":3909,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.taskmap.get(this.idof(board[0",{"_index":690,"title":{},"body":{"components/BoardPage.html":{}}}],["this.taskmap.set(this.idof(board[0",{"_index":689,"title":{},"body":{"components/BoardPage.html":{}}}],["this.taskservice",{"_index":2228,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.taskservice.changestatus(status.id",{"_index":3650,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.taskservice.create(this.projectid",{"_index":680,"title":{},"body":{"components/BoardPage.html":{}}}],["this.taskservice.deletewithconfirmation(this.projectid",{"_index":796,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.list(projectid",{"_index":3910,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.taskservice.list(projectid)]).pipe",{"_index":3678,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.taskservice.opencreatenewtaskdialog().subscribe",{"_index":4308,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.taskservice.opencreatesubtaskdialog(this.projectid",{"_index":799,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.openedittaskdialog(this.projectid",{"_index":798,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.update(this.projectid",{"_index":653,"title":{},"body":{"components/BoardPage.html":{}}}],["this.token",{"_index":940,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["this.touched$.complete",{"_index":1138,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.touched$.next(true",{"_index":1133,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.unauthorizedinarow",{"_index":1749,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.update(projectid",{"_index":4022,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.updatesubscription",{"_index":1538,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.updatesubscription.unsubscribe",{"_index":1549,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.updatesubscription?.closed",{"_index":1537,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.userservice.getmyself().subscribe",{"_index":2494,"title":{},"body":{"components/LoginPage.html":{}}}],["this.userservice.getmyself().subscribe((response",{"_index":3336,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.userservice.getmyself().subscribe((user",{"_index":3912,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.userservice.update(this.form.value).subscribe",{"_index":3338,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.width",{"_index":1337,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.workspace",{"_index":1175,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{}}}],["this.workspace$.pipe",{"_index":3032,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["this.workspace$.subscribe((workspace",{"_index":1577,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["this.workspace.id",{"_index":2920,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.workspaceid",{"_index":1174,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ProjectsListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.workspacelist",{"_index":3513,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.workspacelist$.subscribe((workspaces",{"_index":1563,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.workspaces",{"_index":4488,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.workspaceservice",{"_index":3850,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.workspaceservice.create(this.form.value).subscribe",{"_index":1211,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["this.workspaceservice.delete(this.workspace.id).subscribe",{"_index":2925,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.workspaceservice.delete(workspace.id).subscribe",{"_index":4490,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.workspaceservice.get(id",{"_index":1529,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.workspaceservice.get(workspaceid",{"_index":1176,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/ProjectsListPage.html":{}}}],["this.workspaceservice.list",{"_index":1527,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/WorkspacesListPage.html":{}}}],["this.workspaceservice.list().pipe",{"_index":4303,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.workspaceservice.update(this.form.value).subscribe",{"_index":1578,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["three",{"_index":1688,"title":{},"body":{"classes/Enum.html":{}}}],["through",{"_index":3134,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["throw",{"_index":1407,"title":{},"body":{"classes/DialogRef.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{}}}],["throwerror",{"_index":1743,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["time",{"_index":2303,"title":{},"body":{"components/InputDateTimeComponent.html":{},"components/SettingsAccountPage.html":{}}}],["time'},{'name",{"_index":174,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["time.component",{"_index":2570,"title":{},"body":{"modules/MainModule.html":{}}}],["time.component.html",{"_index":2305,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.scss",{"_index":2304,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts",{"_index":2302,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:13",{"_index":2310,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:16",{"_index":2309,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:18",{"_index":2314,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:20",{"_index":2308,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:26",{"_index":2312,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:36",{"_index":2311,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time/input",{"_index":2301,"title":{},"body":{"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{}}}],["timeline",{"_index":3179,"title":{},"body":{"components/SchedulePage.html":{}}}],["title",{"_index":267,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"injectables/DialogService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{}}}],["title>app",{"_index":710,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["todo",{"_index":3907,"title":{},"body":{"components/TaskListPage.html":{}}}],["toggle",{"_index":552,"title":{},"body":{"components/BoardPage.html":{},"classes/ESet.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["toggle(board",{"_index":578,"title":{},"body":{"components/BoardPage.html":{}}}],["toggle(key",{"_index":1490,"title":{},"body":{"classes/ESet.html":{}}}],["toggleendandstartofeachselection",{"_index":2757,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["toggleendandstartofeachselection(editor",{"_index":2788,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["togglenavelement",{"_index":2846,"title":{},"body":{"components/NavElementComponent.html":{}}}],["toggleprofile",{"_index":4285,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["toggleworkspace",{"_index":2883,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["token",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/EmojiToken.html":{},"interfaces/RequestOptions.html":{}}}],["token.emojitype",{"_index":1669,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["tokenizer",{"_index":1642,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["tokenizer(src",{"_index":1648,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["tool",{"_index":4275,"title":{},"body":{"components/TextareaComponent.html":{},"additional-documentation/continuos-integration.html":{}}}],["tools",{"_index":4274,"title":{},"body":{"components/TextareaComponent.html":{},"additional-documentation/localization.html":{}}}],["top",{"_index":111,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["tort",{"_index":4715,"title":{},"body":{"license.html":{}}}],["touched",{"_index":1019,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["touched.ng",{"_index":2296,"title":{},"body":{"components/InputComponent.html":{}}}],["tracksnackbartuple",{"_index":3575,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["tracksnackbartuple(_index",{"_index":3577,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["transferarrayitem",{"_index":597,"title":{},"body":{"components/BoardPage.html":{}}}],["transform",{"_index":712,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["transform(value",{"_index":3614,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}}}],["transformed",{"_index":4410,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["transition",{"_index":716,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["translatable",{"_index":4830,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translate",{"_index":2717,"title":{},"body":{"components/MockPage.html":{}}}],["translated",{"_index":4801,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translatex(0",{"_index":3571,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["translatex(100",{"_index":3570,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["translatey(100",{"_index":4443,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["translatey(calc($height",{"_index":2292,"title":{},"body":{"components/InputComponent.html":{}}}],["translating",{"_index":4827,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translation",{"_index":4819,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translations",{"_index":4826,"title":{},"body":{"additional-documentation/localization.html":{}}}],["transparent",{"_index":2289,"title":{},"body":{"components/InputComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["trim().replace",{"_index":4134,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["true",{"_index":300,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"modules/DashboardRoutingModule.html":{},"components/DialogOutletComponent.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"classes/Marked.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"classes/StoryPageConfig.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{}}}],["try",{"_index":4234,"title":{},"body":{"components/TextareaComponent.html":{}}}],["trying",{"_index":660,"title":{},"body":{"components/BoardPage.html":{}}}],["ts",{"_index":4760,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["tslib",{"_index":4520,"title":{},"body":{"dependencies.html":{}}}],["tweaks",{"_index":4356,"title":{},"body":{"classes/UserUtils.html":{}}}],["two",{"_index":1687,"title":{},"body":{"classes/Enum.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectLabel.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/architecture.html":{}}}],["type.enum",{"_index":3842,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{}}}],["type.enum.ts",{"_index":4536,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.helper",{"_index":1940,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["type.helper.ts",{"_index":4531,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.pipe",{"_index":4101,"title":{},"body":{"modules/TasksModule.html":{}}}],["type.pipe.ts",{"_index":4052,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["type.pipe.ts:10",{"_index":4054,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["type.pipe.ts:12",{"_index":4055,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["type.pipe.ts:9",{"_index":4053,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["type[1",{"_index":3861,"title":{},"body":{"components/TaskDialog.html":{}}}],["typealiases",{"_index":4733,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1830,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"components/IconComponent.html":{},"classes/StoryPageConfig.html":{}}}],["typescript",{"_index":1679,"title":{},"body":{"classes/Enum.html":{}}}],["typings",{"_index":3282,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["typo",{"_index":826,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["ua",{"_index":3416,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{},"additional-documentation/localization.html":{}}}],["uaparser",{"_index":3474,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser(agent",{"_index":3489,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser.getbrowser().name",{"_index":3492,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser.getos().name",{"_index":3491,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["ui",{"_index":1008,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"additional-documentation/localization.html":{}}}],["uid",{"_index":1471,"title":{},"body":{"injectables/DialogService.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{}}}],["uk",{"_index":3415,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["ukraine)configuration",{"_index":4814,"title":{},"body":{"additional-documentation/localization.html":{}}}],["ukrainian",{"_index":4813,"title":{},"body":{"additional-documentation/localization.html":{}}}],["ul",{"_index":4265,"title":{},"body":{"components/TextareaComponent.html":{}}}],["unassigned",{"_index":3972,"title":{},"body":{"injectables/TaskService.html":{}}}],["unauthorized",{"_index":4790,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["unauthorizedinarow",{"_index":1730,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["undefined",{"_index":1666,"title":{},"body":{"interfaces/EmojiToken.html":{},"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/functions.html":{}}}],["underline",{"_index":2322,"title":{},"body":{"components/InputDateTimeComponent.html":{},"components/TextareaComponent.html":{}}}],["unicodetotwemoji",{"_index":1593,"title":{},"body":{"classes/Emoji.html":{}}}],["unicodetotwemoji(source",{"_index":1609,"title":{},"body":{"classes/Emoji.html":{}}}],["unified",{"_index":1596,"title":{},"body":{"classes/Emoji.html":{}}}],["unique",{"_index":3604,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["unit",{"_index":4633,"title":{},"body":{"index.html":{}}}],["united",{"_index":4804,"title":{},"body":{"additional-documentation/localization.html":{}}}],["units",{"_index":2110,"title":{},"body":{"components/IconComponent.html":{}}}],["universal",{"_index":2516,"title":{},"body":{"modules/MainModule.html":{}}}],["unknown",{"_index":1901,"title":{},"body":{"components/FiltersComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsSessionsPage.html":{},"pipes/TaskTypePipe.html":{}}}],["unsubscribe",{"_index":1514,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["unsupported",{"_index":4347,"title":{},"body":{"classes/UserUtils.html":{}}}],["untildestroy",{"_index":3234,"title":{},"body":{"components/SelectComponent.html":{}}}],["untildestroyed",{"_index":1559,"title":{},"body":{"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{}}}],["untildestroyed(this",{"_index":2219,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{}}}],["unused",{"_index":4190,"title":{},"body":{"components/TextareaComponent.html":{}}}],["up",{"_index":4607,"title":{},"body":{"index.html":{}}}],["update",{"_index":1010,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["update(moduser",{"_index":4318,"title":{},"body":{"injectables/UserService.html":{}}}],["update(project",{"_index":3002,"title":{},"body":{"injectables/ProjectService.html":{}}}],["update(projectid",{"_index":3667,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["update(this.form.value",{"_index":1566,"title":{},"body":{"components/EditProjectPage.html":{}}}],["update(workspace",{"_index":4461,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["updated",{"_index":3669,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["updatedtask",{"_index":4021,"title":{},"body":{"injectables/TaskService.html":{}}}],["updateheight",{"_index":4223,"title":{},"body":{"components/TextareaComponent.html":{}}}],["updateposition",{"_index":1349,"title":{},"body":{"classes/DialogRef.html":{}}}],["updateposition(position",{"_index":1388,"title":{},"body":{"classes/DialogRef.html":{}}}],["updates",{"_index":1391,"title":{},"body":{"classes/DialogRef.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["updatesize",{"_index":1350,"title":{},"body":{"classes/DialogRef.html":{}}}],["updatesize(width",{"_index":1392,"title":{},"body":{"classes/DialogRef.html":{}}}],["updatesubscription",{"_index":1498,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["updating",{"_index":1525,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["upload",{"_index":3125,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["upper",{"_index":242,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["uppercase",{"_index":3188,"title":{},"body":{"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{}}}],["uppernavigationcomponent",{"_index":241,"title":{"components/UpperNavigationComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["url",{"_index":351,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["url('../../../../assets/metadata/logo_with_name.svg",{"_index":3515,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["url('/assets/metadata/logo_with_name.svg",{"_index":955,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["usage",{"_index":1961,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["use",{"_index":370,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/EmojiToken.html":{},"interfaces/ErrorValidationTree.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"license.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["useclass",{"_index":1096,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{}}}],["used",{"_index":308,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["useful",{"_index":4363,"title":{},"body":{"classes/Utils.html":{}}}],["user",{"_index":659,"title":{"interfaces/User.html":{}},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"additional-documentation/architecture.html":{}}}],["user_story",{"_index":3787,"title":{},"body":{"interfaces/Task.html":{},"pipes/TaskTypeIconPipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"miscellaneous/enumerations.html":{}}}],["useragent",{"_index":4328,"title":{},"body":{"interfaces/UserSession.html":{}}}],["userdata",{"_index":2722,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["userid",{"_index":3971,"title":{},"body":{"injectables/TaskService.html":{}}}],["username",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{}}}],["users.guard",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users.guard.ts",{"_index":2473,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["users.guard.ts:6",{"_index":2475,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["users.guard.ts:9",{"_index":2476,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["userservice",{"_index":2484,"title":{"injectables/UserService.html":{}},"body":{"components/LoginPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskListPage.html":{},"injectables/UserService.html":{}}}],["usersession",{"_index":3324,"title":{"interfaces/UserSession.html":{}},"body":{"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/UserSession.html":{}}}],["userutils",{"_index":2197,"title":{"classes/UserUtils.html":{}},"body":{"components/InputAssigneeComponent.html":{},"classes/UserUtils.html":{}}}],["userutils.getcolorbyid(assignee?.user.id",{"_index":2206,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["userutils.getcolorbyid(member.user.id",{"_index":2210,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["userwithprivileges",{"_index":2720,"title":{"interfaces/UserWithPrivileges.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["usevalue",{"_index":1334,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["using",{"_index":1409,"title":{},"body":{"classes/DialogRef.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["usuniecie",{"_index":3348,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["utilities",{"_index":4362,"title":{},"body":{"classes/Utils.html":{}}}],["utility",{"_index":1677,"title":{},"body":{"classes/Enum.html":{},"additional-documentation/architecture.html":{}}}],["utils",{"_index":2142,"title":{"classes/Utils.html":{}},"body":{"components/IconComponent.html":{},"classes/Utils.html":{}}}],["utils.isletter(character",{"_index":4392,"title":{},"body":{"classes/Utils.html":{}}}],["utils.regexindexof(value",{"_index":2148,"title":{},"body":{"components/IconComponent.html":{}}}],["utils.snakecase(this.name",{"_index":2158,"title":{},"body":{"components/IconComponent.html":{}}}],["uuid",{"_index":1459,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{},"dependencies.html":{}}}],["v",{"_index":1718,"title":{},"body":{"classes/Enum.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["v4",{"_index":1458,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{}}}],["val",{"_index":2196,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"miscellaneous/functions.html":{}}}],["valid",{"_index":1155,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"miscellaneous/functions.html":{}}}],["validate",{"_index":4452,"title":{},"body":{"injectables/WorkspaceService.html":{},"additional-documentation/architecture.html":{}}}],["validate(identifier",{"_index":4463,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["validation",{"_index":4399,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["validationerror",{"_index":1035,"title":{"interfaces/ValidationError.html":{}},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["validationerrorpipe",{"_index":2597,"title":{"pipes/ValidationErrorPipe.html":{}},"body":{"modules/MainModule.html":{},"pipes/ValidationErrorPipe.html":{}}}],["validationerrors",{"_index":1092,"title":{},"body":{"components/ControlAccessor.html":{}}}],["validator",{"_index":1123,"title":{},"body":{"components/ControlAccessor.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["validator.decorator",{"_index":4468,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["validator.decorator.ts",{"_index":1759,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"miscellaneous/functions.html":{}}}],["validator.decorator.ts:4",{"_index":1761,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["validator.name",{"_index":1126,"title":{},"body":{"components/ControlAccessor.html":{}}}],["validator.ts",{"_index":4798,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["validatorfn",{"_index":4577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":1119,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/ValidationError.html":{},"additional-documentation/architecture.html":{}}}],["value",{"_index":61,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["value.iconname",{"_index":2155,"title":{},"body":{"components/IconComponent.html":{}}}],["value.prefix",{"_index":2154,"title":{},"body":{"components/IconComponent.html":{}}}],["value.substring(0",{"_index":2151,"title":{},"body":{"components/IconComponent.html":{}}}],["value.substring(splitindex",{"_index":2153,"title":{},"body":{"components/IconComponent.html":{}}}],["value?.message",{"_index":4411,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["values",{"_index":1012,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["values(enumtype",{"_index":1706,"title":{},"body":{"classes/Enum.html":{}}}],["var",{"_index":119,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["variable",{"_index":2116,"title":{},"body":{"components/IconComponent.html":{},"miscellaneous/functions.html":{}}}],["variant",{"_index":303,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"injectables/DialogService.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"miscellaneous/enumerations.html":{}}}],["version",{"_index":2623,"title":{},"body":{"components/MainViewComponent.html":{},"properties.html":{}}}],["versions",{"_index":4647,"title":{},"body":{"index.html":{}}}],["via",{"_index":4635,"title":{},"body":{"index.html":{}}}],["view",{"_index":244,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["view'},{'name",{"_index":196,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["view.component",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{}}}],["view.component.html",{"_index":2622,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.scss",{"_index":2621,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.ts",{"_index":2620,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.ts:11",{"_index":2627,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.ts:13",{"_index":2624,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.ts:17",{"_index":2625,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view/main",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{}}}],["viewchild",{"_index":874,"title":{},"body":{"components/ButtonComponent.html":{},"components/DialogOutletComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["viewchild('btn",{"_index":871,"title":{},"body":{"components/ButtonComponent.html":{}}}],["viewchild('content",{"_index":2387,"title":{},"body":{"components/InputTaskPropertyComponent.html":{}}}],["viewchild('elementlist",{"_index":2857,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["viewchild('input",{"_index":2275,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["viewchild('openbelow",{"_index":4300,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["viewchild('output",{"_index":4185,"title":{},"body":{"components/TextareaComponent.html":{}}}],["viewchild('overlay",{"_index":2186,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["viewchild(viewcontainerdirective",{"_index":1309,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["viewcontainerdirective",{"_index":258,"title":{"directives/ViewContainerDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["viewcontainerref",{"_index":1326,"title":{},"body":{"components/DialogOutletComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"directives/ViewContainerDirective.html":{}}}],["viewcontainerref.clear",{"_index":1328,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["viewcontainerref.createcomponent(component",{"_index":1330,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["viewoptionscomponent",{"_index":243,"title":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["viewtomodelupdate",{"_index":4139,"title":{},"body":{"classes/TestNgControl.html":{}}}],["viewtomodelupdate(newvalue",{"_index":4141,"title":{},"body":{"classes/TestNgControl.html":{}}}],["viewvalue",{"_index":2942,"title":{},"body":{"components/OptionComponent.html":{}}}],["visibility",{"_index":2867,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["visible",{"_index":3562,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["visual",{"_index":2267,"title":{},"body":{"components/InputComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"additional-documentation/localization.html":{}}}],["visualize",{"_index":842,"title":{},"body":{"components/ButtonComponent.html":{}}}],["void",{"_index":53,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["vscode",{"_index":2928,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["vscode://vscode.git/clone?url=https://github.com/${project.githubintegration",{"_index":2927,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["w",{"_index":1651,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["want",{"_index":1039,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/DialogService.html":{},"interfaces/RequestOptions.html":{},"injectables/TaskService.html":{}}}],["warranties",{"_index":4684,"title":{},"body":{"license.html":{}}}],["wawrzyniak",{"_index":4661,"title":{},"body":{"license.html":{}}}],["way",{"_index":4718,"title":{},"body":{"license.html":{},"additional-documentation/localization.html":{}}}],["week",{"_index":3187,"title":{},"body":{"components/SchedulePage.html":{}}}],["weight",{"_index":2468,"title":{},"body":{"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/StatusLabelComponent.html":{}}}],["went",{"_index":1783,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["whether",{"_index":1702,"title":{},"body":{"classes/Enum.html":{},"license.html":{}}}],["white",{"_index":2320,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["width",{"_index":113,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["wikipedia",{"_index":4766,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["win",{"_index":2050,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["win.closed",{"_index":2056,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["window",{"_index":1619,"title":{},"body":{"classes/Emoji.html":{},"interfaces/ErrorValidationTree.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{}}}],["window.document.dispatchevent",{"_index":1055,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["window.location.reload",{"_index":1187,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["window.open",{"_index":2054,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["window.open(`https://github.dev/${project.githubintegration",{"_index":2926,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["window.open(link",{"_index":1978,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["window.open(url",{"_index":2051,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["witch",{"_index":2039,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["withcredentials",{"_index":387,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["within",{"_index":3140,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["without",{"_index":297,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/InputComponent.html":{},"license.html":{}}}],["withsubtasks",{"_index":3923,"title":{},"body":{"components/TaskListPage.html":{}}}],["wordbasedsuggestions",{"_index":4221,"title":{},"body":{"components/TextareaComponent.html":{}}}],["wordwrap",{"_index":4214,"title":{},"body":{"components/TextareaComponent.html":{}}}],["work",{"_index":2715,"title":{},"body":{"components/MockPage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["workflow",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["workspace",{"_index":77,"title":{"interfaces/Workspace.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["workspace'},{'name",{"_index":205,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["workspace.component",{"_index":2575,"title":{},"body":{"modules/MainModule.html":{}}}],["workspace.component.html",{"_index":2870,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.scss",{"_index":2869,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts",{"_index":2868,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:104",{"_index":2901,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:108",{"_index":2897,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:115",{"_index":2899,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:18",{"_index":2885,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:21",{"_index":2886,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:23",{"_index":2908,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:24",{"_index":2907,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:26",{"_index":2909,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:29",{"_index":2884,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:38",{"_index":2902,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:41",{"_index":2887,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:44",{"_index":2906,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:52",{"_index":2895,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:58",{"_index":2905,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:64",{"_index":2904,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:70",{"_index":2888,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:76",{"_index":2893,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:82",{"_index":2890,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:90",{"_index":2894,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:96",{"_index":2891,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.id",{"_index":1565,"title":{},"body":{"components/EditProjectPage.html":{},"components/WorkspacesListPage.html":{}}}],["workspace.name",{"_index":1486,"title":{},"body":{"injectables/DialogService.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{}}}],["workspace.page",{"_index":1235,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["workspace.page.html",{"_index":1206,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["workspace.page.scss",{"_index":1205,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["workspace.page.ts",{"_index":1204,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:22",{"_index":1573,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:23",{"_index":1209,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:27",{"_index":1575,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:30",{"_index":1207,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:32",{"_index":1574,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:36",{"_index":1569,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:43",{"_index":1208,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:58",{"_index":1571,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:69",{"_index":1572,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.projectswithprivileges.length).length",{"_index":4307,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspace.projectswithprivileges.map((project",{"_index":3034,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["workspace/create",{"_index":1203,"title":{},"body":{"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["workspace/edit",{"_index":1239,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditWorkspacePage.html":{}}}],["workspace/nav",{"_index":2574,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["workspaceid",{"_index":87,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/MemberListComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["workspacelist",{"_index":31,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["workspaces",{"_index":247,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["workspaces.filter((workspace",{"_index":4306,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspaces.find((workspace",{"_index":1564,"title":{},"body":{"components/EditProjectPage.html":{}}}],["workspaces.length",{"_index":4304,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspaces.reduce((projects",{"_index":3013,"title":{},"body":{"injectables/ProjectService.html":{}}}],["workspaceservice",{"_index":1149,"title":{"injectables/WorkspaceService.html":{}},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["workspaceslistpage",{"_index":246,"title":{"components/WorkspacesListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["world",{"_index":4759,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["world.module.ts",{"_index":4765,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["world/hello",{"_index":4764,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["wrapper",{"_index":909,"title":{},"body":{"components/CardComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{}}}],["wrappingstrategy",{"_index":4215,"title":{},"body":{"components/TextareaComponent.html":{}}}],["wrapwithdiv",{"_index":4109,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["wrapwithdiv(template",{"_index":4123,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["write",{"_index":1027,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writes",{"_index":1026,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writevalue",{"_index":988,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writevalue(value",{"_index":1024,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/InputIssueComponent.html":{},"components/InputPullRequestComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["wrong",{"_index":1784,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["wyslany",{"_index":3355,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["x",{"_index":2628,"title":{},"body":{"components/MainViewComponent.html":{},"components/SchedulePage.html":{}}}],["xl",{"_index":975,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["y",{"_index":1339,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{}}}],["yarn",{"_index":4620,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{}}}],["yes",{"_index":353,"title":{},"body":{"injectables/ApiService.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/PersistentMap.html":{},"classes/SelectionEditPlugin.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/functions.html":{}}}],["yyyy",{"_index":3394,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["z",{"_index":2149,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputTaskPropertyComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["ze",{"_index":3353,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["zgadzamy",{"_index":3346,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["zone.js",{"_index":4524,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["zostal",{"_index":3354,"title":{},"body":{"components/SettingsAccountPage.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddMemberDialog.html":{"url":"components/AddMemberDialog.html","title":"component - AddMemberDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddMemberDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-member-dialog\n            \n\n            \n                styleUrls\n                ./add-member.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-member.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMembers\n                            \n                            \n                                cancel\n                            \n                            \n                                loadParamsFromUrl\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: AddMemberDialogData, dialogRef: MatDialogRef, routerExtensions: RouterExtensionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AddMemberDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerExtensions\n                                                  \n                                                        \n                                                                        RouterExtensionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMembers\n                        \n                    \n                \n            \n            \n                \naddMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadParamsFromUrl\n                        \n                    \n                \n            \n            \n                \nloadParamsFromUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddMemberDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\n\nexport interface AddMemberDialogData {\n  workspaceId: number;\n  projectId?: number;\n}\n\n@Component({\n  selector: 'app-add-member-dialog',\n  templateUrl: './add-member.dialog.html',\n  styleUrls: ['./add-member.dialog.scss'],\n})\nexport class AddMemberDialog implements OnInit {\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AddMemberDialogData,\n    private dialogRef: MatDialogRef,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  addMembers() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    this.dialogRef.close([formValues.email]);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        Add members\n\n  \n\n    \n    \n    \n\n  \n\n\n  Cancel\n  Add\n\n\n    \n\n    \n                \n                    ./add-member.dialog.scss\n                \n                form {\n  padding-top: 10px;\n\n  > * {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add members                  Cancel  Add'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddMemberDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddMemberDialogData.html":{"url":"interfaces/AddMemberDialogData.html","title":"interface - AddMemberDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddMemberDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\n\nexport interface AddMemberDialogData {\n  workspaceId: number;\n  projectId?: number;\n}\n\n@Component({\n  selector: 'app-add-member-dialog',\n  templateUrl: './add-member.dialog.html',\n  styleUrls: ['./add-member.dialog.scss'],\n})\nexport class AddMemberDialog implements OnInit {\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AddMemberDialogData,\n    private dialogRef: MatDialogRef,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  addMembers() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    this.dialogRef.close([formValues.email]);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertDialog.html":{"url":"components/AlertDialog.html","title":"component - AlertDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/dialogs/alert/alert.dialog.ts\n\n\n\n    \n        Description\n    \n    \n        Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert-dialog\n            \n\n            \n                styleUrls\n                ./alert.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./alert.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                AlertDialogVariant\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                important\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                confirm\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.important-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: AlertDialogData, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:50\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the dialog reference and data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AlertDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Object to pass as data to the dialog\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to dialog instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.important-dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.data.variant === AlertDialogVariant.IMPORTANT\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:67\n                        \n                    \n\n            \n                \n                    Host binding to set if the dialog is important.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/dialogs/alert/alert.dialog.ts:73\n                \n            \n\n\n            \n                \n                    Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/dialogs/alert/alert.dialog.ts:80\n                \n            \n\n\n            \n                \n                    Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        AlertDialogVariant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AlertDialogVariant\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:50\n                        \n                    \n\n            \n                \n                    Passthrough to the dialog's variant enumerable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AlertDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:58\n                        \n                    \n\n            \n                \n                    Object to pass as data to the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        important\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.data.variant === AlertDialogVariant.IMPORTANT\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.important-dialog')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:67\n                        \n                    \n\n            \n                \n                    Host binding to set if the dialog is important.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostBinding, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Type of the dialog variant. Used to specify what dialog styling should be used.\n */\nexport enum AlertDialogVariant {\n  DEFAULT = 'default',\n  IMPORTANT = 'important',\n}\n\n/**\n * Alert dialog data interface. Indicates what data will be passed to the dialog.\n */\nexport interface AlertDialogData {\n  /**\n   * Dialog title. Displayed at the top of the dialog.\n   */\n  title?: string;\n  /**\n   * Dialog message. Displayed below the title.\n   */\n  message?: string;\n  /**\n   * Confirm button text.\n   */\n  confirmText?: string;\n  /**\n   * Cancel button text.\n   */\n  cancelText?: string;\n  /**\n   * Type of the dialog variant. Used to specify what dialog styling should be used.\n   */\n  variant?: AlertDialogVariant;\n}\n\n/**\n * Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n */\n@Component({\n  selector: 'app-alert-dialog',\n  templateUrl: './alert.dialog.html',\n  styleUrls: ['./alert.dialog.scss'],\n})\nexport class AlertDialog {\n  /**\n   * Passthrough to the dialog's variant enumerable.\n   */\n  public AlertDialogVariant = AlertDialogVariant;\n\n  /**\n   * Default constructor. Injects the dialog reference and data.\n   * @param data Object to pass as data to the dialog\n   * @param dialogRef Reference to dialog instance\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AlertDialogData,\n    private dialogRef: MatDialogRef,\n  ) {\n    data.variant ||= AlertDialogVariant.DEFAULT;\n  }\n\n  /**\n   * Host binding to set if the dialog is important.\n   */\n  @HostBinding('class.important-dialog') important: boolean =\n    this.data.variant === AlertDialogVariant.IMPORTANT;\n\n  /**\n   * Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n   */\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  /**\n   * Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n   */\n  confirm() {\n    this.dialogRef.close(true);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n  {{ data.message }}\n\n\n  {{ data.cancelText }}\n  \n    {{ data.confirmText }}\n  \n  \n    {{ data.confirmText }}\n  \n\n\n    \n\n    \n                \n                    ./alert.dialog.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.message }}  {{ data.cancelText }}      {{ data.confirmText }}        {{ data.confirmText }}  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'AlertDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AlertDialogData.html":{"url":"interfaces/AlertDialogData.html","title":"interface - AlertDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AlertDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/dialogs/alert/alert.dialog.ts\n        \n\n\n            \n                Description\n            \n            \n                Alert dialog data interface. Indicates what data will be passed to the dialog.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cancelText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            confirmText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            variant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Cancel button text.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Confirm button text.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dialog message. Displayed below the title.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dialog title. Displayed at the top of the dialog.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variant:         AlertDialogVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AlertDialogVariant\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of the dialog variant. Used to specify what dialog styling should be used.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, HostBinding, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Type of the dialog variant. Used to specify what dialog styling should be used.\n */\nexport enum AlertDialogVariant {\n  DEFAULT = 'default',\n  IMPORTANT = 'important',\n}\n\n/**\n * Alert dialog data interface. Indicates what data will be passed to the dialog.\n */\nexport interface AlertDialogData {\n  /**\n   * Dialog title. Displayed at the top of the dialog.\n   */\n  title?: string;\n  /**\n   * Dialog message. Displayed below the title.\n   */\n  message?: string;\n  /**\n   * Confirm button text.\n   */\n  confirmText?: string;\n  /**\n   * Cancel button text.\n   */\n  cancelText?: string;\n  /**\n   * Type of the dialog variant. Used to specify what dialog styling should be used.\n   */\n  variant?: AlertDialogVariant;\n}\n\n/**\n * Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n */\n@Component({\n  selector: 'app-alert-dialog',\n  templateUrl: './alert.dialog.html',\n  styleUrls: ['./alert.dialog.scss'],\n})\nexport class AlertDialog {\n  /**\n   * Passthrough to the dialog's variant enumerable.\n   */\n  public AlertDialogVariant = AlertDialogVariant;\n\n  /**\n   * Default constructor. Injects the dialog reference and data.\n   * @param data Object to pass as data to the dialog\n   * @param dialogRef Reference to dialog instance\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AlertDialogData,\n    private dialogRef: MatDialogRef,\n  ) {\n    data.variant ||= AlertDialogVariant.DEFAULT;\n  }\n\n  /**\n   * Host binding to set if the dialog is important.\n   */\n  @HostBinding('class.important-dialog') important: boolean =\n    this.data.variant === AlertDialogVariant.IMPORTANT;\n\n  /**\n   * Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n   */\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  /**\n   * Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n   */\n  confirm() {\n    this.dialogRef.close(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to access the API\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/api.service.ts:18\n                            \n                        \n\n                \n                    \n                            Default service constructor with HttpClient dependency\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:64\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends DELETE request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends GET request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        patch\n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends PATCH request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:54\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends POST request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                    \n                    put(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:74\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends PUT request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        request\n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP method to use\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiURL\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/api.service.ts:18\n                        \n                    \n\n            \n                \n                    URL of the API. Provided in the environment configuration file.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Service } from '../decorators/service.decorator';\nimport { RequestOptions } from '../interfaces/request-options.interface';\n\n/**\n * Service to access the API\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  /**\n   * URL of the API. Provided in the environment configuration file.\n   */\n  private apiURL: string = environment.apiURL;\n\n  /** Default service constructor with `HttpClient` dependency */\n  constructor(private httpClient: HttpClient) {}\n\n  /**\n   * Sends request to the API.\n   * @param method HTTP method to use\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public request(method: string, url: string, options?: RequestOptions) {\n    return this.httpClient.request(method, this.apiURL + url, {\n      responseType: 'json' as any,\n      withCredentials: true,\n      ...options,\n    });\n  }\n\n  /**\n   * Sends GET request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(url: string, options?: RequestOptions) {\n    return this.request('GET', url, options);\n  }\n\n  /**\n   * Sends POST request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public post(url: string, options?: RequestOptions) {\n    return this.request('POST', url, options);\n  }\n\n  /**\n   * Sends DELETE request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(url: string, options?: RequestOptions) {\n    return this.request('DELETE', url, options);\n  }\n\n  /**\n   * Sends PUT request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public put(url: string, options?: RequestOptions) {\n    return this.request('PUT', url, options);\n  }\n\n  /**\n   * Sends PATCH request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public patch(url: string, options?: RequestOptions) {\n    return this.request('PATCH', url, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main Component with basic layout and main router outlet\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'workflow'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n            \n                \n                    Title of the page\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Main Component with basic layout and main router outlet\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  /**\n   * Title of the page\n   */\n  public title = 'workflow';\n\n  constructor() {\n    document.addEventListener('DOMContentLoaded', () => {\n      document.body.classList.remove('preload');\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  width: 100%;\n  background-color: var(--color-secondary-700);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing';\nimport { LandingPageComponent } from './landing-page/landing-page/landing-page.component';\nimport { MainModule } from './_main/_main.module';\n\n@NgModule({\n  declarations: [AppComponent, LandingPageComponent],\n  imports: [AppRoutingModule, BrowserAnimationsModule, MainModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoggedInUsersGuard } from './auth/guard/logged-in-users.guard';\nimport { LandingPageComponent } from './landing-page/landing-page/landing-page.component';\nimport { MainViewComponent } from './_main/components/main-view/main-view.component';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then((m) => m.AuthModule)\",\n  },\n  {\n    path: 'landing-page',\n    component: LandingPageComponent,\n  },\n  {\n    path: '',\n    component: MainViewComponent,\n    canActivate: [LoggedInUsersGuard],\n    children: [\n      {\n        path: 'email',\n        loadChildren: () => \"import('./emails/emails.module').then((m) => m.EmailsModule)\",\n      },\n      {\n        path: 'messages',\n        loadChildren: () => \"import('./messages/messages.module').then((m) => m.MessagesModule)\",\n      },\n      {\n        path: '',\n        loadChildren: () => \"import('./dashboard/dashboard.module').then((m) => m.DashboardModule)\",\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      onSameUrlNavigation: 'reload',\n      paramsInheritanceStrategy: 'always',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nChangePasswordPage\n\nChangePasswordPage\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nChangePasswordPage->AuthModule\n\n\n\n\n\nDeleteAccountPage\n\nDeleteAccountPage\n\nAuthModule -->\n\nDeleteAccountPage->AuthModule\n\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\nAuthModule -->\n\nForgotPasswordPage->AuthModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAuthModule -->\n\nLoginPage->AuthModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nAuthModule -->\n\nRegisterPage->AuthModule\n\n\n\n\n\nRestoreAccountPage\n\nRestoreAccountPage\n\nAuthModule -->\n\nRestoreAccountPage->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAuthModule -->\n\nMainModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChangePasswordPage\n                        \n                        \n                            DeleteAccountPage\n                        \n                        \n                            ForgotPasswordPage\n                        \n                        \n                            LoginPage\n                        \n                        \n                            RegisterPage\n                        \n                        \n                            RestoreAccountPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { AuthRoutingModule } from './auth.routing';\nimport { ChangePasswordPage } from './pages/change-password/change-password.page';\nimport { DeleteAccountPage } from './pages/delete-account/delete-account.page';\nimport { ForgotPasswordPage } from './pages/forgot-password/forgot-password.page';\nimport { LoginPage } from './pages/login/login.page';\nimport { RegisterPage } from './pages/register/register.page';\nimport { RestoreAccountPage } from './pages/restore-account/restore-account.page';\n\n@NgModule({\n  imports: [CommonModule, AuthRoutingModule, MainModule, ReactiveFormsModule],\n  declarations: [\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    ChangePasswordPage,\n    RestoreAccountPage,\n    DeleteAccountPage,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ChangePasswordPage } from './pages/change-password/change-password.page';\nimport { DeleteAccountPage } from './pages/delete-account/delete-account.page';\nimport { ForgotPasswordPage } from './pages/forgot-password/forgot-password.page';\nimport { LoginPage } from './pages/login/login.page';\nimport { RegisterPage } from './pages/register/register.page';\nimport { RestoreAccountPage } from './pages/restore-account/restore-account.page';\n\n/**\n * Auth routes list\n */\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginPage,\n  },\n  {\n    path: 'logout',\n    component: LoginPage,\n  },\n  {\n    path: 'register',\n    component: RegisterPage,\n  },\n  {\n    path: 'password-reset',\n    component: ForgotPasswordPage,\n  },\n  {\n    path: 'set-new-password',\n    component: ChangePasswordPage,\n  },\n  {\n    path: 'restore-account',\n    component: RestoreAccountPage,\n  },\n  {\n    path: 'delete-account',\n    component: DeleteAccountPage,\n  },\n];\n\n/**\n * Auth routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteAccount\n                            \n                            \n                                    Public\n                                deleteAccountConfirmation\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                recoverAccount\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Public\n                                setNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteAccountConfirmation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccountConfirmation(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        recoverAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    recoverAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setNewPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    setNewPassword(token: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Service } from '@main/decorators/service.decorator';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private apiService: ApiService) {}\n\n  public register({\n    email,\n    password,\n    name,\n    surname,\n    username,\n  }: {\n    email: string;\n    password: string;\n    name: string;\n    surname: string;\n    username: string;\n  }) {\n    return this.apiService.post(`/auth/register`, {\n      body: { email, password, name, surname, username },\n    });\n  }\n\n  public login({\n    email,\n    password,\n    remember,\n  }: {\n    email: string;\n    password: string;\n    remember: boolean;\n  }) {\n    return this.apiService.post(`/auth/login`, { body: { email, password, remember } });\n  }\n\n  public logout() {\n    localStorage.removeItem('logged');\n    return this.apiService.post(`/auth/logout`, { body: {} });\n  }\n\n  public resetPassword({ email }: { email: string }) {\n    return this.apiService.post(`/auth/password/recover`, { body: { email } });\n  }\n\n  public setNewPassword(token: string, password: string) {\n    return this.apiService.post(`/auth/password/reset`, { body: { token, password } });\n  }\n\n  public deleteAccount() {\n    return this.apiService.delete(`/auth/delete`, { body: {} });\n  }\n\n  public deleteAccountConfirmation(token: string) {\n    return this.apiService.delete(`/auth/delete/confirm`, { body: { token } });\n  }\n\n  public recoverAccount() {\n    return this.apiService.post(`/auth/delete/recover`, { body: {} });\n  }\n\n  public isLoggedIn() {\n    if (localStorage.getItem('logged')) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardPage.html":{"url":"components/BoardPage.html","title":"component - BoardPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/board/board.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                ./board.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./board.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                board$\n                            \n                            \n                                faCheck\n                            \n                            \n                                faChevronRight\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faCodePullRequest\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                statusList\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Private\n                                    Optional\n                                statusListSubscription\n                            \n                            \n                                    Public\n                                taskMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                getColumnsContainerHeight\n                            \n                            \n                                getTasksFromStatus\n                            \n                            \n                                idOf\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openNewTaskDialog\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, taskService: TaskService, statusService: StatusService, dialogService: DialogService, projectService: ProjectService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/board/board.page.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: CdkDragDrop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CdkDragDrop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnsContainerHeight\n                        \n                    \n                \n            \n            \n                \ngetColumnsContainerHeight(mapKey: string | number, element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapKey\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasksFromStatus\n                        \n                    \n                \n            \n            \n                \ngetTasksFromStatus(statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idOf\n                        \n                    \n                \n            \n            \n                \nidOf(o: Task | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Task | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNewTaskDialog\n                        \n                    \n                \n            \n            \n                \nopenNewTaskDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(board: [, StatusWithTasks[]], element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    board\n                                    \n                                            [, StatusWithTasks[]]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        board$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faChevronRight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faChevronRight\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodePullRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodePullRequest\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StatusWithTasks[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        statusListSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PersistentMap({ persistentKey: 'board' })\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport {\n  faCheck,\n  faChevronRight,\n  faCodeCommit,\n  faCodePullRequest,\n  faPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { PersistentMap } from '@main/classes/persistent-map.class';\nimport { Observable, Subscription } from 'rxjs';\nimport { DialogService } from '../../../_main/services/dialog.service';\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from '../../dialogs/task/task.dialog';\nimport { StatusWithTasks } from '../../interfaces/status.interface';\nimport { Task } from '../../interfaces/task.interface';\nimport { StatusService } from '../../services/status.service';\nimport { TaskService } from '../../services/task.service';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.page.html',\n  styleUrls: ['./board.page.scss'],\n})\nexport class BoardPage implements OnInit, OnDestroy {\n  faPlus = faPlus;\n  faChevronRight = faChevronRight;\n  faCodeCommit = faCodeCommit;\n  faCodePullRequest = faCodePullRequest;\n  faCheck = faCheck;\n\n  public taskMap = new PersistentMap({ persistentKey: 'board' });\n  public projectId!: number;\n\n  public statusList$!: Observable;\n  public board$!: Observable;\n  public project$: Observable;\n  public members$: Observable>;\n  public statusList: StatusWithTasks[] = [];\n  private statusListSubscription?: Subscription;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private taskService: TaskService,\n    private statusService: StatusService,\n    private dialogService: DialogService,\n    private projectService: ProjectService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.projectId = projectId;\n    this.project$ = this.projectService.get(projectId);\n    this.board$ = this.statusService.board(projectId);\n    this.statusList$ = this.statusService.listWithTasks(projectId);\n    this.statusListSubscription = this.statusList$.subscribe((statusList) => {\n      this.statusList = statusList;\n    });\n    this.members$ = this.memberService.map(projectId);\n  }\n\n  getTasksFromStatus(statusId: number) {\n    return this.statusList.find((status) => status.id === statusId)?.tasks;\n  }\n\n  ngOnInit() {\n    this.statusList$.subscribe((statusList) => {\n      this.statusList = statusList;\n    });\n  }\n\n  ngOnDestroy() {\n    this.statusListSubscription?.unsubscribe();\n  }\n\n  drop(event: CdkDragDrop) {\n    const previousStatusIndex = Number(\n      event.previousContainer.element.nativeElement.dataset['index'],\n    );\n    const newStatusIndex = Number(event.container.element.nativeElement.dataset['index']);\n    const previousStatus = this.statusList[previousStatusIndex];\n    const newStatus = this.statusList[newStatusIndex];\n    const previousTaskIndex = event.previousIndex;\n    const task = event.previousContainer.data[previousTaskIndex];\n\n    console.log({ previousStatus, task });\n\n    console.log(\n      event.previousContainer.data,\n      event.container.data,\n      event.previousIndex,\n      event.currentIndex,\n    );\n\n    const onSuccess = () => {\n      task.statusId = newStatus.id;\n      this.taskService.update(this.projectId, task as any).subscribe();\n\n      if (event.previousContainer === event.container) {\n        moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      } else {\n        transferArrayItem(\n          event.previousContainer.data,\n          event.container.data,\n          event.previousIndex,\n          event.currentIndex,\n        );\n      }\n    };\n\n    // Catch if the task has pull request and user is trying to move to finishing state\n    if (task.pull && newStatus.final) {\n      this.dialogService\n        .alert({\n          title: $localize`Are you sure?`,\n          message: $localize`If you will move this task to finishing state, the attached pull request will be merged to the repository.`,\n          confirmText: $localize`Merge`,\n          cancelText: $localize`Cancel`,\n        })\n        .subscribe((result) => {\n          if (!result) return;\n\n          onSuccess();\n        });\n    } else {\n      onSuccess();\n    }\n  }\n\n  openNewTaskDialog() {\n    this.dialogService\n      .open(TaskDialog, {\n        projectId: this.projectId,\n        variant: TaskDialogVariant.CREATE,\n      } as TaskDialogData)\n      .afterClosed()\n      .subscribe((result) => {\n        if (result) {\n          this.taskService.create(this.projectId, result).subscribe(() => {\n            location.reload();\n          });\n        }\n      });\n  }\n\n  idOf(o: Task | string) {\n    return (o as any).id || o;\n  }\n\n  getColumnsContainerHeight(mapKey: string | number, element: HTMLElement) {\n    return `${Number(!this.taskMap.get(mapKey)) * element.scrollHeight + 16}px`;\n  }\n\n  toggle(board: [Task | string, StatusWithTasks[]], element: HTMLElement) {\n    element.style.maxHeight = this.getColumnsContainerHeight(this.idOf(board[0]), element);\n    this.taskMap.set(this.idOf(board[0]), !this.taskMap.get(this.idOf(board[0])) || false);\n    element.style.maxHeight = this.getColumnsContainerHeight(this.idOf(board[0]), element);\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    {{ status.name }}\n  \n\n\n\n  \n    \n      \n        \n          \n            \n            #{{ task.id }}\n            {{ task.name }}\n            \n              \n            \n            \n              \n            \n            \n              \n              \n            \n            \n            \n          \n          \n            \n            Other tasks\n          \n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./board.page.scss\n                \n                :host {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n}\n\napp-view-options {\n  width: auto;\n  margin: 2rem 2rem 0 2rem;\n}\n\napp-status-label {\n  width: auto;\n}\n\n.boards {\n  display: flex;\n  overflow: auto;\n  flex-direction: column;\n  padding: 0 2rem 2rem 2rem;\n}\n\n.board {\n  display: flex;\n  flex-direction: column;\n  padding-left: 10px;\n  margin-left: -1rem;\n\n  &:not(.collapsed) .task-title>app-icon {\n    transform: rotate(90deg);\n  }\n\n  .columns {\n    display: flex;\n    overflow: hidden;\n    transition: max-height .4s ease;\n\n    &.collapsed {\n      max-height: 0;\n    }\n  }\n\n  .column {\n    display: flex;\n    width: 300px;\n    min-height: 100%;\n    flex-direction: column;\n    padding: 1rem 0.5rem 0 0.5rem;\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    .column-header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-bottom: 1em;\n      color: var(--color-text);\n\n      h3 {\n        margin: 0;\n      }\n\n      app-icon {\n        cursor: pointer;\n      }\n    }\n\n    .column-content {\n      height: 100%;\n      padding: 1rem;\n      background-color: var(--color-secondary-800);\n      border-radius: var(--border-radius);\n\n      app-board-task:last-child {\n        margin-bottom: -1rem;\n      }\n    }\n  }\n}\n\n.cdk-drag-placeholder {\n  opacity: 0;\n}\n\n.cdk-drag-animating {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.column-content.cdk-drop-list-dragging app-board-task:not(.cdk-drag-placeholder) {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.task-title {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  height: 40px;\n  align-items: center;\n  padding-left: 0.5rem;\n\n  .task-id {\n    display: block;\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n\n  .task-property {\n    display: flex;\n    margin-left: 1rem;\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity 0.2s ease;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    .check {\n      margin-left: 5px;\n      color: #2ecc71;\n    }\n  }\n\n  &>app-icon {\n    margin-right: 1rem;\n    opacity: 0.5;\n    transition: transform .2s ease;\n  }\n}\n\n.status-list-banner {\n  display: flex;\n  padding: 1rem;\n  border-bottom: 1px solid var(--color-secondary-500);\n  margin-left: 2rem;\n\n  .status-banner {\n    width: 300px;\n    color: var(--color-text);\n  }\n}\n\n.row {\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ status.name }}                                                        #{{ task.id }}            {{ task.name }}                                                                                                                                                                                                    Other tasks                                                                                      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoardPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardTaskComponent.html":{"url":"components/BoardTaskComponent.html","title":"component - BoardTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/board-task/board-task.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board-task\n            \n\n            \n                styleUrls\n                ./board-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./board-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faCheck\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faCodePullRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                createSubtask\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                members\n                            \n                            \n                                projectId\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubtask\n                        \n                    \n                \n            \n            \n                \ncreateSubtask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodePullRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodePullRequest\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { faCheck, faCodeCommit, faCodePullRequest } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { Task } from '../../interfaces/task.interface';\n\n@Component({\n  selector: 'app-board-task',\n  templateUrl: './board-task.component.html',\n  styleUrls: ['./board-task.component.scss'],\n})\nexport class BoardTaskComponent {\n  @Input()\n  public task!: Task;\n\n  @Input()\n  public projectId!: number;\n\n  @Input()\n  public members: Map = new Map();\n\n  faCodeCommit = faCodeCommit;\n  faCodePullRequest = faCodePullRequest;\n  faCheck = faCheck;\n\n  constructor(private dialogService: DialogService, private taskService: TaskService) {}\n\n  delete() {\n    this.taskService.deleteWithConfirmation(this.projectId, this.task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  edit() {\n    this.taskService.openEditTaskDialog(this.projectId, this.task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  createSubtask() {\n    this.taskService.openCreateSubtaskDialog(this.projectId, this.task).subscribe((task) => {\n      if (!task) return;\n\n      location.reload();\n    });\n  }\n\n  changeDate(date: Date) {\n    let sessionDate = dayjs(date);\n    return sessionDate.format('YYYY-MM-DD, hh:mm A');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        Due date\n      \n      {{ changeDate(task.deadline) }}\n    \n  \n  \n    \n    #{{ task.id }}\n    {{ task?.name }}\n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n      \n    \n  \n  \n    \n      \n    \n    \n      \n        Edit task\n      \n      \n        Create subtask\n      \n      \n        Delete task\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./board-task.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  cursor: move;\n}\n\n.task {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  background-color: var(--color-board-task-background);\n  border-radius: var(--border-radius);\n  transition: background-color 0.2s ease, box-shadow 0.2s ease;\n\n  &:hover {\n    background-color: var(--color-board-task-background-hover);\n    box-shadow: 0 0 0.5rem 0.01rem rgb(0 0 0 / 10%);\n  }\n\n  .top-section {\n    display: flex;\n\n    >* {\n      width: 50%;\n    }\n\n    .assignees {\n      .assignee {\n        $size: 32px;\n\n        @include typo-heading-5;\n\n        display: flex;\n        width: #{$size};\n        height: #{$size};\n        align-items: center;\n        justify-content: center;\n        background-color: #0a95d0;\n        border-radius: calc($size / 2);\n        color: var(--color-text);\n      }\n    }\n\n    .deadline {\n      color: var(--color-text);\n\n      .title {\n        @include typo-body;\n      }\n\n      .value {\n        @include typo-title;\n      }\n    }\n  }\n\n  .name {\n    @include typo-body;\n    display: flex;\n    align-items: center;\n\n    margin-top: 1rem;\n    color: var(--color-text);\n\n    .task-id {\n      margin-right: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n\n  .options {\n    position: absolute;\n    right: 5px;\n    color: #fff;\n  }\n\n  .commit {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n    padding: 0 0.5rem;\n    color: var(--color-text);\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity 0.5s ease;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n\n  .actions {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n\n    >* {\n      display: flex;\n      margin-left: 1rem;\n      color: var(--color-text);\n      cursor: pointer;\n      opacity: 0.5;\n      transition: opacity 0.2s ease;\n\n      &:hover {\n        opacity: 1;\n      }\n\n      .check {\n        margin-left: 5px;\n        color: #2ecc71;\n      }\n    }\n  }\n}\n\n.task-type {\n  display: block;\n  width: 16px;\n  height: 16px;\n  margin-right: 1rem;\n  border-radius: 4px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Due date            {{ changeDate(task.deadline) }}                #{{ task.id }}    {{ task?.name }}                                                                                        Edit task                    Create subtask                    Delete task            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoardTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/button/button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Button component to visualize the general clickable elements on the page.\n\n    \n\n\n    \n        Implements\n    \n    \n                FocusableOption\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                pending\n                            \n                            \n                                type\n                            \n                            \n                                variant\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:34\n                            \n                        \n                \n                    \n                        Icon to display on the button.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pending\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:29\n                            \n                        \n                \n                    \n                        Information about the pending. If button is pending the loader icon will be shown.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"button\" | \"submit\"\n\n                    \n                \n                \n                    \n                        Default value : 'submit'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:24\n                            \n                        \n                \n                    \n                        Button behavior in forms. If this property is set to submit, this button will be able to submit the\nform (perform submit event on click). If set to button, only the specified (click) action will be\nexecuted.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        variant\n                    \n                \n                \n                    \n                        Type :     \"primary\" | \"secondary\" | \"important\"\n\n                    \n                \n                \n                    \n                        Default value : 'secondary'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:17\n                            \n                        \n                \n                    \n                        Style variant of the button.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        focus\n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/button/button.component.ts:44\n                \n            \n\n\n            \n                \n                    Focus the native button element.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elementRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('btn')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/button/button.component.ts:39\n                        \n                    \n\n            \n                \n                    Reference to native button element.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { FocusableOption } from '@angular/cdk/a11y';\nimport { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Button component to visualize the general clickable elements on the page.\n */\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent implements FocusableOption {\n  /**\n   * Style variant of the button.\n   */\n  @Input() variant: 'primary' | 'secondary' | 'important' = 'secondary';\n\n  /**\n   * Button behavior in forms. If this property is set to `submit`, this button will be able to submit the\n   * form (perform submit event on click). If set to `button`, only the specified `(click)` action will be\n   * executed.\n   */\n  @Input() type: 'button' | 'submit' = 'submit';\n\n  /**\n   * Information about the pending. If button is pending the loader icon will be shown.\n   */\n  @Input() pending?: boolean = false;\n\n  /**\n   * Icon to display on the button.\n   */\n  @Input() icon?: string | IconDefinition;\n\n  /**\n   * Reference to native button element.\n   */\n  @ViewChild('btn') elementRef!: ElementRef;\n\n  /**\n   * Focus the native button element.\n   */\n  focus() {\n    setTimeout(() => {\n      this.elementRef.nativeElement.focus();\n    }, 200);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                @import '../../../../styles/typography';\n\nbutton mat-spinner,\nbutton app-icon {\n  opacity: 1;\n  transform: scale(1);\n  transition: opacity 0.2s;\n}\n\nbutton mat-spinner.hide,\nbutton app-icon.hide {\n  opacity: 0;\n}\n\nbutton .prefix {\n  position: relative;\n  display: flex;\n  width: 24px;\n  height: 24px;\n  align-items: center;\n  justify-content: center;\n  transition: width 0.2s, margin-right 0.2s;\n\n  > * {\n    position: absolute;\n  }\n}\n\nbutton:not(.button-with-icon) .prefix:not(.pending) {\n  width: 0;\n  margin-right: 0;\n}\n\nbutton {\n  @include typo-title;\n\n  position: relative;\n  display: flex;\n  min-width: 80px;\n  height: 42px;\n  align-items: center;\n  justify-content: center;\n  padding: 0.8125rem 1.25rem;\n  border-radius: var(--border-radius);\n  box-shadow: 0 4px 4px rgb(0 0 0 / 25%);\n  color: var(--color-text);\n  outline: 0 !important;\n  transition: background-color 0.2s ease;\n\n  > * {\n    margin-right: 0.75rem;\n  }\n\n  &::before {\n    $offset: 4px;\n\n    position: absolute;\n    top: #{-$offset};\n    right: #{-$offset};\n    bottom: #{-$offset};\n    left: #{-$offset};\n    border-radius: calc(var(--border-radius) * 1.5);\n    content: '';\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.1s ease;\n  }\n\n  &:focus {\n    &::before {\n      opacity: 1;\n    }\n  }\n\n  &:active {\n    box-shadow: 0 1px 1px rgb(0 0 0 / 25%);\n  }\n\n  &.primary {\n    background-color: var(--color-button-primary-background);\n\n    &::before {\n      border: 2px solid var(--color-button-primary-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-primary-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-primary-background-active);\n    }\n  }\n\n  &.secondary {\n    background-color: var(--color-button-secondary-background);\n\n    &::before {\n      border: 2px solid var(--color-button-secondary-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-secondary-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-secondary-background-active);\n    }\n  }\n\n  &.important {\n    background-color: var(--color-button-important-background);\n\n    &::before {\n      border: 2px solid var(--color-button-important-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-important-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-important-background-active);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/card/card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/card/card.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  &.important {\n    .card {\n      border: 1px solid var(--color-red-700);\n    }\n\n    .card-header-wrapper {\n      color: var(--color-red-700);\n    }\n  }\n}\n\n.card {\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n  border: 1px solid var(--color-secondary-500);\n  border-radius: var(--border-radius);\n}\n\n.card-header-wrapper {\n  @include typo-title;\n\n  margin-bottom: 7px;\n  color: var(--color-text);\n}\n\n.card-content-wrapper {\n  @include typo-body;\n\n  margin-bottom: 15px;\n  color: var(--color-text);\n  opacity: 0.7;\n}\n\n.card-actions-wrapper {\n  @include typo-body;\n\n  color: var(--color-text);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordPage.html":{"url":"components/ChangePasswordPage.html","title":"component - ChangePasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/change-password/change-password.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n            \n                styleUrls\n                ./change-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                resetSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/change-password/change-password.page.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNewPassword\n                        \n                    \n                \n            \n            \n                \nsetNewPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/change-password/change-password.page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:34\n                        \n                    \n\n            \n                \n                    Form group for setting new password.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        resetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { passwordValidator } from '@main/validators/password.validator';\nimport { requiredValidator } from '@main/validators/required.validator';\nimport { sameAsValidator } from '@main/validators/same-as.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.page.html',\n  styleUrls: ['./change-password.page.scss'],\n})\nexport class ChangePasswordPage implements OnInit {\n  private token?: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    const { token } = this.activatedRoute.snapshot.queryParams;\n    this.token = token;\n  }\n\n  private resetSubscription?: Subscription;\n\n  /**\n   * Form group for setting new password.\n   */\n  public form = new FormGroup({\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n  });\n\n  setNewPassword() {\n    if (this.resetSubscription && !this.resetSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid && this.token) {\n      this.resetSubscription = this.authService\n        .setNewPassword(this.token, this.form.value.password)\n        .subscribe(() => {\n          this.router.navigate(['/auth/login']);\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Reset password\n          Enter your new password.\n        \n\n        \n\n        \n\n        Set new password\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./change-password.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Reset password          Enter your new password.                                Set new password                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/checkbox/checkbox.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:82\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n})\nexport class CheckboxComponent extends ControlAccessor {}\n\n    \n\n    \n        \n  \n\n{{ control.errors | validationError }}\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                :host {\n  position: relative;\n}\n\nmat-checkbox.ng-invalid.ng-touched ~ mat-error {\n  // Set this to 'block' if you want to see mat-error label\n  display: none;\n}\n\nmat-error {\n  position: absolute;\n  bottom: -5px;\n  left: 28px;\n  display: none;\n  font-size: 12px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ control.errors | validationError }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ClickStopPropagationDirective.html":{"url":"directives/ClickStopPropagationDirective.html","title":"directive - ClickStopPropagationDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ClickStopPropagationDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/click-stop-propagation.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [click-stop-propagation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/directives/click-stop-propagation.directive.ts:8\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/_main/directives/click-stop-propagation.directive.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[click-stop-propagation]',\n})\nexport class ClickStopPropagationDirective {\n  @HostListener('click', ['$event'])\n  public onClick(event: any): void {\n    event.stopPropagation();\n\n    window.document.dispatchEvent(\n      new Event('click', {\n        bubbles: true,\n        cancelable: true,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControlAccessor.html":{"url":"components/ControlAccessor.html","title":"component - ControlAccessor","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ControlAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/classes/control-accessor.class.ts\n\n\n\n    \n        Description\n    \n    \n        A base class for creating custom control accessors like inputs, checkboxes, etc.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    ControlValueAccessor\n    \n\n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    required\n                                \n                                \n                                    name\n                                \n                                \n                                    control\n                                \n                                \n                                    value\n                                \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/classes/control-accessor.class.ts:72\n                            \n                        \n\n                \n                    \n                            Accessor constructor to initialize component. Extended by child classes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                control to be used by the accessor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:18\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:135\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:142\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:148\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:127\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/control-accessor.class.ts:82\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n\n                \n                    \n                        getrequired()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:24\n                                \n                            \n                    \n                        \n                                Property to describe if the control is required.\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n\n                \n                    \n                        getcontrol()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:42\n                                \n                            \n                    \n                        \n                                Control that is used by the form.\n\n\n                                \n                                    Returns :         FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:63\n                                \n                            \n                    \n                        \n                                Get the value of the control.\n\n\n                                \n                                    Returns :     T\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:70\n                                \n                            \n                    \n                        \n                                Get the errors of the control.\n\n\n                                \n                                    Returns :         ValidationErrors | null\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnDestroy, Optional } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl, ValidationErrors } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n/**\n * A base class for creating custom control accessors like inputs, checkboxes, etc.\n */\n@Component({\n  template: '',\n  // providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ControlAccessor implements OnDestroy, ControlValueAccessor {\n  /**\n   * Property that defines if field should prompt user how to fill it. For example\n   * in a form, if a field is email, it will give the user last used emails\n   */\n  @Input() autocomplete: 'on' | 'off' = 'off';\n\n  /**\n   * Property to describe if the control is required.\n   * @returns true if the control is required to fill in form.\n   */\n  public get required() {\n    return this._required;\n  }\n\n  public get name() {\n    return this.ngControl?.name?.toString() || '';\n  }\n\n  /**\n   * Private property to set field as required\n   *\n   * @ignore\n   */\n  private _required: boolean = false;\n\n  /**\n   * Control that is used by the form.\n   */\n  public get control(): FormControl {\n    return (this.ngControl?.control as FormControl) || new FormControl();\n  }\n\n  /**\n   * Observable that emits when the control is destroyed.\n   *\n   * @ignore\n   */\n  private destroy$: Subject = new Subject();\n\n  /**\n   * Observable that emits when the control is touched.\n   *\n   * @ignore\n   */\n  private touched$: Subject = new Subject();\n\n  /**\n   * Get the value of the control.\n   */\n  public get value(): T {\n    return this.control.value;\n  }\n\n  /**\n   * Get the errors of the control.\n   */\n  public get errors(): ValidationErrors | null {\n    return this.control.errors;\n  }\n\n  /**\n   * Accessor constructor to initialize component. Extended by child classes.\n   * @param ngControl control to be used by the accessor\n   */\n  constructor(\n    /**\n     * Control passed from DOM to the component, contains all the information about form control\n     */\n    @Optional() public ngControl: NgControl,\n  ) {\n    this.ngControl.valueAccessor = this;\n\n    this._initCheckForTouch();\n    this._checkIfIsRequired();\n  }\n\n  /**\n   * Check if the control is required by provided validators.\n   *\n   * @ignore\n   */\n  private _checkIfIsRequired(): void {\n    if (!(this.control as any)._rawValidators) return;\n\n    for (const validator of (this.ngControl as any).control._rawValidators) {\n      if (validator.name === 'required') {\n        this._required = true;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Apply the touched observable on ngControl and control fields\n   *\n   * @ignore\n   */\n  private _initCheckForTouch(): void {\n    (this.control as any)._markAsTouched = this.control.markAsTouched;\n    this.control.markAsTouched = () => {\n      (this.control as any)._markAsTouched();\n      this.touched$.next(true);\n    };\n  }\n\n  /**\n   * Writes a new value to the element.\n   *\n   * This method is called by the forms API to write to the view when programmatic\n   * changes from model to view are requested.\n   *\n   * @param value The new value for the element\n   */\n  writeValue(value: T): void {}\n\n  /**\n   * Registers a callback function that is called when the control's value changes in the UI.\n   *\n   * This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n   * @param fn Callback to be called when the control value changes.\n   */\n  registerOnChange(fn: any): void {}\n\n  /**\n   * Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n   *\n   * @param fn Callback to be called when the control is touched.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Set disabled state on the control. If set to true, the control will be disabled.\n   * @param isDisabled State to set to the control\n   */\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.control.disable();\n    } else {\n      this.control.enable();\n    }\n  }\n\n  /** @ignore */\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n    this.touched$.complete();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ControlAccessor'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectMembersPage.html":{"url":"components/CreateProjectMembersPage.html","title":"component - CreateProjectMembersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectMembersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-project-members/create-project-members.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project-members\n            \n\n            \n                styleUrls\n                ./create-project-members.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project-members.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                memberList\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:39\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:65\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:33\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:26\n                        \n                    \n\n            \n                \n                    Form group for the project creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        memberList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddMemberDialog } from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-create-project-members',\n  templateUrl: './create-project-members.page.html',\n  styleUrls: ['./create-project-members.page.scss'],\n})\nexport class CreateProjectMembersPage {\n  faPlus = faPlus;\n\n  /**\n   * Form group for the project creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  public workspace$!: Observable;\n\n  private workspaceId!: number;\n\n  private memberList?: string[];\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n    this.workspaceId = workspaceId;\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n  }\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {})\n      .afterClosed()\n      .subscribe((result) => {\n        this.memberList = result;\n      });\n  }\n\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.projectService.create(this.form.value).subscribe((response) => {\n      if (this.memberList) {\n        this.memberService.add(this.memberList, [response.id]).subscribe(() => {\n          this.router.navigate([this.workspaceId]).then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        this.router.navigate([this.workspaceId]).then(() => {\n          window.location.reload();\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  Add member\n\n\n\n\n    \n\n    \n                \n                    ./create-project-members.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.button {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-top: -60px;\n  margin-bottom: 20px;\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add member'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectMembersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectPage.html":{"url":"components/CreateProjectPage.html","title":"component - CreateProjectPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-project/create-project.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project\n            \n\n            \n                styleUrls\n                ./create-project.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                memberList\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:38\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project/create-project.page.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project/create-project.page.ts:72\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:32\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:24\n                        \n                    \n\n            \n                \n                    Form group for the project creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        memberList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddMemberDialog } from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-create-project',\n  templateUrl: './create-project.page.html',\n  styleUrls: ['./create-project.page.scss'],\n})\nexport class CreateProjectPage {\n  /**\n   * Form group for the project creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  faPlus = faPlus;\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  public workspace$!: Observable;\n\n  public workspaceId!: number;\n\n  public memberList: string[] = [];\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n    this.workspaceId = workspaceId;\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n  }\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {})\n      .afterClosed()\n      .subscribe((result) => {\n        this.memberList = [...this.memberList, ...result];\n      });\n  }\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.projectService.create(this.form.value).subscribe((response) => {\n      if (this.memberList) {\n        this.memberService.add(this.memberList, [response.id]).subscribe(() => {\n          this.router.navigate([this.workspaceId]).then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        this.router.navigate([this.workspaceId]).then(() => {\n          window.location.reload();\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Workspace: {{ (workspace$ | async)?.name }}\n    \n  \n\n  \n    Members\n    \n      Add member\n      \n    \n  \n  \n\n  \n    Save\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./create-project.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.buttons {\n  display: flex;\n  margin-top: 1rem;\n\n  &>* {\n    display: block;\n    margin-right: 1rem;\n  }\n}\n\n.members {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-top: 20px;\n\n  h2 {\n    margin: 0;\n  }\n\n  .button {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n  }\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Workspace: {{ (workspace$ | async)?.name }}            Members          Add member                    Save    Cancel  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateWorkspacePage.html":{"url":"components/CreateWorkspacePage.html","title":"component - CreateWorkspacePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateWorkspacePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-workspace/create-workspace.page.ts\n\n\n\n    \n        Description\n    \n    \n        Create workspace page component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-workspace-page\n            \n\n            \n                styleUrls\n                ./create-workspace.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-workspace.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:30\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:43\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:30\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:23\n                        \n                    \n\n            \n                \n                    Form group for the workspace creation.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Subscription } from 'rxjs';\nimport { Page } from 'src/app/_main/decorators/page.decorator';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Create workspace page component.\n */\n@Page()\n@Component({\n  selector: 'app-create-workspace-page',\n  templateUrl: './create-workspace.page.html',\n  styleUrls: ['./create-workspace.page.scss'],\n})\nexport class CreateWorkspacePage {\n  /**\n   * Form group for the workspace creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(private workspaceService: WorkspaceService, private router: Router) {}\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.workspaceService.create(this.form.value).subscribe(() => {\n      this.router.navigate(['/']).then(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  Create new workspace\n  \n\n  \n    Save\n    Cancel\n  \n\n\n\n    \n\n    \n                \n                    ./create-workspace.page.scss\n                \n                form {\n  padding: 4rem;\n}\n\n.buttons {\n  display: flex;\n  margin-top: 1rem;\n\n  &>* {\n    display: block;\n    margin-right: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Create new workspace        Save    Cancel  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateWorkspacePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nAddMemberDialog\n\nAddMemberDialog\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nAddMemberDialog->DashboardModule\n\n\n\n\n\nCreateProjectMembersPage\n\nCreateProjectMembersPage\n\nDashboardModule -->\n\nCreateProjectMembersPage->DashboardModule\n\n\n\n\n\nCreateProjectPage\n\nCreateProjectPage\n\nDashboardModule -->\n\nCreateProjectPage->DashboardModule\n\n\n\n\n\nCreateWorkspacePage\n\nCreateWorkspacePage\n\nDashboardModule -->\n\nCreateWorkspacePage->DashboardModule\n\n\n\n\n\nEditProjectMembersPage\n\nEditProjectMembersPage\n\nDashboardModule -->\n\nEditProjectMembersPage->DashboardModule\n\n\n\n\n\nEditProjectPage\n\nEditProjectPage\n\nDashboardModule -->\n\nEditProjectPage->DashboardModule\n\n\n\n\n\nEditWorkspacePage\n\nEditWorkspacePage\n\nDashboardModule -->\n\nEditWorkspacePage->DashboardModule\n\n\n\n\n\nIntegrationGithubComponent\n\nIntegrationGithubComponent\n\nDashboardModule -->\n\nIntegrationGithubComponent->DashboardModule\n\n\n\n\n\nMemberListComponent\n\nMemberListComponent\n\nDashboardModule -->\n\nMemberListComponent->DashboardModule\n\n\n\n\n\nProjectsListPage\n\nProjectsListPage\n\nDashboardModule -->\n\nProjectsListPage->DashboardModule\n\n\n\n\n\nViewOptionsComponent\n\nViewOptionsComponent\n\nDashboardModule -->\n\nViewOptionsComponent->DashboardModule\n\n\n\n\n\nWorkspacesListPage\n\nWorkspacesListPage\n\nDashboardModule -->\n\nWorkspacesListPage->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nDashboardModule -->\n\nMainModule->DashboardModule\n\n\n\n\n\nGitIntegrationService\n\nGitIntegrationService\n\nDashboardModule -->\n\nGitIntegrationService->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddMemberDialog\n                        \n                        \n                            CreateProjectMembersPage\n                        \n                        \n                            CreateProjectPage\n                        \n                        \n                            CreateWorkspacePage\n                        \n                        \n                            EditProjectMembersPage\n                        \n                        \n                            EditProjectPage\n                        \n                        \n                            EditWorkspacePage\n                        \n                        \n                            IntegrationGithubComponent\n                        \n                        \n                            MemberListComponent\n                        \n                        \n                            ProjectsListPage\n                        \n                        \n                            ViewOptionsComponent\n                        \n                        \n                            WorkspacesListPage\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GitIntegrationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DashboardRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { IntegrationGithubComponent } from './components/integration-github/integration-github.component';\nimport { MemberListComponent } from './components/member-list/member-list.component';\nimport { ViewOptionsComponent } from './components/view-options/view-options.component';\nimport { DashboardRoutingModule } from './dashboard.routing';\nimport { AddMemberDialog } from './dialogs/add-member/add-member.dialog';\nimport { CreateProjectMembersPage } from './pages/create-project-members/create-project-members.page';\nimport { CreateProjectPage } from './pages/create-project/create-project.page';\nimport { CreateWorkspacePage } from './pages/create-workspace/create-workspace.page';\nimport { EditProjectMembersPage } from './pages/edit-project-members/edit-project-members.page';\nimport { EditProjectPage } from './pages/edit-project/edit-project.page';\nimport { EditWorkspacePage } from './pages/edit-workspace/edit-workspace.page';\nimport { ProjectsListPage } from './pages/projects-list/projects-list.page';\nimport { WorkspacesListPage } from './pages/workspaces-list/workspaces-list.page';\nimport { GitIntegrationService } from './services/git-integration.service';\n\n@NgModule({\n  imports: [CommonModule, MainModule, ReactiveFormsModule, DashboardRoutingModule],\n  declarations: [\n    CreateWorkspacePage,\n    WorkspacesListPage,\n    EditWorkspacePage,\n    ProjectsListPage,\n    CreateProjectPage,\n    EditProjectPage,\n    CreateProjectMembersPage,\n    EditProjectMembersPage,\n    IntegrationGithubComponent,\n    ViewOptionsComponent,\n    MemberListComponent,\n    AddMemberDialog,\n  ],\n  providers: [GitIntegrationService],\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardRoutingModule.html":{"url":"modules/DashboardRoutingModule.html","title":"module - DashboardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\nimport { CreateProjectMembersPage } from './pages/create-project-members/create-project-members.page';\nimport { CreateProjectPage } from './pages/create-project/create-project.page';\nimport { CreateWorkspacePage } from './pages/create-workspace/create-workspace.page';\nimport { EditProjectMembersPage } from './pages/edit-project-members/edit-project-members.page';\nimport { EditProjectPage } from './pages/edit-project/edit-project.page';\nimport { EditWorkspacePage } from './pages/edit-workspace/edit-workspace.page';\nimport { GithubIntegrationPage } from './pages/github-integration/github-integration.page';\nimport { ProjectsListPage } from './pages/projects-list/projects-list.page';\nimport { WorkspacesListPage } from './pages/workspaces-list/workspaces-list.page';\n\n/**\n * Dashboard routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: WorkspacesListPage,\n  },\n  {\n    path: 'settings',\n    loadChildren: () => \"import('../settings/settings.module').then((m) => m.SettingsModule)\",\n  },\n  {\n    path: 'github',\n    component: GithubIntegrationPage,\n    data: {\n      hideNavigation: true,\n    },\n  },\n  {\n    path: 'dashboard',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/dashboard.svg',\n    },\n  },\n  {\n    path: 'create',\n    component: CreateWorkspacePage,\n  },\n  {\n    path: ':workspaceId',\n    children: [\n      {\n        path: 'edit',\n        component: EditWorkspacePage,\n      },\n      {\n        path: '',\n        pathMatch: 'full',\n        component: ProjectsListPage,\n      },\n      {\n        path: 'create',\n        redirectTo: 'create/general',\n      },\n      {\n        path: 'create/general',\n        component: CreateProjectPage,\n      },\n      {\n        path: 'create/members',\n        component: CreateProjectMembersPage,\n      },\n      {\n        path: ':projectId/edit',\n        redirectTo: ':projectId/edit/general',\n      },\n      {\n        path: ':projectId/edit/general',\n        component: EditProjectPage,\n      },\n      {\n        path: ':projectId/edit/members',\n        component: EditProjectMembersPage,\n      },\n      {\n        path: ':projectId',\n        loadChildren: () => \"import('../tasks/tasks.module').then((m) => m.TasksModule)\",\n      },\n    ],\n  },\n];\n\n/**\n * Dashboard routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteAccountPage.html":{"url":"components/DeleteAccountPage.html","title":"component - DeleteAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeleteAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/delete-account/delete-account.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-account.page\n            \n\n            \n                styleUrls\n                ./delete-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./delete-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccount\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/delete-account/delete-account.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \ndeleteAccount(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/delete-account/delete-account.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/delete-account/delete-account.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-delete-account.page',\n  templateUrl: './delete-account.page.html',\n  styleUrls: ['./delete-account.page.scss'],\n})\nexport class DeleteAccountPage implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    const { token } = this.activatedRoute.snapshot.queryParams;\n    this.deleteAccount(token);\n  }\n\n  deleteAccount(token: string) {\n    if (token) {\n      this.authService.deleteAccountConfirmation(token).subscribe(() => {});\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Your account has been deleted.\n        If you are going to revive your account, you can log in to your account click here to log in \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./delete-account.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      padding: 4rem;\n      background-color: var(--color-gray-800);\n\n      h2 {\n        margin-bottom: 0.5rem;\n      }\n\n      p {\n        margin-bottom: 1.5rem;\n      }\n\n      app-input {\n        width: 100%;\n      }\n\n      app-button {\n        align-self: flex-end;\n      }\n\n      a {\n        color: var(--color-link);\n        cursor: pointer;\n        transition: color 0.2s ease;\n\n        &:hover {\n          color: var(--color-link-hover);\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Your account has been deleted.        If you are going to revive your account, you can log in to your account click here to log in                     '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'DeleteAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogOutletComponent.html":{"url":"components/DialogOutletComponent.html","title":"component - DialogOutletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogOutletComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/dialog-outlet/dialog-outlet.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-outlet\n            \n\n            \n                styleUrls\n                ./dialog-outlet.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog-outlet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                host\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearComponent\n                            \n                            \n                                    Private\n                                createInjector\n                            \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Private\n                                loadComponent\n                            \n                            \n                                renderDialog\n                            \n                            \n                                    Private\n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                outlet\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.width\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    outlet\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        outlet\n                    \n                \n                \n                    \n                        Type :         DialogOutlet\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:15\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0px'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        clearComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createInjector\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInjector(data: any, dialogRef: DialogRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dialogRef\n                                    \n                                                DialogRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hide\n                        \n                    \n                \n            \n            \n                \n                    \n                    hide()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadComponent(component: any, injector: Injector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    injector\n                                    \n                                                Injector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderDialog\n                        \n                    \n                \n            \n            \n                \nrenderDialog(component: any, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        show\n                        \n                    \n                \n            \n            \n                \n                    \n                    show()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewContainerDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(ViewContainerDirective, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0px'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.width')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        outlet\n                    \n                \n\n\n                \n                    \n                        setoutlet(outlet: DialogOutlet)\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            outlet\n                                                    \n                                                            \n                                                                            DialogOutlet\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, HostBinding, Injector, Input, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogRef } from '@main/classes/dialog-ref.class';\nimport { ViewContainerDirective } from '@main/directives/view-container.directive';\nimport { DialogOutlet, DialogService } from '@main/services/dialog.service';\nimport { take } from 'rxjs';\n\n@Component({\n  selector: 'app-dialog-outlet',\n  templateUrl: './dialog-outlet.component.html',\n  styleUrls: ['./dialog-outlet.component.scss'],\n})\nexport class DialogOutletComponent {\n  @ViewChild(ViewContainerDirective, { static: true }) host!: ViewContainerDirective;\n  @Input() set outlet(outlet: DialogOutlet) {\n    this.dialogService.registerOutlet(outlet, this);\n  }\n  @HostBinding('style.width') width = '0px';\n\n  constructor(private dialogService: DialogService, private injector: Injector) {}\n\n  renderDialog(component: any, data: any): DialogRef {\n    const dialogRef = new DialogRef();\n    const injector = this.createInjector(data, dialogRef);\n\n    dialogRef\n      .beforeClosed()\n      .pipe(take(1))\n      .subscribe(() => {\n        this.clearComponent();\n      });\n\n    this.loadComponent(component, injector);\n    return dialogRef;\n  }\n\n  private loadComponent(component: any, injector: Injector) {\n    const viewContainerRef = this.host.viewContainerRef;\n    viewContainerRef.clear();\n\n    const _componentRef = viewContainerRef.createComponent(component, { injector });\n    this.show();\n  }\n\n  private clearComponent() {\n    this.hide();\n    setTimeout(() => {\n      const viewContainerRef = this.host.viewContainerRef;\n      viewContainerRef.clear();\n    }, 500);\n  }\n\n  private createInjector(data: any, dialogRef: DialogRef) {\n    return Injector.create({\n      providers: [\n        { provide: MAT_DIALOG_DATA, useValue: data },\n        { provide: MatDialogRef, useValue: dialogRef },\n      ],\n      parent: this.injector,\n    });\n  }\n\n  private show() {\n    this.width = '450px';\n  }\n\n  private hide() {\n    this.width = '0px';\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./dialog-outlet.component.scss\n                \n                :host {\n  display: block;\n  overflow: hidden;\n  width: 0;\n  flex-shrink: 0;\n  transition: width .4s ease;\n}\n\n.dialog-outlet {\n  width: 450px;\n  height: 100%;\n  border-radius: 0;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogOutletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DialogRef.html":{"url":"classes/DialogRef.html","title":"class - DialogRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DialogRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/dialog-ref.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                afterClosed$\n                            \n                            \n                                    Private\n                                afterOpened$\n                            \n                            \n                                    Private\n                                beforeClosed$\n                            \n                            \n                                    Private\n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPanelClass\n                            \n                            \n                                afterClosed\n                            \n                            \n                                afterOpened\n                            \n                            \n                                backdropClick\n                            \n                            \n                                beforeClosed\n                            \n                            \n                                close\n                            \n                            \n                                getState\n                            \n                            \n                                keydownEvents\n                            \n                            \n                                removePanelClass\n                            \n                            \n                                updatePosition\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        afterClosed$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/dialog-ref.class.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        afterOpened$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/dialog-ref.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        beforeClosed$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/dialog-ref.class.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(MatDialogState.CLOSED)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/dialog-ref.class.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPanelClass\n                        \n                    \n                \n            \n            \n                \naddPanelClass(classes: string | string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:71\n                \n            \n\n\n            \n                \n                    Add a CSS class or an array of classes to the overlay pane.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    classes\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterClosed\n                        \n                    \n                \n            \n            \n                \nafterClosed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:33\n                \n            \n\n\n            \n                \n                    Gets an observable that is notified when the dialog is finished closing.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterOpened\n                        \n                    \n                \n            \n            \n                \nafterOpened()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:26\n                \n            \n\n\n            \n                \n                    Gets an observable that is notified when the dialog is finished opening.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        backdropClick\n                        \n                    \n                \n            \n            \n                \nbackdropClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:45\n                \n            \n\n\n            \n                \n                    Gets an observable that emits when the overlay's backdrop has been clicked.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        beforeClosed\n                        \n                    \n                \n            \n            \n                \nbeforeClosed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:39\n                \n            \n\n\n            \n                \n                    Gets an observable that is notified when the dialog has started closing.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose(dialogResult?: R)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dialogResult\n                                    \n                                            R\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getState\n                        \n                    \n                \n            \n            \n                \ngetState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:79\n                \n            \n\n\n            \n                \n                    Gets the current state of the dialog's lifecycle.\n\n\n                    \n                        Returns :     MatDialogState\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keydownEvents\n                        \n                    \n                \n            \n            \n                \nkeydownEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:52\n                \n            \n\n\n            \n                \n                    Gets an observable that emits when keydown events are targeted on the overlay.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePanelClass\n                        \n                    \n                \n            \n            \n                \nremovePanelClass(classes: string | string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:75\n                \n            \n\n\n            \n                \n                    Remove a CSS class or an array of classes from the overlay pane.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    classes\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePosition\n                        \n                    \n                \n            \n            \n                \nupdatePosition(position?: DialogPosition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:59\n                \n            \n\n\n            \n                \n                    Updates the dialog's position.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            DialogPosition\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        New dialog position.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSize\n                        \n                    \n                \n            \n            \n                \nupdateSize(width?: string, height?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:67\n                \n            \n\n\n            \n                \n                    Updates the dialog's width and height.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    width\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        New width of the dialog.\n\n                                    \n                                \n                                \n                                    height\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        New height of the dialog.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DialogPosition, MatDialogState } from '@angular/material/dialog';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nexport class DialogRef {\n  private afterOpened$ = new Subject();\n\n  private beforeClosed$ = new Subject();\n  private afterClosed$ = new Subject();\n\n  private state$ = new BehaviorSubject(MatDialogState.CLOSED);\n\n  close(dialogResult?: R): void {\n    this.state$.next(MatDialogState.CLOSING);\n    this.beforeClosed$.next(dialogResult);\n    this.state$.next(MatDialogState.CLOSED);\n    this.afterClosed$.next(dialogResult);\n\n    this.afterClosed$.complete();\n    this.afterOpened$.complete();\n    this.beforeClosed$.complete();\n    this.state$.complete();\n  }\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  afterOpened(): Observable {\n    this.state$.next(MatDialogState.OPEN);\n    return this.afterOpened$;\n  }\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  afterClosed(): Observable {\n    return this.afterClosed$;\n  }\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   */\n  beforeClosed(): Observable {\n    return this.beforeClosed$;\n  }\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick(): Observable {\n    throw new Error(`method should not be called when using custom outlet`);\n  }\n\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents(): Observable {\n    throw new Error('Method not implemented.');\n  }\n  /**\n   * Updates the dialog's position.\n   * @param position New dialog position.\n   */\n  updatePosition(position?: DialogPosition): this {\n    throw new Error(`method not be called when using custom outlet`);\n  }\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width?: string, height?: string): this {\n    throw new Error(`method should not be called when using custom outlet`);\n  }\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes: string | string[]): this {\n    throw new Error(`method should not be called when using custom outlet`);\n  }\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes: string | string[]): this {\n    throw new Error(`method should not be called when using custom outlet`);\n  }\n  /** Gets the current state of the dialog's lifecycle. */\n  getState(): MatDialogState {\n    return this.state$.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/dialog.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage dialogs.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dialogs$\n                            \n                            \n                                    Private\n                                dialogsMap\n                            \n                            \n                                    Private\n                                outlets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alert\n                            \n                            \n                                closeAll\n                            \n                            \n                                confirm\n                            \n                            \n                                confirmProjectDelete\n                            \n                            \n                                confirmWorkspaceDelete\n                            \n                            \n                                open\n                            \n                            \n                                openErrorDialog\n                            \n                            \n                                registerOutlet\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isAnyDialogOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialog: MatDialog, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/dialog.service.ts:31\n                            \n                        \n\n                \n                    \n                            Default constructor with MatDialog dependency.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog instance\n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        alert\n                        \n                    \n                \n            \n            \n                \nalert(data: AlertDialogData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:93\n                \n            \n\n\n            \n                \n                    Opens a alert/information dialog.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AlertDialogData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeAll\n                        \n                    \n                \n            \n            \n                \ncloseAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm(data: AlertDialogData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:114\n                \n            \n\n\n            \n                \n                    Opens a confirm dialog.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AlertDialogData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmProjectDelete\n                        \n                    \n                \n            \n            \n                \nconfirmProjectDelete(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmWorkspaceDelete\n                        \n                    \n                \n            \n            \n                \nconfirmWorkspaceDelete(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(component: any, data: any, outlet?: DialogOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:44\n                \n            \n\n\n            \n                \n                    Opens a modal dialog containing the given component.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Type of the component to load into the dialog.\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                                \n                                    outlet\n                                    \n                                                DialogOutlet\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MatDialogRef | DialogRef\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openErrorDialog\n                        \n                    \n                \n            \n            \n                \nopenErrorDialog(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOutlet\n                        \n                    \n                \n            \n            \n                \nregisterOutlet(outlet: DialogOutlet, component: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                DialogOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject | DialogRef>>(\n    this.dialogsMap,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/dialog.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogsMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/dialog.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        outlets\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/dialog.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isAnyDialogOpen\n                    \n                \n\n                \n                    \n                        getisAnyDialogOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/services/dialog.service.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { DialogRef } from '@main/classes/dialog-ref.class';\nimport { BehaviorSubject, filter } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\nimport { Service } from '../decorators/service.decorator';\nimport { AlertDialog, AlertDialogData, AlertDialogVariant } from '../dialogs/alert/alert.dialog';\n\nexport enum DialogOutlet {\n  CONTENT_RIGHT = 'CONTENT_RIGHT',\n}\n\n/**\n * Service to manage dialogs.\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class DialogService {\n  private dialogsMap = new Map();\n  private dialogs$ = new BehaviorSubject | DialogRef>>(\n    this.dialogsMap,\n  );\n  private outlets = new Map();\n\n  public get isAnyDialogOpen() {\n    return this.dialogs$.getValue().size > 0;\n  }\n  /**\n   * Default constructor with `MatDialog` dependency.\n   * @param matDialog MatDialog instance\n   */\n  constructor(private matDialog: MatDialog, private injector: Injector) {}\n\n  /**\n   * Opens a modal dialog containing the given component.\n   * @param component Type of the component to load into the dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  open(component: any, data: any, outlet?: DialogOutlet): MatDialogRef | DialogRef {\n    console.log();\n\n    let dialog: MatDialogRef | DialogRef;\n\n    if (outlet) {\n      const outletComponent = this.outlets.get(outlet);\n\n      if (!outletComponent)\n        throw new Error(\n          `${outlet} is not assigned to any dialog outlet component, you need to call registerOutlet()`,\n        );\n\n      dialog = outletComponent.renderDialog(component, data);\n    } else {\n      dialog = this.matDialog.open(component, {\n        data,\n        width: '400px',\n      });\n    }\n\n    const uid = uuid();\n    this.dialogsMap.set(uid, dialog);\n\n    dialog.afterClosed().subscribe(() => {\n      this.dialogsMap.delete(uid);\n      this.dialogs$.next(this.dialogsMap);\n    });\n\n    this.dialogs$.next(this.dialogsMap);\n\n    return dialog;\n  }\n\n  closeAll() {\n    this.dialogsMap.forEach((dialog) => {\n      dialog.close();\n    });\n  }\n\n  registerOutlet(outlet: DialogOutlet, component: any) {\n    this.outlets.set(outlet, component);\n  }\n\n  /**\n   * Opens a alert/information dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  alert(data: AlertDialogData) {\n    return this.open(AlertDialog, data)\n      .afterClosed()\n      .pipe(filter((result) => result));\n  }\n\n  openErrorDialog(error: string) {\n    const data: AlertDialogData = {\n      title: 'Error',\n      message: error,\n      variant: AlertDialogVariant.IMPORTANT,\n      cancelText: $localize`Close`,\n    };\n    return this.alert(data);\n  }\n\n  /**\n   * Opens a confirm dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  confirm(data: AlertDialogData) {\n    return this.alert(data);\n  }\n\n  confirmProjectDelete(project: Project) {\n    return this.confirm({\n      title: $localize`Delete project \"${project.name}\"`,\n      message: $localize`Are you sure you want to delete project \"${project.name}\"?`,\n      confirmText: $localize`Delete`,\n      cancelText: $localize`Cancel`,\n      variant: AlertDialogVariant.IMPORTANT,\n    });\n  }\n\n  confirmWorkspaceDelete(workspace: Workspace) {\n    return this.confirm({\n      title: $localize`Delete workspace \"${workspace.name}\"`,\n      message: $localize`Are you sure you want to delete this workspace \"${workspace.name}\"?`,\n      confirmText: $localize`Delete`,\n      cancelText: $localize`Cancel`,\n      variant: AlertDialogVariant.IMPORTANT,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ESet.html":{"url":"classes/ESet.html","title":"class - ESet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ESet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/e-set.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Set\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(key: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/e-set.class.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ESet extends Set {\n  toggle(key: any) {\n    if (this.has(key)) {\n      this.delete(key);\n    } else {\n      this.add(key);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProjectMembersPage.html":{"url":"components/EditProjectMembersPage.html","title":"component - EditProjectMembersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProjectMembersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-project-members\n            \n\n            \n                styleUrls\n                ./edit-project-members.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-project-members.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                editProjectWithWorkspace\n                            \n                            \n                                    Public\n                                loadProject\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:49\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProjectWithWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProjectWithWorkspace(newWorkspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newWorkspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:80\n                \n            \n\n\n            \n                \n                    Loads project data from the project service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:140\n                \n            \n\n\n            \n                \n                    Attach to lifecycle hook to unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:91\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:30\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:46\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:42\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.workspaceService.list()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  AddMemberDialog,\n  AddMemberDialogData,\n} from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-edit-project-members',\n  templateUrl: './edit-project-members.page.html',\n  styleUrls: ['./edit-project-members.page.scss'],\n})\nexport class EditProjectMembersPage {\n  faPlus = faPlus;\n\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  });\n\n  public project$!: Observable;\n  public workspaceList$: Observable = this.workspaceService.list();\n  // public workspace: Workspace = this.workspaceService.get(id);\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  private workspaceId!: number;\n  public projectId!: number;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n    this.form.addControl('id', new FormControl(projectId));\n\n    this.loadProject(projectId);\n  }\n\n  /**\n   * Loads project data from the project service.\n   * @param id project id\n   */\n  public loadProject(id: number) {\n    this.project$ = this.projectService.get(id);\n    this.getSubscription = this.project$.subscribe((workspace) => {\n      this.form.patchValue(workspace);\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    let newWorkspaceId: number = this.form.get('newWorkspaceId')?.value;\n\n    if (this.workspaceId != newWorkspaceId && newWorkspaceId != null) {\n      this.editProjectWithWorkspace(newWorkspaceId);\n    } else {\n      this.editProject();\n    }\n  }\n\n  public editProjectWithWorkspace(newWorkspaceId: number) {\n    this.updateSubscription = this.projectService\n      .changeWorkspace(this.projectId, newWorkspaceId)\n      .subscribe(() => {\n        this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n          this.router.navigate(['/', newWorkspaceId]);\n        });\n      });\n  }\n\n  public editProject() {\n    this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n      this.router.navigate(['/', this.workspaceId]);\n    });\n  }\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {\n        projectId: this.projectId,\n      } as AddMemberDialogData)\n      .afterClosed()\n      .subscribe((result) => {\n        if (result) {\n          this.memberService.add(result, [this.projectId]).subscribe(() => {\n            location.reload();\n          });\n        }\n      });\n  }\n\n  /**\n   * Attach to lifecycle hook to unsubscribe from all subscriptions.\n   */\n  ngOnDestroy(): void {\n    if (this.getSubscription) this.getSubscription.unsubscribe();\n    if (this.updateSubscription) this.updateSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n  Add member\n\n\n\n\n    \n\n    \n                \n                    ./edit-project-members.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.button {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-top: -60px;\n  margin-bottom: 20px;\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add member'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditProjectMembersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProjectPage.html":{"url":"components/EditProjectPage.html","title":"component - EditProjectPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProjectPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-project/edit-project.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-project\n            \n\n            \n                styleUrls\n                ./edit-project.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-project.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadProject\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:40\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:68\n                \n            \n\n\n            \n                \n                    Loads project data from the project service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:105\n                \n            \n\n\n            \n                \n                    Attach to lifecycle hook to unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:88\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:22\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:37\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:33\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.workspaceService.list()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { untilDestroyed } from '@ngneat/until-destroy';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-edit-project',\n  templateUrl: './edit-project.page.html',\n  styleUrls: ['./edit-project.page.scss'],\n})\nexport class EditProjectPage implements OnDestroy {\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n  });\n\n  public project$!: Observable;\n  public workspaceList$: Observable = this.workspaceService.list();\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  public workspaceId!: number;\n  public projectId!: number;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = Number(workspaceId);\n    this.projectId = Number(projectId);\n\n    this.form.addControl('id', new FormControl(projectId));\n\n    this.loadProject(projectId);\n  }\n\n  /**\n   * Loads project data from the project service.\n   * @param id project id\n   */\n  public loadProject(id: number) {\n    this.project$ = this.projectService.get(id);\n    this.getSubscription = this.project$.subscribe((project) => {\n      this.form.patchValue(project);\n    });\n\n    this.workspaceList$.subscribe((workspaces) => {\n      const workspace = workspaces.find((workspace) => workspace.id === this.workspaceId);\n      if (workspace) {\n        this.form.patchValue({\n          newWorkspaceId: workspace.id,\n        });\n      }\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.updateSubscription = this.projectService\n      .update(this.form.value)\n      .pipe(untilDestroyed(this))\n      .subscribe(() => {\n        this.router.navigate(['/', this.workspaceId]);\n      });\n  }\n\n  /**\n   * Attach to lifecycle hook to unsubscribe from all subscriptions.\n   */\n  ngOnDestroy(): void {\n    if (this.getSubscription) this.getSubscription.unsubscribe();\n    if (this.updateSubscription) this.updateSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n  \n    Workspace:\n    \n      {{ workspace.name }}\n      \n    \n  \n\n  \n    Modules\n  \n  \n  \n    Save\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./edit-project.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.buttons {\n  display: flex;\n  margin-top: 1rem;\n\n  &>* {\n    display: block;\n    margin-right: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Workspace:          {{ workspace.name }}                  Modules          Save    Cancel  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditProjectPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditWorkspacePage.html":{"url":"components/EditWorkspacePage.html","title":"component - EditWorkspacePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditWorkspacePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts\n\n\n\n    \n        Description\n    \n    \n        Edit workspace page component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-workspace-page\n            \n\n            \n                styleUrls\n                ./edit-workspace.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-workspace.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadWorkspace\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:36\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadWorkspace(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:58\n                \n            \n\n\n            \n                \n                    Loads workspace data from the workspace service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:69\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    id: new FormControl(-1),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:22\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:36\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:32\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Edit workspace page component.\n */\n@Component({\n  selector: 'app-edit-workspace-page',\n  templateUrl: './edit-workspace.page.html',\n  styleUrls: ['./edit-workspace.page.scss'],\n})\nexport class EditWorkspacePage {\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    id: new FormControl(-1),\n  });\n\n  public workspace$!: Observable;\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n\n    this.loadWorkspace(workspaceId);\n  }\n\n  /**\n   * Loads workspace data from the workspace service.\n   * @param id Workspace id\n   */\n  public loadWorkspace(id: number) {\n    this.workspace$ = this.workspaceService.get(id);\n    this.getSubscription = this.workspace$.subscribe((workspace) => {\n      this.form.patchValue(workspace);\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.updateSubscription = this.workspaceService.update(this.form.value).subscribe(() => {\n      this.router.navigate(['/']).then(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  Edit workspace: {{ (workspace$ | async)?.name }}\n  \n\n  \n    Save\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./edit-workspace.page.scss\n                \n                form {\n  padding: 4rem;\n}\n\n.buttons {\n  display: flex;\n  margin-top: 1rem;\n\n  &>* {\n    display: block;\n    margin-right: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Edit workspace: {{ (workspace$ | async)?.name }}        Save    Cancel  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditWorkspacePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailsModule.html":{"url":"modules/EmailsModule.html","title":"module - EmailsModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EmailsModule\n\n\n\ncluster_EmailsModule_imports\n\n\n\n\nEmailsRoutingModule\n\nEmailsRoutingModule\n\n\n\nEmailsModule\n\nEmailsModule\n\nEmailsModule -->\n\nEmailsRoutingModule->EmailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/emails/emails.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            EmailsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmailsRoutingModule } from './emails.routing';\n\n@NgModule({\n  imports: [CommonModule, EmailsRoutingModule],\n  declarations: [],\n})\nexport class EmailsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailsRoutingModule.html":{"url":"modules/EmailsRoutingModule.html","title":"module - EmailsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/emails/emails.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\n\n/**\n * Emails routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/inbox.svg',\n    },\n  },\n];\n\n/**\n * Emails routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EmailsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Emoji.html":{"url":"classes/Emoji.html","title":"class - Emoji","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Emoji\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/libs/emoji/emoji.lib.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _emojiConvertor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                characterSequenceToUnicode\n                            \n                            \n                                    Static\n                                colonsToUnicode\n                            \n                            \n                                    Static\n                                emojiNameToUnicode\n                            \n                            \n                                    Static\n                                unicodeToTwemoji\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _emojiConvertor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n    const emojiConvertor = new EmojiConvertor();\n    emojiConvertor.replace_mode = 'unified';\n    emojiConvertor.allow_native = true;\n    emojiConvertor.allow_caps = true;\n    emojiConvertor.addAliases(EMOJI_ALIASES);\n    return emojiConvertor;\n  })()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/libs/emoji/emoji.lib.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        characterSequenceToUnicode\n                        \n                    \n                \n            \n            \n                \n                    \n                    characterSequenceToUnicode(characterSequence: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/emoji/emoji.lib.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    characterSequence\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        colonsToUnicode\n                        \n                    \n                \n            \n            \n                \n                    \n                    colonsToUnicode(source: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/emoji/emoji.lib.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        emojiNameToUnicode\n                        \n                    \n                \n            \n            \n                \n                    \n                    emojiNameToUnicode(emojiName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/emoji/emoji.lib.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emojiName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        unicodeToTwemoji\n                        \n                    \n                \n            \n            \n                \n                    \n                    unicodeToTwemoji(source: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/emoji/emoji.lib.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EmojiConvertor } from 'emoji-js';\nimport { EMOJI_SEQUENCE_ALIASES } from './emoji-sequence.aliases';\nimport { EMOJI_ALIASES } from './emoji.aliases';\n\nexport class Emoji {\n  private static _emojiConvertor = (() => {\n    const emojiConvertor = new EmojiConvertor();\n    emojiConvertor.replace_mode = 'unified';\n    emojiConvertor.allow_native = true;\n    emojiConvertor.allow_caps = true;\n    emojiConvertor.addAliases(EMOJI_ALIASES);\n    return emojiConvertor;\n  })();\n\n  public static emojiNameToUnicode(emojiName: string) {\n    return Emoji.colonsToUnicode(`:${emojiName}:`);\n  }\n\n  public static colonsToUnicode(source: string) {\n    return Emoji._emojiConvertor.replace_colons(source);\n  }\n\n  public static characterSequenceToUnicode(characterSequence: string) {\n    return (EMOJI_SEQUENCE_ALIASES as any)[characterSequence] || characterSequence;\n  }\n\n  public static unicodeToTwemoji(source: string) {\n    (window as any).twemoji.parse(source, {\n      size: '16x16',\n      // ext: '.svg',\n      base: 'https://twemoji.maxcdn.com/',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmojiToken.html":{"url":"interfaces/EmojiToken.html","title":"interface - EmojiToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmojiToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/libs/marked/extensions/marked-emoji-extension.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            emoji\n                                        \n                                \n                                \n                                        \n                                            emojiType\n                                        \n                                \n                                \n                                        \n                                            raw\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emoji\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emoji:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emojiType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emojiType:     \"sequence\" | \"colon\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"sequence\" | \"colon\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        raw\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        raw:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EMOJI_SEQUENCE_REGEX } from '@main/libs/emoji/emoji-sequence.aliases';\nimport { Emoji } from '@main/libs/emoji/emoji.lib';\nimport { marked } from 'marked';\n\ninterface EmojiToken {\n  type: 'emoji';\n  raw: string;\n  emoji: string;\n  emojiType: 'sequence' | 'colon';\n}\n\n/**\n * Emoji extension to use with `marked` parser\n *\n * Replaces only `:smile:` notation\n */\nexport const emoji = {\n  name: 'emoji',\n  level: 'inline', // This is an inline-level tokenizer\n  start(src: string) {\n    return src.indexOf(':');\n  }, // Hint to Marked.js to stop and check for a match\n  tokenizer(src: string, _tokens: any) {\n    const rule = /^:(\\w+):/; // Regex for the complete token, anchor to string start\n    const match = rule.exec(src);\n\n    const matchSequence = EMOJI_SEQUENCE_REGEX.exec(src);\n\n    if (matchSequence) {\n      return {\n        type: 'emoji',\n        raw: matchSequence[0],\n        emoji: matchSequence[1],\n        emojiType: 'sequence',\n      };\n    }\n\n    if (match) {\n      return {\n        // Token to generate\n        type: 'emoji', // Should match \"name\" above\n        raw: match[0], // Text to consume from the source\n        emoji: match[1], // Additional custom properties\n        emojiType: 'colon',\n      };\n    }\n\n    return undefined;\n  },\n  renderer(token: EmojiToken): string {\n    const convertFunction =\n      token.emojiType === 'colon' ? Emoji.emojiNameToUnicode : Emoji.characterSequenceToUnicode;\n    const convertedEmoji = convertFunction(token.emoji);\n\n    return `${convertedEmoji}`;\n  },\n} as marked.TokenizerExtension & marked.RendererExtension;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Enum.html":{"url":"classes/Enum.html","title":"class - Enum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Enum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/enum.class.ts\n        \n\n\n            \n                Description\n            \n            \n                Utility enum functions for typescript\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                entries\n                            \n                            \n                                    Static\n                                isNumeric\n                            \n                            \n                                    Static\n                                keys\n                            \n                            \n                                    Static\n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        entries\n                        \n                    \n                \n            \n            \n                \n                    \n                    entries(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:70\n                \n            \n\n\n            \n                \n                    Function to get enum value by key.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.entries(TestEnum) // [['One', 1], ['Two', 2], ['Three', 3]]\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get entries from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.entries(TestEnum) // [[&#39;One&#39;, 1], [&#39;Two&#39;, 2], [&#39;Three&#39;, 3]]\n                        \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        array of enum entries\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isNumeric\n                        \n                    \n                \n            \n            \n                \n                    \n                    isNumeric(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:10\n                \n            \n\n\n            \n                \n                    Tests if the given enum is numeric - contains at leas one number as value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to test\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true or false based on whether enum has numeric values\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        keys\n                        \n                    \n                \n            \n            \n                \n                    \n                    keys(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:32\n                \n            \n\n\n            \n                \n                    Function to get enum keys.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.keys(TestEnum) // ['One', 'Two', 'Three']\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get keys from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.keys(TestEnum) // [&#39;One&#39;, &#39;Two&#39;, &#39;Three&#39;]\n                        \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        array of enum keys\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        values\n                        \n                    \n                \n            \n            \n                \n                    \n                    values(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:48\n                \n            \n\n\n            \n                \n                    Function to get enum values.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.values(TestEnum) // [1, 2, 3]\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get values from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.values(TestEnum) // [1, 2, 3]\n                        \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        array of enum values\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Enum {\n  /**\n   * Tests if the given enum is numeric - contains at leas one number as value.\n   * @param enumType enum to test\n   * @returns true or false based on whether enum has numeric values\n   */\n  public static isNumeric(enumType: any): boolean {\n    for (const key of Object.keys(enumType)) {\n      if (Number(key)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Function to get enum keys.\n   * @param enumType enum to get keys from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.keys(TestEnum) // ['One', 'Two', 'Three']\n   * @returns array of enum keys\n   */\n  public static keys(enumType: any): string[] {\n    return Object.keys(enumType).filter((k) => !Number(k) && k != '0');\n  }\n\n  /**\n   * Function to get enum values.\n   * @param enumType enum to get values from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.values(TestEnum) // [1, 2, 3]\n   * @returns array of enum values\n   */\n  public static values(enumType: any): any[] {\n    if (!Enum.isNumeric(enumType)) {\n      return Object.values(enumType);\n    }\n\n    return Object.values(enumType)\n      .filter((v) => Number(v) || v === '0')\n      .map((v) => Number(v));\n  }\n\n  /**\n   * Function to get enum value by key.\n   * @param enumType enum to get entries from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.entries(TestEnum) // [['One', 1], ['Two', 2], ['Three', 3]]\n   * @returns array of enum entries\n   */\n  public static entries(enumType: any): [string, any][] {\n    if (!Enum.isNumeric(enumType)) {\n      return Object.entries(enumType);\n    }\n\n    return Object.entries(enumType)\n      .filter((e) => Number(e[1]) || e[1] === '0' || e[1] === 0)\n      .map((e) => [e[0], Number(e[1])]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interceptors/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                unauthorizedInARow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/interceptors/error.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/interceptors/error.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unauthorizedInARow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/interceptors/error.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DialogService } from '@main/services/dialog.service';\nimport { catchError, EMPTY, Observable, throwError } from 'rxjs';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private dialogService: DialogService, private router: Router) {}\n\n  private unauthorizedInARow = 0;\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((e, obs) => {\n        if (e.status === 401) {\n          this.unauthorizedInARow++;\n\n          if (this.unauthorizedInARow > 1) return EMPTY;\n\n          this.dialogService.closeAll();\n\n          if (e.error.message == 'user deleted') {\n            localStorage.removeItem('logged');\n            this.router.navigate(['/auth/delete-account']);\n            return EMPTY;\n          }\n\n          if (localStorage.getItem('logged')) {\n            localStorage.removeItem('logged');\n            this.dialogService.openErrorDialog($localize`Your session has expired.`);\n          }\n\n          this.router.navigate(['/auth/login']);\n          return EMPTY;\n        }\n\n        return throwError(() => e);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorValidationTree.html":{"url":"interfaces/ErrorValidationTree.html","title":"interface - ErrorValidationTree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorValidationTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/decorators/service-validator.decorator.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/decorators/service-validator.decorator.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { DialogService } from '@main/services/dialog.service';\nimport { Observable } from 'rxjs';\n\nexport interface ErrorValidationTree {\n  [key: string]: {\n    [key: number]: string;\n  };\n}\n\nexport function ServiceValidator(errorValidationTree: ErrorValidationTree) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    descriptor.value = function (identifier: string) {\n      // const result = originalMethod.apply(this, identifier);\n\n      // This function returns new observable to use it as a pipe in other observables\n      return (source: Observable) => {\n        // Check for match in response\n        const match = (response: any) => {\n          // identifier check\n          if (!errorValidationTree[identifier]) return;\n\n          // Status check\n          const status = response?.error?.status || response?.status;\n          if (!status) return;\n\n          return errorValidationTree[identifier][status] || null;\n        };\n\n        const showAlert = (message: string, responseType: 'SUCCESS' | 'ERROR') => {\n          const dialogService = (window as any).injector.get(DialogService);\n\n          dialogService.alert({\n            title:\n              responseType === 'SUCCESS' ? $localize`Success` : $localize`Something went wrong`,\n            message,\n            cancelText: $localize`OK`,\n          });\n        };\n\n        return new Observable((subscriber) => {\n          source.subscribe({\n            next(value) {\n              const m = match(value);\n\n              if (m) {\n                showAlert(m, 'ERROR');\n              } else {\n                subscriber.next(value);\n              }\n            },\n            error(error) {\n              const m = match(error);\n\n              if (m) {\n                showAlert(m, 'ERROR');\n              } else {\n                subscriber.error(error);\n              }\n            },\n            complete() {\n              subscriber.complete();\n            },\n          });\n        });\n      };\n    };\n\n    return descriptor;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendedMeta.html":{"url":"interfaces/ExtendedMeta.html","title":"interface - ExtendedMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtendedMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/helpers/classes/story-page-config.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Meta\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            selector\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:     Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selector\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selector:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgControl } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainModule } from '@main/_main.module';\nimport { Meta, moduleMetadata } from '@storybook/angular';\nimport { NgModuleMetadata } from '@storybook/angular/dist/ts3.9/client/preview/types';\nimport { merge } from 'lodash-es';\nimport { getAllProperties } from '../functions/get-all-properties.function';\n\nexport interface ExtendedMeta extends Meta {\n  metadata?: Partial;\n  selector: string;\n}\n\nconst DEFAULT_METADATA: Partial = {\n  imports: [MainModule, BrowserAnimationsModule],\n  providers: [NgControl],\n};\n\nconst IGNORED_PROPERTIES = getAllProperties({});\n\nexport class StoryPageConfig {\n  private _meta: ExtendedMeta;\n\n  constructor(meta: ExtendedMeta) {\n    this._meta = meta;\n\n    this._meta.decorators = [moduleMetadata(merge({}, DEFAULT_METADATA, this._meta.metadata))];\n    this.disableEditingFunctions();\n  }\n\n  private disableEditingFunctions() {\n    if (!this._meta.argTypes) {\n      this._meta.argTypes = {};\n    }\n\n    const properties = getAllProperties(this._meta.component.prototype);\n    console.log(properties);\n    for (const [property, predicate] of properties.map(\n      (p) => [p, this.propertyPredicate(p)] as [string, any],\n    )) {\n      if (typeof this._meta.component.prototype[property] === 'function') {\n        switch (predicate) {\n          case 'delete':\n            this._meta.argTypes[property] = { table: { disable: true } };\n            break;\n          case 'readonly':\n            this._meta.argTypes[property] = { control: false };\n            break;\n        }\n      }\n    }\n  }\n\n  private propertyPredicate(property: string) {\n    if (property[0] === '_') return 'delete';\n    if (property.startsWith('ng')) return 'delete';\n    return !IGNORED_PROPERTIES.includes(property) ? 'readonly' : null;\n  }\n\n  public setTitle(title: string) {\n    this._meta.title = title;\n    return this;\n  }\n\n  public addDecorators(decorators: Meta['decorators']) {\n    if (!this._meta.decorators) {\n      this._meta.decorators = [];\n    }\n\n    this._meta.decorators = ([] as any[]).concat(this._meta.decorators, decorators);\n    return this;\n  }\n\n  public get selector() {\n    return this._meta.selector;\n  }\n\n  public meta() {\n    return this._meta as Meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterCheckbox.html":{"url":"interfaces/FilterCheckbox.html","title":"interface - FilterCheckbox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterCheckbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/filters.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        apply\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(input: T, option: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/interfaces/filters.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    option\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     \"1\" | \"0\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"1\" | \"0\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterCheckbox {\n  type: 'checkbox';\n  options: {\n    1: T | null;\n    0: T | null;\n  };\n  value: 1 | 0;\n  label: string;\n  apply(input: T, option: any): T;\n}\n\nexport type Filter = FilterCheckbox;\n\nexport type FilterType = 'checkbox';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filters.html":{"url":"classes/Filters.html","title":"class - Filters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/filters.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ONLY_MY_TASKS\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        ONLY_MY_TASKS\n                        \n                    \n                \n            \n            \n                \n                    \n                    ONLY_MY_TASKS(currentUserId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/filters.class.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterCheckbox\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterCheckbox } from '@main/interfaces/filters.interface';\nimport { Task } from '@tasks/interfaces/task.interface';\n\nexport class Filters {\n  public static ONLY_MY_TASKS(currentUserId: string): FilterCheckbox {\n    return {\n      type: 'checkbox',\n      label: $localize`Only my tasks`,\n      options: {\n        1: { assigneeId: currentUserId },\n        0: {},\n      },\n      value: 0,\n      apply(tasks: Task[], option: { assigneeId?: string }) {\n        return tasks.filter((task) => task.assigneeId === option.assigneeId);\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/filters/filters.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters\n            \n\n            \n                styleUrls\n                ./filters.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filters\n                            \n                            \n                                    Public\n                                    Optional\n                                form\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getControl\n                            \n                            \n                                    Public\n                                saveFilters\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filters\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/filters/filters.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/filters/filters.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getControl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getControl(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/filters/filters.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/filters/filters.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/filters/filters.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormArray\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/filters/filters.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:28\n\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n\n                \n                    \n                        getfilters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/filters/filters.component.ts:21\n                                \n                            \n\n                \n                    \n                        setfilters(filters: Filter[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/filters/filters.component.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            filters\n                                                    \n                                                            \n                                                                            Filter[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormArray, FormControl, NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { Filter } from '@main/interfaces/filters.interface';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss'],\n})\nexport class FiltersComponent extends ControlAccessor {\n  @Input() set filters(filters: Filter[]) {\n    this.form = new FormArray(\n      filters.map((filter) => {\n        return new FormControl(filter.value);\n      }),\n    );\n    this._filters = filters;\n  }\n\n  public get filters() {\n    return this._filters;\n  }\n\n  private _filters: Filter[] = [];\n  public form?: FormArray;\n\n  constructor(public override ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  public getControl(index: number) {\n    const control = (this.form?.controls[index] || new FormControl()) as FormControl;\n    return control;\n  }\n\n  public saveFilters() {\n    if (!this.form) return;\n\n    let formValue: Filter[] = [];\n\n    for (const [index, filter] of this.filters.entries()) {\n      const filterValue = Number(this.form?.controls[index].value) as 0 | 1;\n      filter.value = filterValue;\n      formValue.push(filter);\n    }\n\n    this.control.setValue(formValue);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ filter.label }}\n      \n      Unknown filter type: {{ filter.type }}\n    \n  \n\n  Save filters\n\n    \n\n    \n                \n                    ./filters.component.scss\n                \n                .filters {\n  width: 100%;\n\n  app-button {\n    width: 100%;\n\n    ::ng-deep button {\n      width: 100%;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ filter.label }}            Unknown filter type: {{ filter.type }}        Save filters'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusInitialDirective.html":{"url":"directives/FocusInitialDirective.html","title":"directive - FocusInitialDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  FocusInitialDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/focus-initial.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive to focus on the first input element on the page\n\n            \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appFocusInitial]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/directives/focus-initial.directive.ts:9\n                            \n                        \n\n                \n                    \n                            Default constructor of the directive.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to attached element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/directives/focus-initial.directive.ts:19\n                \n            \n\n\n            \n                \n                    Lifecycle hook to initialize the directive.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n/**\n * Directive to focus on the first input element on the page\n */\n@Directive({\n  selector: '[appFocusInitial]',\n})\nexport class FocusInitialDirective implements AfterViewInit {\n  /**\n   * Default constructor of the directive.\n   * @param el Reference to attached element\n   */\n  constructor(private el: ElementRef) {}\n\n  /**\n   * Lifecycle hook to initialize the directive.\n   */\n  ngAfterViewInit(): void {\n    this.el.nativeElement.__ngContext__[33].focus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordPage.html":{"url":"components/ForgotPasswordPage.html","title":"component - ForgotPasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/forgot-password/forgot-password.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-page\n            \n\n            \n                styleUrls\n                ./forgot-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faAngleDown\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                resetSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:24\n                        \n                    \n\n            \n                \n                    Form group for reset password.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        resetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { requiredValidator } from '@main/validators/required.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-forgot-page',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  faAngleDown = faAngleDown;\n\n  private resetSubscription?: Subscription;\n\n  /**\n   * Form group for reset password.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n  });\n\n  resetPassword() {\n    if (this.resetSubscription && !this.resetSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.resetSubscription = this.authService.resetPassword(this.form.value).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n        Back to login page\n      \n      \n        \n          Reset password\n          When you enter your email address, you will receive an email with a link to reset your password.\n        \n\n        \n\n        Reset password\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .return-button {\n      position: relative;\n      display: flex;\n      align-items: center;\n      align-self: flex-start;\n      margin: 0 0 0 40px;\n\n      &:hover {\n        a {\n          color: var(--color-link-hover);\n        }\n\n        app-icon {\n          color: var(--color-link-hover);\n        }\n      }\n\n      app-icon {\n        display: inline-block;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-right: 5px;\n        color: var(--color-link);\n        transform: rotate(90deg);\n      }\n\n      a {\n        color: var(--color-link);\n        cursor: pointer;\n        transition: color 0.2s ease;\n      }\n    }\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Back to login page                              Reset password          When you enter your email address, you will receive an email with a link to reset your password.                        Reset password                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormControlStoryPageConfig.html":{"url":"classes/FormControlStoryPageConfig.html","title":"class - FormControlStoryPageConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormControlStoryPageConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/helpers/classes/form-control-story-page-config.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        StoryPageConfig\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _meta\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addDecorators\n                            \n                            \n                                    Private\n                                disableEditingFunctions\n                            \n                            \n                                    Public\n                                meta\n                            \n                            \n                                    Private\n                                propertyPredicate\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(meta: ExtendedMeta)\n                    \n                \n                        \n                            \n                                Defined in src/stories/helpers/classes/form-control-story-page-config.class.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        ExtendedMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtendedMeta\n\n                    \n                \n                        \n                            \n                                Inherited from         StoryPageConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         StoryPageConfig:22\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addDecorators\n                        \n                    \n                \n            \n            \n                \n                    \n                    addDecorators(decorators)\n                \n            \n\n\n            \n                \n                    Inherited from         StoryPageConfig\n\n                \n            \n            \n                \n                        Defined in         StoryPageConfig:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    decorators\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        disableEditingFunctions\n                        \n                    \n                \n            \n            \n                \n                    \n                    disableEditingFunctions()\n                \n            \n\n\n            \n                \n                    Inherited from         StoryPageConfig\n\n                \n            \n            \n                \n                        Defined in         StoryPageConfig:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        meta\n                        \n                    \n                \n            \n            \n                \n                    \n                    meta()\n                \n            \n\n\n            \n                \n                    Inherited from         StoryPageConfig\n\n                \n            \n            \n                \n                        Defined in         StoryPageConfig:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Meta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        propertyPredicate\n                        \n                    \n                \n            \n            \n                \n                    \n                    propertyPredicate(property: string)\n                \n            \n\n\n            \n                \n                    Inherited from         StoryPageConfig\n\n                \n            \n            \n                \n                        Defined in         StoryPageConfig:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"delete\" | \"readonly\"\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setTitle(title: string)\n                \n            \n\n\n            \n                \n                    Inherited from         StoryPageConfig\n\n                \n            \n            \n                \n                        Defined in         StoryPageConfig:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Meta } from '@storybook/angular';\nimport { merge } from 'lodash-es';\nimport { DOCS_PRESET_CONTROL_ACCESSOR } from '../arg-type.helper';\nimport { ExtendedMeta, StoryPageConfig } from './story-page-config.class';\n\nconst DEFAULT_CONFIG: Partial = {\n  argTypes: {\n    ...DOCS_PRESET_CONTROL_ACCESSOR,\n  },\n} as Meta;\n\nexport class FormControlStoryPageConfig extends StoryPageConfig {\n  constructor(meta: ExtendedMeta) {\n    super(merge({}, DEFAULT_CONFIG, meta));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitAccount.html":{"url":"interfaces/GitAccount.html","title":"interface - GitAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitHubUsername\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            suspended\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitHubUsername\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitHubUsername:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suspended\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suspended:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitAccountWithUsage.html":{"url":"interfaces/GitAccountWithUsage.html","title":"interface - GitAccountWithUsage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitAccountWithUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            account\n                                        \n                                \n                                \n                                        \n                                            usage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        account:         GitAccount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitAccount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usage:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GitAccount } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { map, Observable, take } from 'rxjs';\n\ninterface GitAccountWithUsage {\n  account: GitAccount;\n  usage: Observable;\n}\n\n@Component({\n  selector: 'app-settings-integrations',\n  templateUrl: './settings-integrations.page.html',\n  styleUrls: ['./settings-integrations.page.scss'],\n})\nexport class SettingsIntegrationsPage implements OnInit {\n  public gitHubAccounts$!: Observable;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  ngOnInit() {\n    this.loadGitHubIntegration();\n  }\n\n  public loadGitHubIntegration(): void {\n    this.gitHubAccounts$ = this.gitIntegrationService.getConnectedGitHubAccounts().pipe(\n      map((accounts) => {\n        return accounts.map((account) => {\n          return {\n            account,\n            usage: this.getConnectedProjects(account).pipe(take(1)),\n          };\n        });\n      }),\n    );\n  }\n\n  public disconnect(account: GitAccount): void {\n    this.gitIntegrationService.deleteConnectedGitHubAccount(account.id).subscribe(({ link }) => {\n      window.open(link, '_blank');\n    });\n  }\n\n  public getConnectedProjects(account: GitAccount): Observable {\n    return this.gitIntegrationService\n      .getGitHubAccountConnectedProjects(account)\n      .pipe(map((projects) => projects.map((project: any) => project.name).join(', ')));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitIntegration.html":{"url":"interfaces/GitIntegration.html","title":"interface - GitIntegration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitIntegration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitRepositories\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitRepositories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitRepositories:         GitRepository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitRepository[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GitIntegrationService.html":{"url":"injectables/GitIntegrationService.html","title":"injectable - GitIntegrationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GitIntegrationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/git-integration.service.ts\n        \n\n\n            \n                Description\n            \n            \n                How to use Git integration service:\n\nRun method startGitHubIntegration() to start the integration process and open the browser to the GitHub login page.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attachGitHubIntegration\n                            \n                            \n                                    Public\n                                deleteConnectedGitHubAccount\n                            \n                            \n                                    Public\n                                deleteGitHubIntegration\n                            \n                            \n                                    Public\n                                getConnectedGitHubAccounts\n                            \n                            \n                                    Public\n                                getGitHubAccountConnectedProjects\n                            \n                            \n                                    Public\n                                getGitHubIntegration\n                            \n                            \n                                    Public\n                                gitHubIssueList\n                            \n                            \n                                    Public\n                                gitHubPullList\n                            \n                            \n                                    Public\n                                hasGitHubIntegration\n                            \n                            \n                                    Public\n                                isOwnerOfRepository\n                            \n                            \n                                    Public\n                                postGitHubIntegration\n                            \n                            \n                                    Public\n                                startGitHubIntegration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/git-integration.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        attachGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    attachGitHubIntegration(projectId: number, repositoryName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repositoryName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteConnectedGitHubAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteConnectedGitHubAccount(gitHubAccountId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:76\n                \n            \n\n\n            \n                \n                    Delete the given account connection\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gitHubAccountId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GitHub account id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        object with link to open the GitHub page with application removal\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGitHubIntegration(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConnectedGitHubAccounts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConnectedGitHubAccounts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGitHubAccountConnectedProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGitHubAccountConnectedProjects(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gitHubIssueList\n                        \n                    \n                \n            \n            \n                \n                    \n                    gitHubIssueList(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gitHubPullList\n                        \n                    \n                \n            \n            \n                \n                    \n                    gitHubPullList(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hasGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasGitHubIntegration(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isOwnerOfRepository\n                        \n                    \n                \n            \n            \n                \n                    \n                    isOwnerOfRepository(repositoryName: string, account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:103\n                \n            \n\n\n            \n                \n                    Checks if the given account is the owner of the repository\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    repositoryName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Repository name with it's owner ex.\n\n                                    \n                                \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GitHub account object to test with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            this.gitHubIntegrationService.isOwnerOfRepository(&#39;@czemar/cli&#39;, account)\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the repository is owned by the account\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        postGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    postGitHubIntegration(installationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    installationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        startGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    startGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:28\n                \n            \n\n\n            \n                \n                    Start GitHub integration process - opens the GitHub page in new window, to give user ability to choose witch account and repositories wants to give access to.\n\n\n                    \n                        Example :\n                        \n                            this.gitHubIntegrationService.startGitHubIntegration()\n                        \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable true if the opened window with GitHub integration was closed\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GitAccount, GitIntegration } from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { ApiService } from '@main/services/api.service';\nimport { filter, interval, map, mergeMap, Observable, take } from 'rxjs';\nimport { ProjectService } from './project.service';\n\n/**\n * How to use Git integration service:\n *\n * 1. Run method `startGitHubIntegration()` to start the integration process and open the browser to the GitHub login page.\n *\n *\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class GitIntegrationService {\n  constructor(private apiService: ApiService, private projectService: ProjectService) {}\n\n  /**\n   * Start GitHub integration process - opens the GitHub page in new window, to give user ability to choose witch account and repositories wants to give access to.\n   * @example this.gitHubIntegrationService.startGitHubIntegration()\n   * @returns Observable true if the opened window with GitHub integration was closed\n   */\n  public startGitHubIntegration(): Observable {\n    return this.apiService.get('/user/integration/github/repository').pipe(\n      map((response: any) => response.link),\n      mergeMap((url) => {\n        const win = window.open(url, '_blank');\n\n        if (!win) throw new Error('This browser does not support window.open');\n\n        return interval(100).pipe(\n          map(() => win.closed),\n          filter((closed) => closed),\n          take(1),\n        );\n      }),\n    );\n  }\n\n  public postGitHubIntegration(installationId: string): Observable {\n    return this.apiService.post(`/user/integration/github`, {\n      params: { installationId },\n    });\n  }\n\n  public getGitHubIntegration(): Observable {\n    return this.apiService.get('/user/integration/github/repository');\n  }\n\n  public attachGitHubIntegration(projectId: number, repositoryName: string): Observable {\n    return this.apiService.post(`/project/${projectId}/integration/github`, {\n      body: repositoryName,\n    });\n  }\n\n  public getConnectedGitHubAccounts(): Observable {\n    return this.apiService\n      .get('/user/integration/github')\n      .pipe(\n        map((accounts: GitAccount[]) =>\n          accounts.map((account) => ({ ...account, gitHubUsername: `@${account.gitHubUsername}` })),\n        ),\n      );\n  }\n\n  /**\n   * Delete the given account connection\n   * @param gitHubAccountId GitHub account id\n   * @returns object with link to open the GitHub page with application removal\n   */\n  public deleteConnectedGitHubAccount(gitHubAccountId: number): Observable {\n    return this.apiService.delete(`/user/integration/github/${gitHubAccountId}`);\n  }\n\n  public deleteGitHubIntegration(projectId: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/integration/github`);\n  }\n\n  public hasGitHubIntegration(projectId: number): Observable {\n    return this.projectService.get(projectId).pipe(map((project) => !!project.gitHubIntegration));\n  }\n\n  public gitHubIssueList(projectId: number) {\n    return this.apiService.get(`/project/${projectId}/integration/git/issue`);\n  }\n\n  public gitHubPullList(projectId: number) {\n    return this.apiService.get(`/project/${projectId}/integration/git/pull`);\n  }\n\n  /**\n   * Checks if the given account is the owner of the repository\n   * @param repositoryName Repository name with it's owner ex. @czemar/cli\n   * @param account GitHub account object to test with\n   * @example this.gitHubIntegrationService.isOwnerOfRepository('@czemar/cli', account)\n   * @returns true if the repository is owned by the account\n   */\n  public isOwnerOfRepository(repositoryName: string, account: GitAccount): boolean {\n    const preparedUsername = account.gitHubUsername.replace('@', '');\n    return Boolean(repositoryName.match(new RegExp('^' + preparedUsername + '/*')));\n  }\n\n  public getGitHubAccountConnectedProjects(account: GitAccount): Observable {\n    return this.projectService\n      .list()\n      .pipe(\n        map((projects) =>\n          projects.filter(\n            (project: Project) =>\n              project.gitHubIntegration &&\n              this.isOwnerOfRepository(project.gitHubIntegration, account),\n          ),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitIssue.html":{"url":"interfaces/GitIssue.html","title":"interface - GitIssue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitIssue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            service\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitPull.html":{"url":"interfaces/GitPull.html","title":"interface - GitPull","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitPull\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            branch\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            service\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitRepository.html":{"url":"interfaces/GitRepository.html","title":"interface - GitRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fullName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            private\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GithubIntegrationPage.html":{"url":"components/GithubIntegrationPage.html","title":"component - GithubIntegrationPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GithubIntegrationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/github-integration/github-integration.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-github-integration-page\n            \n\n            \n                styleUrls\n                ./github-integration.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./github-integration.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/github-integration/github-integration.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/github-integration/github-integration.page.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\n\n@Component({\n  selector: 'app-github-integration-page',\n  templateUrl: './github-integration.page.html',\n  styleUrls: ['./github-integration.page.scss'],\n})\nexport class GithubIntegrationPage implements OnInit {\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private gitIntegrationService: GitIntegrationService,\n  ) {}\n\n  ngOnInit() {\n    const { installation_id, setup_action } = this.activatedRoute.snapshot.queryParams;\n\n    console.log(installation_id, setup_action, setup_action !== 'update');\n\n    if (installation_id && setup_action && setup_action !== 'update') {\n      this.gitIntegrationService.postGitHubIntegration(installation_id).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  GitHub connection success\n\n\n  Now you can close this page\n\n\n    \n\n    \n                \n                    ./github-integration.page.scss\n                \n                :host {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\nh2 {\n  color: var(--color-text);\n  font-size: 1.5rem;\n}\n\np {\n  color: var(--color-text);\n  opacity: 0.75;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  GitHub connection success  Now you can close this page'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'GithubIntegrationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/icon/icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        Icon component. Supports material icons and font-awesome icons.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-icon\n            \n\n            \n                styleUrls\n                ./icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _icon\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                prefix\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.height\n                            \n                            \n                                style.width\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    icon\n                                \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    iconDefinition\n                                \n                                \n                                    style\n                                \n                                \n                                    snakeCaseName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/icon/icon.component.ts:35\n                            \n                        \n                \n                    \n                        Icon to display. Can be a string or an icon definition.\nFor example:\nFor the icon \"fa fa-question\" you can use:\nFor the icon \"mat search\" you can use:\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '24px'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/icon/icon.component.ts:19\n                            \n                        \n                \n                    \n                        Icon size. Defaults to 1.5em. Supports all CSS units.\nFor example: 24px, 1.5em, etc.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:66\n                        \n                    \n\n            \n                \n                    Binding to the hosts height attribute to use the size input.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:59\n                        \n                    \n\n            \n                \n                    Binding to hosts width attribute to use the size input.\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string | IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:95\n                        \n                    \n\n            \n                \n                    Private icon variable to use getter and setter for props.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IconName\n\n                    \n                \n                \n                    \n                        Default value : 'question'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:105\n                        \n                    \n\n            \n                \n                    Name getter\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IconPrefix\n\n                    \n                \n                \n                    \n                        Default value : 'fas'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:100\n                        \n                    \n\n            \n                \n                    Prefix getter\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:52\n                                \n                            \n                    \n                        \n                                Icon getter\n\n\n                                \n                                    Returns :         string | IconDefinition\n\n                                \n                        \n                    \n\n                \n                    \n                        seticon(value: string | IconDefinition)\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:35\n                                \n                            \n                    \n                        \n                                Icon to display. Can be a string or an icon definition.\nFor example:\nFor the icon \"fa fa-question\" you can use:\nFor the icon \"mat search\" you can use:\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string | IconDefinition\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:59\n                                \n                            \n                    \n                        \n                                Binding to hosts width attribute to use the size input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:66\n                                \n                            \n                    \n                        \n                                Binding to the hosts height attribute to use the size input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        iconDefinition\n                    \n                \n\n                \n                    \n                        geticonDefinition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:73\n                                \n                            \n                    \n                        \n                                Getter to the icon definition. If no icon is found it returns the question icon.\n\n\n                                \n                                    Returns :         IconDefinition\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        style\n                    \n                \n\n                \n                    \n                        getstyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:83\n                                \n                            \n                    \n                        \n                                Style host binding to set the icon size.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        snakeCaseName\n                    \n                \n\n                \n                    \n                        getsnakeCaseName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:113\n                                \n                            \n                    \n                        \n                                Getter to get the icon name in snake case.\nFor example:\nfor ShoppingCart this function will return shopping_cart\n\n\n                                \n                                    Returns :         IconName\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, HostBinding, Input } from '@angular/core';\nimport { IconName, IconPrefix } from '@fortawesome/fontawesome-svg-core';\nimport { Utils } from '../../classes/utils.class';\nimport { faQuestion, IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Icon component. Supports material icons and font-awesome icons.\n */\n@Component({\n  selector: 'app-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent {\n  /**\n   * Icon size. Defaults to 1.5em. Supports all CSS units.\n   * For example: 24px, 1.5em, etc.\n   */\n  @Input() size: string = '24px';\n\n  /**\n   * Icon to display. Can be a string or an icon definition.\n   * For example:\n   *\n   * For the icon \"fa fa-question\" you can use:\n   * ```html\n   * \n   * ```\n   *\n   * For the icon \"mat search\" you can use:\n   * ```html\n   * \n   * ```\n   */\n  @Input() set icon(value: string | IconDefinition) {\n    this._icon = value;\n\n    if (typeof value === 'string') {\n      const splitIndex = Utils.regexIndexOf(value, /[A-Z]/);\n\n      this.prefix = value.substring(0, splitIndex) as IconPrefix;\n      this.name = value.substring(splitIndex) as IconName;\n    } else {\n      this.prefix = value.prefix as IconPrefix;\n      this.name = value.iconName as IconName;\n    }\n  }\n\n  /**\n   * Icon getter\n   */\n  public get icon(): string | IconDefinition {\n    return this._icon;\n  }\n\n  /**\n   * Binding to hosts width attribute to use the size input.\n   */\n  @HostBinding('style.width') get width() {\n    return this.size;\n  }\n\n  /**\n   * Binding to the hosts height attribute to use the size input.\n   */\n  @HostBinding('style.height') get height() {\n    return this.size;\n  }\n\n  /**\n   * Getter to the icon definition. If no icon is found it returns the question icon.\n   */\n  public get iconDefinition(): IconDefinition {\n    if (typeof this._icon === 'string') {\n      return faQuestion;\n    }\n    return this._icon as IconDefinition;\n  }\n\n  /**\n   * Style host binding to set the icon size.\n   */\n  public get style() {\n    return {\n      'font-size': this.size,\n      width: this.size,\n      height: this.size,\n      'line-height': this.size,\n    };\n  }\n\n  /**\n   * Private icon variable to use getter and setter for props.\n   */\n  private _icon: string | IconDefinition = '';\n\n  /**\n   * Prefix getter\n   */\n  public prefix: IconPrefix = 'fas';\n\n  /**\n   * Name getter\n   */\n  public name: IconName = 'question';\n\n  /**\n   * Getter to get the icon name in snake case.\n   * For example:\n   *\n   * for `ShoppingCart` this function will return `shopping_cart`\n   */\n  public get snakeCaseName(): IconName {\n    return Utils.snakeCase(this.name) as IconName;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    {{ snakeCaseName }}\n  \n  \n    \n  \n  \n    question_mark\n  \n\n    \n\n    \n                \n                    ./icon.component.scss\n                \n                :host {\n  display: flex;\n  width: 24px;\n  height: 24px;\n  align-items: center;\n  justify-content: center;\n  font-size: 0;\n\n  fa-icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ snakeCaseName }}                question_mark  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputAssigneeComponent.html":{"url":"components/InputAssigneeComponent.html","title":"component - InputAssigneeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputAssigneeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/input-assignee/input-assignee.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NgControl, useClass: TestNgControl }\n                \n            \n\n\n            \n                selector\n                app-input-assignee\n            \n\n            \n                styleUrls\n                ./input-assignee.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-assignee.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _assignee\n                            \n                            \n                                    Public\n                                    Optional\n                                assigneeColor\n                            \n                            \n                                    Public\n                                    Readonly\n                                isOpen$\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                overlay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assignee\n                            \n                            \n                                members\n                            \n                            \n                                projectId\n                            \n                            \n                                taskId\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    assignee\n                                \n                                \n                                    members\n                                \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assignee\n                    \n                \n                \n                    \n                        Type :     ProjectMember | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n                \n                    \n                        Type :     Map | []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        taskId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(member: ProjectMember | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    member\n                                    \n                                            ProjectMember | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _assignee\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectMember | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        assigneeColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as any)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('overlay')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        assignee\n                    \n                \n\n                \n                    \n                        getassignee()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:28\n                                \n                            \n\n                \n                    \n                        setassignee(assignee: ProjectMember | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            assignee\n                                                    \n                                                            \n                                                                        ProjectMember | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n\n\n                \n                    \n                        setmembers(members: Map | ProjectMember[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:32\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            members\n                                                    \n                                                            \n                                                                        Map | ProjectMember[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:61\n                                \n                            \n\n                \n                    \n                        setisOpen(val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { UserUtils } from '@dashboard/classes/user.class';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { untilDestroyed } from '@ngneat/until-destroy';\nimport { TaskService } from '@tasks/services/task.service';\nimport { TestNgControl } from '@tests/helpers/ng-control-testing-provider.helper';\nimport * as Color from 'color';\nimport { BehaviorSubject, filter, fromEvent, take } from 'rxjs';\n\n@Component({\n  selector: 'app-input-assignee',\n  templateUrl: './input-assignee.component.html',\n  styleUrls: ['./input-assignee.component.scss'],\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\nexport class InputAssigneeComponent extends ControlAccessor {\n  @Input() set assignee(assignee: ProjectMember | null) {\n    this._assignee = assignee;\n\n    if (assignee) {\n      this.assigneeColor = UserUtils.getColorById(assignee?.user.id);\n    } else {\n      this.assigneeColor = undefined;\n    }\n  }\n  public get assignee(): ProjectMember | null {\n    return this._assignee;\n  }\n\n  @Input() set members(members: Map | ProjectMember[]) {\n    if (Array.isArray(members)) {\n      for (const member of members) {\n        (member as any).color = UserUtils.getColorById(member.user.id);\n      }\n      this.members$.next(members as any);\n    } else if (members) {\n      const membersArray = [...members.values()];\n      for (const member of membersArray) {\n        (member as any).color = UserUtils.getColorById(member.user.id);\n      }\n      this.members$.next(membersArray as any);\n    }\n  }\n  @Input() taskId?: number;\n  @Input() projectId?: number;\n\n  @ViewChild('overlay') overlay!: ElementRef;\n\n  private _assignee: ProjectMember | null = null;\n\n  public members$ = new BehaviorSubject([] as any);\n  public readonly isOpen$ = new BehaviorSubject(false);\n  public assigneeColor?: Color;\n\n  public set isOpen(val: boolean) {\n    this.isOpen$.next(val);\n  }\n\n  public get isOpen() {\n    return this.isOpen$.value;\n  }\n\n  constructor(public override ngControl: NgControl, private taskService: TaskService) {\n    super(ngControl);\n  }\n\n  public open() {\n    setTimeout(() => {\n      fromEvent(document, 'click')\n        .pipe(\n          take(1),\n          untilDestroyed(this),\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\n        )\n        .subscribe(() => this.close());\n      this.isOpen$.next(true);\n    });\n  }\n\n  public close() {\n    this.isOpen$.next(false);\n  }\n\n  public toggle() {\n    if (this.isOpen) {\n      return this.close();\n    }\n    return this.open();\n  }\n\n  public select(member: ProjectMember | null) {\n    if (this.taskId && this.projectId)\n      this.taskService\n        .assign(member?.user.id || null, this.taskId, this.projectId)\n        .subscribe(() => {\n          this.close();\n          location.reload();\n        });\n  }\n}\n\n    \n\n    \n        \n\n  {{ assignee ? assignee.user.name[0] : '+' }}\n\n\n\n  \n    \n      {{ member.user.name[0] }}\n      \n        {{ member.user.name }} {{ member.user.surname }}\n        @{{ member.user.username }}\n      \n    \n    \n    \n      -\n      Remove assignee\n    \n  \n\n\n    \n\n    \n                \n                    ./input-assignee.component.scss\n                \n                @import '../../../../styles/typography';\n\n.assignee {\n  display: flex;\n  width: 40px;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-secondary-400);\n  border-radius: 50%;\n  color: var(--color-text);\n  cursor: pointer;\n  transition: background-color 0.4s ease;\n\n  &:not(.add) {\n    @include typo-title;\n\n    background-color: var(--color-primary-500);\n  }\n\n  &:not(.add):hover {\n    background-color: var(--color-secondary-300);\n  }\n}\n\n.members-overlay {\n  padding: 1rem;\n  padding: 0.5rem 0;\n  background-color: var(--color-secondary-600);\n  border-radius: var(--border-radius);\n  box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.1);\n\n  li {\n    display: flex;\n    align-items: center;\n    padding: 0.75rem 2rem;\n    color: var(--color-text);\n\n    &:not(.line) {\n      cursor: pointer;\n      transition: background-color 0.4s ease;\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n\n    &.line {\n      position: relative;\n\n      &::before {\n        position: absolute;\n        top: calc(50% - 1px);\n        left: 10%;\n        width: 80%;\n        height: 1px;\n        background-color: var(--color-secondary-500);\n        content: '';\n      }\n    }\n\n    &.entry-remove {\n      span {\n        opacity: 0.75;\n      }\n    }\n\n    .avatar {\n      @include typo-title;\n\n      display: flex;\n      width: 36px;\n      height: 36px;\n      align-items: center;\n      justify-content: center;\n      margin-right: 1rem;\n      border-radius: 50%;\n      color: var(--color-text);\n    }\n\n    .avatar-remove {\n      display: flex;\n      width: 36px;\n      height: 36px;\n      align-items: center;\n      justify-content: center;\n      margin-right: 1rem;\n      background-color: var(--color-secondary-400);\n      border-radius: 50%;\n      color: var(--color-text);\n      opacity: 0.5;\n    }\n\n    .details {\n      display: flex;\n      flex-direction: column;\n\n      .username {\n        opacity: 0.5;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ assignee ? assignee.user.name[0] : \\'+\\' }}            {{ member.user.name[0] }}              {{ member.user.name }} {{ member.user.surname }}        @{{ member.user.username }}                        -      Remove assignee      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputAssigneeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/input/input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Default text input component\n\n    \n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input\n            \n\n            \n                styleUrls\n                ./input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                floatingLabel\n                            \n                            \n                                hint\n                            \n                            \n                                placeholder\n                            \n                            \n                                readonly\n                            \n                            \n                                staticLabel\n                            \n                            \n                                type\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, autofillMonitor: AutofillMonitor)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/input/input.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autofillMonitor\n                                                  \n                                                        \n                                                                    AutofillMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:23\n                            \n                        \n                \n                    \n                        Floating label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:38\n                            \n                        \n                \n                    \n                        Hint to display beneath the input to provide additional information of how to use the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:33\n                            \n                        \n                \n                    \n                        Input placeholder text\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:43\n                            \n                        \n                \n                    \n                        Attribute to disable value edition without any visual changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        staticLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:28\n                            \n                        \n                \n                    \n                        Static label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"text\" | \"number\" | \"email\" | \"password\"\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:18\n                            \n                        \n                \n                    \n                        Type of the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:51\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AutofillMonitor } from '@angular/cdk/text-field';\nimport { Component, ElementRef, HostBinding, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ControlAccessor } from '../../classes/control-accessor.class';\n\n/**\n * Default text input component\n */\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent extends ControlAccessor {\n  /**\n   * Type of the input\n   */\n  @Input() type: 'text' | 'number' | 'email' | 'password' = 'text';\n\n  /**\n   * Floating label text to display\n   */\n  @Input() floatingLabel?: string;\n\n  /**\n   * Static label text to display\n   */\n  @Input() staticLabel?: string;\n\n  /**\n   * Input placeholder text\n   */\n  @Input() placeholder: string = '';\n\n  /**\n   * Hint to display beneath the input to provide additional information of how to use the input\n   */\n  @Input() hint?: string;\n\n  /**\n   * Attribute to disable value edition without any visual changes\n   */\n  @Input() readonly?: boolean;\n\n  /** @ignore */\n  @HostBinding('class.focused') focused = false;\n\n  /** @ignore */\n  @ViewChild('input') input!: ElementRef;\n\n  constructor(public override ngControl: NgControl, private autofillMonitor: AutofillMonitor) {\n    super(ngControl);\n  }\n\n  /** @ignore */\n  onFocus() {\n    this.focused = true;\n  }\n\n  /** @ignore */\n  onBlur() {\n    this.focused = false;\n  }\n}\n\n    \n\n    \n        \n  {{ staticLabel }}\n  \n    \n      \n        \n      \n    \n    \n      {{ floatingLabel }}\n    \n    \n      \n    \n    \n  \n  {{ control?.errors | validationError }}\n\n\n    \n\n    \n                \n                    ./input.component.scss\n                \n                @import '../../../../styles/typography';\n\n.form-field {\n  display: flex;\n  max-width: 400px;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  >label {\n    @include typo-title;\n\n    margin-bottom: 0.4rem;\n    color: var(--color-input-text);\n\n    &.required::after {\n      margin-left: 0.2rem;\n      color: var(--color-input-text);\n      content: '*';\n    }\n  }\n}\n\n$padding-left: 0.5rem;\n$height: 44px;\n\n// New input\n.input-form-field {\n  position: relative;\n  height: $height;\n\n  // Static label for input\n  .static-label {\n    @include typo-title;\n\n    margin-bottom: 0.4rem;\n    color: var(--color-input-text);\n\n    &.required::after {\n      margin-left: 0.2rem;\n      color: var(--color-input-text);\n      content: '*';\n    }\n  }\n\n  // Floating label for input\n  .floating-label {\n    @include typo-body;\n\n    padding: 0 0.4rem;\n    color: var(--color-text);\n    transition: transform 0.2s ease, font-size 0.2s ease;\n  }\n\n  // Fragments\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    z-index: 1;\n    height: 100%;\n    border: 2px solid var(--color-input-border);\n    pointer-events: none;\n  }\n\n  .fragment-left {\n    display: flex;\n    width: $padding-left;\n    align-items: center;\n    padding-left: $padding-left;\n    border-right-width: 0;\n    border-bottom-left-radius: var(--border-radius);\n    border-top-left-radius: var(--border-radius);\n\n    .fragment-left-wrapper {\n      flex-shrink: 0;\n    }\n  }\n\n  .fragment-middle {\n    display: flex;\n    align-items: center;\n    border-right-width: 0;\n    border-left-width: 0;\n  }\n\n  .fragment-right {\n    display: flex;\n    flex-grow: 1;\n    align-items: center;\n    justify-content: flex-end;\n    padding-right: 0.75rem;\n    border-left-width: 0;\n    border-bottom-right-radius: var(--border-radius);\n    border-top-right-radius: var(--border-radius);\n  }\n\n  .input-wrapper {\n    position: relative;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    background-color: var(--color-input-background);\n    border-radius: var(--border-radius);\n    transition: background-color 0.2s ease-in-out;\n\n    &:hover {\n      background-color: var(--color-input-background-hover);\n    }\n  }\n\n  input {\n    @include typo-body;\n\n    position: absolute;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    padding-left: calc($padding-left + 0.4rem);\n    background-color: var(--color-input-background);\n    background-color: transparent;\n    border-radius: var(--border-radius);\n    color: var(--color-text);\n  }\n}\n\n.has-value,\n:host.focused {\n  .floating-label {\n    font-size: 0.75em;\n    transform: translateY(calc($height / -2));\n  }\n\n  .fragment-middle {\n    border-top-width: 0;\n  }\n}\n\n:host:not(.focused) {\n  input::placeholder {\n    opacity: 0;\n  }\n}\n\n:host.ng-touched.ng-invalid {\n\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    border-color: var(--color-red-500);\n  }\n}\n\n:host.focused .input-form-field {\n\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    border-color: var(--color-primary-500);\n  }\n}\n\n.required {\n\n  .static-label::after,\n  .floating-label::after {\n    margin-left: 0.2rem;\n    color: var(--color-red-500);\n    content: '*';\n  }\n}\n\n.error {\n  position: absolute;\n  margin-top: 0.4rem;\n  color: var(--color-red-500);\n  font-size: 12px;\n  line-height: 0.8rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ staticLabel }}                                        {{ floatingLabel }}                          {{ control?.errors | validationError }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputDateTimeComponent.html":{"url":"components/InputDateTimeComponent.html","title":"component - InputDateTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputDateTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/input-date-time/input-date-time.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input-date-time\n            \n\n            \n                styleUrls\n                ./input-date-time.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-date-time.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changedDate\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                picker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                writeValue\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                floatingLabel\n                            \n                            \n                                placeholder\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        writeValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('input-date-time')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport * as dayjs from 'dayjs';\n\n@Component({\n  selector: 'app-input-date-time',\n  templateUrl: './input-date-time.component.html',\n  styleUrls: ['./input-date-time.component.scss'],\n})\nexport class InputDateTimeComponent extends ControlAccessor implements OnInit {\n  @Input()\n  placeholder: string = '';\n\n  @Input()\n  floatingLabel?: string;\n\n  public changedDate: FormControl = new FormControl();\n\n  @ViewChild('input-date-time') picker!: ElementRef;\n\n  constructor(public override ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  ngOnInit(): void {\n    this.changedDate.valueChanges.subscribe((date) =>\n      this.control.setValue(this.changeDate(date), { emitEvent: false }),\n    );\n  }\n\n  override writeValue(value: any): void {\n    this.changedDate.setValue(this.changeDate(value));\n  }\n\n  changeDate(date: number) {\n    let sessionDate = dayjs(date);\n\n    return sessionDate.format('YYYY-MM-DD');\n  }\n}\n\n    \n\n    \n        \n   {{floatingLabel}}\n  \n  \n  \n  \n\n    \n\n    \n                \n                    ./input-date-time.component.scss\n                \n                ::ng-deep .mat-focused .mat-form-field-label {\n  /* change color of label */\n  color: white !important;\n}\n\n::ng-deep.mat-form-field-underline {\n  /* change color of underline */\n  background-color: var(--color-purple-300) !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n  /* change color of underline when focused */\n  background-color: white !important;\n}\n\n::ng-deep .mat-form-field-label {\n  /* change color of label */\n  color: white !important;\n}\n\nmat-datepicker-toggle {\n  color: var(--color-purple-300) !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{floatingLabel}}        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputDateTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputIssueComponent.html":{"url":"components/InputIssueComponent.html","title":"component - InputIssueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputIssueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/input-issue/input-issue.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                input-issue\n            \n\n\n\n\n            \n                templateUrl\n                ./input-issue.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _projectId\n                            \n                            \n                                issues$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadIssues\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    projectId\n                                \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/input-issue/input-issue.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-issue/input-issue.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadIssues\n                        \n                    \n                \n            \n            \n                \nloadIssues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-issue/input-issue.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-issue/input-issue.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : of([])\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-issue/input-issue.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:82\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n\n                \n                    \n                        getprojectId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-issue/input-issue.component.ts:20\n                                \n                            \n\n                \n                    \n                        setprojectId(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-issue/input-issue.component.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-issue/input-issue.component.ts:29\n                                \n                            \n\n                \n                    \n                        setisOpen(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-issue/input-issue.component.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { GitIssue } from '@dashboard/interfaces/git-integration.interface';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { NgControl } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'input-issue',\n  templateUrl: './input-issue.component.html',\n})\nexport class InputIssueComponent extends ControlAccessor {\n  @Input() set projectId(value: number) {\n    this._projectId = value;\n    if (value) {\n      this.loadIssues();\n    }\n  }\n\n  get projectId() {\n    return this._projectId;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) this.control.setValue('CREATE');\n    else this.control.setValue('DETACH');\n  }\n\n  get isOpen() {\n    return !['DETACH', null].includes(this.control.value);\n  }\n\n  private _projectId: number = 0;\n\n  issues$: Observable = of([]);\n\n  constructor(ngControl: NgControl, private gitIntegrationService: GitIntegrationService) {\n    super(ngControl);\n  }\n\n  loadIssues() {\n    const { projectId } = this;\n    this.issues$ = this.gitIntegrationService.gitHubIssueList(projectId);\n  }\n}\n\n    \n\n    \n        \n  \n    Create new issue\n    {{ issue.title }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Create new issue    {{ issue.title }}  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputIssueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputPullRequestComponent.html":{"url":"components/InputPullRequestComponent.html","title":"component - InputPullRequestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputPullRequestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/input-pull-request/input-pull-request.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                input-pull-request\n            \n\n\n\n\n            \n                templateUrl\n                ./input-pull-request.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _projectId\n                            \n                            \n                                pulls$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadPullRequests\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    projectId\n                                \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/input-pull-request/input-pull-request.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-pull-request/input-pull-request.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadPullRequests\n                        \n                    \n                \n            \n            \n                \nloadPullRequests()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-pull-request/input-pull-request.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-pull-request/input-pull-request.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pulls$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : of([])\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-pull-request/input-pull-request.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:82\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n\n                \n                    \n                        getprojectId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-pull-request/input-pull-request.component.ts:22\n                                \n                            \n\n                \n                    \n                        setprojectId(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-pull-request/input-pull-request.component.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-pull-request/input-pull-request.component.ts:31\n                                \n                            \n\n                \n                    \n                        setisOpen(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-pull-request/input-pull-request.component.ts:26\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { GitPull } from '@dashboard/interfaces/git-integration.interface';\nimport { Component, Input } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\n\n@Component({\n  selector: 'input-pull-request',\n  templateUrl: './input-pull-request.component.html',\n})\nexport class InputPullRequestComponent extends ControlAccessor {\n  @Input() set projectId(value: number) {\n    this._projectId = value;\n    if (value) {\n      this.loadPullRequests();\n    }\n  }\n\n  get projectId() {\n    return this._projectId;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) this.control.setValue(null);\n    else this.control.setValue('DETACH');\n  }\n\n  get isOpen() {\n    return !['DETACH', null].includes(this.control.value);\n  }\n\n  private _projectId: number = 0;\n\n  pulls$: Observable = of([]);\n\n  constructor(ngControl: NgControl, private gitIntegrationService: GitIntegrationService) {\n    super(ngControl);\n  }\n\n  loadPullRequests() {\n    const { projectId } = this;\n    this.pulls$ = this.gitIntegrationService.gitHubPullList(projectId);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ pull.title }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ pull.title }}  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputPullRequestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputTaskPropertyComponent.html":{"url":"components/InputTaskPropertyComponent.html","title":"component - InputTaskPropertyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputTaskPropertyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/input-task-property/input-task-property.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                input-task-property\n            \n\n            \n                styleUrls\n                ./input-task.property.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-task-property.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isOpen\n                            \n                            \n                                content\n                            \n                            \n                                currentHeight\n                            \n                            \n                                targetHeight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpenChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-task-property/input-task-property.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-task-property/input-task-property.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        isOpenChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-task-property/input-task-property.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-task-property/input-task-property.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-task-property/input-task-property.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-task-property/input-task-property.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('content')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-task-property/input-task-property.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0'\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-task-property/input-task-property.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-task-property/input-task-property.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-task-property/input-task-property.component.ts:23\n                                \n                            \n\n                \n                    \n                        setisOpen(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-task-property/input-task-property.component.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'input-task-property',\n  templateUrl: './input-task-property.component.html',\n  styleUrls: ['./input-task.property.component.scss'],\n})\nexport class InputTaskPropertyComponent {\n  @Input() label: string = '';\n\n  @Input() set isOpen(value: boolean) {\n    this._isOpen = value;\n    if (value) {\n      this.currentHeight = `${this.targetHeight}px`;\n      setTimeout(() => {\n        this.currentHeight = 'none';\n      }, 200);\n    } else {\n      this.currentHeight = '0';\n    }\n  }\n  get isOpen() {\n    return this._isOpen;\n  }\n  @Output() isOpenChange = new EventEmitter();\n  private _isOpen: boolean = false;\n\n  @ViewChild('content') content!: ElementRef;\n\n  targetHeight: number = 0;\n  currentHeight: string = '0';\n\n  /** @ignore */\n  faPlus = faPlus;\n\n  /** @ignore */\n  faMinus = faMinus;\n\n  open() {\n    this.isOpen = true;\n  }\n\n  close() {\n    this.isOpen = false;\n  }\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n    \n  \n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./input-task.property.component.scss\n                \n                :host {\n  display: block;\n  padding: 1rem;\n  border: 1px solid var(--color-secondary-500);\n  border-radius: var(--border-radius);\n\n  .header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    app-icon {\n      position: relative;\n      cursor: pointer;\n\n      &:hover {\n        &::before {\n          background-color: var(--color-secondary-500);\n        }\n      }\n\n      &::before {\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n\n        border-radius: 1.8px;\n        content: '';\n        transform: scale(2);\n        transition: background-color .2s ease;\n      }\n\n      &::ng-deep>* {\n        z-index: 2;\n      }\n    }\n  }\n\n  .content {\n    overflow: hidden;\n    max-height: 0;\n    transition: max-height .2s ease;\n\n    .content-wrapper {\n      padding-top: 1rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputTaskPropertyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IntegrationEntryComponent.html":{"url":"components/IntegrationEntryComponent.html","title":"component - IntegrationEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IntegrationEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/components/integration-entry/integration-entry.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-integration-entry\n            \n\n            \n                styleUrls\n                ./integration-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./integration-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                integration\n                            \n                            \n                                label\n                            \n                            \n                                suspended\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        integration\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        suspended\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        disconnect\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-integration-entry',\n  templateUrl: './integration-entry.component.html',\n  styleUrls: ['./integration-entry.component.scss'],\n})\nexport class IntegrationEntryComponent implements OnInit {\n  @Input() integration?: any;\n  @Input() label!: string;\n  @Input() description?: string | null;\n  @Input() suspended: boolean = false;\n\n  @Output() disconnect = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      {{ label }}\n    \n    \n      {{ description }}\n    \n  \n  \n    Disconnect\n  \n\n\n    \n\n    \n                \n                    ./integration-entry.component.scss\n                \n                .integration-entry {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px;\n  border: 1px solid var(--color-secondary-300);\n  border-radius: var(--border-radius);\n\n  &.suspended {\n    opacity: 0.5;\n  }\n\n  .labels {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    margin-bottom: 0;\n\n    .description {\n      display: block;\n      padding-left: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ label }}              {{ description }}            Disconnect  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'IntegrationEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IntegrationGithubComponent.html":{"url":"components/IntegrationGithubComponent.html","title":"component - IntegrationGithubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IntegrationGithubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/integration-github/integration-github.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-integration-github\n            \n\n            \n                styleUrls\n                ./integration-github.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./integration-github.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                repositoryList\n                            \n                            \n                                    Public\n                                repositoryListLoaded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRepository\n                            \n                            \n                                connectToGithub\n                            \n                            \n                                loadRepositories\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRepository\n                        \n                    \n                \n            \n            \n                \naddRepository()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectToGithub\n                        \n                    \n                \n            \n            \n                \nconnectToGithub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRepositories\n                        \n                    \n                \n            \n            \n                \nloadRepositories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    repository: new FormControl(null, [requiredValidator()]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repositoryList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GitRepository[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repositoryListLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { GitRepository } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { requiredValidator } from '@main/validators/required.validator';\n\n@Component({\n  selector: 'app-integration-github',\n  templateUrl: './integration-github.component.html',\n  styleUrls: ['./integration-github.component.scss'],\n})\nexport class IntegrationGithubComponent implements OnInit {\n  @Input()\n  projectId!: number;\n\n  repositoryList: GitRepository[] = [];\n  public repositoryListLoaded = false;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  public form = new FormGroup({\n    repository: new FormControl(null, [requiredValidator()]),\n  });\n\n  connectToGithub() {\n    this.gitIntegrationService.startGitHubIntegration().subscribe(() => {\n      this.loadRepositories();\n    });\n  }\n\n  loadRepositories() {\n    this.repositoryListLoaded = false;\n    this.gitIntegrationService.getGitHubIntegration().subscribe((integration) => {\n      this.repositoryList = integration.gitRepositories;\n      this.repositoryListLoaded = true;\n    });\n  }\n\n  addRepository() {\n    this.gitIntegrationService\n      .attachGitHubIntegration(this.projectId, this.form.value.repository)\n      .subscribe();\n  }\n\n  ngOnInit() {\n    this.loadRepositories();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Github\n    \n    Connect to Github\n  \n\n  \n\n    \n    \n      \n        {{repository.fullName}}\n        \n      \n      Add repository\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./integration-github.component.scss\n                \n                main {\n  padding: 20px;\n  background-color: var(--color-secondary-600);\n  border-radius: var(--border-radius);\n  color: var(--color-text);\n\n  section {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n    color: var(--color-text);\n\n    .github {\n      width: 100%;\n    }\n\n    app-button {\n      align-items: center;\n      justify-content: center;\n      margin-bottom: 20px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Github        Connect to Github                          {{repository.fullName}}                    Add repository      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'IntegrationGithubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/landing-page/landing-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                styleUrls\n                ./landing-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/landing-page/landing-page.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss'],\n})\nexport class LandingPageComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./landing-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LetContext.html":{"url":"interfaces/LetContext.html","title":"interface - LetContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LetContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/let.directive.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ngLet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngLet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ngLet:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\ninterface LetContext {\n  ngLet: T;\n}\n\n@Directive({\n  selector: '[ngLet]',\n})\nexport class LetDirective {\n  private _context: LetContext = { ngLet: null };\n\n  constructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>) {\n    _viewContainer.createEmbeddedView(_templateRef, this._context);\n  }\n\n  @Input()\n  set ngLet(value: T) {\n    this._context.ngLet = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LetDirective.html":{"url":"directives/LetDirective.html","title":"directive - LetDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LetDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/let.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngLet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngLet\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngLet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/directives/let.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _viewContainer\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _templateRef\n                                                  \n                                                        \n                                                                        TemplateRef>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngLet\n                    \n                \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/directives/let.directive.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LetContext\n\n                    \n                \n                \n                    \n                        Default value : { ngLet: null }\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/directives/let.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ngLet\n                    \n                \n\n\n                \n                    \n                        setngLet(value: T)\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/directives/let.directive.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\ninterface LetContext {\n  ngLet: T;\n}\n\n@Directive({\n  selector: '[ngLet]',\n})\nexport class LetDirective {\n  private _context: LetContext = { ngLet: null };\n\n  constructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>) {\n    _viewContainer.createEmbeddedView(_templateRef, this._context);\n  }\n\n  @Input()\n  set ngLet(value: T) {\n    this._context.ngLet = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListGroupComponent.html":{"url":"components/ListGroupComponent.html","title":"component - ListGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/components/list-group/list-group.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-group\n            \n\n            \n                styleUrls\n                ./list-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/components/list-group/list-group.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/list-group/list-group.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/components/list-group/list-group.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-group',\n  templateUrl: './list-group.component.html',\n  styleUrls: ['./list-group.component.scss'],\n})\nexport class ListGroupComponent implements OnInit {\n  @Input() label!: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  {{ label }}\n\n\n    \n\n    \n                \n                    ./list-group.component.scss\n                \n                h4 {\n  display: block;\n  width: 100%;\n  padding: 5px 0;\n  border-bottom: 1px solid var(--color-secondary-300);\n  color: var(--color-secondary-300);\n  font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoggedInUsersGuard.html":{"url":"guards/LoggedInUsersGuard.html","title":"guard - LoggedInUsersGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoggedInUsersGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/guard/logged-in-users.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/guard/logged-in-users.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/guard/logged-in-users.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class LoggedInUsersGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/auth/login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/login/login.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                error\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                loginSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/login/login.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n    password: new FormControl('', [requiredValidator()], []),\n    remember: new FormControl('', [], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:27\n                        \n                    \n\n            \n                \n                    Form group for login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        loginSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '@auth/services/user.service';\nimport { catchError, EMPTY, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n  ) {}\n\n  private loginSubscription?: Subscription;\n  public error?: string;\n\n  /**\n   * Form group for login.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n    password: new FormControl('', [requiredValidator()], []),\n    remember: new FormControl('', [], []),\n  });\n\n  ngOnInit() {\n    this.userService.getMyself().subscribe(() => {\n      localStorage.setItem('logged', 'true');\n      this.router.navigate(['/']);\n    });\n  }\n\n  login() {\n    if (this.loginSubscription && !this.loginSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.loginSubscription = this.authService\n        .login(this.form.value)\n        .pipe(\n          catchError((e) => {\n            this.handleError(e);\n            return EMPTY;\n          }),\n        )\n        .subscribe((response) => {\n          if (response.deleted) {\n            this.router.navigate(['/auth/restore-account']);\n          } else {\n            localStorage.setItem('logged', 'true');\n            this.router.navigate(['/']);\n          }\n        });\n    }\n  }\n\n  handleError(error: any) {\n    switch (error.status) {\n      case 403:\n        this.error = $localize`User is already logged`;\n        break;\n      case 404:\n        this.error = $localize`Wrong username or password`;\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Login to system\n          This is a secure site. Please enter your login information to enter or click here to register.\n        \n\n        \n          {{ error }}\n        \n\n        \n\n        \n\n        Forgot your password? Reset password.\n\n        \n          Remember me\n        \n\n        Log in\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .remember-me {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n\n        a {\n          color: var(--color-link);\n          cursor: pointer;\n          transition: color 0.2s ease;\n\n          &:hover {\n            color: var(--color-link-hover);\n          }\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Login to system          This is a secure site. Please enter your login information to enter or click here to register.                          {{ error }}                                Forgot your password? Reset password.                  Remember me                Log in                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/_main/_main.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Main dependency module with all universal components and modules declarations\nThis module is required for application to run properly\n```js\nimport { MainModule } from '@app/main/main.module';(@)NgModule({\n  imports: [ ..., MainModule ],\n  ...\n})\nexport class ExampleModule {}\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injector, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { RouterModule } from '@angular/router';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CardComponent } from './components/card/card.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { DialogOutletComponent } from './components/dialog-outlet/dialog-outlet.component';\nimport { FiltersComponent } from './components/filters/filters.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { InputDateTimeComponent } from './components/input-date-time/input-date-time.component';\nimport { InputComponent } from './components/input/input.component';\nimport { MainViewComponent } from './components/main-view/main-view.component';\nimport { NavElementWorkspaceComponent } from './components/nav-element-workspace/nav-element-workspace.component';\nimport { NavElementComponent } from './components/nav-element/nav-element.component';\nimport { OptionComponent } from './components/option/option.component';\nimport { SelectComponent } from './components/select/select.component';\nimport { SidebarNavigationComponent } from './components/sidebar-navigation/sidebar-navigation.component';\nimport { SnackbarOutletComponent } from './components/snackbar-outlet/snackbar-outlet.component';\nimport { SnackbarComponent } from './components/snackbar/snackbar.component';\nimport { TextareaComponent } from './components/textarea/textarea.component';\nimport { UpperNavigationComponent } from './components/upper-navigation/upper-navigation.component';\nimport { AlertDialog } from './dialogs/alert/alert.dialog';\nimport { ClickStopPropagationDirective } from './directives/click-stop-propagation.directive';\nimport { FocusInitialDirective } from './directives/focus-initial.directive';\nimport { LetDirective } from './directives/let.directive';\nimport { ViewContainerDirective } from './directives/view-container.directive';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\nimport { MockPage } from './pages/mock/mock.page';\nimport { ValidationErrorPipe } from './pipes/validation-error/validation-error.pipe';\nimport { ApiService } from './services/api.service';\nimport { DialogService } from './services/dialog.service';\n\n/**\n * Main module configuration object\n */\nconst ngModuleConfig = {\n  imports: [\n    /*=============================================\n    =             Local dependencies              =\n    =============================================*/\n    CommonModule,\n    RouterModule,\n    ObserversModule,\n  ],\n  importExports: [\n    /*=============================================\n      =                Dependencies                 =\n      =============================================*/\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    DragDropModule,\n    PlatformModule,\n    OverlayModule,\n\n    /*=============================================\n      =              Material modules               =\n      =============================================*/\n    MatDialogModule,\n    MatIconModule,\n    MatMenuModule,\n    MatTableModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n\n    /*=============================================\n      =              External modules               =\n      =============================================*/\n    FontAwesomeModule,\n  ],\n  declarations: [\n    /*=============================================\n    =         Local custom components             =\n    =============================================*/\n  ],\n  exportDeclarations: [\n    /*=============================================\n    =         Exported custom components          =\n    =============================================*/\n    InputComponent,\n    ButtonComponent,\n    ValidationErrorPipe,\n    AlertDialog,\n    IconComponent,\n    FocusInitialDirective,\n    SidebarNavigationComponent,\n    NavElementComponent,\n    NavElementWorkspaceComponent,\n    UpperNavigationComponent,\n    SelectComponent,\n    OptionComponent,\n    MainViewComponent,\n    TextareaComponent,\n    CheckboxComponent,\n    CardComponent,\n    ClickStopPropagationDirective,\n    InputDateTimeComponent,\n    LetDirective,\n    FiltersComponent,\n    SnackbarComponent,\n    SnackbarOutletComponent,\n    MockPage,\n    DialogOutletComponent,\n    ViewContainerDirective,\n  ],\n  providers: [\n    DialogService,\n    ApiService,\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    MatCheckboxModule,\n    MatDatepickerModule,\n  ],\n};\n\n/**\n * Main dependency module with all universal components and modules declarations\n * This module is required for application to run properly\n * @example\n * ```js\n * import { MainModule } from '@app/main/main.module';\n *\n * (@)NgModule({\n *   imports: [ ..., MainModule ],\n *   ...\n * })\n * export class ExampleModule {}\n * ```\n */\n@NgModule({\n  imports: [...ngModuleConfig.imports, ...ngModuleConfig.importExports],\n  declarations: [...ngModuleConfig.declarations, ...ngModuleConfig.exportDeclarations],\n  exports: [...ngModuleConfig.importExports, ...ngModuleConfig.exportDeclarations],\n  providers: [...ngModuleConfig.providers],\n})\nexport class MainModule {\n  static injector: Injector;\n\n  constructor(injector: Injector) {\n    MainModule.injector = injector;\n    (window as any).injector = injector;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainViewComponent.html":{"url":"components/MainViewComponent.html","title":"component - MainViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/main-view/main-view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-view\n            \n\n            \n                styleUrls\n                ./main-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                DialogOutlet\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/main-view/main-view.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/main-view/main-view.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        DialogOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DialogOutlet\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/main-view/main-view.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.version\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/main-view/main-view.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DialogOutlet } from '@main/services/dialog.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-main-view',\n  templateUrl: './main-view.component.html',\n  styleUrls: ['./main-view.component.scss'],\n})\nexport class MainViewComponent implements OnInit {\n  public version = environment.version;\n\n  public DialogOutlet = DialogOutlet;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  \n\n  \n\n  \n    \n      \n    \n\n    \n  \n\n\n{{ version }}\n    \n\n    \n                \n                    ./main-view.component.scss\n                \n                :host {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background-color: var(--color-secondary-700);\n}\n\nsection {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow-x: hidden;\n\n  .content {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: row;\n\n    main {\n      width: 100%;\n      height: 100%;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n  }\n}\n\n.version {\n  position: absolute;\n  bottom: 1rem;\n  left: 1em;\n  color: var(--color-text);\n  opacity: 0.5;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ version }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Marked.html":{"url":"classes/Marked.html","title":"class - Marked","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Marked\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/libs/marked/marked.lib.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _initialized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getRenderer\n                            \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/libs/marked/marked.lib.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getRenderer\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRenderer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/marked/marked.lib.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/marked/marked.lib.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { marked, Renderer } from 'marked';\nimport { emoji } from './extensions/marked-emoji-extension';\nimport { linkOverride } from './overrides/link.override';\n\nexport class Marked {\n  private static _initialized = false;\n\n  public static init() {\n    if (Marked._initialized) return;\n\n    marked.use({\n      extensions: [emoji],\n    });\n\n    Marked._initialized = true;\n  }\n\n  public static getRenderer() {\n    let renderer = new Renderer();\n\n    renderer = linkOverride(renderer);\n\n    return renderer;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberListComponent.html":{"url":"components/MemberListComponent.html","title":"component - MemberListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemberListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/member-list/member-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-list\n            \n\n            \n                styleUrls\n                ./member-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./member-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                memberList$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteMember\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addedMembers\n                            \n                            \n                                memberList\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(memberService: MemberService, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addedMembers\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        memberList\n                    \n                \n                \n                    \n                        Type :     ProjectMember[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"create\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'edit'\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMember\n                        \n                    \n                \n            \n            \n                \ndeleteMember(id: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        memberList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.scss'],\n})\nexport class MemberListComponent implements OnInit {\n  public projectId!: number;\n\n  public memberList$!: Observable;\n\n  @Input()\n  addedMembers?: string[];\n\n  @Input()\n  type: 'create' | 'edit' = 'edit';\n\n  @Input()\n  memberList!: ProjectMember[];\n\n  constructor(private memberService: MemberService, private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n    this.projectId = projectId;\n\n    this.memberList$ = this.memberService.list(projectId);\n  }\n\n  deleteMember(id: number[]) {\n    this.memberService.remove(this.projectId, id).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  \n  \n    Username\n     {{ row.user.username }} \n  \n\n  \n  \n    Email\n     {{ row.user.email }} \n  \n\n  \n  \n    Name\n     {{ row.user.name }} \n  \n\n  \n  \n    Surname\n     {{ row.user.surname }} \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Delete member\n        \n      \n    \n  \n\n  \n  \n\n\n\n\n  \n  \n    Username or Email\n     {{ row }} \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./member-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Username     {{ row.user.username }}           Email     {{ row.user.email }}           Name     {{ row.user.name }}           Surname     {{ row.user.surname }}                                                           Delete member                                Username or Email     {{ row }}       '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'MemberListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemberService.html":{"url":"injectables/MemberService.html","title":"injectable - MemberService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/member.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                leave\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                map\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/member.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(emails: string[], projects: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:49\n                \n            \n\n\n            \n                \n                    Adds members to projects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    emails\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        emails of people to add\n\n                                    \n                                \n                                \n                                    projects\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        leave\n                        \n                    \n                \n            \n            \n                \n                    \n                    leave(projectId: number, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:39\n                \n            \n\n\n            \n                \n                    Let member leave project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the member who will leave the project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:19\n                \n            \n\n\n            \n                \n                    Lists members in given project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        map\n                        \n                    \n                \n            \n            \n                \n                    \n                    map(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:61\n                \n            \n\n\n            \n                \n                    Creates members map from given project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(projectId: number, id: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:29\n                \n            \n\n\n            \n                \n                    Removes members from project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        list of member ids to remove from project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { map, Observable } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class MemberService {\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Lists members in given project\n   * @param projectId project which are members from\n   * @returns Request observable, which completes when request is finished\n   */\n  public list(projectId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/member`);\n  }\n\n  /**\n   * Removes members from project\n   * @param projectId project which are members from\n   * @param id list of member ids to remove from project\n   * @returns Request observable, which completes when request is finished\n   */\n  public remove(projectId: number, id: number[]): Observable {\n    return this.apiService.put(`/project/${projectId}/member`, { body: id });\n  }\n\n  /**\n   * Let member leave project.\n   * @param projectId project which are members from\n   * @param id id of the member who will leave the project\n   * @returns Request observable, which completes when request is finished\n   */\n  public leave(projectId: number, id: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/member`, { body: id });\n  }\n\n  /**\n   * Adds members to projects.\n   * @param emails emails of people to add\n   * @param projectList projects where people will be added\n   * @returns Request observable, which completes when request is finished\n   */\n  public add(\n    emails: string[],\n    projects: number[],\n  ): Observable {\n    return this.apiService.post(`/project/member`, { body: { emails, projects } });\n  }\n\n  /**\n   * Creates members map from given project\n   * @param projectId project which are members from\n   * @returns Request observable, which completes when request is finished\n   */\n  public map(projectId: number): Observable> {\n    return this.list(projectId).pipe(\n      map((members) =>\n        members.reduce((acc: Map, member: ProjectMember) => {\n          acc.set(member.user.id, member);\n          return acc;\n        }, new Map()),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesModule.html":{"url":"modules/MessagesModule.html","title":"module - MessagesModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_imports\n\n\n\n\nMessagesRoutingModule\n\nMessagesRoutingModule\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nMessagesRoutingModule->MessagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/messages/messages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            MessagesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MessagesRoutingModule } from './messages.routing';\n\n@NgModule({\n  imports: [CommonModule, MessagesRoutingModule],\n  declarations: [],\n})\nexport class MessagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesRoutingModule.html":{"url":"modules/MessagesRoutingModule.html","title":"module - MessagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/messages/messages.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\n\n/**\n * Messages routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/messages.svg',\n    },\n  },\n];\n\n/**\n * Messages routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MessagesRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MockPage.html":{"url":"components/MockPage.html","title":"component - MockPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MockPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/pages/mock/mock.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mock\n            \n\n            \n                styleUrls\n                ./mock.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./mock.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                image\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/pages/mock/mock.page.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/pages/mock/mock.page.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/pages/mock/mock.page.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-mock',\n  templateUrl: './mock.page.html',\n  styleUrls: ['./mock.page.scss'],\n})\nexport class MockPage implements OnInit {\n  constructor(private activatedRoute: ActivatedRoute) {}\n\n  public image: string = '';\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(({ image }) => {\n      this.image = image;\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./mock.page.scss\n                \n                img {\n  width: 100%;\n  border: 4px solid #f39c12;\n}\n\n:host {\n  position: relative;\n  display: block;\n  text-align: center;\n\n  &::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    display: block;\n    padding: 1rem 4rem;\n    background-color: #f39c12;\n    border-radius: var(--border-radius);\n    color: #222;\n    content: 'Work in progress';\n    font-weight: bold;\n    text-align: center;\n    transform: translate(-50%, -50%);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'MockPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModifyUser.html":{"url":"interfaces/ModifyUser.html","title":"interface - ModifyUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModifyUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Monaco.html":{"url":"classes/Monaco.html","title":"class - Monaco","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Monaco\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/libs/monaco/monaco.lib.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _initialized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                            \n                                    Private\n                                    Static\n                                loadPlugins\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    initialized\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/libs/monaco/monaco.lib.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/monaco/monaco.lib.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        loadPlugins\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadPlugins()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/monaco/monaco.lib.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        initialized\n                    \n                \n\n                \n                    \n                        getinitialized()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/libs/monaco/monaco.lib.ts:7\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { SelectionEditPlugin } from './plugins/selection-edit.plugin';\nimport { editor } from 'monaco-editor';\n\nexport class Monaco {\n  private static _initialized = false;\n\n  public static get initialized() {\n    return this._initialized;\n  }\n\n  public static init() {\n    if (Monaco._initialized) return;\n\n    Monaco.loadPlugins();\n  }\n\n  private static loadPlugins() {\n    const dummy = document.createElement('div');\n    const instance = editor.create(dummy) as any;\n    const prototype = instance.__proto__;\n\n    SelectionEditPlugin.init(prototype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MonacoExtended.html":{"url":"classes/MonacoExtended.html","title":"class - MonacoExtended","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MonacoExtended\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/monaco-extended.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                executeEdits\n                            \n                            \n                                    Static\n                                insertTextAfterSelection\n                            \n                            \n                                    Static\n                                insertTextAt\n                            \n                            \n                                    Static\n                                insertTextBeforeAndAfterEachSelection\n                            \n                            \n                                    Static\n                                insertTextBeforeSelection\n                            \n                            \n                                    Static\n                                removeTextAt\n                            \n                            \n                                    Static\n                                removeTextBeforeAndAfterEachSelection\n                            \n                            \n                                    Static\n                                selectionEndsWith\n                            \n                            \n                                    Static\n                                selectionStartWith\n                            \n                            \n                                    Static\n                                toggleEndAndStartOfEachSelection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        executeEdits\n                        \n                    \n                \n            \n            \n                \n                    \n                    executeEdits(editor: MonacoEditor, edits: EditOperation[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    edits\n                                    \n                                            EditOperation[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        insertTextAfterSelection\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertTextAfterSelection(editor: MonacoEditor, selection: Selection, text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selection\n                                    \n                                                Selection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        insertTextAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertTextAt(editor: MonacoEditor, lineNumber: number, column: number, text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lineNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    column\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        insertTextBeforeAndAfterEachSelection\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertTextBeforeAndAfterEachSelection(editor: MonacoEditor, selections: Selection[], beforeSelectionText: string, afterSelectionText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    selections\n                                    \n                                            Selection[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    beforeSelectionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    afterSelectionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        insertTextBeforeSelection\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertTextBeforeSelection(editor: MonacoEditor, selection: Selection, text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selection\n                                    \n                                                Selection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        removeTextAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTextAt(editor: MonacoEditor, startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startLineNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startColumn\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endLineNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endColumn\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        removeTextBeforeAndAfterEachSelection\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTextBeforeAndAfterEachSelection(editor: MonacoEditor, selections: Selection[], beforeSelectionText: string, afterSelectionText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    selections\n                                    \n                                            Selection[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    beforeSelectionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    afterSelectionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        selectionEndsWith\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectionEndsWith(editor: MonacoEditor, selection: Selection, text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selection\n                                    \n                                                Selection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        selectionStartWith\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectionStartWith(editor: MonacoEditor, selection: Selection, text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selection\n                                    \n                                                Selection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        toggleEndAndStartOfEachSelection\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleEndAndStartOfEachSelection(editor: MonacoEditor, beforeSelectionText: string, afterSelectionText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    beforeSelectionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    afterSelectionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as monaco from 'monaco-editor';\n\ntype MonacoEditor = monaco.editor.IStandaloneCodeEditor;\ntype Selection = monaco.Selection;\ntype EditOperation = monaco.editor.IIdentifiedSingleEditOperation;\n\ninterface SelectionEditOperation {\n  before?: string;\n  after?: string;\n  beforeEachLine?: string;\n  afterEachLine?: string;\n}\n\nexport class MonacoExtended {\n  public static insertTextAt(\n    editor: MonacoEditor,\n    lineNumber: number,\n    column: number,\n    text: string,\n  ) {\n    editor.executeEdits('', [\n      {\n        range: {\n          startLineNumber: lineNumber,\n          startColumn: column,\n          endLineNumber: lineNumber,\n          endColumn: column,\n        },\n        text,\n      },\n    ]);\n  }\n\n  public static executeEdits(editor: MonacoEditor, edits: EditOperation[]) {\n    for (const edit of edits) {\n      if (edit.range?.startColumn && !edit.range?.endColumn)\n        (edit.range as any).endColumn = edit.range.startColumn;\n      if (edit.range?.startLineNumber && !edit.range?.endLineNumber)\n        (edit.range as any).endLineNumber = edit.range.startLineNumber;\n    }\n    return editor.executeEdits('', edits);\n  }\n\n  public static removeTextAt(\n    editor: MonacoEditor,\n    startLineNumber: number,\n    startColumn: number,\n    endLineNumber: number,\n    endColumn: number,\n  ) {\n    editor.executeEdits('', [\n      {\n        range: {\n          startLineNumber,\n          startColumn,\n          endLineNumber,\n          endColumn,\n        },\n        text: null,\n      },\n    ]);\n  }\n\n  public static insertTextBeforeSelection(\n    editor: MonacoEditor,\n    selection: Selection,\n    text: string,\n  ) {\n    MonacoExtended.insertTextAt(editor, selection.startLineNumber, selection.startColumn, text);\n  }\n\n  public static insertTextAfterSelection(editor: MonacoEditor, selection: Selection, text: string) {\n    MonacoExtended.insertTextAt(editor, selection.endLineNumber, selection.endColumn, text);\n  }\n\n  public static insertTextBeforeAndAfterEachSelection(\n    editor: MonacoEditor,\n    selections: Selection[],\n    beforeSelectionText: string,\n    afterSelectionText: string = '',\n  ) {\n    const edits = ([] as any[]).concat(\n      ...selections.map((selection) => {\n        return [\n          {\n            range: {\n              startLineNumber: selection.startLineNumber,\n              startColumn: selection.startColumn,\n              endLineNumber: selection.startLineNumber,\n              endColumn: selection.startColumn,\n            },\n            text: beforeSelectionText,\n          },\n          {\n            range: {\n              startLineNumber: selection.endLineNumber,\n              startColumn: selection.endColumn,\n              endLineNumber: selection.endLineNumber,\n              endColumn: selection.endColumn,\n            },\n            text: afterSelectionText,\n          },\n        ];\n      }),\n    );\n\n    editor.executeEdits('', edits);\n  }\n\n  public static removeTextBeforeAndAfterEachSelection(\n    editor: MonacoEditor,\n    selections: Selection[],\n    beforeSelectionText: string,\n    afterSelectionText: string = '',\n  ) {\n    const model = editor.getModel();\n    const afterSelectionTextLinesCount = (afterSelectionText.match(/\\n/g) || [])?.length;\n    const edits: any[] = [];\n\n    if (!model) return;\n\n    for (const selection of selections) {\n      if (\n        MonacoExtended.selectionStartWith(editor, selection, beforeSelectionText) &&\n        MonacoExtended.selectionEndsWith(editor, selection, afterSelectionText)\n      ) {\n        edits.push({\n          range: {\n            startLineNumber: selection.startLineNumber,\n            startColumn: selection.startColumn,\n            endLineNumber:\n              selection.startLineNumber + (beforeSelectionText.match(/\\n/g) || [])?.length,\n            endColumn: beforeSelectionText.replace(/.*\\n/g, '').length + 1,\n          },\n          text: '',\n        });\n        edits.push({\n          range: {\n            startLineNumber: selection.endLineNumber - afterSelectionTextLinesCount,\n            startColumn:\n              model.getLineContent(selection.endLineNumber - afterSelectionTextLinesCount).length -\n              (afterSelectionText.replace(/\\n[^]*$/g, '').length - 1),\n            endLineNumber: selection.endLineNumber,\n            endColumn: selection.endColumn,\n          },\n          text: '',\n        });\n      }\n    }\n\n    editor.executeEdits('', edits);\n  }\n\n  public static selectionStartWith(editor: MonacoEditor, selection: Selection, text: string) {\n    const selectedValue = editor\n      .getModel()\n      ?.getValueInRange(selection, monaco.editor.EndOfLinePreference.LF);\n    return selectedValue?.startsWith(text);\n  }\n\n  public static selectionEndsWith(editor: MonacoEditor, selection: Selection, text: string) {\n    const selectedValue = editor\n      .getModel()\n      ?.getValueInRange(selection, monaco.editor.EndOfLinePreference.LF);\n    return selectedValue?.endsWith(text);\n  }\n\n  public static toggleEndAndStartOfEachSelection(\n    editor: MonacoEditor,\n    beforeSelectionText: string,\n    afterSelectionText: string = '',\n  ) {\n    const selections = editor.getSelections();\n    if (!selections) return;\n\n    const shouldDelete = selections.some(\n      (selection) =>\n        MonacoExtended.selectionStartWith(editor, selection, beforeSelectionText) &&\n        MonacoExtended.selectionEndsWith(editor, selection, afterSelectionText),\n    );\n\n    const mode: 'delete' | 'add' = shouldDelete ? 'delete' : 'add';\n\n    if (mode === 'delete') {\n      MonacoExtended.removeTextBeforeAndAfterEachSelection(\n        editor,\n        selections,\n        beforeSelectionText,\n        afterSelectionText,\n      );\n    } else {\n      MonacoExtended.insertTextBeforeAndAfterEachSelection(\n        editor,\n        selections,\n        beforeSelectionText,\n        afterSelectionText,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavElementComponent.html":{"url":"components/NavElementComponent.html","title":"component - NavElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/nav-element/nav-element.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-element\n            \n\n            \n                styleUrls\n                ./nav-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                    Optional\n                                listElement\n                            \n                            \n                                    Public\n                                showArrow$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeNavElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                openNavElement\n                            \n                            \n                                    Public\n                                toggleNavElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                routerLink\n                            \n                            \n                                showOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:24\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        routerLink\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showOptions\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    openNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        listElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('elementList')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showArrow$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-nav-element',\n  templateUrl: './nav-element.component.html',\n  styleUrls: ['./nav-element.component.scss'],\n})\nexport class NavElementComponent implements AfterViewInit {\n  @Input()\n  public routerLink?: string;\n\n  @Input()\n  public showOptions?: boolean;\n\n  public active: boolean = false;\n\n  public showArrow$: BehaviorSubject = new BehaviorSubject(false);\n\n  @ViewChild('elementList')\n  listElement?: ElementRef;\n\n  faAngleDown = faAngleDown;\n\n  constructor() {}\n\n  public openNavElement() {\n    this.active = true;\n  }\n  public closeNavElement() {\n    this.active = false;\n  }\n  public toggleNavElement() {\n    if (!this.active) {\n      this.openNavElement();\n    } else {\n      this.closeNavElement();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.showArrow$.next(Boolean(this.listElement?.nativeElement.children.length));\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n    \n      \n    \n    \n      \n        more_vert\n      \n      \n        \n      \n    \n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./nav-element.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n}\n\nsection {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  height: 46px;\n  align-items: center;\n  justify-content: space-between;\n  color: var(--color-neutral-300);\n  cursor: pointer;\n  transition: color 0.2s ease-in-out;\n\n  .element {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    padding: 0 0 0 20px;\n  }\n\n  .icons {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 0 5px 0 0;\n    }\n\n    .open-below {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: center;\n      padding: 0 5px;\n\n      // padding: 0 5px;\n\n      app-icon {\n        display: flex;\n        justify-content: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n\n    .options button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  &:hover {\n    color: var(--color-text);\n  }\n}\n\n.list {\n  display: none;\n  width: 100%;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    justify-content: center;\n    background-color: var(--color-secondary-600);\n  }\n}\n\n.hidden {\n  visibility: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              more_vert                                  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavElementWorkspaceComponent.html":{"url":"components/NavElementWorkspaceComponent.html","title":"component - NavElementWorkspaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavElementWorkspaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-element-workspace\n            \n\n            \n                styleUrls\n                ./nav-element-workspace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-element-workspace.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeWorkspace\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                    Optional\n                                listElement\n                            \n                            \n                                    Public\n                                showArrow$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeWorkspace\n                            \n                            \n                                createProject\n                            \n                            \n                                deleteProject\n                            \n                            \n                                deleteWorkspace\n                            \n                            \n                                editProject\n                            \n                            \n                                editWorkspace\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                openWithLocalVSCode\n                            \n                            \n                                openWithLocalVSCodeInsiders\n                            \n                            \n                                openWithVSCode\n                            \n                            \n                                    Public\n                                openWorkspace\n                            \n                            \n                                routeToProject\n                            \n                            \n                                routeToWorkspace\n                            \n                            \n                                    Public\n                                toggleWorkspace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                routerLink\n                            \n                            \n                                workspace\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, dialogService: DialogService, projectService: ProjectService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        routerLink\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        workspace\n                    \n                \n                \n                    \n                        Type :         Workspace\n\n                    \n                \n                \n                    \n                        Default value : { id: -1 } as unknown as Workspace\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createProject\n                        \n                    \n                \n            \n            \n                \ncreateProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteWorkspace\n                        \n                    \n                \n            \n            \n                \ndeleteWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProject\n                        \n                    \n                \n            \n            \n                \neditProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editWorkspace\n                        \n                    \n                \n            \n            \n                \neditWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithLocalVSCode\n                        \n                    \n                \n            \n            \n                \nopenWithLocalVSCode(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithLocalVSCodeInsiders\n                        \n                    \n                \n            \n            \n                \nopenWithLocalVSCodeInsiders(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithVSCode\n                        \n                    \n                \n            \n            \n                \nopenWithVSCode(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    openWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeToProject\n                        \n                    \n                \n            \n            \n                \nrouteToProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeToWorkspace\n                        \n                    \n                \n            \n            \n                \nrouteToWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeWorkspace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        listElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('elementList')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showArrow$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { BehaviorSubject } from 'rxjs';\nimport { Project } from 'src/app/dashboard/interfaces/project.interface';\nimport { Workspace } from 'src/app/dashboard/interfaces/workspace.interface';\nimport { ProjectService } from 'src/app/dashboard/services/project.service';\nimport { WorkspaceService } from 'src/app/dashboard/services/workspace.service';\nimport { DialogService } from '../../services/dialog.service';\n\n@Component({\n  selector: 'app-nav-element-workspace',\n  templateUrl: './nav-element-workspace.component.html',\n  styleUrls: ['./nav-element-workspace.component.scss'],\n})\nexport class NavElementWorkspaceComponent implements AfterViewInit {\n  @Input()\n  public routerLink?: string;\n\n  @Input()\n  public workspace: Workspace = { id: -1 } as unknown as Workspace;\n\n  faAngleDown = faAngleDown;\n  public activeWorkspace: boolean = false;\n\n  public showArrow$: BehaviorSubject = new BehaviorSubject(false);\n\n  @ViewChild('elementList')\n  listElement?: ElementRef;\n\n  constructor(\n    private workspaceService: WorkspaceService,\n    private dialogService: DialogService,\n    private projectService: ProjectService,\n    private router: Router,\n  ) {}\n\n  public openWorkspace() {\n    this.activeWorkspace = true;\n  }\n  public closeWorkspace() {\n    this.activeWorkspace = false;\n  }\n  public toggleWorkspace() {\n    if (!this.activeWorkspace) {\n      this.openWorkspace();\n    } else {\n      this.closeWorkspace();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.showArrow$.next(Boolean(this.listElement?.nativeElement.children.length));\n    });\n  }\n\n  routeToWorkspace() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id]));\n  }\n\n  routeToProject(project: Project) {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, project.id]));\n  }\n\n  createProject() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, 'create']));\n  }\n\n  editProject(project: Project) {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, project.id, 'edit']));\n  }\n\n  deleteProject(project: Project) {\n    this.dialogService.confirmProjectDelete(project).subscribe(() => {\n      this.projectService.delete(project.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n\n  editWorkspace() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, 'edit']));\n  }\n\n  deleteWorkspace() {\n    this.dialogService.confirmWorkspaceDelete(this.workspace).subscribe(() => {\n      this.workspaceService.delete(this.workspace.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n\n  openWithVSCode(project: Project) {\n    window.open(`https://github.dev/${project.gitHubIntegration}`, '_blank');\n  }\n\n  openWithLocalVSCode(project: Project) {\n    window.open(\n      `vscode://vscode.git/clone?url=https://github.com/${project.gitHubIntegration}`,\n      '_blank',\n    );\n  }\n\n  openWithLocalVSCodeInsiders(project: Project) {\n    window.open(\n      `vscode-insiders://vscode.git/clone?url=https://github.com/${project.gitHubIntegration}`,\n      '_blank',\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n      \n      \n        \n          more_vert\n        \n        \n          \n            Create project\n          \n          \n            Manage projects\n          \n          \n            Edit workspace\n          \n          \n            Delete workspace\n          \n        \n      \n    \n  \n  \n    \n      \n        {{projectWithPriv.project.name}}\n        \n          \n            \n              more_vert\n            \n            \n              \n                Open in github.dev\n              \n              \n                Open in Visual Studio Code\n              \n              \n                Open in Visual Studio Code Insiders\n              \n              \n                Edit project\n              \n              \n                Delete project\n              \n            \n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./nav-element-workspace.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  @include typo-title;\n\n  background-color: var(--color-secondary-600);\n}\n\nli {\n  background-color: var(--color-secondary-700);\n}\n\n.workspace {\n  display: flex;\n  width: 100%;\n  height: 46px;\n  justify-content: space-between;\n  border-radius: var(--border-radius);\n  color: var(--color-neutral-300);\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n\n  .element {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    padding: 0 0 0 30px;\n  }\n\n  .icons {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 0 5px 0 0;\n    }\n\n    .open-below {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: center;\n      padding: 0 5px;\n\n      app-icon {\n        display: flex;\n        justify-content: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n\n    .options button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  &:hover {\n    background-color: var(--color-secondary-500);\n  }\n}\n\n.project {\n  display: none;\n  width: 100%;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    justify-content: center;\n    background-color: var(--color-secondary-600);\n    color: var(--color-neutral-300);\n    transition: background-color 0.2s ease-in-out;\n\n    li {\n      display: flex;\n      width: 100%;\n      height: 46px;\n      align-items: center;\n      justify-content: space-between;\n      border-radius: var(--border-radius);\n\n      .sub-element {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        align-items: center;\n        padding: 0 0 0 40px;\n      }\n\n      .icons {\n        display: flex;\n        height: 100%;\n        align-items: center;\n        padding: 0 5px 0 0;\n      }\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n  }\n}\n\nbutton {\n  display: flex;\n  align-items: center;\n}\n\n.hidden {\n  visibility: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                more_vert                                      Create project                                Manage projects                                Edit workspace                                Delete workspace                                                  {{projectWithPriv.project.name}}                                            more_vert                                                      Open in github.dev                                            Open in Visual Studio Code                                            Open in Visual Studio Code Insiders                                            Edit project                                            Delete project                                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavElementWorkspaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionComponent.html":{"url":"components/OptionComponent.html","title":"component - OptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/option/option.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-option\n            \n\n            \n                styleUrls\n                ./option.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./option.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ref\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    viewValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/option/option.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/option/option.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/option/option.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/option/option.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/option/option.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        viewValue\n                    \n                \n\n                \n                    \n                        getviewValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/option/option.component.ts:15\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, HostBinding, Input } from '@angular/core';\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-option',\n  templateUrl: './option.component.html',\n  styleUrls: ['./option.component.scss'],\n})\nexport class OptionComponent {\n  @Input() @HostBinding('value') value!: any;\n  @Input() icon?: string | IconDefinition;\n\n  selected = false;\n\n  public get viewValue(): string {\n    return this.ref.nativeElement.innerText;\n  }\n\n  constructor(public ref: ElementRef) {}\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./option.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  padding: 0.25rem 0.75rem;\n  color: var(--color-text);\n  cursor: pointer;\n  transition: background-color .2s ease;\n\n  &:hover {\n    background-color: var(--color-secondary-500);\n  }\n\n  app-icon {\n    margin-right: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'OptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PersistentMap.html":{"url":"classes/PersistentMap.html","title":"class - PersistentMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PersistentMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/persistent-map.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Map\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _persistentKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                clear\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    Private\n                                saveState\n                            \n                            \n                                    \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PersistentMapOptions, entries?:  | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/classes/persistent-map.class.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PersistentMapOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                     | null\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _persistentKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/persistent-map.class.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(key: K)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        set\n                        \n                    \n                \n            \n            \n                \n                    \n                    set(key: K, value: V)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface PersistentMapOptions {\n  persistentKey: string;\n}\n\nexport class PersistentMap extends Map {\n  override clear(): void {\n    localStorage.removeItem(this._persistentKey);\n    super.clear();\n  }\n\n  override delete(key: K): boolean {\n    const temp = super.delete(key);\n    this.saveState();\n    return temp;\n  }\n\n  override set(key: K, value: V): this {\n    const temp = super.set(key, value);\n    this.saveState();\n    return temp;\n  }\n\n  private saveState() {\n    localStorage.setItem(this._persistentKey, JSON.stringify([...this.entries()]));\n  }\n\n  private _persistentKey = '';\n\n  constructor(\n    { persistentKey }: PersistentMapOptions,\n    entries?: readonly (readonly [K, V])[] | null,\n  ) {\n    super(\n      persistentKey && localStorage.getItem(persistentKey)\n        ? JSON.parse(localStorage.getItem(persistentKey)!)\n        : entries,\n    );\n\n    if (!persistentKey) {\n      console.error('PersistentMap need persistentKey option');\n      return;\n    }\n\n    this._persistentKey = persistentKey;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersistentMapOptions.html":{"url":"interfaces/PersistentMapOptions.html","title":"interface - PersistentMapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PersistentMapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/persistent-map.class.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            persistentKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        persistentKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        persistentKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PersistentMapOptions {\n  persistentKey: string;\n}\n\nexport class PersistentMap extends Map {\n  override clear(): void {\n    localStorage.removeItem(this._persistentKey);\n    super.clear();\n  }\n\n  override delete(key: K): boolean {\n    const temp = super.delete(key);\n    this.saveState();\n    return temp;\n  }\n\n  override set(key: K, value: V): this {\n    const temp = super.set(key, value);\n    this.saveState();\n    return temp;\n  }\n\n  private saveState() {\n    localStorage.setItem(this._persistentKey, JSON.stringify([...this.entries()]));\n  }\n\n  private _persistentKey = '';\n\n  constructor(\n    { persistentKey }: PersistentMapOptions,\n    entries?: readonly (readonly [K, V])[] | null,\n  ) {\n    super(\n      persistentKey && localStorage.getItem(persistentKey)\n        ? JSON.parse(localStorage.getItem(persistentKey)!)\n        : entries,\n    );\n\n    if (!persistentKey) {\n      console.error('PersistentMap need persistentKey option');\n      return;\n    }\n\n    this._persistentKey = persistentKey;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Project.html":{"url":"interfaces/Project.html","title":"interface - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/project.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitHubIntegration\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitHubIntegration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitHubIntegration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub repository name\n\"SamPanDonte/untitled\"\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project's ID.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project's name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectMembers:     ProjectMember[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProjectMember[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of projects members\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProjectMember } from './project-member.interface';\n\nexport interface Project {\n  /**\n   * The project's ID.\n   */\n  id: number;\n\n  /**\n   * The project's name.\n   */\n  name: string;\n\n  /**\n   * GitHub repository name\n   * @example\n   * \"SamPanDonte/untitled\"\n   */\n  gitHubIntegration: string;\n\n  /**\n   * List of projects members\n   */\n  projectMembers?: ProjectMember[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectMember.html":{"url":"interfaces/ProjectMember.html","title":"interface - ProjectMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/project-member.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            privileges\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        privileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        privileges:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectMember {\n  user: {\n    id: number;\n    name: string;\n    surname: string;\n    email: string;\n    avatar: string;\n    username: string;\n  };\n  privileges: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/project.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeWorkspace\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/project.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                    \n                    changeWorkspace(projectId: number, newWorkspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:58\n                \n            \n\n\n            \n                \n                    Changes the workspace of the project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project to move\n\n                                    \n                                \n                                \n                                    newWorkspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace where the project will be moved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(project: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:47\n                \n            \n\n\n            \n                \n                    Creates a new project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project to add\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:29\n                \n            \n\n\n            \n                \n                    Deletes the project by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the project to delete from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:20\n                \n            \n\n\n            \n                \n                    Gets a project by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the project to get from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:65\n                \n            \n\n\n            \n                \n                    List projects in given workspace.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:38\n                \n            \n\n\n            \n                \n                    Updates a project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project object to update in the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { map } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Project } from '../interfaces/project.interface';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Gets a project by its ID.\n   * @param projectId identifier of the project to get from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(projectId: number) {\n    return this.apiService.get(`/project/${projectId}`);\n  }\n\n  /**\n   * Deletes the project by its ID.\n   * @param projectId identifier of the project to delete from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(projectId: number) {\n    return this.apiService.delete(`/project/${projectId}`);\n  }\n\n  /**\n   * Updates a project.\n   * @param project project object to update in the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public update(project: Project) {\n    return this.apiService.put(`/project/${project.id}`, { body: project });\n  }\n\n  /**\n   * Creates a new project.\n   * @param project project to add\n   * @returns Request observable, which completes when request is finished\n   */\n  public create(project: { name: string; workspaceId: number }) {\n    return this.apiService.post('/project', { body: project });\n  }\n\n  /**\n   * Changes the workspace of the project.\n   * @deprecated\n   * @param projectId project to move\n   * @param newWorkspaceId workspace where the project will be moved\n   * @returns Request observable, which completes when request is finished\n   */\n  public changeWorkspace(projectId: number, newWorkspaceId: number) {\n    return this.apiService.put(`/project/${projectId}/workspace/${newWorkspaceId}`);\n  }\n\n  /**\n   * List projects in given workspace.\n   */\n  public list() {\n    return this.apiService.get('/workspace').pipe(\n      map((workspaces) =>\n        workspaces.reduce((projects: any, workspace: Workspace) => {\n          projects.push(...workspace.projectsWithPrivileges.map((p) => p.project));\n          return projects;\n        }, []),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsListPage.html":{"url":"components/ProjectsListPage.html","title":"component - ProjectsListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/projects-list/projects-list.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects-list\n            \n\n            \n                styleUrls\n                ./projects-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./projects-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faPlus\n                            \n                            \n                                projects$\n                            \n                            \n                                workspace$\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProject\n                            \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                openProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, workspaceService: WorkspaceService, projectService: ProjectService, dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WorkspaceService } from '../../services/workspace.service';\nimport { map, Observable } from 'rxjs';\nimport { Project } from '../../interfaces/project.interface';\nimport { Workspace } from '../../interfaces/workspace.interface';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from 'src/app/_main/services/dialog.service';\nimport { ProjectService } from '../../services/project.service';\n\n@Component({\n  selector: 'app-projects-list',\n  templateUrl: './projects-list.page.html',\n  styleUrls: ['./projects-list.page.scss'],\n})\nexport class ProjectsListPage {\n  workspace$: Observable;\n  projects$: Observable;\n\n  faPlus = faPlus;\n\n  private workspaceId!: number;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private router: Router,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.projects$ = this.workspace$.pipe(\n      map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)),\n    );\n  }\n\n  public editProject(project: Project) {\n    this.router.navigate(['/', this.workspaceId, project.id, 'edit']);\n  }\n\n  public openProject(project: Project) {\n    this.router.navigate(['/', this.workspaceId, project.id]);\n  }\n\n  deleteProject(project: Project) {\n    this.dialogService.confirmProjectDelete(project).subscribe(() => {\n      this.projectService.delete(project.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n\n  {{ (workspace$ | async)?.name }}\n  New project\n\n\n\n\n\n  \n  \n    Name\n     {{ row.name }} \n  \n\n  \n  \n    Statistics\n     - \n  \n\n  \n  \n    Last update\n     - \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Edit project\n        \n        \n          Delete project\n        \n      \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./projects-list.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ (workspace$ | async)?.name }}  New project        Name     {{ row.name }}           Statistics     -           Last update     -                                                           Edit project                          Delete project                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Random.html":{"url":"classes/Random.html","title":"class - Random","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Random\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/random.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                m_w\n                            \n                            \n                                    Private\n                                m_z\n                            \n                            \n                                    Private\n                                mask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                random\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(seed: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/classes/random.class.ts:4\n                            \n                        \n\n                \n                    \n                            Random number generation class with optional seed\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        seed\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the seed to use in random number generation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        m_w\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 123456789\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        m_z\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 987654321\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0xffffffff\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        random\n                        \n                    \n                \n            \n            \n                \n                    \n                    random()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/random.class.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Random {\n  private m_w = 123456789;\n  private m_z = 987654321;\n  private mask = 0xffffffff;\n\n  /**\n   * Random number generation class with optional seed\n   * @param seed the seed to use in random number generation\n   */\n  constructor(seed: number = new Date().getTime()) {\n    this.m_w = (123456789 + seed) & this.mask;\n    this.m_z = (987654321 - seed) & this.mask;\n  }\n\n  // Returns number between 0 (inclusive) and 1.0 (exclusive),\n  // just like Math.random().\n  public random() {\n    this.m_z = (36969 * (this.m_z & 65535) + (this.m_z >> 16)) & this.mask;\n    this.m_w = (18000 * (this.m_w & 65535) + (this.m_w >> 16)) & this.mask;\n    let result = ((this.m_z >> 0;\n    result /= 4294967296;\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/register/register.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                error\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                RegisterStage\n                            \n                            \n                                    Private\n                                    Optional\n                                registerSubscription\n                            \n                            \n                                    Public\n                                    Optional\n                                stage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                nextStage\n                            \n                            \n                                previousStage\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/register/register.page.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousStage\n                        \n                    \n                \n            \n            \n                \npreviousStage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator(), emailValidator()], []),\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n    name: new FormControl('', [requiredValidator()], []),\n    surname: new FormControl('', [requiredValidator()], []),\n    username: new FormControl('', [requiredValidator()], []),\n    agreements: new FormControl('', [requiredValidator()], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:33\n                        \n                    \n\n            \n                \n                    Form group for register.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RegisterStage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RegisterStage\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        registerSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegisterStage\n\n                    \n                \n                \n                    \n                        Default value : RegisterStage.IMPORTANT_DATA\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { emailValidator } from '@main/validators/email.validator';\nimport { passwordValidator } from '@main/validators/password.validator';\nimport { sameAsValidator } from '@main/validators/same-as.validator';\nimport { catchError, EMPTY, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { AuthService } from '../../services/auth.service';\n\nenum RegisterStage {\n  IMPORTANT_DATA,\n  PERSONAL_DATA,\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  private registerSubscription?: Subscription;\n  public stage?: RegisterStage = RegisterStage.IMPORTANT_DATA;\n  RegisterStage = RegisterStage;\n\n  public error?: string;\n\n  /**\n   * Form group for register.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator(), emailValidator()], []),\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n    name: new FormControl('', [requiredValidator()], []),\n    surname: new FormControl('', [requiredValidator()], []),\n    username: new FormControl('', [requiredValidator()], []),\n    agreements: new FormControl('', [requiredValidator()], []),\n  });\n\n  nextStage() {\n    let formFields: string[] = ['email', 'password', 'repeatPassword', 'agreements'];\n    let correctData: boolean = true;\n    for (let field of formFields) {\n      this.form.get(field)?.markAsTouched();\n      this.form.get(field)?.updateValueAndValidity();\n      if (this.form.get(field)?.invalid) {\n        correctData = false;\n      }\n    }\n    if (correctData) {\n      this.stage = RegisterStage.PERSONAL_DATA;\n    }\n  }\n\n  previousStage() {\n    this.stage = RegisterStage.IMPORTANT_DATA;\n  }\n\n  register() {\n    if (this.registerSubscription && !this.registerSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.registerSubscription = this.authService\n        .register(this.form.value)\n        .pipe(\n          catchError((e) => {\n            this.handleError(e);\n            return EMPTY;\n          }),\n        )\n        .subscribe(() => {\n          this.router.navigate(['/']);\n        });\n    }\n  }\n\n  handleError(error: any) {\n    switch (error.status) {\n      case 422:\n        switch (error.error.message) {\n          case 'this email is already taken':\n            this.error = $localize`Email is already taken`;\n            break;\n          case 'this username is already taken':\n            this.error = $localize`Username is already taken`;\n        }\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Register\n          This is a secure site. Please enter your register information or if you have an\n            account already, click here to login.\n        \n\n        \n          {{ error }}\n        \n\n        \n          \n\n          \n\n          \n\n          \n            \n              I agree to the End User License Agreement and Privacy Statement.\n            \n          \n\n          Next\n        \n        \n          \n\n          \n\n          \n          \n            Back\n            Register\n          \n        \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .agreements {\n          display: flex;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n\n        a {\n          color: var(--color-link);\n          cursor: pointer;\n          transition: color 0.2s ease;\n\n          &:hover {\n            color: var(--color-link-hover);\n          }\n        }\n\n        .buttons {\n          display: flex;\n          width: 100%;\n          justify-content: space-between;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Register          This is a secure site. Please enter your register information or if you have an            account already, click here to login.                          {{ error }}                                                                                  I agree to the End User License Agreement and Privacy Statement.                                Next                                                                    Back            Register                                      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestOptions.html":{"url":"interfaces/RequestOptions.html","title":"interface - RequestOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/request-options.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Request options interface\nUse this interface to configure request options like body, params, headers, etc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            context\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            observe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            params\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reportProgress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            responseType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            withCredentials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Body to send with the request. Used int POST, PATH, PATCH, DELETE requests.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:         HttpContext\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpContext\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Additional context to attach with request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     HttpHeaders | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpHeaders | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to send with the request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        observe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        observe:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Part of the response to observe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:     HttpParams | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpParams | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Query params to send with the request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportProgress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reportProgress:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to report progress events like download or upload progress.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responseType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responseType:     \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Response type to expect from the server.\nFor example:\n\nblob - will return a Blob object (used when API sends back a file).\njson - will return a JSON object.\ntext - will return a string.\n\nDefault is json.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If you want the credentials (cookie authentication token) to be passable through a call,\nyou need to add { withCredentials: true } in your httpClient call.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpContext, HttpHeaders, HttpParams } from '@angular/common/http';\n\n/**\n * Request options interface\n * Use this interface to configure request options like body, params, headers, etc.\n */\nexport interface RequestOptions {\n  /**\n   * Body to send with the request. Used int POST, PATH, PATCH, DELETE requests.\n   */\n  body?: any;\n  /**\n   * Headers to send with the request.\n   */\n  headers?:\n    | HttpHeaders\n    | {\n        [header: string]: string | string[];\n      };\n  /**\n   * Additional context to attach with request.\n   */\n  context?: HttpContext;\n  /**\n   * Part of the response to observe.\n   */\n  observe?: 'body';\n  /**\n   * Query params to send with the request.\n   */\n  params?:\n    | HttpParams\n    | {\n        [param: string]: string | number | boolean | ReadonlyArray;\n      };\n  /**\n   * Used to report progress events like download or upload progress.\n   */\n  reportProgress?: boolean;\n\n  /**\n   * Response type to expect from the server.\n   * For example:\n   * - blob - will return a Blob object (used when API sends back a file).\n   * - json - will return a JSON object.\n   * - text - will return a string.\n   *\n   * Default is json.\n   */\n  responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n  /**\n   * If you want the credentials (cookie authentication token) to be passable through a call,\n   * you need to add `{ withCredentials: true }` in your httpClient call.\n   */\n  withCredentials?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RestoreAccountPage.html":{"url":"components/RestoreAccountPage.html","title":"component - RestoreAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RestoreAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/restore-account/restore-account.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-restore-account-page\n            \n\n            \n                styleUrls\n                ./restore-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./restore-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/restore-account/restore-account.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/restore-account/restore-account.page.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restore\n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/restore-account/restore-account.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\n\n@Component({\n  selector: 'app-restore-account-page',\n  templateUrl: './restore-account.page.html',\n  styleUrls: ['./restore-account.page.scss'],\n})\nexport class RestoreAccountPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  logOut() {\n    this.authService.logout().subscribe();\n  }\n\n  restore() {\n    this.authService.recoverAccount().subscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Restore account\n          Your account has been deleted. You can restore your account within 7 days of\n            deletion.\n        \n\n        \n          Log out\n          Restore\n        \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./restore-account.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .actions {\n          display: flex;\n          width: 100%;\n          justify-content: flex-end;\n          margin-bottom: 1rem;\n\n          > *:not(:last-child) {\n            margin-right: 1rem;\n          }\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Restore account          Your account has been deleted. You can restore your account within 7 days of            deletion.                          Log out          Restore                            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'RestoreAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterExtensionsService.html":{"url":"injectables/RouterExtensionsService.html","title":"injectable - RouterExtensionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RouterExtensionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/router-extensions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    snapshot\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/router-extensions.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        snapshot\n                    \n                \n\n                \n                    \n                        getsnapshot()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/services/router-extensions.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterExtensionsService {\n  constructor(private router: Router) {}\n  public get snapshot() {\n    let node = (this.router.routerState.snapshot as any)._root;\n    while (node.children[0]) {\n      node = node.children[0];\n    }\n\n    return { params: node.value.params };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SchedulePage.html":{"url":"components/SchedulePage.html","title":"component - SchedulePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SchedulePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/schedule/schedule.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-schedule-page\n            \n\n            \n                styleUrls\n                ./schedule.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./schedule.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cursor\n                            \n                            \n                                    Public\n                                limitAfter\n                            \n                            \n                                    Public\n                                limitBefore\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                schedule$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dates\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, activatedRoute: ActivatedRoute, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/schedule/schedule.page.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cursor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dayjs().toDate()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limitAfter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limitBefore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        schedule$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dates\n                    \n                \n\n                \n                    \n                        getdates()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/pages/schedule/schedule.page.ts:23\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport { Schedule } from '@tasks/interfaces/schedule.interface';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-schedule-page',\n  templateUrl: './schedule.page.html',\n  styleUrls: ['./schedule.page.scss'],\n})\nexport class SchedulePage implements OnInit {\n  public schedule$: Observable;\n  public project$: Observable;\n\n  public cursor = dayjs().toDate();\n  public limitAfter = 20;\n  public limitBefore = 0;\n\n  public get dates() {\n    const { cursor, limitBefore, limitAfter } = this;\n\n    const dates = [];\n\n    for (let i = 0; i \n    \n\n    \n        \n\n\n  \n    \n      \n        {{ cursor | date:'MMMM' }}\n      \n    \n    \n      \n    \n    \n      \n      \n        \n          {{ singleSchedule.user.name.substring(0, 1) }}\n        \n      \n    \n  \n\n  \n    \n      \n      \n        {{ date | date:'d' }}\n        {{ date | date:'EEE' }}\n      \n    \n    \n      \n      \n    \n    \n      \n      \n        \n          \n            \n              {{ task.name }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./schedule.page.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  padding: 2rem;\n}\n\n.schedule {\n  display: flex;\n  width: 100%;\n  padding-left: 10px;\n\n  // Sections\n\n  .people-header {\n    width: 80px;\n    height: 100%;\n    flex-shrink: 0;\n    margin-right: 1rem;\n    background-color: var(--color-secondary-800);\n    border-radius: var(--border-radius);\n  }\n\n  .timeline {\n    width: 100%;\n    height: 100%;\n    flex-grow: 1;\n    background-color: var(--color-secondary-800);\n    border-radius: var(--border-radius);\n    overflow-x: auto;\n\n    .cell {\n      width: 130px;\n      border-right: 1px solid var(--color-secondary-600);\n    }\n\n    .group-event-row {\n      .cell {\n        border-top: 1px solid var(--color-secondary-600);\n      }\n    }\n\n    .single-person-row {\n      .cell {\n        border-top: 1px solid var(--color-secondary-600);\n      }\n    }\n  }\n\n  // Rows\n  .header-event-row,\n  .group-event-row,\n  .single-person-row {\n    display: flex;\n  }\n\n  .header-row {\n    @include typo-title;\n\n    display: flex;\n    height: 64px;\n    color: var(--color-text);\n  }\n\n  .group-event-row {\n    display: flex;\n    height: 30px;\n  }\n\n  .single-person-row {\n    display: flex;\n    width: 100%;\n    height: 100px;\n  }\n\n  .cell {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    flex-shrink: 0;\n    align-items: center;\n    justify-content: center;\n\n    .number {\n      @include typo-title;\n    }\n\n    .day-of-week {\n      @include typo-body;\n    }\n\n    .task {\n      width: 100%;\n      height: 100%;\n      padding: 10px;\n      background-color: var(--color-primary-500);\n      border-radius: var(--border-radius);\n      color: var(--color-text);\n    }\n  }\n}\n\n.avatar {\n  @include typo-heading-5;\n\n  display: flex;\n  width: 40px;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-primary-500);\n  border-radius: 50%;\n  color: var(--color-text);\n  text-transform: uppercase;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ cursor | date:\\'MMMM\\' }}                                                          {{ singleSchedule.user.name.substring(0, 1) }}                                              {{ date | date:\\'d\\' }}        {{ date | date:\\'EEE\\' }}                                                                                          {{ task.name }}                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SchedulePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/select/select.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select\n            \n\n            \n                styleUrls\n                ./select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                            \n                                isOpen$\n                            \n                            \n                                overlay\n                            \n                            \n                                overlayMinWidth\n                            \n                            \n                                    Optional\n                                queryOptions\n                            \n                            \n                                selected$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Private\n                                compare\n                            \n                            \n                                    Private\n                                loadOptions\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Private\n                                sameAsSelected\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Private\n                                setActiveOption\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comparer\n                            \n                            \n                                floatingLabel\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/select/select.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comparer\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/select/select.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/select/select.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        compare\n                        \n                    \n                \n            \n            \n                \n                    \n                    compare(a: any, b: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        sameAsSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    sameAsSelected(option: OptionComponent | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                OptionComponent | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(option: OptionComponent | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                OptionComponent | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setActiveOption\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveOption(option: OptionComponent | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                OptionComponent | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InputComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('input')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('overlay')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlayMinWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        queryOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(OptionComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({\n    control: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:82\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { FormControl, NgControl } from '@angular/forms';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { isEqual } from 'lodash-es';\nimport { BehaviorSubject, filter, fromEvent, take } from 'rxjs';\nimport { InputComponent } from '../input/input.component';\nimport { OptionComponent } from '../option/option.component';\nimport { SelectLabel } from './select-label.model';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectComponent extends ControlAccessor implements AfterViewInit {\n  @ViewChild('input') input!: InputComponent;\n  @ViewChild('overlay') overlay!: ElementRef;\n  @ContentChildren(OptionComponent) queryOptions?: QueryList;\n\n  @Input() floatingLabel?: string;\n  @Input() comparer?: string;\n\n  isOpen$ = new BehaviorSubject(false);\n  selected$ = new BehaviorSubject({\n    control: new FormControl(''),\n  });\n\n  overlayMinWidth = 0;\n\n  /** @ignore */\n  faChevronDown = faChevronDown;\n\n  constructor(ngControl: NgControl, private cdRef: ChangeDetectorRef) {\n    super(ngControl);\n  }\n\n  public open() {\n    this.overlayMinWidth = this.input.input.nativeElement.clientWidth;\n    setTimeout(() => {\n      fromEvent(document, 'click')\n        .pipe(\n          take(1),\n          untilDestroyed(this),\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\n        )\n        .subscribe(() => this.close());\n      this.isOpen$.next(true);\n    });\n  }\n\n  public ngAfterViewInit(): void {\n    this.loadOptions();\n\n    this.control.valueChanges.subscribe(() => {\n      this.loadOptions();\n    });\n\n    this.queryOptions?.changes.subscribe(() => {\n      this.loadOptions();\n    });\n  }\n\n  public close() {\n    this.isOpen$.next(false);\n  }\n\n  public toggle() {\n    if (this.isOpen$.value) {\n      return this.close();\n    }\n    return this.open();\n  }\n\n  private loadOptions() {\n    if (!this.queryOptions) return;\n\n    this.queryOptions.forEach((option, index) => {\n      option.ref.nativeElement.addEventListener('click', () => {\n        this.select(this.queryOptions?.get(index)!);\n      });\n\n      if (this.compare(option.value, this.control.value)) {\n        this.setActiveOption(option);\n      }\n    });\n\n    this.cdRef.detectChanges();\n  }\n\n  private setActiveOption(option: OptionComponent | null) {\n    const currentLabel = this.selected$.getValue();\n    currentLabel.control.setValue(option?.viewValue || '');\n    currentLabel.icon = option?.icon;\n    currentLabel.optionComponent = option || undefined;\n    this.selected$.next(currentLabel);\n  }\n\n  private sameAsSelected(option: OptionComponent | null) {\n    return (\n      this.selected$.value.optionComponent === option ||\n      this.selected$.value.optionComponent?.value === option?.value\n    );\n  }\n\n  public select(option: OptionComponent | null) {\n    if (this.sameAsSelected(option)) return;\n\n    this.setActiveOption(option);\n    this.control.setValue(option?.value || null);\n  }\n\n  private compare(a: any, b: any) {\n    const { comparer } = this;\n\n    if (comparer && a && b && (a[comparer] !== undefined || b[comparer] !== undefined)) {\n      return a[comparer] === b[comparer];\n    } else {\n      return a == b || isEqual(a, b);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./select.component.scss\n                \n                .overlay {\n  overflow: auto;\n  width: 100%;\n  max-height: 300px;\n  padding: 1rem;\n  padding: 0.5rem 0;\n  background-color: var(--color-secondary-600);\n  border-radius: var(--border-radius);\n  box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.1);\n}\n\n:host ::ng-deep {\n\n  app-input,\n  &>*,\n  input {\n    cursor: pointer !important;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectLabel.html":{"url":"interfaces/SelectLabel.html","title":"interface - SelectLabel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectLabel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/components/select/select-label.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            control\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            optionComponent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        control\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        control:         FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string | IconDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string | IconDefinition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionComponent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optionComponent:         OptionComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OptionComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { OptionComponent } from '../option/option.component';\n\nexport interface SelectLabel {\n  icon?: string | IconDefinition;\n  control: FormControl;\n  optionComponent?: OptionComponent;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectionEditOperation.html":{"url":"interfaces/SelectionEditOperation.html","title":"interface - SelectionEditOperation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectionEditOperation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/monaco-extended.class.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            after\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            afterEachLine\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            before\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            beforeEachLine\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        after\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        after:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        afterEachLine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        afterEachLine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        before\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        before:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beforeEachLine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beforeEachLine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as monaco from 'monaco-editor';\n\ntype MonacoEditor = monaco.editor.IStandaloneCodeEditor;\ntype Selection = monaco.Selection;\ntype EditOperation = monaco.editor.IIdentifiedSingleEditOperation;\n\ninterface SelectionEditOperation {\n  before?: string;\n  after?: string;\n  beforeEachLine?: string;\n  afterEachLine?: string;\n}\n\nexport class MonacoExtended {\n  public static insertTextAt(\n    editor: MonacoEditor,\n    lineNumber: number,\n    column: number,\n    text: string,\n  ) {\n    editor.executeEdits('', [\n      {\n        range: {\n          startLineNumber: lineNumber,\n          startColumn: column,\n          endLineNumber: lineNumber,\n          endColumn: column,\n        },\n        text,\n      },\n    ]);\n  }\n\n  public static executeEdits(editor: MonacoEditor, edits: EditOperation[]) {\n    for (const edit of edits) {\n      if (edit.range?.startColumn && !edit.range?.endColumn)\n        (edit.range as any).endColumn = edit.range.startColumn;\n      if (edit.range?.startLineNumber && !edit.range?.endLineNumber)\n        (edit.range as any).endLineNumber = edit.range.startLineNumber;\n    }\n    return editor.executeEdits('', edits);\n  }\n\n  public static removeTextAt(\n    editor: MonacoEditor,\n    startLineNumber: number,\n    startColumn: number,\n    endLineNumber: number,\n    endColumn: number,\n  ) {\n    editor.executeEdits('', [\n      {\n        range: {\n          startLineNumber,\n          startColumn,\n          endLineNumber,\n          endColumn,\n        },\n        text: null,\n      },\n    ]);\n  }\n\n  public static insertTextBeforeSelection(\n    editor: MonacoEditor,\n    selection: Selection,\n    text: string,\n  ) {\n    MonacoExtended.insertTextAt(editor, selection.startLineNumber, selection.startColumn, text);\n  }\n\n  public static insertTextAfterSelection(editor: MonacoEditor, selection: Selection, text: string) {\n    MonacoExtended.insertTextAt(editor, selection.endLineNumber, selection.endColumn, text);\n  }\n\n  public static insertTextBeforeAndAfterEachSelection(\n    editor: MonacoEditor,\n    selections: Selection[],\n    beforeSelectionText: string,\n    afterSelectionText: string = '',\n  ) {\n    const edits = ([] as any[]).concat(\n      ...selections.map((selection) => {\n        return [\n          {\n            range: {\n              startLineNumber: selection.startLineNumber,\n              startColumn: selection.startColumn,\n              endLineNumber: selection.startLineNumber,\n              endColumn: selection.startColumn,\n            },\n            text: beforeSelectionText,\n          },\n          {\n            range: {\n              startLineNumber: selection.endLineNumber,\n              startColumn: selection.endColumn,\n              endLineNumber: selection.endLineNumber,\n              endColumn: selection.endColumn,\n            },\n            text: afterSelectionText,\n          },\n        ];\n      }),\n    );\n\n    editor.executeEdits('', edits);\n  }\n\n  public static removeTextBeforeAndAfterEachSelection(\n    editor: MonacoEditor,\n    selections: Selection[],\n    beforeSelectionText: string,\n    afterSelectionText: string = '',\n  ) {\n    const model = editor.getModel();\n    const afterSelectionTextLinesCount = (afterSelectionText.match(/\\n/g) || [])?.length;\n    const edits: any[] = [];\n\n    if (!model) return;\n\n    for (const selection of selections) {\n      if (\n        MonacoExtended.selectionStartWith(editor, selection, beforeSelectionText) &&\n        MonacoExtended.selectionEndsWith(editor, selection, afterSelectionText)\n      ) {\n        edits.push({\n          range: {\n            startLineNumber: selection.startLineNumber,\n            startColumn: selection.startColumn,\n            endLineNumber:\n              selection.startLineNumber + (beforeSelectionText.match(/\\n/g) || [])?.length,\n            endColumn: beforeSelectionText.replace(/.*\\n/g, '').length + 1,\n          },\n          text: '',\n        });\n        edits.push({\n          range: {\n            startLineNumber: selection.endLineNumber - afterSelectionTextLinesCount,\n            startColumn:\n              model.getLineContent(selection.endLineNumber - afterSelectionTextLinesCount).length -\n              (afterSelectionText.replace(/\\n[^]*$/g, '').length - 1),\n            endLineNumber: selection.endLineNumber,\n            endColumn: selection.endColumn,\n          },\n          text: '',\n        });\n      }\n    }\n\n    editor.executeEdits('', edits);\n  }\n\n  public static selectionStartWith(editor: MonacoEditor, selection: Selection, text: string) {\n    const selectedValue = editor\n      .getModel()\n      ?.getValueInRange(selection, monaco.editor.EndOfLinePreference.LF);\n    return selectedValue?.startsWith(text);\n  }\n\n  public static selectionEndsWith(editor: MonacoEditor, selection: Selection, text: string) {\n    const selectedValue = editor\n      .getModel()\n      ?.getValueInRange(selection, monaco.editor.EndOfLinePreference.LF);\n    return selectedValue?.endsWith(text);\n  }\n\n  public static toggleEndAndStartOfEachSelection(\n    editor: MonacoEditor,\n    beforeSelectionText: string,\n    afterSelectionText: string = '',\n  ) {\n    const selections = editor.getSelections();\n    if (!selections) return;\n\n    const shouldDelete = selections.some(\n      (selection) =>\n        MonacoExtended.selectionStartWith(editor, selection, beforeSelectionText) &&\n        MonacoExtended.selectionEndsWith(editor, selection, afterSelectionText),\n    );\n\n    const mode: 'delete' | 'add' = shouldDelete ? 'delete' : 'add';\n\n    if (mode === 'delete') {\n      MonacoExtended.removeTextBeforeAndAfterEachSelection(\n        editor,\n        selections,\n        beforeSelectionText,\n        afterSelectionText,\n      );\n    } else {\n      MonacoExtended.insertTextBeforeAndAfterEachSelection(\n        editor,\n        selections,\n        beforeSelectionText,\n        afterSelectionText,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectionEditPlugin.html":{"url":"classes/SelectionEditPlugin.html","title":"class - SelectionEditPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectionEditPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                executeSelectionEdits\n                            \n                            \n                                    Static\n                                getSelectionEdits\n                            \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        executeSelectionEdits\n                        \n                    \n                \n            \n            \n                \n                    \n                    executeSelectionEdits(edits: SelectionEditOperation, endCursorState?: CursorSTateComputer | Selection[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    edits\n                                    \n                                                SelectionEditOperation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endCursorState\n                                    \n                                            CursorSTateComputer | Selection[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSelectionEdits\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectionEdits(edits: SelectionEditOperation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    edits\n                                    \n                                                SelectionEditOperation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditOperation[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(prototype: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prototype\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { snakeCase } from 'lodash-es';\nimport { CursorSTateComputer, EditOperation, Editor, Selection } from '../typings';\n\nexport type SelectionEditOperation = { [key in SelectionEditOperationType]: string };\n\nexport enum SelectionEditOperationType {\n  before = 'BEFORE',\n  after = 'AFTER',\n  beforeEachLine = 'BEFORE_EACH_LINE',\n  afterEachLine = 'AFTER_EACH_LINE',\n}\n\nexport const SelectionEditOperationOrder = {\n  before: 1,\n  after: 4,\n  beforeEachLine: 2,\n  afterEachLine: 3,\n};\n\nconst SelectionEditOperationConverter: {\n  [key in SelectionEditOperationType]: (\n    editor: Editor,\n    selection: Selection,\n    value: string,\n  ) => EditOperation[];\n} = {\n  [SelectionEditOperationType.before]: (editor: Editor, selection: Selection, value: string) => {\n    return [\n      {\n        range: {\n          startColumn: 1,\n          startLineNumber: selection.startLineNumber,\n          endColumn: 1,\n          endLineNumber: selection.startLineNumber,\n        },\n        text: value,\n      },\n    ] as EditOperation[];\n  },\n  [SelectionEditOperationType.after]: (editor: Editor, selection: Selection, value: string) => {\n    const column = (editor.getModel()?.getLineLength(selection.endLineNumber) || 0) + 1;\n\n    return [\n      {\n        range: {\n          startColumn: column,\n          startLineNumber: selection.endLineNumber,\n          endColumn: column,\n          endLineNumber: selection.endLineNumber,\n        },\n        text: value,\n      },\n    ] as EditOperation[];\n  },\n  [SelectionEditOperationType.beforeEachLine]: (\n    editor: Editor,\n    selection: Selection,\n    value: string,\n  ) => {\n    const startLine = selection.startLineNumber;\n    const endLine = selection.endLineNumber;\n\n    const difference = Math.abs(startLine - endLine) + 1;\n    const offset = Math.min(startLine, endLine);\n    const indexes = [...new Array(difference).keys()].map((k) => k + offset);\n\n    return indexes.map((line) => ({\n      range: {\n        startLineNumber: line,\n        startColumn: 1,\n        endLineNumber: line,\n        endColumn: 1,\n      },\n      text: value,\n    })) as EditOperation[];\n  },\n  [SelectionEditOperationType.afterEachLine]: (\n    editor: Editor,\n    selection: Selection,\n    value: string,\n  ) => {\n    const model = editor.getModel();\n    if (!model) return [];\n\n    const startLine = selection.startLineNumber;\n    const endLine = selection.endLineNumber;\n\n    const difference = Math.abs(startLine - endLine) + 1;\n    const offset = Math.min(startLine, endLine);\n    const indexes = [...new Array(difference).keys()].map((k) => k + offset);\n\n    return indexes.map((line) => {\n      const column = model.getLineLength(line) + 1;\n\n      return {\n        range: {\n          startLineNumber: line,\n          startColumn: column,\n          endLineNumber: line,\n          endColumn: column,\n        },\n        text: value,\n      } as EditOperation;\n    });\n  },\n};\n\nexport class SelectionEditPlugin {\n  public static init(prototype: any) {\n    prototype.getSelectionEdits = function (edits: SelectionEditOperation) {\n      return SelectionEditPlugin.getSelectionEdits.bind(this)(edits);\n    };\n\n    prototype.executeSelectionEdits = function (\n      edits: SelectionEditOperation,\n      endCursorState?: CursorSTateComputer | Selection[],\n    ) {\n      return SelectionEditPlugin.executeSelectionEdits.bind(this)(edits, endCursorState);\n    };\n  }\n\n  public static getSelectionEdits(edits: SelectionEditOperation): EditOperation[] {\n    const editor: Editor = this as any;\n    console.log(editor);\n    const selections = editor.getSelections();\n    let _edits: EditOperation[] = [];\n\n    console.log(selections);\n\n    if (!selections) return [];\n\n    for (const selection of selections) {\n      const entries = Object.entries(edits).sort((a: [string, string], b: [string, string]) => {\n        return (\n          (SelectionEditOperationOrder as any)[a[0] as any] -\n          (SelectionEditOperationOrder as any)[b[0] as any]\n        );\n      });\n      for (const [key, value] of entries) {\n        const _key = snakeCase(key).toUpperCase();\n        _edits = [\n          ..._edits,\n          ...SelectionEditOperationConverter[_key as SelectionEditOperationType](\n            editor,\n            selection,\n            value,\n          ),\n        ];\n      }\n    }\n    return _edits;\n  }\n\n  public static executeSelectionEdits(\n    edits: SelectionEditOperation,\n    endCursorState?: CursorSTateComputer | Selection[],\n  ) {\n    const editor: Editor = this as any;\n    const _edits = this.getSelectionEdits(edits);\n    console.log(_edits);\n    editor.executeEdits('', _edits, endCursorState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionsService.html":{"url":"injectables/SessionsService.html","title":"injectable - SessionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/services/sessions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/services/sessions.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/services/sessions.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/services/sessions.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserSession } from 'src/app/settings/interfaces/session.interface';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionsService {\n  constructor(private apiService: ApiService) {}\n\n  public list(): Observable {\n    return this.apiService.get(`/session`);\n  }\n\n  public delete(id: number) {\n    return this.apiService.delete(`/session/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsAccountPage.html":{"url":"components/SettingsAccountPage.html","title":"component - SettingsAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-account/settings-account.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-account-page\n            \n\n            \n                styleUrls\n                ./settings-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccountMailCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-account/settings-account.page.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccountMailCheck\n                        \n                    \n                \n            \n            \n                \ndeleteAccountMailCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', requiredValidator()),\n    name: new FormControl('', requiredValidator()),\n    surname: new FormControl('', requiredValidator()),\n    username: new FormControl('', requiredValidator()),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-account/settings-account.page.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AuthService } from '@auth/services/auth.service';\nimport { UserService } from '@auth/services/user.service';\nimport { requiredValidator } from '@main/validators/required.validator';\n\n@Component({\n  selector: 'app-settings-account-page',\n  templateUrl: './settings-account.page.html',\n  styleUrls: ['./settings-account.page.scss'],\n})\nexport class SettingsAccountPage implements OnInit {\n  constructor(private userService: UserService, private authService: AuthService) {}\n\n  public form = new FormGroup({\n    email: new FormControl('', requiredValidator()),\n    name: new FormControl('', requiredValidator()),\n    surname: new FormControl('', requiredValidator()),\n    username: new FormControl('', requiredValidator()),\n  });\n\n  ngOnInit() {\n    this.userService.getMyself().subscribe((response) => {\n      this.form.patchValue(response);\n    });\n  }\n\n  submit() {\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.userService.update(this.form.value).subscribe(() => {});\n  }\n\n  resetPassword() {\n    this.authService.resetPassword(this.form.value.email).subscribe(() => {\n      this.authService.logout().subscribe();\n    });\n  }\n\n  deleteAccountMailCheck() {\n    this.authService.deleteAccount().subscribe(() => {\n      // dodac popup czy na pewno zgadzamy sie na usuniecie konta, jesli tak to infomracja ze zostal wyslany link na maila dezaktywujacy konto i ze ma mozliwosc jego przywrocenia do 7 dni\n      this.authService.logout().subscribe();\n    });\n  }\n}\n\n    \n\n    \n        Account\n\n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n    Update profile\n  \n\n  \n  \n    Change password\n    It's highly recommended to change the password every 30 days. It will increase your\n      account security.\n    \n      Change password\n    \n  \n\n  \n  \n    Delete account\n    Delete your account permanently. All not shared owned projects will also be deleted.\n      This action is reversible in period of 7 days - you need to log in to your account in this time to revert your\n      account deletion.\n    \n      Delete account\n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings-account.page.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n}\n\n.actions {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-bottom: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Account                                Update profile          Change password    It\\'s highly recommended to change the password every 30 days. It will increase your      account security.          Change password              Delete account    Delete your account permanently. All not shared owned projects will also be deleted.      This action is reversible in period of 7 days - you need to log in to your account in this time to revert your      account deletion.          Delete account      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsIntegrationsPage.html":{"url":"components/SettingsIntegrationsPage.html","title":"component - SettingsIntegrationsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsIntegrationsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-integrations\n            \n\n            \n                styleUrls\n                ./settings-integrations.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-integrations.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gitHubAccounts$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                getConnectedProjects\n                            \n                            \n                                    Public\n                                loadGitHubIntegration\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disconnect\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnect(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConnectedProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConnectedProjects(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        gitHubAccounts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GitAccount } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { map, Observable, take } from 'rxjs';\n\ninterface GitAccountWithUsage {\n  account: GitAccount;\n  usage: Observable;\n}\n\n@Component({\n  selector: 'app-settings-integrations',\n  templateUrl: './settings-integrations.page.html',\n  styleUrls: ['./settings-integrations.page.scss'],\n})\nexport class SettingsIntegrationsPage implements OnInit {\n  public gitHubAccounts$!: Observable;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  ngOnInit() {\n    this.loadGitHubIntegration();\n  }\n\n  public loadGitHubIntegration(): void {\n    this.gitHubAccounts$ = this.gitIntegrationService.getConnectedGitHubAccounts().pipe(\n      map((accounts) => {\n        return accounts.map((account) => {\n          return {\n            account,\n            usage: this.getConnectedProjects(account).pipe(take(1)),\n          };\n        });\n      }),\n    );\n  }\n\n  public disconnect(account: GitAccount): void {\n    this.gitIntegrationService.deleteConnectedGitHubAccount(account.id).subscribe(({ link }) => {\n      window.open(link, '_blank');\n    });\n  }\n\n  public getConnectedProjects(account: GitAccount): Observable {\n    return this.gitIntegrationService\n      .getGitHubAccountConnectedProjects(account)\n      .pipe(map((projects) => projects.map((project: any) => project.name).join(', ')));\n  }\n}\n\n    \n\n    \n        Integrations\n\n\n\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-integrations.page.scss\n                \n                .list {\n  > * {\n    display: block;\n    margin-top: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Integrations              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsIntegrationsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsLocalizationPage.html":{"url":"components/SettingsLocalizationPage.html","title":"component - SettingsLocalizationPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsLocalizationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-localization/settings-localization.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-localization-page\n            \n\n            \n                styleUrls\n                ./settings-localization.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-localization.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateFormats\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:56\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dateFormats\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n    $localize`YYYY-MM-DD`,\n    $localize`DD-MM-YYYY`,\n    $localize`MM/DD/YYYY`,\n    $localize`DD.MM.YYYY`,\n  ].map((format) => ({\n    format,\n    example: dayjs().format(format),\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    language: new FormControl('', requiredValidator()),\n    dateFormat: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      code: 'de-DE',\n      name: 'Deutsch',\n    },\n    {\n      code: 'en-GB',\n      name: 'English (British)',\n    },\n    {\n      code: 'es-ES',\n      name: 'Español',\n    },\n    {\n      code: 'it-IT',\n      name: 'Italiano',\n    },\n    {\n      code: 'pl-PL',\n      name: 'Polski',\n    },\n    {\n      code: 'en-US',\n      name: 'English (American)',\n    },\n    {\n      code: 'uk-UA',\n      name: 'Українська',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { requiredValidator } from '@main/validators/required.validator';\nimport * as dayjs from 'dayjs';\n\n@Component({\n  selector: 'app-settings-localization-page',\n  templateUrl: './settings-localization.page.html',\n  styleUrls: ['./settings-localization.page.scss'],\n})\nexport class SettingsLocalizationPage {\n  public form = new FormGroup({\n    language: new FormControl('', requiredValidator()),\n    dateFormat: new FormControl(''),\n  });\n\n  languages = [\n    {\n      code: 'de-DE',\n      name: 'Deutsch',\n    },\n    {\n      code: 'en-GB',\n      name: 'English (British)',\n    },\n    {\n      code: 'es-ES',\n      name: 'Español',\n    },\n    {\n      code: 'it-IT',\n      name: 'Italiano',\n    },\n    {\n      code: 'pl-PL',\n      name: 'Polski',\n    },\n    {\n      code: 'en-US',\n      name: 'English (American)',\n    },\n    {\n      code: 'uk-UA',\n      name: 'Українська',\n    },\n  ];\n\n  dateFormats = [\n    $localize`YYYY-MM-DD`,\n    $localize`DD-MM-YYYY`,\n    $localize`MM/DD/YYYY`,\n    $localize`DD.MM.YYYY`,\n  ].map((format) => ({\n    format,\n    example: dayjs().format(format),\n  }));\n\n  constructor() {}\n\n  changeLanguage() {\n    location.href = `https://workflow.adiantek.ovh/${this.form.value.language}/settings/localization`;\n  }\n\n  submit() {\n    this.changeLanguage();\n  }\n}\n\n    \n\n    \n        Localization\n\n\n  \n  \n    {{ language.name }}\n  \n\n  \n  \n    {{ dateFormat.example }}\n  \n\n  \n  \n    Save settings\n  \n\n\n    \n\n    \n                \n                    ./settings-localization.page.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n}\n\n.actions {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Localization        {{ language.name }}          {{ dateFormat.example }}          Save settings  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsLocalizationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_declarations\n\n\n\n\nIntegrationEntryComponent\n\nIntegrationEntryComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nIntegrationEntryComponent->SettingsModule\n\n\n\n\n\nListGroupComponent\n\nListGroupComponent\n\nSettingsModule -->\n\nListGroupComponent->SettingsModule\n\n\n\n\n\nSettingsAccountPage\n\nSettingsAccountPage\n\nSettingsModule -->\n\nSettingsAccountPage->SettingsModule\n\n\n\n\n\nSettingsIntegrationsPage\n\nSettingsIntegrationsPage\n\nSettingsModule -->\n\nSettingsIntegrationsPage->SettingsModule\n\n\n\n\n\nSettingsLocalizationPage\n\nSettingsLocalizationPage\n\nSettingsModule -->\n\nSettingsLocalizationPage->SettingsModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\nSettingsModule -->\n\nSettingsPage->SettingsModule\n\n\n\n\n\nSettingsSessionsPage\n\nSettingsSessionsPage\n\nSettingsModule -->\n\nSettingsSessionsPage->SettingsModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nSettingsModule -->\n\nMainModule->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IntegrationEntryComponent\n                        \n                        \n                            ListGroupComponent\n                        \n                        \n                            SettingsAccountPage\n                        \n                        \n                            SettingsIntegrationsPage\n                        \n                        \n                            SettingsLocalizationPage\n                        \n                        \n                            SettingsPage\n                        \n                        \n                            SettingsSessionsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MainModule\n                        \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '@main/_main.module';\nimport { SettingsPage } from 'src/app/settings/pages/settings/settings.page';\nimport { IntegrationEntryComponent } from './components/integration-entry/integration-entry.component';\nimport { ListGroupComponent } from './components/list-group/list-group.component';\nimport { SettingsAccountPage } from './pages/settings-account/settings-account.page';\nimport { SettingsIntegrationsPage } from './pages/settings-integrations/settings-integrations.page';\nimport { SettingsLocalizationPage } from './pages/settings-localization/settings-localization.page';\nimport { SettingsSessionsPage } from './pages/settings-sessions/settings-sessions.page';\nimport { SettingsRoutingModule } from './settings.routing';\n\n@NgModule({\n  imports: [CommonModule, MainModule, ReactiveFormsModule, SettingsRoutingModule],\n  declarations: [\n    SettingsPage,\n    SettingsLocalizationPage,\n    SettingsAccountPage,\n    SettingsIntegrationsPage,\n    SettingsSessionsPage,\n    ListGroupComponent,\n    IntegrationEntryComponent,\n  ],\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPage.html":{"url":"components/SettingsPage.html","title":"component - SettingsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings/settings.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-page\n            \n\n            \n                styleUrls\n                ./settings.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faAddressCard\n                            \n                            \n                                faCircleNodes\n                            \n                            \n                                faGlobe\n                            \n                            \n                                faUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings/settings.page.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings/settings.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faAddressCard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAddressCard\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCircleNodes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCircleNodes\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faGlobe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGlobe\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faUser\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { faAddressCard, faCircleNodes, faGlobe, faUser } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-settings-page',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  faUser = faUser;\n  faGlobe = faGlobe;\n  faCircleNodes = faCircleNodes;\n  faAddressCard = faAddressCard;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n  \n  \n    \n\n      \n      \n        \n          \n          Account\n        \n      \n\n      \n      \n        \n          \n          Localization\n        \n      \n\n      \n      \n        \n          \n          Integrations\n        \n      \n\n      \n      \n        \n          \n          Sessions\n        \n      \n\n    \n  \n\n  \n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings.page.scss\n                \n                @import '../../../../styles/typography';\n\nsection {\n  display: flex;\n  justify-content: center;\n}\n\n.sidebar {\n  width: 315px;\n  height: 100%;\n  padding: 40px;\n\n  a {\n    @include typo-body;\n\n    position: relative;\n    display: flex;\n    align-items: center;\n    padding: 8px 10px;\n    margin-bottom: 0.35rem;\n    border-radius: var(--border-radius);\n    color: var(--color-text);\n    transition: background-color 0.2s ease-in-out;\n\n    app-icon {\n      margin-right: 1rem;\n    }\n\n    &:hover {\n      background-color: var(--color-secondary-500);\n    }\n\n    &.active {\n      background-color: var(--color-secondary-500);\n\n      &::before {\n        position: absolute;\n        top: 10%;\n        left: -10px;\n        width: 4px;\n        height: 80%;\n        background-color: var(--color-primary-700);\n        border-radius: var(--border-radius);\n        content: '';\n      }\n    }\n  }\n}\n\n.content {\n  width: 100%;\n  max-width: 800px;\n  padding: 40px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Account                                                      Localization                                                      Integrations                                                      Sessions                              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingsAccountPage } from './pages/settings-account/settings-account.page';\nimport { SettingsIntegrationsPage } from './pages/settings-integrations/settings-integrations.page';\nimport { SettingsLocalizationPage } from './pages/settings-localization/settings-localization.page';\nimport { SettingsSessionsPage } from './pages/settings-sessions/settings-sessions.page';\nimport { SettingsPage } from './pages/settings/settings.page';\n\n/**\n * Messages routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage,\n    children: [\n      {\n        path: 'account',\n        component: SettingsAccountPage,\n      },\n      {\n        path: 'localization',\n        component: SettingsLocalizationPage,\n      },\n      {\n        path: 'integrations',\n        component: SettingsIntegrationsPage,\n      },\n      {\n        path: 'sessions',\n        component: SettingsSessionsPage,\n      },\n    ],\n  },\n];\n\n/**\n * Messages routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsSessionsPage.html":{"url":"components/SettingsSessionsPage.html","title":"component - SettingsSessionsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsSessionsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-sessions/settings-sessions.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-sessions\n            \n\n            \n                styleUrls\n                ./settings-sessions.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-sessions.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sessionsList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agentType\n                            \n                            \n                                changeDate\n                            \n                            \n                                deleteSession\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionService: SessionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        agentType\n                        \n                    \n                \n            \n            \n                \nagentType(type: string, agent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    agent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSession\n                        \n                    \n                \n            \n            \n                \ndeleteSession(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sessionsList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\nimport * as UAParser from 'ua-parser-js';\nimport { UserSession } from '../../interfaces/session.interface';\nimport { SessionsService } from '../../services/sessions.service';\n\n@Component({\n  selector: 'app-settings-sessions',\n  templateUrl: './settings-sessions.page.html',\n  styleUrls: ['./settings-sessions.page.scss'],\n})\nexport class SettingsSessionsPage implements OnInit {\n  public sessionsList$!: Observable;\n\n  constructor(private sessionService: SessionsService) {}\n  ngOnInit() {\n    this.sessionsList$ = this.sessionService.list();\n  }\n\n  changeDate(date: number) {\n    let currentDate = dayjs();\n    let sessionDate = dayjs(date);\n\n    if (currentDate.year() != sessionDate.year()) {\n      if (currentDate.diff(sessionDate, 'month') > 0) {\n        return sessionDate.format('LL');\n      } else {\n        return sessionDate.format('LLL');\n      }\n    } else {\n      return sessionDate.format('MMMM D, h:mm A');\n    }\n  }\n\n  agentType(type: string, agent: string) {\n    let uaParser = new UAParser(agent);\n    let osName = uaParser.getOS().name || 'Unknown system';\n    let browser = uaParser.getBrowser().name || 'Unknown browser';\n    if (type == 'os') {\n      return osName;\n    }\n    if (type == 'browser') {\n      return browser;\n    }\n    return osName + ', ' + browser;\n  }\n\n  deleteSession(id: number) {\n    this.sessionService.delete(id).subscribe();\n  }\n}\n\n    \n\n    \n        Sessions\n\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                {{ agentType(\"os\", session.userAgent) }},\n              \n              \n                {{ agentType(\"browser\", session.userAgent) }}\n              \n            \n            \n              \n                {{ session.geoip.city }}, {{ session.geoip.country }}\n              \n              \n                {{ changeDate(session.lastUsed) }}\n              \n              \n                Active now\n              \n            \n          \n          \n            Log out\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-sessions.page.scss\n                \n                .list {\n  > * {\n    display: block;\n    margin-top: 1rem;\n  }\n}\n\n.sessions-entry {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px;\n  border: 1px solid var(--color-secondary-300);\n  border-radius: var(--border-radius);\n\n  .labels {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    margin-bottom: 0;\n\n    .agent,\n    .local {\n      display: flex;\n    }\n\n    mark {\n      display: block;\n      margin-left: 0.5rem;\n      background-color: transparent;\n      color: var(--color-purple-300);\n    }\n\n    .description {\n      display: block;\n      padding-left: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n}\n\n.actions {\n  flex-grow: 1;\n  flex-shrink: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Sessions                                                                          {{ agentType(\"os\", session.userAgent) }},                                            {{ agentType(\"browser\", session.userAgent) }}                                                                    {{ session.geoip.city }}, {{ session.geoip.country }}                                            {{ changeDate(session.lastUsed) }}                                            Active now                                                          Log out                              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsSessionsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarNavigationComponent.html":{"url":"components/SidebarNavigationComponent.html","title":"component - SidebarNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar-navigation\n            \n\n            \n                styleUrls\n                ./sidebar-navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar-navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                workspaceList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createWorkspace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createWorkspace\n                        \n                    \n                \n            \n            \n                \ncreateWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        workspaceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Workspace } from 'src/app/dashboard/interfaces/workspace.interface';\nimport { WorkspaceService } from 'src/app/dashboard/services/workspace.service';\n\n@Component({\n  selector: 'app-sidebar-navigation',\n  templateUrl: './sidebar-navigation.component.html',\n  styleUrls: ['./sidebar-navigation.component.scss'],\n})\nexport class SidebarNavigationComponent {\n  @Input()\n  public icon!: String;\n\n  public workspaceList?: Observable;\n\n  createWorkspace() {\n    this.router.navigate(['/', 'create']);\n  }\n\n  constructor(private workspaceService: WorkspaceService, private router: Router) {\n    this.workspaceList = this.workspaceService.list();\n  }\n}\n\n    \n\n    \n        \n  \n  \n\nDashboard\n\n  Workspaces\n  \n    \n      \n        {{workspace.name}}\n      \n    \n  \n  \n    \n      Create workspace\n    \n    \n      Manage workspaces\n    \n  \n\nEmails\nMessages\n    \n\n    \n                \n                    ./sidebar-navigation.component.scss\n                \n                :host {\n  display: flex;\n  width: 250px;\n  height: 100%;\n  flex-direction: column;\n  flex-shrink: 0;\n  background-color: var(--color-secondary-800);\n}\n\n.logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin: 10px 20px 0;\n  background-image: url('../../../../assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n  transform-origin: 50% 25%;\n  transition: transform 0.2s ease;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Dashboard  Workspaces                    {{workspace.name}}                        Create workspace              Manage workspaces      EmailsMessages'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SinglePersonSchedule.html":{"url":"interfaces/SinglePersonSchedule.html","title":"interface - SinglePersonSchedule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SinglePersonSchedule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/schedule.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tasks\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '@auth/interfaces/user.interface';\n\nexport type Schedule = SinglePersonSchedule[];\n\nexport interface SinglePersonSchedule {\n  user: UserData;\n  tasks: Map;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/snackbar/snackbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                ./snackbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationName\n                            \n                            \n                                faClose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setAnimationName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                duration\n                            \n                            \n                                message\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.animation-name\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    colorStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 'gray'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        duration\n                    \n                \n                \n                    \n                        Default value : 4000\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uid\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:15\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.animation-name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnimationName\n                        \n                    \n                \n            \n            \n                \nsetAnimationName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        animationName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.animation-name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faClose\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faClose\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        colorStyle\n                    \n                \n\n                \n                    \n                        getcolorStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { faClose } from '@fortawesome/free-solid-svg-icons';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { SnackbarData } from './snackbar.interface';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.scss'],\n})\nexport class SnackbarComponent implements OnInit {\n  faClose = faClose;\n\n  @Input()\n  public uid!: string;\n\n  @Input()\n  public message!: SnackbarData['message'];\n\n  @Input()\n  public duration: SnackbarData['duration'] = 4000;\n\n  @Input()\n  public color: SnackbarData['color'] = 'gray';\n\n  @HostBinding('style.animation-name')\n  public animationName: string = 'open';\n\n  public get colorStyle(): string {\n    switch (this.color) {\n      case 'gray':\n        return 'var(--color-gray-500)';\n      case 'green':\n        return '#00b300';\n    }\n  }\n\n  constructor(private snackbarService: SnackbarService) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.close();\n    }, this.duration);\n  }\n\n  close() {\n    this.setAnimationName('close');\n    setTimeout(() => {\n      this.snackbarService.close(this.uid);\n    }, 1000);\n  }\n\n  setAnimationName(name: string) {\n    this.animationName = name;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ message }}\n  \n  \n\n\n    \n\n    \n                \n                    ./snackbar.component.scss\n                \n                :host {\n  display: block;\n  overflow: visible;\n  animation: open 1s ease-in-out forwards;\n}\n\n.content {\n  display: flex;\n  padding: 1rem;\n  border-radius: var(--border-radius);\n\n  .message {\n    margin-right: 0.75rem;\n    color: var(--color-text);\n  }\n\n  .close-button {\n    position: relative;\n    width: 24px;\n    height: 24px;\n    color: var(--color-text);\n    cursor: pointer;\n\n    &::before,\n    &::after {\n      position: absolute;\n      top: 0;\n      left: 50%;\n      display: block;\n      width: 1px;\n      height: 1rem;\n      margin-top: 0.25rem;\n      background-color: var(--color-text);\n      border-radius: 50%;\n      content: '';\n      transition: background-color 0.4s ease;\n    }\n\n    &::before {\n      transform: rotate(45deg);\n    }\n\n    &::after {\n      transform: rotate(-45deg);\n    }\n  }\n}\n\n@keyframes open {\n  from {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n\n  to {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n}\n\n@keyframes close {\n  from {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n\n  to {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ message }}    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnackbarData.html":{"url":"interfaces/SnackbarData.html","title":"interface - SnackbarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnackbarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/components/snackbar/snackbar.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     \"gray\" | \"green\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"gray\" | \"green\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SnackbarData {\n  color: 'gray' | 'green';\n  message: string;\n  duration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarOutletComponent.html":{"url":"components/SnackbarOutletComponent.html","title":"component - SnackbarOutletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SnackbarOutletComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar-outlet\n            \n\n            \n                styleUrls\n                ./snackbar-outlet.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./snackbar-outlet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                snackbars$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trackSnackbarTuple\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        trackSnackbarTuple\n                        \n                    \n                \n            \n            \n                \ntrackSnackbarTuple(_index: number, undefined: [string, SnackbarData])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                [string, SnackbarData]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackbars$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.snackbarService.snackbars$\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { SnackbarData } from '../snackbar/snackbar.interface';\n\n@Component({\n  selector: 'app-snackbar-outlet',\n  templateUrl: './snackbar-outlet.component.html',\n  styleUrls: ['./snackbar-outlet.component.scss'],\n})\nexport class SnackbarOutletComponent {\n  public snackbars$ = this.snackbarService.snackbars$;\n\n  constructor(private snackbarService: SnackbarService) {}\n\n  trackSnackbarTuple(_index: number, [uid, _]: [string, SnackbarData]) {\n    return uid;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./snackbar-outlet.component.scss\n                \n                :host {\n  position: absolute;\n  z-index: 50;\n  top: 74px;\n  right: 0;\n  display: flex;\n  overflow: hidden;\n  flex-direction: column;\n  align-items: flex-end;\n  padding-right: 10px;\n}\n\napp-snackbar:not(:last-child) {\n  margin-bottom: 0.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarOutletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnackbarService.html":{"url":"injectables/SnackbarService.html","title":"injectable - SnackbarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnackbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/snackbar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                snackbars$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                closeAll\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/snackbar.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        show\n                        \n                    \n                \n            \n            \n                \n                    \n                    show(message: string, color: \"gray\" | \"green\", duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    color\n                                    \n                                            \"gray\" | \"green\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'gray'\n                                    \n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        4000\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackbars$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Map())\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/snackbar.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SnackbarData } from '@main/components/snackbar/snackbar.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { BehaviorSubject } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  constructor() {}\n\n  public snackbars$ = new BehaviorSubject>(new Map());\n\n  public show(message: string, color: 'gray' | 'green' = 'gray', duration: number = 4000) {\n    const data = { message, duration, color };\n    const uid = uuid();\n\n    const map = this.snackbars$.value;\n    map.set(uid, data);\n\n    this.snackbars$.next(map);\n  }\n\n  public close(uid: string) {\n    const map = this.snackbars$.value;\n    map.delete(uid);\n  }\n\n  public closeAll() {\n    this.snackbars$.next(new Map());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Status.html":{"url":"interfaces/Status.html","title":"interface - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/status.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Task status/column interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            begin\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            final\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        begin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        begin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status begin (used to determine if the task is in progress or not). If begin is true,\nthe work on the task does not started yet.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         color\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         color\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status color (used to display as the background of the labels)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        final\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        final:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status final (used to determine if the task is done or not)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status id (unique per database)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status name (Header displayed in labels or on the top of the columns)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { color } from '../../_main/interfaces/color.interface';\nimport { Task } from './task.interface';\n\n/**\n * Task status/column interface\n */\nexport interface Status {\n  /**\n   * Status id (unique per database)\n   */\n  id: number;\n\n  /**\n   * Status name (Header displayed in labels or on the top of the columns)\n   */\n  name: string;\n\n  /**\n   * Status color (used to display as the background of the labels)\n   */\n  color: color;\n\n  /**\n   * Status final (used to determine if the task is done or not)\n   */\n  final: boolean;\n\n  /**\n   * Status begin (used to determine if the task is in progress or not). If begin is true,\n   * the work on the task does not started yet.\n   */\n  begin: boolean;\n}\n\n/**\n * Status with task interface - status column with tasks\n */\nexport interface StatusWithTasks extends Status {\n  tasks: Task[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/StatusColorPipe.html":{"url":"pipes/StatusColorPipe.html","title":"pipe - StatusColorPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  StatusColorPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/status-color.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        statusColor\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value:  | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/status-color.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                             | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Status } from '@tasks/interfaces/status.interface';\n\n@Pipe({\n  name: 'statusColor',\n})\nexport class StatusColorPipe implements PipeTransform {\n  transform(value: Status['name'] | undefined): any {\n    switch (value) {\n      case 'TO DO':\n      case 'To Do':\n        return '#4A5465';\n      case 'IN PROGRESS':\n      case 'In Progress':\n        return '#f39c12';\n      case 'DONE':\n      case 'Done':\n        return '#2ECC71';\n      default:\n        return '#4A5465';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusLabelComponent.html":{"url":"components/StatusLabelComponent.html","title":"component - StatusLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatusLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/status-label/status-label.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NgControl, useClass: TestNgControl }\n                \n            \n\n\n            \n                selector\n                app-status-label\n            \n\n            \n                styleUrls\n                ./status-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./status-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isOpen$\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                overlay\n                            \n                            \n                                    Public\n                                statuses$\n                            \n                            \n                                statusMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                            \n                                statuses\n                            \n                            \n                                statusId\n                            \n                            \n                                taskId\n                            \n                            \n                                variant\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    statuses\n                                \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statuses\n                    \n                \n                \n                    \n                        Type :         Status[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statusId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        taskId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        variant\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"small\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('overlay')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statuses$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        statuses\n                    \n                \n\n\n                \n                    \n                        setstatuses(statuses: Status[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            statuses\n                                                    \n                                                            \n                                                                            Status[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:43\n                                \n                            \n\n                \n                    \n                        setisOpen(val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { TaskService } from '@tasks/services/task.service';\nimport { TestNgControl } from '@tests/helpers/ng-control-testing-provider.helper';\nimport { BehaviorSubject, filter, fromEvent, take } from 'rxjs';\n\n@Component({\n  selector: 'app-status-label',\n  templateUrl: './status-label.component.html',\n  styleUrls: ['./status-label.component.scss'],\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\nexport class StatusLabelComponent extends ControlAccessor {\n  @Input() variant: 'default' | 'small' = 'default';\n  @Input() projectId!: number;\n  @Input() statusId!: number;\n  @Input() taskId?: number;\n  @Input() set statuses(statuses: Status[]) {\n    this.statuses$.next(statuses);\n    this.statusMap = statuses.reduce((acc, status) => {\n      acc.set(status.id, status);\n      return acc;\n    }, new Map());\n  }\n\n  statusMap = new Map();\n\n  constructor(public override ngControl: NgControl, private taskService: TaskService) {\n    super(ngControl);\n  }\n\n  @ViewChild('overlay') overlay!: ElementRef;\n\n  public statuses$ = new BehaviorSubject([]);\n  public readonly isOpen$ = new BehaviorSubject(false);\n\n  public set isOpen(val: boolean) {\n    this.isOpen$.next(val);\n  }\n\n  public get isOpen() {\n    return this.isOpen$.value;\n  }\n\n  public open() {\n    setTimeout(() => {\n      fromEvent(document, 'click')\n        .pipe(\n          take(1),\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\n        )\n        .subscribe(() => this.close());\n      this.isOpen$.next(true);\n    });\n  }\n\n  public close() {\n    this.isOpen$.next(false);\n  }\n\n  public toggle() {\n    if (this.isOpen) {\n      return this.close();\n    }\n    return this.open();\n  }\n\n  public select(status: Status) {\n    if (this.taskId && this.projectId)\n      this.taskService.changeStatus(status.id, this.taskId, this.projectId).subscribe(() => {\n        this.close();\n        location.reload();\n      });\n  }\n}\n\n    \n\n    \n        \n\n  {{ statusMap.get(statusId)?.name }}\n\n\n\n  \n    \n      {{ status.name }}\n    \n  \n\n\n    \n\n    \n                \n                    ./status-label.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  width: 100%;\n  padding: 0 1rem;\n  margin: 0 1rem;\n}\n\n.status {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  max-width: 250px;\n  height: 100%;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-secondary-400);\n  border-radius: var(--border-radius);\n  text-transform: uppercase;\n\n  &.small {\n    width: auto;\n    height: auto;\n    padding: 0.25rem 0.75rem;\n  }\n}\n\n.statuses-overlay {\n  padding: 1rem;\n  padding: 0.5rem;\n  background-color: var(--color-secondary-500);\n  border-radius: var(--border-radius);\n\n  li {\n    display: flex;\n    height: 40px;\n    align-items: center;\n    justify-content: center;\n    padding: 0.5rem 1rem;\n    background-color: var(--color-secondary-500);\n    border-radius: var(--border-radius);\n    color: var(--color-text);\n    cursor: pointer;\n    font-weight: bold;\n    text-transform: uppercase;\n    transition: background-color 0.4s ease;\n\n    &:not(:last-child) {\n      margin-bottom: 0.5rem;\n    }\n\n    &:hover {\n      background-color: var(--color-secondary-400);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ statusMap.get(statusId)?.name }}            {{ status.name }}      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'StatusLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusService.html":{"url":"injectables/StatusService.html","title":"injectable - StatusService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/services/status.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                board\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                listWithTasks\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/services/status.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        board\n                        \n                    \n                \n            \n            \n                \n                    \n                    board(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:39\n                \n            \n\n\n            \n                \n                    Creates new status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the created status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:59\n                \n            \n\n\n            \n                \n                    Deletes status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(projectId: number, statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:29\n                \n            \n\n\n            \n                \n                    Get status information\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to get status\n\n                                    \n                                \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status id needed to get status information\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:19\n                \n            \n\n\n            \n                \n                    Get list of statuses\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable with list of statuses\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        listWithTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    listWithTasks(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:49\n                \n            \n\n\n            \n                \n                    Updates status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the updated status\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Task } from '@tasks/interfaces/task.interface';\nimport { combineLatest, map, Observable } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Status, StatusWithTasks } from '../interfaces/status.interface';\nimport { TaskService } from './task.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StatusService {\n  constructor(private apiService: ApiService, private taskService: TaskService) {}\n\n  /**\n   * Get list of statuses\n   * @param projectId Project id needed to create status\n   * @returns Request observable with list of statuses\n   */\n  public list(projectId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/status/`);\n  }\n\n  /**\n   * Get status information\n   * @param statusId Status id needed to get status information\n   * @param projectId Project id needed to get status\n   * @returns Request observable with the status\n   */\n  public get(projectId: number, statusId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/status/${statusId}`);\n  }\n\n  /**\n   * Creates new status\n   * @param status Status to create\n   * @param projectId Project id needed to create status\n   * @returns Request observable with the created status\n   */\n  public create(projectId: number, status: Status): Observable {\n    return this.apiService.post(`/project/${projectId}/status/`, { body: status });\n  }\n\n  /**\n   * Updates status\n   * @param status Status to update\n   * @param projectId Project id needed to create status\n   * @returns Request observable with the updated status\n   */\n  public update(projectId: number, status: Status): Observable {\n    return this.apiService.put(`/project/${projectId}/status/${status.id}`, { body: status });\n  }\n\n  /**\n   * Deletes status\n   * @param status Status id to delete\n   * @param projectId Project id needed to create status\n   * @returns Request observable\n   */\n  public delete(projectId: number, status: Status): Observable {\n    return this.apiService.delete(`/project/${projectId}/status/${status.id}`);\n  }\n\n  public listWithTasks(projectId: number): Observable {\n    return combineLatest([this.list(projectId), this.taskService.list(projectId)]).pipe(\n      map(([statuses, tasks]) => {\n        statuses.forEach((status) => {\n          (status as StatusWithTasks).tasks = tasks.filter((task) => task.statusId === status.id);\n        });\n        return statuses as StatusWithTasks[];\n      }),\n    );\n  }\n\n  public board(projectId: number): Observable {\n    return combineLatest([this.list(projectId), this.taskService.list(projectId)]).pipe(\n      map(([statuses, tasks]) => {\n        const board: [Task | string, StatusWithTasks[]][] = [];\n        const OTHER = ['OTHER', statuses.map((s) => ({ ...s, tasks: [] }))] as [\n          string,\n          StatusWithTasks[],\n        ];\n\n        for (const task of tasks) {\n          if (task.subTasks?.length) {\n            const statusesWithSubtasks = statuses.map((status) => ({\n              ...status,\n              tasks: task.subTasks?.filter((subtask) => subtask.statusId === status.id) || [],\n            }));\n            board.push([task, statusesWithSubtasks]);\n          } else {\n            let status = OTHER[1].find((status) => status.id === task.statusId)!;\n            if (!status.tasks) {\n              status.tasks = [];\n            }\n            status.tasks.push(task);\n          }\n        }\n\n        board.push(OTHER);\n        return board;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StatusWithTasks.html":{"url":"interfaces/StatusWithTasks.html","title":"interface - StatusWithTasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StatusWithTasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/status.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Status with task interface - status column with tasks\n\n            \n\n            \n                Extends\n            \n            \n                        Status\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tasks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { color } from '../../_main/interfaces/color.interface';\nimport { Task } from './task.interface';\n\n/**\n * Task status/column interface\n */\nexport interface Status {\n  /**\n   * Status id (unique per database)\n   */\n  id: number;\n\n  /**\n   * Status name (Header displayed in labels or on the top of the columns)\n   */\n  name: string;\n\n  /**\n   * Status color (used to display as the background of the labels)\n   */\n  color: color;\n\n  /**\n   * Status final (used to determine if the task is done or not)\n   */\n  final: boolean;\n\n  /**\n   * Status begin (used to determine if the task is in progress or not). If begin is true,\n   * the work on the task does not started yet.\n   */\n  begin: boolean;\n}\n\n/**\n * Status with task interface - status column with tasks\n */\nexport interface StatusWithTasks extends Status {\n  tasks: Task[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Story.html":{"url":"classes/Story.html","title":"class - Story","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Story\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/helpers/classes/story.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _config\n                            \n                            \n                                    Private\n                                _story\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addCode\n                            \n                            \n                                    Public\n                                addDefaultTemplate\n                            \n                            \n                                    Public\n                                addDescription\n                            \n                            \n                                    Public\n                                addProps\n                            \n                            \n                                    Public\n                                addTemplate\n                            \n                            \n                                    Public\n                                mergeConfig\n                            \n                            \n                                    Public\n                                story\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    props\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: StoryConfig)\n                    \n                \n                        \n                            \n                                Defined in src/stories/helpers/classes/story.class.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        StoryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StoryConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/stories/helpers/classes/story.class.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _story\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StoryFn\n\n                    \n                \n                    \n                        \n                                Defined in src/stories/helpers/classes/story.class.ts:30\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCode(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story.class.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addDefaultTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    addDefaultTemplate()\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story.class.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    addDescription(description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story.class.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addProps\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProps(props: Props)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story.class.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Props\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    addTemplate(template: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story.class.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        mergeConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story.class.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        story\n                        \n                    \n                \n            \n            \n                \n                    \n                    story()\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story.class.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         StoryFn\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        props\n                    \n                \n\n                \n                    \n                        getprops()\n                    \n                \n                            \n                                \n                                    Defined in src/stories/helpers/classes/story.class.ts:125\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FormControl } from '@angular/forms';\nimport { componentWrapperDecorator } from '@storybook/angular';\nimport { merge, omit } from 'lodash-es';\nimport { exposeAllPossibilities } from '../component-content-decorator.helper';\nimport { StoryPageConfig } from './story-page-config.class';\nimport { StoryTemplate } from './story-template.class';\nimport { StoryFn } from '@storybook/angular';\nimport { componentTemplateDecorator } from '../functions/component-template-decorator.function';\n\nexport type Props = Partial & {\n  formControl?: FormControl;\n  content?: string;\n};\n\nexport interface StoryConfig {\n  config: StoryPageConfig;\n  template: StoryTemplate;\n  description?: string;\n  multiple?: {\n    prop: string;\n    options: any[];\n  };\n  props?: Props;\n  code?: string;\n  html?: string;\n}\n\nexport class Story {\n  private _config: StoryConfig;\n  private _story: StoryFn;\n\n  constructor(config: StoryConfig) {\n    this._config = config;\n    this._story = config.template.template();\n\n    if (config.multiple) {\n      exposeAllPossibilities(\n        this._story,\n        config.config.selector,\n        config.multiple.prop,\n        config.multiple.options,\n      );\n    }\n\n    if (config.description) {\n      this.addDescription(config.description);\n    }\n\n    if (config.code) {\n      this.addCode(config.code);\n    }\n\n    if (config.html) {\n      this.addTemplate(config.html);\n    } else if (!config.multiple) {\n      this.addDefaultTemplate();\n    }\n\n    if (this.props) {\n      this.addProps(this.props);\n    }\n  }\n\n  public mergeConfig(config: any) {\n    merge(this._story, config);\n  }\n\n  public addDescription(description: string) {\n    this.mergeConfig({\n      parameters: {\n        docs: {\n          description: {\n            story: description,\n          },\n        },\n      },\n    });\n  }\n\n  public addProps(props: Props) {\n    this.mergeConfig({\n      args: omit(props, ['content']),\n    });\n  }\n\n  public addCode(code: string) {\n    this.mergeConfig({\n      parameters: {\n        docs: {\n          source: {\n            code: code,\n            language: 'html',\n            type: 'auto',\n          },\n        },\n      },\n    });\n  }\n\n  public addTemplate(template: string) {\n    this.mergeConfig({\n      decorators: [componentWrapperDecorator(() => template)],\n      parameters: {\n        docs: {\n          source: {\n            code: template,\n            language: 'html',\n            type: 'auto',\n          },\n        },\n      },\n    });\n  }\n\n  public addDefaultTemplate() {\n    this.mergeConfig({\n      decorators: [\n        componentTemplateDecorator(this.props, {\n          selector: this._config.config.selector,\n        }),\n      ],\n    });\n  }\n\n  public get props() {\n    return merge({}, this._config.props, this._config.template.props);\n  }\n\n  public story() {\n    return this._story;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoryConfig.html":{"url":"interfaces/StoryConfig.html","title":"interface - StoryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/helpers/classes/story.class.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            multiple\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            props\n                                        \n                                \n                                \n                                        \n                                            template\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         StoryPageConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StoryPageConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiple:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        props\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        props:         Props\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Props\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        template:     StoryTemplate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StoryTemplate\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\nimport { componentWrapperDecorator } from '@storybook/angular';\nimport { merge, omit } from 'lodash-es';\nimport { exposeAllPossibilities } from '../component-content-decorator.helper';\nimport { StoryPageConfig } from './story-page-config.class';\nimport { StoryTemplate } from './story-template.class';\nimport { StoryFn } from '@storybook/angular';\nimport { componentTemplateDecorator } from '../functions/component-template-decorator.function';\n\nexport type Props = Partial & {\n  formControl?: FormControl;\n  content?: string;\n};\n\nexport interface StoryConfig {\n  config: StoryPageConfig;\n  template: StoryTemplate;\n  description?: string;\n  multiple?: {\n    prop: string;\n    options: any[];\n  };\n  props?: Props;\n  code?: string;\n  html?: string;\n}\n\nexport class Story {\n  private _config: StoryConfig;\n  private _story: StoryFn;\n\n  constructor(config: StoryConfig) {\n    this._config = config;\n    this._story = config.template.template();\n\n    if (config.multiple) {\n      exposeAllPossibilities(\n        this._story,\n        config.config.selector,\n        config.multiple.prop,\n        config.multiple.options,\n      );\n    }\n\n    if (config.description) {\n      this.addDescription(config.description);\n    }\n\n    if (config.code) {\n      this.addCode(config.code);\n    }\n\n    if (config.html) {\n      this.addTemplate(config.html);\n    } else if (!config.multiple) {\n      this.addDefaultTemplate();\n    }\n\n    if (this.props) {\n      this.addProps(this.props);\n    }\n  }\n\n  public mergeConfig(config: any) {\n    merge(this._story, config);\n  }\n\n  public addDescription(description: string) {\n    this.mergeConfig({\n      parameters: {\n        docs: {\n          description: {\n            story: description,\n          },\n        },\n      },\n    });\n  }\n\n  public addProps(props: Props) {\n    this.mergeConfig({\n      args: omit(props, ['content']),\n    });\n  }\n\n  public addCode(code: string) {\n    this.mergeConfig({\n      parameters: {\n        docs: {\n          source: {\n            code: code,\n            language: 'html',\n            type: 'auto',\n          },\n        },\n      },\n    });\n  }\n\n  public addTemplate(template: string) {\n    this.mergeConfig({\n      decorators: [componentWrapperDecorator(() => template)],\n      parameters: {\n        docs: {\n          source: {\n            code: template,\n            language: 'html',\n            type: 'auto',\n          },\n        },\n      },\n    });\n  }\n\n  public addDefaultTemplate() {\n    this.mergeConfig({\n      decorators: [\n        componentTemplateDecorator(this.props, {\n          selector: this._config.config.selector,\n        }),\n      ],\n    });\n  }\n\n  public get props() {\n    return merge({}, this._config.props, this._config.template.props);\n  }\n\n  public story() {\n    return this._story;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StoryPageConfig.html":{"url":"classes/StoryPageConfig.html","title":"class - StoryPageConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StoryPageConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/helpers/classes/story-page-config.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _meta\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addDecorators\n                            \n                            \n                                    Private\n                                disableEditingFunctions\n                            \n                            \n                                    Public\n                                meta\n                            \n                            \n                                    Private\n                                propertyPredicate\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selector\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(meta: ExtendedMeta)\n                    \n                \n                        \n                            \n                                Defined in src/stories/helpers/classes/story-page-config.class.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        ExtendedMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtendedMeta\n\n                    \n                \n                    \n                        \n                                Defined in src/stories/helpers/classes/story-page-config.class.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addDecorators\n                        \n                    \n                \n            \n            \n                \n                    \n                    addDecorators(decorators)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story-page-config.class.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    decorators\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        disableEditingFunctions\n                        \n                    \n                \n            \n            \n                \n                    \n                    disableEditingFunctions()\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story-page-config.class.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        meta\n                        \n                    \n                \n            \n            \n                \n                    \n                    meta()\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story-page-config.class.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Meta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        propertyPredicate\n                        \n                    \n                \n            \n            \n                \n                    \n                    propertyPredicate(property: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story-page-config.class.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"delete\" | \"readonly\"\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story-page-config.class.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selector\n                    \n                \n\n                \n                    \n                        getselector()\n                    \n                \n                            \n                                \n                                    Defined in src/stories/helpers/classes/story-page-config.class.ts:74\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { NgControl } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainModule } from '@main/_main.module';\nimport { Meta, moduleMetadata } from '@storybook/angular';\nimport { NgModuleMetadata } from '@storybook/angular/dist/ts3.9/client/preview/types';\nimport { merge } from 'lodash-es';\nimport { getAllProperties } from '../functions/get-all-properties.function';\n\nexport interface ExtendedMeta extends Meta {\n  metadata?: Partial;\n  selector: string;\n}\n\nconst DEFAULT_METADATA: Partial = {\n  imports: [MainModule, BrowserAnimationsModule],\n  providers: [NgControl],\n};\n\nconst IGNORED_PROPERTIES = getAllProperties({});\n\nexport class StoryPageConfig {\n  private _meta: ExtendedMeta;\n\n  constructor(meta: ExtendedMeta) {\n    this._meta = meta;\n\n    this._meta.decorators = [moduleMetadata(merge({}, DEFAULT_METADATA, this._meta.metadata))];\n    this.disableEditingFunctions();\n  }\n\n  private disableEditingFunctions() {\n    if (!this._meta.argTypes) {\n      this._meta.argTypes = {};\n    }\n\n    const properties = getAllProperties(this._meta.component.prototype);\n    console.log(properties);\n    for (const [property, predicate] of properties.map(\n      (p) => [p, this.propertyPredicate(p)] as [string, any],\n    )) {\n      if (typeof this._meta.component.prototype[property] === 'function') {\n        switch (predicate) {\n          case 'delete':\n            this._meta.argTypes[property] = { table: { disable: true } };\n            break;\n          case 'readonly':\n            this._meta.argTypes[property] = { control: false };\n            break;\n        }\n      }\n    }\n  }\n\n  private propertyPredicate(property: string) {\n    if (property[0] === '_') return 'delete';\n    if (property.startsWith('ng')) return 'delete';\n    return !IGNORED_PROPERTIES.includes(property) ? 'readonly' : null;\n  }\n\n  public setTitle(title: string) {\n    this._meta.title = title;\n    return this;\n  }\n\n  public addDecorators(decorators: Meta['decorators']) {\n    if (!this._meta.decorators) {\n      this._meta.decorators = [];\n    }\n\n    this._meta.decorators = ([] as any[]).concat(this._meta.decorators, decorators);\n    return this;\n  }\n\n  public get selector() {\n    return this._meta.selector;\n  }\n\n  public meta() {\n    return this._meta as Meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StoryTemplate.html":{"url":"classes/StoryTemplate.html","title":"class - StoryTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StoryTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/helpers/classes/story-template.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _args\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    props\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args: Props)\n                    \n                \n                        \n                            \n                                Defined in src/stories/helpers/classes/story-template.class.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        Props\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _args\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Props\n\n                    \n                \n                    \n                        \n                                Defined in src/stories/helpers/classes/story-template.class.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        template\n                        \n                    \n                \n            \n            \n                \n                    \n                    template()\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story-template.class.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        props\n                    \n                \n\n                \n                    \n                        getprops()\n                    \n                \n                            \n                                \n                                    Defined in src/stories/helpers/classes/story-template.class.ts:12\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { merge } from 'lodash-es';\nimport { Props } from './story.class';\n\nexport class StoryTemplate {\n  private _args: Props;\n\n  constructor(args: Props) {\n    const controlObject = args.formControl ? { formControl: args.formControl } : {};\n    this._args = merge({}, controlObject, args);\n  }\n\n  public get props() {\n    return this._args;\n  }\n\n  public template() {\n    return ((args: C) => ({\n      props: merge({}, args),\n    })).bind({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/task.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Project task interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            assigneeId\n                                        \n                                \n                                \n                                        \n                                            deadline\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            estimatedDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issue\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mergedPullList\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parentTaskId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pull\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subTasks\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assigneeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assigneeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional user id who is assigned to task\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deadline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deadline:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task deadline to be completed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        estimatedDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        estimatedDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task estimated date to work on it\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task id (unique per project)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issue:         GitIssue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitIssue\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional link to the GitHub issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mergedPullList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mergedPullList:         GitPull[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitPull[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional merged pull requests list\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentTaskId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentTaskId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Parent task id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pull\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pull:         GitPull\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitPull\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional link to the GitHub pull request\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Status id (unique per database)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subTasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subTasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of subtasks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task type (ex. EPIC, USER_STORY)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\n\n/**\n * Project task interface\n */\nexport interface Task {\n  /**\n   * Task id (unique per project)\n   */\n  id: number;\n\n  /**\n   * Task name\n   */\n  name: string;\n\n  /**\n   * Task description\n   */\n  description: string;\n\n  /**\n   * Task deadline to be completed\n   */\n  deadline: Date;\n\n  /**\n   * Task estimated date to work on it\n   */\n  estimatedDate: Date;\n\n  /**\n   * Status id (unique per database)\n   */\n  statusId?: number;\n\n  /**\n   * Parent task id\n   */\n  parentTaskId?: number;\n\n  /**\n   * List of subtasks\n   */\n  subTasks?: Task[];\n\n  /**\n   * Optional link to the GitHub issue\n   */\n  issue?: GitIssue;\n\n  /**\n   * Task type (ex. EPIC, USER_STORY)\n   */\n  type: string;\n\n  /**\n   * Optional link to the GitHub pull request\n   */\n  pull?: GitPull;\n\n  /**\n   * Optional merged pull requests list\n   */\n  mergedPullList?: GitPull[];\n\n  /**\n   * Optional user id who is assigned to task\n   */\n  assigneeId?: number;\n}\n\n/**\n * Extended project task interface\n */\nexport interface TaskWithAdditionalData extends Omit {\n  /**\n   * Project identifier\n   */\n  projectId: number;\n\n  /**\n   * Workspace identifier\n   */\n  workspaceId: string;\n\n  /**\n   * Boolean to determine if task is connected to GitHub issue\n   */\n  connectWithIssueOnGitHub: boolean;\n\n  /**\n   * Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n   */\n  issueAttachGithub: boolean;\n\n  /**\n   * Boolean to determine if task is connected to GitHub pull request\n   */\n  connectWithPullRequestOnGitHub: boolean;\n\n  /**\n   * GitHub pull to which the task is connected to\n   */\n  pull: GitPull;\n\n  /**\n   * GitHub issue to which the task is connected to\n   */\n  issue: GitIssue;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskDialog.html":{"url":"components/TaskDialog.html","title":"component - TaskDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/dialogs/task/task.dialog.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-dialog\n            \n\n            \n                styleUrls\n                ./task.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./task.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                isGitHubIntegrationAvailable\n                            \n                            \n                                    Public\n                                issueList$\n                            \n                            \n                                    Public\n                                projectList$\n                            \n                            \n                                    Public\n                                pullList$\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                subTaskTypes\n                            \n                            \n                                TaskDialogVariant\n                            \n                            \n                                    Public\n                                taskPriorities\n                            \n                            \n                                    Public\n                                taskTypes\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                confirm\n                            \n                            \n                                loadParamsFromUrl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onProjectIdChange\n                            \n                            \n                                onWorkspaceIdChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: TaskDialogData, dialogRef: MatDialogRef, statusService: StatusService, workspaceService: WorkspaceService, gitIntegrationService: GitIntegrationService, routerExtensions: RouterExtensionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        TaskDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerExtensions\n                                                  \n                                                        \n                                                                        RouterExtensionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadParamsFromUrl\n                        \n                    \n                \n            \n            \n                \nloadParamsFromUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onProjectIdChange\n                        \n                    \n                \n            \n            \n                \nonProjectIdChange(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onWorkspaceIdChange\n                        \n                    \n                \n            \n            \n                \nonWorkspaceIdChange(workspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(this.data.subtask ? SubTaskType.SUBTASK : TaskType.TASK, [\n      requiredValidator(),\n    ]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(TaskPriority.MEDIUM, [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n    issue: new FormControl(null),\n    pull: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isGitHubIntegrationAvailable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pullList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        subTaskTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Enum.entries(SubTaskType)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TaskDialogVariant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TaskDialogVariant\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskPriorities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(TaskPriority)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Enum.entries(TaskType)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { Enum } from '@main/classes/enum.class';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { TaskPriority } from '@tasks/enums/task-priority.enum';\nimport { SubTaskType, TaskType } from '@tasks/enums/task-type.enum';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\nimport { Task } from '../../interfaces/task.interface';\n\nexport enum TaskDialogVariant {\n  CREATE = 'create',\n  EDIT = 'edit',\n}\n\nexport interface TaskDialogData {\n  workspaceId: number;\n  projectId?: number;\n  variant: TaskDialogVariant;\n  task?: Partial;\n  subtask?: boolean;\n}\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task.dialog.html',\n  styleUrls: ['./task.dialog.scss'],\n})\nexport class TaskDialog implements OnInit {\n  TaskDialogVariant = TaskDialogVariant;\n\n  public taskTypes = Enum.entries(TaskType);\n  public subTaskTypes = Enum.entries(SubTaskType);\n  public taskPriorities = Object.values(TaskPriority);\n\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n  public projectList$: Observable = new BehaviorSubject([]);\n  public issueList$!: Observable;\n  public pullList$!: Observable;\n\n  public isGitHubIntegrationAvailable: boolean = false;\n\n  public form = new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(this.data.subtask ? SubTaskType.SUBTASK : TaskType.TASK, [\n      requiredValidator(),\n    ]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(TaskPriority.MEDIUM, [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n    issue: new FormControl(null),\n    pull: new FormControl(null),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: TaskDialogData,\n    private dialogRef: MatDialogRef,\n    private statusService: StatusService,\n    private workspaceService: WorkspaceService,\n    private gitIntegrationService: GitIntegrationService,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId, task } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n    if (task) {\n      this.form.patchValue(task);\n    }\n\n    this.workspaceList$ = this.workspaceService.list();\n\n    this.form.get('workspaceId')?.valueChanges.subscribe(this.onWorkspaceIdChange.bind(this));\n    this.form.get('projectId')?.valueChanges.subscribe(this.onProjectIdChange.bind(this));\n\n    if (workspaceId) {\n      this.onWorkspaceIdChange(workspaceId);\n    }\n\n    if (projectId) {\n      this.onProjectIdChange(projectId);\n    }\n  }\n\n  onWorkspaceIdChange(workspaceId: number) {\n    this.projectList$ = this.projectList$ = this.workspaceService\n      .get(workspaceId)\n      .pipe(map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)));\n  }\n\n  onProjectIdChange(projectId: number) {\n    this.statusList$ = this.statusService.list(projectId);\n\n    this.statusList$.subscribe((statuses) => {\n      const statusId = statuses.find((status) => status.begin)?.id;\n\n      if (!statusId) return;\n\n      this.form.patchValue({ statusId });\n    });\n\n    this.gitIntegrationService.hasGitHubIntegration(projectId!).subscribe((value) => {\n      this.isGitHubIntegrationAvailable = value;\n    });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  confirm() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    this.dialogRef.close(formValues);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        Edit task: {{ data.task?.name }}\nCreate new task\nCreate new subtask\n\n  \n\n    \n    \n      {{ workspace.name }}\n      \n    \n\n    \n    \n      \n        {{project.name}}\n        \n      \n    \n\n    \n    \n      \n        {{ type[1] | taskType }}\n      \n    \n\n    \n    \n    \n\n    \n    \n\n    \n    \n      {{ status.name }}\n      \n    \n\n    \n    \n      {{\n        priority | taskPriority }}\n    \n\n    \n    \n    \n\n    \n    \n    \n\n    \n    \n\n    \n    \n\n  \n\n\n  Cancel\n  Create\n  \n  Save changes\n  \n\n\n    \n\n    \n                \n                    ./task.dialog.scss\n                \n                form {\n  >* {\n    display: block;\n    width: 100%;\n    margin-bottom: 1.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Edit task: {{ data.task?.name }}Create new taskCreate new subtask                {{ workspace.name }}                                {{project.name}}                                        {{ type[1] | taskType }}                                            {{ status.name }}                        {{        priority | taskPriority }}                                                Cancel  Create    Save changes  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskDialogData.html":{"url":"interfaces/TaskDialogData.html","title":"interface - TaskDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/dialogs/task/task.dialog.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            projectId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subtask\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            task\n                                        \n                                \n                                \n                                        \n                                            variant\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtask\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subtask:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variant:         TaskDialogVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TaskDialogVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { Enum } from '@main/classes/enum.class';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { TaskPriority } from '@tasks/enums/task-priority.enum';\nimport { SubTaskType, TaskType } from '@tasks/enums/task-type.enum';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\nimport { Task } from '../../interfaces/task.interface';\n\nexport enum TaskDialogVariant {\n  CREATE = 'create',\n  EDIT = 'edit',\n}\n\nexport interface TaskDialogData {\n  workspaceId: number;\n  projectId?: number;\n  variant: TaskDialogVariant;\n  task?: Partial;\n  subtask?: boolean;\n}\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task.dialog.html',\n  styleUrls: ['./task.dialog.scss'],\n})\nexport class TaskDialog implements OnInit {\n  TaskDialogVariant = TaskDialogVariant;\n\n  public taskTypes = Enum.entries(TaskType);\n  public subTaskTypes = Enum.entries(SubTaskType);\n  public taskPriorities = Object.values(TaskPriority);\n\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n  public projectList$: Observable = new BehaviorSubject([]);\n  public issueList$!: Observable;\n  public pullList$!: Observable;\n\n  public isGitHubIntegrationAvailable: boolean = false;\n\n  public form = new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(this.data.subtask ? SubTaskType.SUBTASK : TaskType.TASK, [\n      requiredValidator(),\n    ]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(TaskPriority.MEDIUM, [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n    issue: new FormControl(null),\n    pull: new FormControl(null),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: TaskDialogData,\n    private dialogRef: MatDialogRef,\n    private statusService: StatusService,\n    private workspaceService: WorkspaceService,\n    private gitIntegrationService: GitIntegrationService,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId, task } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n    if (task) {\n      this.form.patchValue(task);\n    }\n\n    this.workspaceList$ = this.workspaceService.list();\n\n    this.form.get('workspaceId')?.valueChanges.subscribe(this.onWorkspaceIdChange.bind(this));\n    this.form.get('projectId')?.valueChanges.subscribe(this.onProjectIdChange.bind(this));\n\n    if (workspaceId) {\n      this.onWorkspaceIdChange(workspaceId);\n    }\n\n    if (projectId) {\n      this.onProjectIdChange(projectId);\n    }\n  }\n\n  onWorkspaceIdChange(workspaceId: number) {\n    this.projectList$ = this.projectList$ = this.workspaceService\n      .get(workspaceId)\n      .pipe(map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)));\n  }\n\n  onProjectIdChange(projectId: number) {\n    this.statusList$ = this.statusService.list(projectId);\n\n    this.statusList$.subscribe((statuses) => {\n      const statusId = statuses.find((status) => status.begin)?.id;\n\n      if (!statusId) return;\n\n      this.form.patchValue({ statusId });\n    });\n\n    this.gitIntegrationService.hasGitHubIntegration(projectId!).subscribe((value) => {\n      this.isGitHubIntegrationAvailable = value;\n    });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  confirm() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    this.dialogRef.close(formValues);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListPage.html":{"url":"components/TaskListPage.html","title":"component - TaskListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/task-list/task-list.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list\n            \n\n            \n                styleUrls\n                ./task-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assigneeControl\n                            \n                            \n                                expandedSubtasks\n                            \n                            \n                                faCheck\n                            \n                            \n                                faChevronRight\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faCodePullRequest\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                filters\n                            \n                            \n                                    Public\n                                filtersControl\n                            \n                            \n                                isSubtasksRow\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                statusList\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                taskList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                createSubtask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                editTask\n                            \n                            \n                                getStatus\n                            \n                            \n                                    Public\n                                getSubtasksContainerHeight\n                            \n                            \n                                initAssigneeChanging\n                            \n                            \n                                populateSubtasks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, taskService: TaskService, statusService: StatusService, projectService: ProjectService, dialogService: DialogService, memberService: MemberService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date?: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubtask\n                        \n                    \n                \n            \n            \n                \ncreateSubtask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTask\n                        \n                    \n                \n            \n            \n                \neditTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSubtasksContainerHeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubtasksContainerHeight(taskId: number, element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initAssigneeChanging\n                        \n                    \n                \n            \n            \n                \ninitAssigneeChanging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        populateSubtasks\n                        \n                    \n                \n            \n            \n                \npopulateSubtasks(taskList: Task[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                Task[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        assigneeControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandedSubtasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ESet()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faChevronRight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faChevronRight\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodePullRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodePullRequest\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filtersControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubtasksRow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '@auth/services/user.service';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport {\n  faCheck,\n  faChevronRight,\n  faCodeCommit,\n  faCodePullRequest,\n  faPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { ESet } from '@main/classes/e-set.class';\nimport { Filters } from '@main/classes/filters.class';\nimport { Filter } from '@main/interfaces/filters.interface';\nimport { DialogService } from '@main/services/dialog.service';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Task } from '@tasks/interfaces/task.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { map, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.page.html',\n  styleUrls: ['./task-list.page.scss'],\n})\nexport class TaskListPage {\n  faPlus = faPlus;\n  faChevronRight = faChevronRight;\n  faCodeCommit = faCodeCommit;\n  faCodePullRequest = faCodePullRequest;\n  faCheck = faCheck;\n\n  public projectId!: number;\n\n  public taskList$!: Observable;\n  public statusList$!: Observable;\n  public project$!: Observable;\n  public members$!: Observable>;\n  public assigneeControl = new FormControl(null);\n\n  public statusList: Status[] = [];\n\n  public filters: Filter[] = [];\n  public filtersControl = new FormControl();\n\n  isSubtasksRow = (i: number, row: Object) => row.hasOwnProperty('withSubtasks');\n  expandedSubtasks = new ESet();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private taskService: TaskService,\n    private statusService: StatusService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n    private userService: UserService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.projectId = projectId;\n    this.project$ = this.projectService.get(projectId);\n\n    /**\n     * TODO: Use method from service\n     */\n    this.members$ = this.memberService.list(projectId).pipe(\n      map((members) =>\n        members.reduce((acc: Map, member: ProjectMember) => {\n          acc.set(member.user.id, member);\n          return acc;\n        }, new Map()),\n      ),\n    );\n    this.taskList$ = this.taskService.list(projectId);\n    this.statusList$ = this.statusService.list(projectId);\n    this.statusList$.subscribe((list) => {\n      this.statusList = list;\n    });\n    this.userService.getMyself().subscribe((user) => {\n      this.filters.push(Filters.ONLY_MY_TASKS(user.id));\n    });\n\n    this.filtersControl.valueChanges.subscribe((filters) => {\n      this.taskList$ = this.taskService.list(projectId, filters);\n    });\n  }\n\n  getStatus(statusId: number) {\n    return this.statusList.find((status) => status.id === statusId)?.name;\n  }\n\n  changeDate(date?: Date) {\n    if (!date) return '-';\n    let sessionDate = dayjs(date);\n    return sessionDate.format('YYYY-MM-DD, hh:mm A');\n  }\n\n  populateSubtasks(taskList: Task[]) {\n    const populatedTasks = [];\n    const tasks = taskList.filter((task) => !task.parentTaskId);\n\n    for (const task of tasks) {\n      populatedTasks.push(task);\n\n      if (task.subTasks && task.subTasks.length) {\n        populatedTasks.push({ ...task, withSubtasks: true });\n      }\n    }\n\n    return populatedTasks;\n  }\n\n  createSubtask(task: Task) {\n    this.taskService.openCreateSubtaskDialog(this.projectId, task).subscribe((task) => {\n      if (!task) return;\n\n      location.reload();\n    });\n  }\n\n  editTask(task: Task) {\n    this.taskService.openEditTaskDialog(this.projectId, task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  deleteTask(task: Task) {\n    this.taskService.deleteWithConfirmation(this.projectId, task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  initAssigneeChanging() {\n    this.assigneeControl.valueChanges.subscribe((assignee) => {});\n  }\n\n  public getSubtasksContainerHeight(taskId: number, element: HTMLElement) {\n    return `${Number(this.expandedSubtasks.has(taskId)) * element.scrollHeight}px`;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n  \n    Title\n    Status\n    Assignee\n    Deadline\n    \n      \n    \n  \n\n  \n  \n    \n\n      \n      \n        \n          \n          \n          #{{ task.id }}\n          {{ task.name }}\n          \n            \n          \n          \n            \n          \n          \n            \n            \n          \n        \n      \n\n      \n      \n        \n        \n      \n\n      \n      \n        \n        \n      \n\n      \n      {{changeDate(task.deadline)}}\n\n      \n      \n        \n          \n        \n        \n          \n            Edit task\n          \n          \n            Create subtask\n          \n          \n            Delete task\n          \n        \n      \n    \n    \n      \n\n        \n        \n          \n            #{{ subtask.id }}\n            \n            {{ subtask.name }}\n            \n              \n            \n            \n              \n            \n            \n              \n              \n            \n          \n        \n\n        \n        \n          \n        \n\n        \n        \n          \n          \n        \n\n        \n        {{changeDate(subtask.deadline)}}\n\n        \n        \n          \n            \n          \n          \n            \n              Edit task\n            \n            \n              Create subtask\n            \n            \n              Delete task\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task-list.page.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  padding: 2rem;\n}\n\n.table {\n  width: 100%;\n  padding-left: 10px;\n}\n\n.table .row .cell .status {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  max-width: 250px;\n  height: 100%;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  padding: 0 1rem;\n  margin: 0 1rem;\n  background-color: var(--color-secondary-400);\n  border-radius: var(--border-radius);\n}\n\n.task-title,\n.subtask-title {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  padding-left: 0.5rem;\n\n  .task-id {\n    display: block;\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n\n  .task-property {\n    display: flex;\n    margin-left: 1rem;\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity 0.2s ease;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    .check {\n      margin-left: 5px;\n      color: #2ecc71;\n    }\n  }\n\n  &>app-icon {\n    margin-right: 1rem;\n    opacity: 0.5;\n    transition: transform .2s ease;\n  }\n}\n\n.subtasks {\n  position: relative;\n  overflow: hidden;\n  max-height: 0;\n  padding-left: 4rem;\n  transition: max-height 0.4s ease;\n\n  .subtask-title {\n    display: flex;\n  }\n\n  .subtask-id {\n    display: block;\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n\n  .row {\n    position: relative;\n\n    &::before,\n    &::after {\n      position: absolute;\n      top: 0;\n      left: -2.5rem;\n      display: block;\n      content: '';\n    }\n\n    &:last-child {\n      margin-bottom: 1rem;\n    }\n\n    &:not(:last-child)::before {\n      width: 2px;\n      height: calc(100% + 1rem);\n      background-color: var(--color-secondary-400);\n    }\n\n    &::after {\n      width: 29px;\n      height: 29px;\n      border: 2px solid var(--color-secondary-400);\n      border-top-width: 0;\n      border-right-width: 0;\n      border-bottom-left-radius: 50%;\n    }\n  }\n}\n\n.row {\n  cursor: pointer;\n\n  &.expanded {\n    .task-title>app-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n\n.task-type {\n  width: 16px;\n  height: 16px;\n  margin-right: 1rem;\n  border-radius: 4px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Title    Status    Assignee    Deadline                                                                          #{{ task.id }}          {{ task.name }}                                                                                                                                                                                                          {{changeDate(task.deadline)}}                                                                    Edit task                                Create subtask                                Delete task                                                                            #{{ subtask.id }}                        {{ subtask.name }}                                                                                                                                                                                                                                                {{changeDate(subtask.deadline)}}                                                                                    Edit task                                      Create subtask                                      Delete task                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskPriorityIconPipe.html":{"url":"pipes/TaskPriorityIconPipe.html","title":"pipe - TaskPriorityIconPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskPriorityIconPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-priority-icon.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskPriorityIcon\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-priority-icon.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskPriorityIcon',\n})\nexport class TaskPriorityIconPipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'lowest':\n        return 'cuPriorityLowest';\n      case 'low':\n        return 'cuPriorityLow';\n      case 'medium':\n        return 'cuPriorityMedium';\n      case 'high':\n        return 'cuPriorityHigh';\n      case 'highest':\n        return 'cuPriorityHighest';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskPriorityPipe.html":{"url":"pipes/TaskPriorityPipe.html","title":"pipe - TaskPriorityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskPriorityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-priority.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskPriority\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-priority.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskPriority',\n})\nexport class TaskPriorityPipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'lowest':\n        return $localize`Lowest`;\n      case 'low':\n        return $localize`Low`;\n      case 'medium':\n        return $localize`Medium`;\n      case 'high':\n        return $localize`High`;\n      case 'highest':\n        return $localize`Highest`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/services/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assign\n                            \n                            \n                                    Public\n                                changeStatus\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                deleteWithConfirmation\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                openCreateNewTaskDialog\n                            \n                            \n                                    Public\n                                openCreateSubtaskDialog\n                            \n                            \n                                    Public\n                                openEditTaskDialog\n                            \n                            \n                                    Public\n                                schedule\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, gitIntegrationService: GitIntegrationService, dialogService: DialogService, memberService: MemberService, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/services/task.service.ts:32\n                            \n                        \n\n                \n                    \n                            Default constructor with dependency injection.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ApiService\n\n                                                        \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        assign\n                        \n                    \n                \n            \n            \n                \n                    \n                    assign(userId: number | null, taskId: number, projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:262\n                \n            \n\n\n            \n                \n                    Assign task to specific user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                            number | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user to assign task to (if null, task will be unassigned)\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task to assign\n\n                                    \n                                \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id needed to assign task\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Updated task object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeStatus(statusId: number, taskId: number, projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:275\n                \n            \n\n\n            \n                \n                    Change status of specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        status to change task to\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task to change status of\n\n                                    \n                                \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id needed to change status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Updated task object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(projectId: number, task: TaskWithAdditionalData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:72\n                \n            \n\n\n            \n                \n                    Creates new task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                TaskWithAdditionalData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the created task\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number, taskId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:100\n                \n            \n\n\n            \n                \n                    Deletes task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to delete task\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteWithConfirmation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteWithConfirmation(projectId: number, task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:110\n                \n            \n\n\n            \n                \n                    Opens dialog to delete specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to delete task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable with true if task was deleted, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number, filters?: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:51\n                \n            \n\n\n            \n                \n                    Get list of tasks\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to list all tasks\n\n                                    \n                                \n                                \n                                    filters\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with list of tasks\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateNewTaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateNewTaskDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:166\n                \n            \n\n\n            \n                \n                    Opens dialog to create new task\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        created task, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateSubtaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateSubtaskDialog(projectId: number, parentTask: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:193\n                \n            \n\n\n            \n                \n                    Opens dialog to create new subtask\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update subtask\n\n                                    \n                                \n                                \n                                    parentTask\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent task id to which attach subtask\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        created subtask, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openEditTaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openEditTaskDialog(projectId: number, task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:136\n                \n            \n\n\n            \n                \n                    Opens dialog to edit specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable with updated task, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        schedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    schedule(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:224\n                \n            \n\n\n            \n                \n                    Generates schedule object for specific project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id to generate schedule from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Schedule object with all tasks\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(projectId: number, task: TaskWithAdditionalData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:86\n                \n            \n\n\n            \n                \n                    Updates task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                TaskWithAdditionalData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the updated task\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/services/task.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { AlertDialogVariant } from '@main/dialogs/alert/alert.dialog';\nimport { Filter } from '@main/interfaces/filters.interface';\nimport { applyFilters } from '@main/operators/apply-filters.operator';\nimport { DialogOutlet, DialogService } from '@main/services/dialog.service';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { Schedule } from '@tasks/interfaces/schedule.interface';\nimport * as dayjs from 'dayjs';\nimport {\n  combineLatest,\n  EMPTY,\n  map,\n  Observable,\n  of,\n  ReplaySubject,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs';\nimport { ApiService } from '../../_main/services/api.service';\nimport { Task, TaskWithAdditionalData } from '../interfaces/task.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  private lists = new Map>();\n\n  /**\n   * Default constructor with dependency injection.\n   * @param apiService ApiService\n   */\n  constructor(\n    private apiService: ApiService,\n    private gitIntegrationService: GitIntegrationService,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n    private snackbarService: SnackbarService,\n  ) {}\n\n  /**\n   * Get list of tasks\n   * @param projectId Project id needed to list all tasks\n   * @returns Request observable with list of tasks\n   */\n  public list(projectId: number, filters?: Filter[]): Observable {\n    let subject: ReplaySubject;\n    if (this.lists.has(projectId)) {\n      subject = this.lists.get(projectId)!;\n    } else {\n      subject = new ReplaySubject();\n      this.lists.set(projectId, subject);\n      this.apiService.get(`/project/${projectId}/task`).subscribe((tasks) => {\n        subject.next(tasks);\n      });\n    }\n\n    return subject.pipe(applyFilters(filters));\n  }\n\n  /**\n   * Creates new task\n   * @param task Task to create\n   * @param projectId Project id needed to create task\n   * @returns Request observable with the created task\n   */\n  public create(projectId: number, task: TaskWithAdditionalData): Observable {\n    return this.apiService.post(`/project/${projectId}/task/`, { body: task }).pipe(\n      tap(() => {\n        this.snackbarService.show($localize`Task created successfully!`);\n      }),\n    );\n  }\n\n  /**\n   * Updates task\n   * @param task Task to update\n   * @param projectId Project id needed to update task\n   * @returns Request observable with the updated task\n   */\n  public update(projectId: number, task: TaskWithAdditionalData): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${task.id}`, { body: task }).pipe(\n      tap(() => {\n        this.snackbarService.show($localize`Task updated successfully!`);\n      }),\n    );\n  }\n\n  /**\n   * Deletes task\n   * @param taskId Task id to delete\n   * @param projectId Project id needed to delete task\n   * @returns Request observable\n   */\n  public delete(projectId: number, taskId: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}`);\n  }\n\n  /**\n   * Opens dialog to delete specific task\n   * @param projectId Project id needed to delete task\n   * @param task Task to delete\n   * @returns Observable with true if task was deleted, EMPTY otherwise (when user cancels the dialog)\n   */\n  public deleteWithConfirmation(projectId: number, task: Task): Observable {\n    return this.dialogService\n      .confirm({\n        title: $localize`Delete task \"${task.name}\"`,\n        message: $localize`Are you sure you want to delete this task \"${task.name}\"?`,\n        confirmText: $localize`Delete`,\n        cancelText: $localize`Cancel`,\n        variant: AlertDialogVariant.IMPORTANT,\n      })\n      .pipe(\n        switchMap((confirmed) => {\n          if (confirmed) {\n            return this.delete(projectId, task.id).pipe(switchMap(() => of(true)));\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to edit specific task\n   * @param projectId Project id needed to update task\n   * @param task Task to update\n   * @returns Observable with updated task, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openEditTaskDialog(projectId: number, task: Task): Observable {\n    return this.dialogService\n      .open(\n        TaskDialog,\n        {\n          variant: TaskDialogVariant.EDIT,\n          projectId,\n          task,\n        } as TaskDialogData,\n        DialogOutlet.CONTENT_RIGHT,\n      )\n      .afterClosed()\n      .pipe(\n        tap((data) => {\n          console.log(data);\n        }),\n        switchMap((updatedTask: any) => {\n          if (updatedTask) {\n            return this.update(projectId, updatedTask);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to create new task\n   * @returns created task, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openCreateNewTaskDialog() {\n    return this.dialogService\n      .open(\n        TaskDialog,\n        {\n          variant: TaskDialogVariant.CREATE,\n        } as TaskDialogData,\n        DialogOutlet.CONTENT_RIGHT,\n      )\n      .afterClosed()\n      .pipe(\n        switchMap((task: TaskWithAdditionalData) => {\n          if (task) {\n            return this.create(task.projectId, task);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to create new subtask\n   * @param projectId Project id needed to update subtask\n   * @param parentTask Parent task id to which attach subtask\n   * @returns created subtask, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openCreateSubtaskDialog(projectId: number, parentTask: Task): Observable {\n    return this.dialogService\n      .open(\n        TaskDialog,\n        {\n          variant: TaskDialogVariant.CREATE,\n          projectId: projectId,\n          subtask: true,\n          task: {\n            parentTaskId: parentTask.id,\n          },\n        },\n        DialogOutlet.CONTENT_RIGHT,\n      )\n      .afterClosed()\n      .pipe(\n        switchMap((newTask: any) => {\n          if (newTask) {\n            return this.create(projectId, newTask);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Generates schedule object for specific project\n   * @param projectId Project id to generate schedule from\n   * @returns Schedule object with all tasks\n   */\n  public schedule(projectId: number): Observable {\n    return combineLatest([\n      this.list(projectId).pipe(take(1)),\n      this.memberService.list(projectId).pipe(take(1)),\n    ]).pipe(\n      map(([tasks, members]: [tasks: Task[], members: ProjectMember[]]) => {\n        const schedules = [];\n\n        for (const { user } of members) {\n          schedules.push({ user, tasks: new Map() });\n        }\n\n        for (const task of tasks) {\n          const schedule = schedules.find((s) => s.user.id === task.assigneeId);\n\n          if (!schedule) continue;\n\n          if (task.estimatedDate) {\n            schedule.tasks.set(dayjs(task.estimatedDate).format('YYYY-MM-DD'), task);\n          } else {\n            if (!schedule.tasks.has(null)) schedule.tasks.set(null, []);\n\n            schedule.tasks.get(null).push(task);\n          }\n        }\n\n        return schedules;\n      }),\n    );\n  }\n\n  /**\n   * Assign task to specific user\n   * @param userId user to assign task to (if null, task will be unassigned)\n   * @param taskId task to assign\n   * @param projectId project id needed to assign task\n   * @returns Updated task object\n   */\n  public assign(userId: number | null, taskId: number, projectId: number): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${taskId}`, {\n      body: { assigneeId: userId },\n    });\n  }\n\n  /**\n   * Change status of specific task\n   * @param statusId status to change task to\n   * @param taskId task to change status of\n   * @param projectId project id needed to change status\n   * @returns Updated task object\n   */\n  public changeStatus(statusId: number, taskId: number, projectId: number): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${taskId}`, {\n      body: { statusId },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskTypeIconPipe.html":{"url":"pipes/TaskTypeIconPipe.html","title":"pipe - TaskTypeIconPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskTypeIconPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-type-icon.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskTypeIcon\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type-icon.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskTypeIcon',\n})\nexport class TaskTypeIconPipe implements PipeTransform {\n  /**\n   * @deprecated\n   */\n  transform(value: any): any {\n    switch (value) {\n      case 'TASK':\n        return 'cuTask';\n      case 'ISSUE':\n        return 'cuIssue';\n      case 'EPIC':\n        return 'cuEpic';\n      case 'USER_STORY':\n        return 'cuUserStory';\n      case 'SUBTASK':\n        return 'cuSubtask';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskTypePipe.html":{"url":"pipes/TaskTypePipe.html","title":"pipe - TaskTypePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskTypePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-type.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskType\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, type?: \"name\" | \"icon\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"name\" | \"icon\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, type: \"color\" | \"name\" | \"icon\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                \"color\" | \"name\" | \"icon\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'name'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { SubTaskType, TaskType } from '@tasks/enums/task-type.enum';\nimport * as Color from 'color';\n\n@Pipe({\n  name: 'taskType',\n})\nexport class TaskTypePipe implements PipeTransform {\n  transform(value: any, type?: 'name' | 'icon'): string;\n  transform(value: any, type: 'color'): Color;\n\n  transform(value: any, type: 'color' | 'name' | 'icon' = 'name'): string | Color {\n    switch (value as TaskType | SubTaskType) {\n      // Task\n      case TaskType.TASK:\n        return {\n          name: $localize`Task`,\n          color: Color.rgb(52, 152, 219),\n          icon: 'cuTask',\n        }[type];\n\n      // User story\n      case TaskType.USER_STORY:\n        return {\n          name: $localize`User story`,\n          color: Color.rgb(46, 204, 113),\n          icon: 'cuUserStory',\n        }[type];\n\n      // Issue\n      case TaskType.ISSUE:\n        return {\n          name: $localize`Issue`,\n          color: Color.rgb(231, 76, 60),\n          icon: 'cuIssue',\n        }[type];\n\n      // Epic\n      case TaskType.EPIC:\n        return {\n          name: $localize`Epic`,\n          color: Color.rgb(155, 89, 182),\n          icon: 'cuEpic',\n        }[type];\n\n      // Subtask\n      case SubTaskType.SUBTASK:\n        return {\n          name: $localize`Subtask`,\n          color: Color.rgb(88, 183, 189),\n          icon: 'cuSubtask',\n        }[type];\n\n      // Unknown\n      default:\n        console.warn('Unknown task type:', value);\n        return value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskWithAdditionalData.html":{"url":"interfaces/TaskWithAdditionalData.html","title":"interface - TaskWithAdditionalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskWithAdditionalData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/task.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Extended project task interface\n\n            \n\n            \n                Extends\n            \n            \n                    Omit\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connectWithIssueOnGitHub\n                                        \n                                \n                                \n                                        \n                                            connectWithPullRequestOnGitHub\n                                        \n                                \n                                \n                                        \n                                            issue\n                                        \n                                \n                                \n                                        \n                                            issueAttachGithub\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            pull\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectWithIssueOnGitHub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectWithIssueOnGitHub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task is connected to GitHub issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connectWithPullRequestOnGitHub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectWithPullRequestOnGitHub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task is connected to GitHub pull request\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issue:         GitIssue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitIssue\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub issue to which the task is connected to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueAttachGithub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueAttachGithub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Project identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pull\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pull:         GitPull\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitPull\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub pull to which the task is connected to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace identifier\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\n\n/**\n * Project task interface\n */\nexport interface Task {\n  /**\n   * Task id (unique per project)\n   */\n  id: number;\n\n  /**\n   * Task name\n   */\n  name: string;\n\n  /**\n   * Task description\n   */\n  description: string;\n\n  /**\n   * Task deadline to be completed\n   */\n  deadline: Date;\n\n  /**\n   * Task estimated date to work on it\n   */\n  estimatedDate: Date;\n\n  /**\n   * Status id (unique per database)\n   */\n  statusId?: number;\n\n  /**\n   * Parent task id\n   */\n  parentTaskId?: number;\n\n  /**\n   * List of subtasks\n   */\n  subTasks?: Task[];\n\n  /**\n   * Optional link to the GitHub issue\n   */\n  issue?: GitIssue;\n\n  /**\n   * Task type (ex. EPIC, USER_STORY)\n   */\n  type: string;\n\n  /**\n   * Optional link to the GitHub pull request\n   */\n  pull?: GitPull;\n\n  /**\n   * Optional merged pull requests list\n   */\n  mergedPullList?: GitPull[];\n\n  /**\n   * Optional user id who is assigned to task\n   */\n  assigneeId?: number;\n}\n\n/**\n * Extended project task interface\n */\nexport interface TaskWithAdditionalData extends Omit {\n  /**\n   * Project identifier\n   */\n  projectId: number;\n\n  /**\n   * Workspace identifier\n   */\n  workspaceId: string;\n\n  /**\n   * Boolean to determine if task is connected to GitHub issue\n   */\n  connectWithIssueOnGitHub: boolean;\n\n  /**\n   * Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n   */\n  issueAttachGithub: boolean;\n\n  /**\n   * Boolean to determine if task is connected to GitHub pull request\n   */\n  connectWithPullRequestOnGitHub: boolean;\n\n  /**\n   * GitHub pull to which the task is connected to\n   */\n  pull: GitPull;\n\n  /**\n   * GitHub issue to which the task is connected to\n   */\n  issue: GitIssue;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_declarations\n\n\n\n\nBoardPage\n\nBoardPage\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nBoardPage->TasksModule\n\n\n\n\n\nBoardTaskComponent\n\nBoardTaskComponent\n\nTasksModule -->\n\nBoardTaskComponent->TasksModule\n\n\n\n\n\nInputAssigneeComponent\n\nInputAssigneeComponent\n\nTasksModule -->\n\nInputAssigneeComponent->TasksModule\n\n\n\n\n\nInputIssueComponent\n\nInputIssueComponent\n\nTasksModule -->\n\nInputIssueComponent->TasksModule\n\n\n\n\n\nInputPullRequestComponent\n\nInputPullRequestComponent\n\nTasksModule -->\n\nInputPullRequestComponent->TasksModule\n\n\n\n\n\nInputTaskPropertyComponent\n\nInputTaskPropertyComponent\n\nTasksModule -->\n\nInputTaskPropertyComponent->TasksModule\n\n\n\n\n\nSchedulePage\n\nSchedulePage\n\nTasksModule -->\n\nSchedulePage->TasksModule\n\n\n\n\n\nStatusColorPipe\n\nStatusColorPipe\n\nTasksModule -->\n\nStatusColorPipe->TasksModule\n\n\n\n\n\nStatusLabelComponent\n\nStatusLabelComponent\n\nTasksModule -->\n\nStatusLabelComponent->TasksModule\n\n\n\n\n\nTaskDialog\n\nTaskDialog\n\nTasksModule -->\n\nTaskDialog->TasksModule\n\n\n\n\n\nTaskListPage\n\nTaskListPage\n\nTasksModule -->\n\nTaskListPage->TasksModule\n\n\n\n\n\nTaskPriorityIconPipe\n\nTaskPriorityIconPipe\n\nTasksModule -->\n\nTaskPriorityIconPipe->TasksModule\n\n\n\n\n\nTaskPriorityPipe\n\nTaskPriorityPipe\n\nTasksModule -->\n\nTaskPriorityPipe->TasksModule\n\n\n\n\n\nTaskTypeIconPipe\n\nTaskTypeIconPipe\n\nTasksModule -->\n\nTaskTypeIconPipe->TasksModule\n\n\n\n\n\nTaskTypePipe\n\nTaskTypePipe\n\nTasksModule -->\n\nTaskTypePipe->TasksModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nTasksModule -->\n\nMainModule->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardPage\n                        \n                        \n                            BoardTaskComponent\n                        \n                        \n                            InputAssigneeComponent\n                        \n                        \n                            InputIssueComponent\n                        \n                        \n                            InputPullRequestComponent\n                        \n                        \n                            InputTaskPropertyComponent\n                        \n                        \n                            SchedulePage\n                        \n                        \n                            StatusColorPipe\n                        \n                        \n                            StatusLabelComponent\n                        \n                        \n                            TaskDialog\n                        \n                        \n                            TaskListPage\n                        \n                        \n                            TaskPriorityIconPipe\n                        \n                        \n                            TaskPriorityPipe\n                        \n                        \n                            TaskTypeIconPipe\n                        \n                        \n                            TaskTypePipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MainModule\n                        \n                        \n                            TasksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { BoardTaskComponent } from './components/board-task/board-task.component';\nimport { InputAssigneeComponent } from './components/input-assignee/input-assignee.component';\nimport { InputIssueComponent } from './components/input-issue/input-issue.component';\nimport { InputPullRequestComponent } from './components/input-pull-request/input-pull-request.component';\nimport { InputTaskPropertyComponent } from './components/input-task-property/input-task-property.component';\nimport { StatusLabelComponent } from './components/status-label/status-label.component';\nimport { ViewOptionsComponent } from './components/view-options/view-options.component';\nimport { TaskDialog } from './dialogs/task/task.dialog';\nimport { BoardPage } from './pages/board/board.page';\nimport { SchedulePage } from './pages/schedule/schedule.page';\nimport { TaskListPage } from './pages/task-list/task-list.page';\nimport { StatusColorPipe } from './pipes/status-color.pipe';\nimport { TaskPriorityIconPipe } from './pipes/task-priority-icon.pipe';\nimport { TaskPriorityPipe } from './pipes/task-priority.pipe';\nimport { TaskTypeIconPipe } from './pipes/task-type-icon.pipe';\nimport { TaskTypePipe } from './pipes/task-type.pipe';\nimport { TasksRoutingModule } from './tasks.routing';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, MainModule, TasksRoutingModule],\n  declarations: [\n    BoardPage,\n    BoardTaskComponent,\n    TaskListPage,\n    TaskDialog,\n    TaskTypePipe,\n    TaskPriorityPipe,\n    TaskPriorityIconPipe,\n    TaskTypeIconPipe,\n    ViewOptionsComponent,\n    SchedulePage,\n    InputAssigneeComponent,\n    StatusLabelComponent,\n    StatusColorPipe,\n    InputTaskPropertyComponent,\n    InputIssueComponent,\n    InputPullRequestComponent,\n  ],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\nimport { BoardPage } from './pages/board/board.page';\nimport { SchedulePage } from './pages/schedule/schedule.page';\nimport { TaskListPage } from './pages/task-list/task-list.page';\n\n/**\n * Tasks routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'board',\n  },\n  {\n    path: 'board',\n    component: BoardPage,\n  },\n  {\n    path: 'list',\n    component: TaskListPage,\n  },\n  {\n    path: 'schedule',\n    component: SchedulePage,\n  },\n  {\n    path: 'calendar',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/calendar.svg',\n    },\n  },\n];\n\n/**\n * Tasks routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TasksRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TemplateDecoratorConfig.html":{"url":"interfaces/TemplateDecoratorConfig.html","title":"interface - TemplateDecoratorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TemplateDecoratorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/helpers/functions/component-template-decorator.function.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            selector\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            wrapWithDiv\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selector\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selector:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wrapWithDiv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wrapWithDiv:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { componentWrapperDecorator } from '@storybook/angular';\nimport { omit } from 'lodash-es';\nimport { Props } from '../classes/story.class';\n\nexport interface TemplateDecoratorConfig {\n  selector: string;\n  content?: string;\n  wrapWithDiv?: boolean;\n}\n\nexport function componentTemplateDecorator(props: Props, config: TemplateDecoratorConfig) {\n  return componentWrapperDecorator((defTemplate: string) => {\n    const content = props.content || '';\n    const selector = config.selector;\n\n    const defPropsString = extractPropsString(defTemplate);\n    const newPropsString = buildPropsString(props);\n\n    const propsString = combinePropsString(defPropsString, newPropsString);\n\n    const template = buildTemplate(selector, content, propsString);\n\n    if (config.wrapWithDiv) {\n      return wrapWithDiv(template);\n    } else {\n      return template;\n    }\n  });\n}\n\nexport function buildTemplate(selector: string, content: string, propsString: string) {\n  return `${content}`;\n}\n\nexport function wrapWithDiv(template: string) {\n  const style = 'display:flex;gap:1rem;';\n  return `${template}`;\n}\n\nexport function buildPropsString(props: Props) {\n  const filteredProps = omit(props, ['content']);\n\n  return Object.entries(filteredProps)\n    .map(([key, _]) => `[${key}]=\"${key}\"`)\n    .join(' ');\n}\n\nexport function extractPropsString(template: string) {\n  return template.match(/(?]*(?=>)/g)?.[0] || '';\n}\n\nexport function combinePropsString(...propsStrings: string[]) {\n  return propsStrings.join(' ').trim().replace(/  +/g, ' ');\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestNgControl.html":{"url":"classes/TestNgControl.html","title":"class - TestNgControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestNgControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/helpers/ng-control-testing-provider.helper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NgControl\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _control\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                viewToModelUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    control\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        viewToModelUpdate\n                        \n                    \n                \n            \n            \n                \nviewToModelUpdate(newValue: any)\n                \n            \n\n\n            \n                \n                    Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n\n                \n                    \n                        getcontrol()\n                    \n                \n                            \n                                \n                                    Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { AbstractControl, FormControl, NgControl } from '@angular/forms';\n\nexport class TestNgControl extends NgControl {\n  private _control = new FormControl('');\n  viewToModelUpdate(newValue: any): void {\n    this._control = newValue;\n  }\n  get control(): AbstractControl | null {\n    return this._control;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextareaComponent.html":{"url":"components/TextareaComponent.html","title":"component - TextareaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextareaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/textarea/textarea.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-textarea\n            \n\n            \n                styleUrls\n                ./textarea.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./textarea.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                            \n                                    Public\n                                mode\n                            \n                            \n                                output\n                            \n                            \n                                    Private\n                                renderer\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyBold\n                            \n                            \n                                applyCode\n                            \n                            \n                                applyCodeBlock\n                            \n                            \n                                applyItalic\n                            \n                            \n                                applyLink\n                            \n                            \n                                applyList\n                            \n                            \n                                applyListNumeric\n                            \n                            \n                                applyQuote\n                            \n                            \n                                applyUnderline\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditor\n                            \n                            \n                                openPreview\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cols\n                            \n                            \n                                floatingLabel\n                            \n                            \n                                hint\n                            \n                            \n                                placeholder\n                            \n                            \n                                rows\n                            \n                            \n                                staticLabel\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cols\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:31\n                            \n                        \n                \n                    \n                        Floating label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:46\n                            \n                        \n                \n                    \n                        Hint to display beneath the input to provide additional information of how to use the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:41\n                            \n                        \n                \n                    \n                        Input placeholder text\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rows\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        staticLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:36\n                            \n                        \n                \n                    \n                        Static label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyBold\n                        \n                    \n                \n            \n            \n                \napplyBold()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyCode\n                        \n                    \n                \n            \n            \n                \napplyCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyCodeBlock\n                        \n                    \n                \n            \n            \n                \napplyCodeBlock()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyItalic\n                        \n                    \n                \n            \n            \n                \napplyItalic()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyLink\n                        \n                    \n                \n            \n            \n                \napplyLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyList\n                        \n                    \n                \n            \n            \n                \napplyList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyListNumeric\n                        \n                    \n                \n            \n            \n                \napplyListNumeric()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyQuote\n                        \n                    \n                \n            \n            \n                \napplyQuote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyUnderline\n                        \n                    \n                \n            \n            \n                \napplyUnderline()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditor\n                        \n                    \n                \n            \n            \n                \nopenEditor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPreview\n                        \n                    \n                \n            \n            \n                \nopenPreview()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('input')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/textarea/textarea.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"editor\" | \"preview\"\n\n                    \n                \n                \n                    \n                        Default value : 'editor'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/textarea/textarea.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        output\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('output')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/textarea/textarea.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer\n\n                    \n                \n                \n                    \n                        Default value : Marked.getRenderer()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/textarea/textarea.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:82\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Monaco } from './../../libs/monaco/monaco.lib';\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { editor } from 'monaco-editor';\n// eslint-disable-next-line unused-imports/no-unused-imports\nimport { marked, Renderer } from 'marked';\nimport hljs from 'highlight.js';\nimport {\n  faBold,\n  faCode,\n  faFileCode,\n  faItalic,\n  faLink,\n  faList,\n  faListNumeric,\n  faQuoteLeft,\n  faUnderline,\n} from '@fortawesome/free-solid-svg-icons';\nimport { Marked } from '@main/libs/marked/marked.lib';\nimport './textarea.theme';\n\n@Component({\n  selector: 'app-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.scss'],\n})\nexport class TextareaComponent extends ControlAccessor implements OnInit, AfterViewInit {\n  /**\n   * Floating label text to display\n   */\n  @Input() floatingLabel?: string;\n\n  /**\n   * Static label text to display\n   */\n  @Input() staticLabel?: string;\n\n  /**\n   * Input placeholder text\n   */\n  @Input() placeholder: string = '';\n\n  /**\n   * Hint to display beneath the input to provide additional information of how to use the input\n   */\n  @Input() hint?: string;\n\n  @Input() rows?: number = 4;\n\n  @Input() cols?: number = 50;\n\n  @ViewChild('input') input!: ElementRef;\n  @ViewChild('output') output!: ElementRef;\n\n  private renderer: Renderer = Marked.getRenderer();\n\n  public mode: 'editor' | 'preview' = 'editor';\n\n  /** @ignore */\n  private editor: editor.IStandaloneCodeEditor | null = null;\n\n  /** @ignore */\n  faCode = faCode;\n\n  /** @ignore */\n  faUnderline = faUnderline;\n\n  /** @ignore */\n  faBold = faBold;\n\n  /** @ignore */\n  faItalic = faItalic;\n\n  /** @ignore */\n  faQuoteLeft = faQuoteLeft;\n\n  /** @ignore */\n  faList = faList;\n\n  /** @ignore */\n  faListNumeric = faListNumeric;\n\n  /** @ignore */\n  faLink = faLink;\n\n  /** @ignore */\n  faFileCode = faFileCode;\n\n  ngOnInit(): void {\n    Marked.init();\n    Monaco.init();\n    hljs.configure({ languages: [] });\n  }\n\n  ngAfterViewInit(): void {\n    const container = this.input.nativeElement;\n    const _editor = editor.create(container, {\n      value: this.control.value || '',\n      language: 'markdown',\n      scrollBeyondLastLine: false,\n      wordWrap: 'on',\n      wrappingStrategy: 'advanced',\n      minimap: {\n        enabled: false,\n      },\n      overviewRulerLanes: 0,\n      theme: 'dark',\n      wordBasedSuggestions: false,\n    });\n    let ignoreEvent = false;\n    const updateHeight = () => {\n      const contentHeight = Math.min(500, _editor.getContentHeight());\n      const containerWidth = Math.min(1000, container.scrollWidth);\n      container.style.width = `${containerWidth}px`;\n      container.style.height = `${contentHeight}px`;\n      try {\n        ignoreEvent = true;\n        _editor.layout({ width: containerWidth, height: contentHeight });\n      } finally {\n        ignoreEvent = false;\n      }\n    };\n    _editor.onDidContentSizeChange(updateHeight);\n    _editor.getModel()?.onDidChangeContent(() => {\n      this.control.setValue(_editor.getValue());\n    });\n    updateHeight();\n    this.editor = _editor;\n  }\n\n  openEditor() {\n    this.mode = 'editor';\n  }\n\n  openPreview() {\n    const { renderer } = this;\n\n    this.output.nativeElement.innerHTML = marked.parse(this.editor?.getValue() || '', { renderer });\n    this.output.nativeElement\n      .querySelectorAll('pre code')\n      .forEach((c: HTMLElement) => {\n        hljs.highlightElement(c);\n      });\n\n    this.mode = 'preview';\n  }\n\n  applyUnderline() {\n    this.editor?.executeSelectionEdits({\n      before: '',\n      after: '',\n    });\n    this.editor?.focus();\n  }\n\n  applyBold() {\n    this.editor?.executeSelectionEdits({\n      before: '**',\n      after: '**',\n    });\n    this.editor?.focus();\n  }\n\n  applyItalic() {\n    this.editor?.executeSelectionEdits({\n      before: '*',\n      after: '*',\n    });\n    this.editor?.focus();\n  }\n\n  applyLink() {\n    this.editor?.executeSelectionEdits({\n      before: '[',\n      after: '](https://google.com)',\n    });\n    this.editor?.focus();\n  }\n\n  applyList() {\n    this.editor?.executeSelectionEdits({\n      before: '\\n',\n      after: '\\n',\n      beforeEachLine: '  ',\n      afterEachLine: '',\n    });\n    this.editor?.focus();\n  }\n\n  applyListNumeric() {\n    this.editor?.executeSelectionEdits({\n      before: '\\n',\n      after: '\\n',\n      beforeEachLine: '  ',\n      afterEachLine: '',\n    });\n    this.editor?.focus();\n  }\n\n  applyQuote() {\n    this.editor?.executeSelectionEdits({\n      beforeEachLine: '>',\n    });\n    this.editor?.focus();\n  }\n\n  applyCode() {\n    this.editor?.executeSelectionEdits({\n      before: '`',\n      after: '`',\n    });\n    this.editor?.focus();\n  }\n\n  applyCodeBlock() {\n    this.editor?.executeSelectionEdits({\n      before: '```javascript\\n',\n      after: '\\n```',\n    });\n    this.editor?.focus();\n  }\n}\n\n    \n\n    \n        \n  {{ staticLabel }}\n  \n    {{ floatingLabel }}\n    \n    {{ ngControl.control?.errors | validationError }}\n    {{ hint }}\n   -->\n  \n    Editor\n    Preview\n  \n  \n  \n  \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./textarea.component.scss\n                \n                // ::ng-deep {\n//   .line-numbers {\n//     width: 25px !important;\n//   }\n// }\n\n:host {\n  display: block;\n  color: var(--color-text);\n}\n\n.form-field {\n  padding: 1rem 0 0 0;\n  border: 1px solid var(--color-input-border);\n  background-color: var(--color-input-background);\n  border-radius: var(--border-radius);\n\n  .switch {\n    margin-bottom: 1em;\n    margin-left: 1em;\n\n    &>* {\n      opacity: 0.5;\n\n      &:not(:last-child) {\n        margin-right: 1em;\n      }\n\n      &.active {\n        opacity: 1;\n      }\n    }\n  }\n\n  .preview {\n    overflow: auto;\n    max-height: 500px;\n    padding: 0 1em;\n  }\n}\n\n.preview ::ng-deep {\n  h1 {\n    font-size: 2em;\n  }\n\n  h2 {\n    font-size: 1.8em;\n  }\n\n  h3 {\n    font-size: 1.6em;\n  }\n\n  h4 {\n    font-size: 1.4em;\n  }\n\n  h5 {\n    font-size: 1.2em;\n  }\n\n  h6 {\n    font-size: 1em;\n  }\n\n  hr {\n    margin: 1rem 0;\n    opacity: 0.5;\n  }\n\n  blockquote {\n    display: inline-block;\n    padding-left: 1rem;\n    border-left: 2px solid var(--color-secondary-200);\n  }\n\n  ul,\n  ol,\n  menu {\n    padding-left: 40px;\n    margin: 10px 0;\n    list-style: initial;\n  }\n\n  ol {\n    list-style: decimal;\n  }\n\n  a {\n    color: var(--color-purple-300);\n    text-decoration: underline;\n  }\n\n  code {\n    display: inline-block;\n    padding: 0.2rem 0.5rem;\n    background-color: var(--color-secondary-600);\n    border-radius: 2px;\n  }\n\n  table {\n    td, th {\n      padding: 0.5rem;\n      border: 0.1rem solid var(--color-secondary-600);\n    }\n  }\n\n  .emoji {\n    display: inline-block;\n  }\n}\n\n.tools {\n  display: flex;\n  padding: 1rem;\n\n  .tool {\n    display: block;\n    padding: 0.5rem;\n    border-radius: 3px;\n    cursor: pointer;\n    transition: background-color .2s ease;\n\n    &:hover {\n      background-color: var(--color-secondary-700);\n    }\n\n    &:not(:last-child) {\n      margin-right: 0.1rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ staticLabel }}      {{ floatingLabel }}        {{ ngControl.control?.errors | validationError }}    {{ hint }}   -->      Editor    Preview                                                                                                                                                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextareaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpperNavigationComponent.html":{"url":"components/UpperNavigationComponent.html","title":"component - UpperNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpperNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/upper-navigation/upper-navigation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-upper-navigation\n            \n\n            \n                styleUrls\n                ./upper-navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./upper-navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _isButtonDisabled\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                faCog\n                            \n                            \n                                faSignOut\n                            \n                            \n                                faUser\n                            \n                            \n                                openBelow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeProfile\n                            \n                            \n                                createNewTask\n                            \n                            \n                                    Public\n                                isButtonDisabled\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openProfile\n                            \n                            \n                                    Public\n                                toggleProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, taskService: TaskService, workspaceService: WorkspaceService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTask\n                        \n                    \n                \n            \n            \n                \ncreateNewTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isButtonDisabled\n                        \n                    \n                \n            \n            \n                \n                    \n                    isButtonDisabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _isButtonDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCog\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faSignOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faSignOut\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faUser\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openBelow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('openBelow')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { faAngleDown, faCog, faSignOut, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { TaskService } from '@tasks/services/task.service';\nimport { fromEvent, map, skip, take } from 'rxjs';\n\n@Component({\n  selector: 'app-upper-navigation',\n  templateUrl: './upper-navigation.component.html',\n  styleUrls: ['./upper-navigation.component.scss'],\n})\nexport class UpperNavigationComponent implements OnInit {\n  constructor(\n    private dialogService: DialogService,\n    private taskService: TaskService,\n    private workspaceService: WorkspaceService,\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.workspaceService.list().pipe(\n      map((workspaces) => {\n        if (workspaces.length === 0) {\n          this._isButtonDisabled = false;\n        } else if (\n          workspaces.filter((workspace) => workspace.projectsWithPrivileges.length).length === 0\n        ) {\n          this._isButtonDisabled = false;\n        } else {\n          this._isButtonDisabled = true;\n        }\n      }),\n    );\n  }\n\n  @ViewChild('openBelow') openBelow!: ElementRef;\n\n  faAngleDown = faAngleDown;\n  faUser = faUser;\n  faCog = faCog;\n  faSignOut = faSignOut;\n\n  public active: boolean = false;\n  public _isButtonDisabled = true;\n\n  createNewTask() {\n    this.taskService.openCreateNewTaskDialog().subscribe(() => {\n      location.reload();\n    });\n  }\n\n  logout() {\n    this.authService.logout().subscribe(() => {\n      this.router.navigate(['/', 'auth', 'login']);\n    });\n  }\n\n  public isButtonDisabled() {\n    return this._isButtonDisabled;\n  }\n  public openProfile() {\n    this.active = true;\n    fromEvent(document, 'click')\n      .pipe(skip(1), take(1))\n      .subscribe(() => {\n        this.closeProfile();\n      });\n  }\n\n  public closeProfile() {\n    this.active = false;\n  }\n  public toggleProfile() {\n    if (!this.active) {\n      this.openProfile();\n    } else {\n      this.closeProfile();\n    }\n  }\n}\n\n    \n\n    \n        New task\n\n\n\n  \n  \n    \n    \n    \n      \n    \n  \n\n\n  \n    \n      \n        \n        Profile\n      \n    \n    \n      \n        \n        Settings\n      \n    \n    \n      \n        \n        Log out\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./upper-navigation.component.scss\n                \n                :host {\n  display: flex;\n  width: 100%;\n  height: 62px;\n\n  // flex-shrink: 0;\n  align-items: center;\n  background-color: var(--color-secondary-800);\n  color: var(--color-text);\n}\n\napp-button {\n  align-items: center;\n  justify-content: center;\n  padding: 10px 20px;\n  margin: 0;\n}\n\n.flex-end-position {\n  position: absolute;\n  right: 0;\n  display: flex;\n  height: 62px;\n\n  .profile {\n    width: 200px;\n\n    .open-below {\n      position: absolute;\n      right: 0;\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 10px;\n      cursor: pointer;\n\n      app-icon {\n        display: flex;\n        align-items: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n  }\n}\n\n.options {\n  position: absolute;\n  z-index: 2;\n  top: 62px;\n  right: 0;\n  display: none;\n  width: 200px;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    background-color: var(--color-secondary-600);\n    color: var(--color-text);\n\n    a {\n      position: relative;\n      display: flex;\n      align-items: center;\n      padding: 12px 10px;\n      border-radius: var(--border-radius);\n      color: var(--color-text);\n      transition: background-color 0.2s ease-in-out;\n\n      app-icon {\n        margin-right: 1rem;\n        margin-left: 2rem;\n      }\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'New task                                                        Profile                                    Settings                                    Log out            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'UpperNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMyself\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMyself\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyself()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(modUser: ModifyUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/user.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modUser\n                                    \n                                                ModifyUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ModifyUser } from '@auth/interfaces/user.interface';\nimport { ApiService } from '@main/services/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private apiService: ApiService) {}\n\n  public update(modUser: ModifyUser): Observable {\n    return this.apiService.put(`/auth/edit`, { body: modUser });\n  }\n\n  public getMyself() {\n    return this.apiService.get(`/auth/me`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserSession.html":{"url":"interfaces/UserSession.html","title":"interface - UserSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/interfaces/session.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            geoip\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ip\n                                        \n                                \n                                \n                                        \n                                            lastUsed\n                                        \n                                \n                                \n                                        \n                                            remembered\n                                        \n                                \n                                \n                                        \n                                            userAgent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geoip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geoip:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastUsed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remembered\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remembered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userAgent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserSession {\n  id: number;\n  userAgent: string;\n  ip: string;\n  lastUsed: number;\n  remembered: boolean;\n  geoip: {\n    city: string;\n    country: string;\n  };\n  current: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserUtils.html":{"url":"classes/UserUtils.html","title":"class - UserUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/classes/user.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getColorById\n                            \n                            \n                                    Static\n                                getColorByUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getColorById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/classes/user.class.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getColorByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/classes/user.class.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Random } from '@main/classes/random.class';\nimport * as Color from 'color';\n\nexport class UserUtils {\n  public static getColorById(id: number): Color {\n    const random = new Random(id);\n    const randomNumber = random.random();\n    const hue = randomNumber * 255;\n    return Color.hsl(hue, 95, 41);\n  }\n\n  /**\n   * @unsupported\n   */\n  public static getColorByUsername(username: string): Color {\n    let numberRepresentation = username\n      .split('')\n      .map((c) => c.charCodeAt(0))\n      .reduce((sum, n) => sum * 10 ** 6 + n, 0);\n\n    // This requires some tweaks to make the number smaller.\n    numberRepresentation = numberRepresentation / 10000000;\n\n    const random = new Random(numberRepresentation);\n    const randomNumber = random.random();\n    const hue = randomNumber * 255;\n    return Color.hsl(hue, 95, 41);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserWithPrivileges.html":{"url":"interfaces/UserWithPrivileges.html","title":"interface - UserWithPrivileges","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserWithPrivileges\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            privileges\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        privileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        privileges:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/utils.class.ts\n        \n\n\n            \n                Description\n            \n            \n                Utilities class with some useful methods not available in any libraries.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                has\n                            \n                            \n                                    Static\n                                isLetter\n                            \n                            \n                                    Static\n                                regexIndexOf\n                            \n                            \n                                    Static\n                                snakeCase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        has\n                        \n                    \n                \n            \n            \n                \n                    \n                    has(object: any, keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:45\n                \n            \n\n\n            \n                \n                    Check if object has all the properties from array\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to check\n\n                                    \n                                \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        keys to search for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if object has all of the specified properties, false otherwise.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isLetter\n                        \n                    \n                \n            \n            \n                \n                    \n                    isLetter(char: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:59\n                \n            \n\n\n            \n                \n                    Checks if passed character is a letter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    char\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Character to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        regexIndexOf\n                        \n                    \n                \n            \n            \n                \n                    \n                    regexIndexOf(string: string, regex: RegExp, startPos: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:12\n                \n            \n\n\n            \n                \n                    Function to find first occurrence of regex in string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        String to search in\n\n                                    \n                                \n                                \n                                    regex\n                                    \n                                            RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Regex to search for\n\n                                    \n                                \n                                \n                                    startPos\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Optional starting position in the string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The index of the first match\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        snakeCase\n                        \n                    \n                \n            \n            \n                \n                    \n                    snakeCase(inputString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:22\n                \n            \n\n\n            \n                \n                    Converts string from camelCase and PascalCase to snake_case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String to convert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string in snake_case\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Utils {\n  /**\n   * Function to find first occurrence of regex in string\n   * @param string String to search in\n   * @param regex Regex to search for\n   * @param startPos Optional starting position in the string\n   * @returns The index of the first match\n   */\n  public static regexIndexOf(string: string, regex: RegExp, startPos: number = 0) {\n    var indexOf = string.substring(startPos).search(regex);\n    return indexOf >= 0 ? indexOf + startPos : indexOf;\n  }\n\n  /**\n   * Converts string from camelCase and PascalCase to snake_case\n   * @param inputString String to convert\n   * @returns string in snake_case\n   */\n  public static snakeCase(inputString: string) {\n    return inputString\n      .split('')\n      .map((character, index) => {\n        if (Utils.isLetter(character) && character == character.toUpperCase()) {\n          if (index > 0) {\n            return '_' + character.toLowerCase();\n          } else {\n            return character.toLowerCase();\n          }\n        } else {\n          return character;\n        }\n      })\n      .join('');\n  }\n\n  /**\n   * Check if object has all the properties from array\n   * @param object Object to check\n   * @param keys keys to search for\n   * @returns true if object has all of the specified properties, false otherwise.\n   */\n  public static has(object: any, keys: string[]) {\n    for (const key of keys) {\n      if (!object.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Checks if passed character is a letter\n   * @param char Character to check\n   * @returns\n   */\n  public static isLetter(char: String) {\n    if (char.length > 1) return false;\n    return (char >= 'A' && char = 'a' && char \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationError.html":{"url":"interfaces/ValidationError.html","title":"interface - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/validation-error.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Validation error interface. Used with form controls to specify what validators returned errors.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Human readable error message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of the error. For example 'required', 'minlength', 'maxlength', 'pattern', 'email', etc.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ValidationError {\n  /**\n   * Type of the error. For example 'required', 'minlength', 'maxlength', 'pattern', 'email', etc.\n   */\n  type: string;\n  /**\n   * Human readable error message.\n   */\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ValidationErrorPipe.html":{"url":"pipes/ValidationErrorPipe.html","title":"pipe - ValidationErrorPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ValidationErrorPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/_main/pipes/validation-error/validation-error.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe to transform validation errors to a human readable string\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        validationError\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/pipes/validation-error/validation-error.pipe.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe value to be transformed\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        message from validation error\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe to transform validation errors to a human readable string\n */\n@Pipe({\n  name: 'validationError',\n})\nexport class ValidationErrorPipe implements PipeTransform {\n  /**\n   *\n   * @param value - The value to be transformed\n   * @returns message from validation error\n   */\n  transform(value: any): any {\n    return value?.message || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ViewContainerDirective.html":{"url":"directives/ViewContainerDirective.html","title":"directive - ViewContainerDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ViewContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/view-container.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [view-container]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/directives/view-container.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        viewContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewContainerRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/directives/view-container.directive.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[view-container]',\n})\nexport class ViewContainerDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewOptionsComponent.html":{"url":"components/ViewOptionsComponent.html","title":"component - ViewOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/view-options/view-options.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-options\n            \n\n            \n                styleUrls\n                ./view-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./view-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                penToSquare\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                project\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/view-options/view-options.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/view-options/view-options.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faFilter\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        penToSquare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPenToSquare\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { faFilter, faPenToSquare } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-view-options',\n  templateUrl: './view-options.component.html',\n  styleUrls: ['./view-options.component.scss'],\n})\nexport class ViewOptionsComponent {\n  penToSquare = faPenToSquare;\n  filter = faFilter;\n\n  public workspaceId: number;\n  public projectId: number;\n\n  @Input()\n  project!: Project;\n\n  @Input()\n  title!: string;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{title}}\n      {{title}} {{project.name}}\n    \n    \n      \n        General\n      \n      \n        Members\n      \n    \n    \n      \n        General\n      \n      \n        Members\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./view-options.component.scss\n                \n                :host {\n  width: 100%;\n  align-items: center;\n  color: var(--color-text);\n}\n\nsection {\n  position: relative;\n  display: flex;\n  margin-bottom: 1rem;\n\n  .tabs {\n    display: flex;\n\n    .project-name {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      margin-right: 10px;\n    }\n\n    a {\n      position: relative;\n      display: block;\n      padding: 10px;\n      margin-right: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      &.active {\n        color: var(--color-text);\n\n        &::before {\n          position: absolute;\n          bottom: 10px;\n          left: 5px;\n          width: calc(100% - 10px);\n          height: 2px;\n          background-color: var(--color-primary-700);\n          border-radius: var(--border-radius);\n          content: '';\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{title}}      {{title}} {{project.name}}                      General                    Members                            General                    Members            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewOptionsComponent-1.html":{"url":"components/ViewOptionsComponent-1.html","title":"component - ViewOptionsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/view-options/view-options.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-options\n            \n\n            \n                styleUrls\n                ./view-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./view-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faGithub\n                            \n                            \n                                filter\n                            \n                            \n                                    Public\n                                isFiltersOpen\n                            \n                            \n                                penToSquare\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                filtersControl\n                            \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filtersControl\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faGithub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGithub\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faFilter\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isFiltersOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        penToSquare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPenToSquare\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faFilter, faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport { Filter } from '@main/interfaces/filters.interface';\n\n@Component({\n  selector: 'app-view-options',\n  templateUrl: './view-options.component.html',\n  styleUrls: ['./view-options.component.scss'],\n})\nexport class ViewOptionsComponent {\n  penToSquare = faPenToSquare;\n  faGithub = faGithub;\n  filter = faFilter;\n\n  public workspaceId: number;\n  public projectId: number;\n\n  @Input()\n  project!: Project;\n\n  @Input()\n  filters: Filter[] = [];\n\n  @Input()\n  public filtersControl = new FormControl();\n\n  public isFiltersOpen = false;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{project.name}}\n      \n        \n      \n    \n    \n      Board\n    \n    \n      List\n    \n    \n      Schedule\n    \n    \n      Calendar\n    \n    \n      Backlog\n    \n  \n  \n    \n      \n      Edit\n    \n    \n      \n      Filters\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./view-options.component.scss\n                \n                :host {\n  width: 100%;\n  align-items: center;\n  color: var(--color-text);\n}\n\nsection {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n\n  .tabs {\n    display: flex;\n\n    .project-name {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      margin-right: 10px;\n\n      a {\n        padding: 0;\n        margin-left: 1rem;\n      }\n    }\n\n    a {\n      position: relative;\n      display: block;\n      padding: 10px 10px 15px 10px;\n      margin-right: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      &.active {\n        color: var(--color-text);\n\n        &::before {\n          position: absolute;\n          bottom: 10px;\n          left: 5px;\n          width: calc(100% - 10px);\n          height: 2px;\n          background-color: var(--color-primary-700);\n          border-radius: var(--border-radius);\n          content: '';\n        }\n      }\n    }\n  }\n\n  .options {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options-element {\n      position: relative;\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      app-icon {\n        display: flex;\n        align-items: center;\n        padding-right: 10px;\n      }\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      .overlay {\n        position: absolute;\n        z-index: 150;\n        right: 0;\n        bottom: 0;\n        width: 200px;\n        padding: 1rem;\n        background-color: var(--color-secondary-600);\n        border-radius: var(--border-radius);\n        transform: translateY(100%);\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{project.name}}                                  Board              List              Schedule              Calendar              Backlog                        Edit                    Filters                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewOptionsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Workspace.html":{"url":"interfaces/Workspace.html","title":"interface - Workspace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Workspace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/workspace.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Main workspace (projects/spaces grouping entity) interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            projectsWithPrivileges\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectsWithPrivileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectsWithPrivileges:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Project } from './project.interface';\n/**\n * Main workspace (projects/spaces grouping entity) interface\n */\nexport interface Workspace {\n  /**\n   * Workspace ID\n   */\n  id: number;\n  /**\n   * Workspace name\n   */\n  name: string;\n\n  projectsWithPrivileges: {\n    project: Project;\n    privileges: number;\n  }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkspaceService.html":{"url":"injectables/WorkspaceService.html","title":"injectable - WorkspaceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkspaceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/workspace.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Workspaces management service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                update\n                            \n                            \n                                    Private\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/workspace.service.ts:14\n                            \n                        \n\n                \n                    \n                            Default constructor with ApiService dependency.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Api service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:62\n                \n            \n\n\n            \n                \n                    Creates a new workspace.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace to modify\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:36\n                \n            \n\n\n            \n                \n                    Deletes the workspace by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the workspace to delete from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:27\n                \n            \n\n\n            \n                \n                    Gets a workspace by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the workspace to get from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:53\n                \n            \n\n\n            \n                \n                    Lists all available workspaces.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:45\n                \n            \n\n\n            \n                \n                    Updates a workspace.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace object to update in the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(identifier: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ServiceValidator({DELETE: undefined, GET: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        list$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/services/workspace.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ServiceValidator } from '@main/decorators/service-validator.decorator';\nimport { Observable, Subject } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Workspace } from '../interfaces/workspace.interface';\n\n/**\n * Workspaces management service\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class WorkspaceService {\n  list$ = new Subject();\n\n  /**\n   * Default constructor with `ApiService` dependency.\n   * @param apiService Api service\n   */\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Gets a workspace by its ID.\n   * @param id identifier of the workspace to get from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(id: number): Observable {\n    return this.apiService.get(`/workspace/${id}`);\n  }\n\n  /**\n   * Deletes the workspace by its ID.\n   * @param id identifier of the workspace to delete from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(id: number): Observable {\n    return this.apiService.delete(`/workspace/${id}`).pipe(this.validate('DELETE'));\n  }\n\n  /**\n   * Updates a workspace.\n   * @param workspace workspace object to update in the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public update(workspace: Workspace): Observable {\n    return this.apiService.put(`/workspace/${workspace.id}`, { body: workspace });\n  }\n\n  /**\n   * Lists all available workspaces.\n   * @returns Request observable, which completes when request is finished\n   */\n  public list(): Observable {\n    return this.apiService.get(`/workspace`);\n  }\n\n  /**\n   * Creates a new workspace.\n   * @param workspace workspace to modify\n   * @returns Request observable, which completes when request is finished\n   */\n  public create(workspace: Workspace): Observable {\n    return this.apiService.post(`/workspace`, { body: workspace });\n  }\n\n  @ServiceValidator({\n    DELETE: {\n      400: $localize`Workspace is not empty. Only empty workspaces can be deleted.`,\n    },\n    GET: {\n      404: $localize`Workspace with this ID does not exist.`,\n    },\n  })\n  private validate(identifier: string): any {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkspacesListPage.html":{"url":"components/WorkspacesListPage.html","title":"component - WorkspacesListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WorkspacesListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts\n\n\n\n    \n        Description\n    \n    \n        Workspaces list page component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-workspaces-list-page\n            \n\n            \n                styleUrls\n                ./workspaces-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./workspaces-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                faPlus\n                            \n                            \n                                    Public\n                                    Optional\n                                workspaces$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteWorkspace\n                            \n                            \n                                editWorkspace\n                            \n                            \n                                loadWorkspaces\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openWorkspace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:20\n                            \n                        \n\n                \n                    \n                            Default constructor with dependency injection.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteWorkspace\n                        \n                    \n                \n            \n            \n                \ndeleteWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:62\n                \n            \n\n\n            \n                \n                    Shows an alert dialog to confirm the workspace deletion and deletes the workspace if confirmed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editWorkspace\n                        \n                    \n                \n            \n            \n                \neditWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:75\n                \n            \n\n\n            \n                \n                    Navigates to the workspace edit page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadWorkspaces\n                        \n                    \n                \n            \n            \n                \nloadWorkspaces()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:54\n                \n            \n\n\n            \n                \n                    Loads the workspaces list from the workspace service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:47\n                \n            \n\n\n            \n                \n                    Lifecycle hook to load workspaces at the start of the page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWorkspace\n                        \n                    \n                \n            \n            \n                \nopenWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:37\n                        \n                    \n\n            \n                \n                    Plus icon to display on the add button\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        workspaces$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:42\n                        \n                    \n\n            \n                \n                    Workspaces list observable to use in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Observable } from 'rxjs';\nimport { Page } from 'src/app/_main/decorators/page.decorator';\nimport { DialogService } from 'src/app/_main/services/dialog.service';\nimport { Workspace } from '../../interfaces/workspace.interface';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Workspaces list page component.\n */\n@Page()\n@Component({\n  selector: 'app-workspaces-list-page',\n  templateUrl: './workspaces-list.page.html',\n  styleUrls: ['./workspaces-list.page.scss'],\n})\nexport class WorkspacesListPage implements OnInit {\n  /**\n   * Default constructor with dependency injection.\n   * @param workspaceService Workspace service\n   * @param dialogService Dialog service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private router: Router,\n  ) {}\n\n  /**\n   * Plus icon to display on the add button\n   */\n  public faPlus = faPlus;\n\n  /**\n   * Workspaces list observable to use in the template.\n   */\n  public workspaces$?: Observable;\n\n  /**\n   * Lifecycle hook to load workspaces at the start of the page.\n   */\n  ngOnInit() {\n    this.loadWorkspaces();\n  }\n\n  /**\n   * Loads the workspaces list from the workspace service.\n   */\n  loadWorkspaces() {\n    this.workspaces$ = this.workspaceService.list();\n  }\n\n  /**\n   * Shows an alert dialog to confirm the workspace deletion and deletes the workspace if confirmed.\n   * @param workspace Workspace to delete\n   */\n  deleteWorkspace(workspace: Workspace) {\n    this.dialogService.confirmWorkspaceDelete(workspace).subscribe(() => {\n      this.workspaceService.delete(workspace.id).subscribe(() => {\n        // this.loadWorkspaces();\n        window.location.reload();\n      });\n    });\n  }\n\n  /**\n   * Navigates to the workspace edit page.\n   * @param workspace Workspace to edit\n   */\n  editWorkspace(workspace: Workspace) {\n    this.router.navigate(['/', workspace.id, 'edit']);\n  }\n\n  openWorkspace(workspace: Workspace) {\n    this.router.navigate(['/', workspace.id]);\n  }\n}\n\n    \n\n    \n        \n\n  Workspaces\n  New workspace\n\n\n\n\n\n  \n  \n    Name\n     {{ row.name }} \n  \n\n  \n  \n    Statistics\n     - \n  \n\n  \n  \n    Last update\n     - \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Edit workspace\n        \n        \n          Delete workspace\n        \n      \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./workspaces-list.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Workspaces  New workspace        Name     {{ row.name }}           Statistics     -           Last update     -                                                           Edit workspace                          Delete workspace                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'InputIssueComponent', 'selector': 'input-issue'},{'name': 'InputPullRequestComponent', 'selector': 'input-pull-request'},{'name': 'InputTaskPropertyComponent', 'selector': 'input-task-property'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'WorkspacesListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.0\n        \n            @angular/cdk : ^13.3.0\n        \n            @angular/common : ~13.2.0\n        \n            @angular/compiler : ~13.2.0\n        \n            @angular/core : ~13.2.0\n        \n            @angular/forms : ~13.2.0\n        \n            @angular/material : ^13.3.0\n        \n            @angular/platform-browser : ~13.2.0\n        \n            @angular/platform-browser-dynamic : ~13.2.0\n        \n            @angular/router : ~13.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @fortawesome/angular-fontawesome : ^0.10.2\n        \n            @fortawesome/fontawesome-svg-core : ^6.1.0\n        \n            @fortawesome/free-brands-svg-icons : ^6.1.0\n        \n            @fortawesome/free-regular-svg-icons : ^6.1.0\n        \n            @fortawesome/free-solid-svg-icons : ^6.1.0\n        \n            @ngneat/until-destroy : ^9.2.1\n        \n            @tabuckner/material-dayjs-adapter : ^1.1.0\n        \n            color : ^4.2.3\n        \n            concurrently : ^7.1.0\n        \n            dayjs : ^1.11.2\n        \n            emoji-js : ^3.7.0\n        \n            highlight.js : ^11.5.1\n        \n            lodash-es : ^4.17.21\n        \n            marked : ^4.0.17\n        \n            miragejs : ^0.1.43\n        \n            monaco-editor : ^0.33.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            ua-parser-js : ^1.0.2\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AlertDialogVariant   (src/.../alert.dialog.ts)\n                        \n                        \n                            ControlType   (src/.../control-type.helper.ts)\n                        \n                        \n                            DialogOutlet   (src/.../dialog.service.ts)\n                        \n                        \n                            RegisterStage   (src/.../register.page.ts)\n                        \n                        \n                            SelectionEditOperationType   (src/.../selection-edit.plugin.ts)\n                        \n                        \n                            SubTaskType   (src/.../task-type.enum.ts)\n                        \n                        \n                            TaskDialogVariant   (src/.../task.dialog.ts)\n                        \n                        \n                            TaskPriority   (src/.../task-priority.enum.ts)\n                        \n                        \n                            TaskType   (src/.../task-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/dialogs/alert/alert.dialog.ts\n    \n        \n            \n                \n                    \n                        \n                        AlertDialogVariant\n                    \n                \n                    \n                        \n                            Type of the dialog variant. Used to specify what dialog styling should be used.\n\n                        \n                    \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n                        \n                            \n                                 IMPORTANT\n                            \n                        \n                        \n                            \n                                Value : important\n                            \n                        \n            \n        \n\n    src/stories/helpers/control-type.helper.ts\n    \n        \n            \n                \n                    \n                        \n                        ControlType\n                    \n                \n                        \n                            \n                                 SELECT\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                Value : boolean\n                            \n                        \n                        \n                            \n                                 OBJECT\n                            \n                        \n                        \n                            \n                                Value : object\n                            \n                        \n            \n        \n\n    src/app/_main/services/dialog.service.ts\n    \n        \n            \n                \n                    \n                        \n                        DialogOutlet\n                    \n                \n                        \n                            \n                                 CONTENT_RIGHT\n                            \n                        \n                        \n                            \n                                Value : CONTENT_RIGHT\n                            \n                        \n            \n        \n\n    src/app/auth/pages/register/register.page.ts\n    \n        \n            \n                \n                    \n                        \n                        RegisterStage\n                    \n                \n                        \n                            \n                                 IMPORTANT_DATA\n                            \n                        \n                        \n                            \n                                 PERSONAL_DATA\n                            \n                        \n            \n        \n\n    src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts\n    \n        \n            \n                \n                    \n                        \n                        SelectionEditOperationType\n                    \n                \n                        \n                            \n                                 before\n                            \n                        \n                        \n                            \n                                Value : BEFORE\n                            \n                        \n                        \n                            \n                                 after\n                            \n                        \n                        \n                            \n                                Value : AFTER\n                            \n                        \n                        \n                            \n                                 beforeEachLine\n                            \n                        \n                        \n                            \n                                Value : BEFORE_EACH_LINE\n                            \n                        \n                        \n                            \n                                 afterEachLine\n                            \n                        \n                        \n                            \n                                Value : AFTER_EACH_LINE\n                            \n                        \n            \n        \n\n    src/app/tasks/enums/task-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        SubTaskType\n                    \n                \n                        \n                            \n                                 SUBTASK\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TaskType\n                    \n                \n                        \n                            \n                                 TASK\n                            \n                        \n                        \n                            \n                                 USER_STORY\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 EPIC\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/tasks/dialogs/task/task.dialog.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDialogVariant\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n                        \n                            \n                                Value : edit\n                            \n                        \n            \n        \n\n    src/app/tasks/enums/task-priority.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskPriority\n                    \n                \n                        \n                            \n                                 HIGHEST\n                            \n                        \n                        \n                            \n                                Value : highest\n                            \n                        \n                        \n                            \n                                 HIGH\n                            \n                        \n                        \n                            \n                                Value : high\n                            \n                        \n                        \n                            \n                                 MEDIUM\n                            \n                        \n                        \n                            \n                                Value : medium\n                            \n                        \n                        \n                            \n                                 LOW\n                            \n                        \n                        \n                            \n                                Value : low\n                            \n                        \n                        \n                            \n                                 LOWEST\n                            \n                        \n                        \n                            \n                                Value : lowest\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            applyFilters   (src/.../apply-filters.operator.ts)\n                        \n                        \n                            buildPropsString   (src/.../component-template-decorator.function.ts)\n                        \n                        \n                            buildTemplate   (src/.../component-template-decorator.function.ts)\n                        \n                        \n                            catchResponse   (src/.../catch-response.operator.ts)\n                        \n                        \n                            combinePropsString   (src/.../component-template-decorator.function.ts)\n                        \n                        \n                            componentTemplateDecorator   (src/.../component-template-decorator.function.ts)\n                        \n                        \n                            Debug   (src/.../debug.decorator.ts)\n                        \n                        \n                            emailValidator   (src/.../email.validator.ts)\n                        \n                        \n                            expectToFail   (src/.../validator-testing.helper.ts)\n                        \n                        \n                            expectToPass   (src/.../validator-testing.helper.ts)\n                        \n                        \n                            extractPropsString   (src/.../component-template-decorator.function.ts)\n                        \n                        \n                            getAllProperties   (src/.../get-all-properties.function.ts)\n                        \n                        \n                            linkOverride   (src/.../link.override.ts)\n                        \n                        \n                            maxLengthValidator   (src/.../max-length.validator.ts)\n                        \n                        \n                            Page   (src/.../page.decorator.ts)\n                        \n                        \n                            passwordValidator   (src/.../password.validator.ts)\n                        \n                        \n                            requiredValidator   (src/.../required.validator.ts)\n                        \n                        \n                            sameAsValidator   (src/.../same-as.validator.ts)\n                        \n                        \n                            Service   (src/.../service.decorator.ts)\n                        \n                        \n                            ServiceValidator   (src/.../service-validator.decorator.ts)\n                        \n                        \n                            wrapWithDiv   (src/.../component-template-decorator.function.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/operators/apply-filters.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters(filters?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/stories/helpers/functions/component-template-decorator.function.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildPropsString\n                        \n                    \n                \n            \n            \n                \nbuildPropsString(props: Props)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Props\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildTemplate\n                        \n                    \n                \n            \n            \n                \nbuildTemplate(selector: string, content: string, propsString: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        combinePropsString\n                        \n                    \n                \n            \n            \n                \ncombinePropsString(...propsStrings: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    propsStrings\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentTemplateDecorator\n                        \n                    \n                \n            \n            \n                \ncomponentTemplateDecorator(props: Props, config: TemplateDecoratorConfig)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Props\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                TemplateDecoratorConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractPropsString\n                        \n                    \n                \n            \n            \n                \nextractPropsString(template: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wrapWithDiv\n                        \n                    \n                \n            \n            \n                \nwrapWithDiv(template: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/_main/operators/catch-response.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        catchResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \ncatchResponse(message: string, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/debug.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Debug\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \nDebug()\n                \n            \n\n\n\n\n        \n    \n    src/app/_main/validators/email.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emailValidator\n                        \n                    \n                \n            \n            \n                \nemailValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if email is valid\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/tests/helpers/validator-testing.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        expectToFail\n                        \n                    \n                \n            \n            \n                \nexpectToFail(val: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expectToPass\n                        \n                    \n                \n            \n            \n                \nexpectToPass(val: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/stories/helpers/functions/get-all-properties.function.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAllProperties\n                        \n                    \n                \n            \n            \n                \ngetAllProperties(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/_main/libs/marked/overrides/link.override.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        linkOverride\n                        \n                    \n                \n            \n            \n                \nlinkOverride(renderer: Renderer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renderer\n                                    \n                                            Renderer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/_main/validators/max-length.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        maxLengthValidator\n                        \n                    \n                \n            \n            \n                \nmaxLengthValidator(length: number)\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if the length is not greater than specyfic number\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/page.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Page\n                        \n                    \n                \n            \n            \n                \nPage()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to mark component or directive as a page.\n(@)Page()\n(@)Component({\n  selector: 'app-example-page',\n  templateUrl: './example.page.html',\n  styleUrls: ['./example.page.scss'],\n})\nexport class CreateWorkspacePage { ... }\n\n                \n            \n        \n    \n    src/app/_main/validators/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if password is valid\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/validators/required.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        requiredValidator\n                        \n                    \n                \n            \n            \n                \nrequiredValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if value was provided\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/validators/same-as.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sameAsValidator\n                        \n                    \n                \n            \n            \n                \nsameAsValidator(compareWith: string, message: string)\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if password is valid\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    compareWith\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/service.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Service\n                        \n                    \n                \n            \n            \n                \nService()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to mark class as a service and store theirs instances in global variable.\n\n\n                \n            \n        \n    \n    src/app/_main/decorators/service-validator.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ServiceValidator\n                        \n                    \n                \n            \n            \n                \nServiceValidator(errorValidationTree: ErrorValidationTree)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorValidationTree\n                                    \n                                                ErrorValidationTree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWorkflow - Clean and powerful work management app.\n\n\n  \n  \n  Workflow is a task management app with multiple independent modules to speed up work.\n    tasks / mail / messages\n  \n\n\n\n  DEVELOPMENT SERVER\n  \n\n\n\n  \n  \n  \n  \n\n\n\n\n\nGetting started\nAt first install node.js and npm from https://nodejs.org/en/. In the second step run command:\nnpm installAnd you are ready to go. It's highly recommended to use yarn instead of npm.\nnpm install -g yarn\nyarn install\n\nDevelopment server\nFor a dev server run:\nyarn startNavigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\n\n\nBuild\nTo build the project run:\nyarn buildThe build artifacts will be stored in the dist/ directory.\n\n\nRunning unit tests\nTo execute the unit tests via Karma run:\nyarn start:test\n\nRunning end-to-end tests\nTo execute the end-to-end tests via Cypress run:\nyarn e2e\n\nBuilding documentation\nTo build documentation via compodoc run:\nyarn start:docsAPI Documentation and repository\nEndpoints documentation is shared using Swagger library here. The repository is in other GitHub account here.\nRecommended Versions\nnode - 16.13.0\nyarn - 1.22.17\nAngular CLI - 13.2.5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 2-Clause License\nCopyright (c) 2022, [Aleksandra Serba, Marcin Czerniak, Bartosz Wawrzyniak, Adrian Antkowiak]\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_providers\n\n\n\ncluster_EmailsModule\n\n\n\ncluster_EmailsModule_imports\n\n\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nMainModule->AuthModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nMainModule->DashboardModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nMainModule->SettingsModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nMainModule->TasksModule\n\n\n\n\n\nChangePasswordPage\n\nChangePasswordPage\n\nAuthModule -->\n\nChangePasswordPage->AuthModule\n\n\n\n\n\nDeleteAccountPage\n\nDeleteAccountPage\n\nAuthModule -->\n\nDeleteAccountPage->AuthModule\n\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\nAuthModule -->\n\nForgotPasswordPage->AuthModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAuthModule -->\n\nLoginPage->AuthModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nAuthModule -->\n\nRegisterPage->AuthModule\n\n\n\n\n\nRestoreAccountPage\n\nRestoreAccountPage\n\nAuthModule -->\n\nRestoreAccountPage->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAddMemberDialog\n\nAddMemberDialog\n\nDashboardModule -->\n\nAddMemberDialog->DashboardModule\n\n\n\n\n\nCreateProjectMembersPage\n\nCreateProjectMembersPage\n\nDashboardModule -->\n\nCreateProjectMembersPage->DashboardModule\n\n\n\n\n\nCreateProjectPage\n\nCreateProjectPage\n\nDashboardModule -->\n\nCreateProjectPage->DashboardModule\n\n\n\n\n\nCreateWorkspacePage\n\nCreateWorkspacePage\n\nDashboardModule -->\n\nCreateWorkspacePage->DashboardModule\n\n\n\n\n\nEditProjectMembersPage\n\nEditProjectMembersPage\n\nDashboardModule -->\n\nEditProjectMembersPage->DashboardModule\n\n\n\n\n\nEditProjectPage\n\nEditProjectPage\n\nDashboardModule -->\n\nEditProjectPage->DashboardModule\n\n\n\n\n\nEditWorkspacePage\n\nEditWorkspacePage\n\nDashboardModule -->\n\nEditWorkspacePage->DashboardModule\n\n\n\n\n\nIntegrationGithubComponent\n\nIntegrationGithubComponent\n\nDashboardModule -->\n\nIntegrationGithubComponent->DashboardModule\n\n\n\n\n\nMemberListComponent\n\nMemberListComponent\n\nDashboardModule -->\n\nMemberListComponent->DashboardModule\n\n\n\n\n\nProjectsListPage\n\nProjectsListPage\n\nDashboardModule -->\n\nProjectsListPage->DashboardModule\n\n\n\n\n\nViewOptionsComponent\n\nViewOptionsComponent\n\nDashboardModule -->\n\nViewOptionsComponent->DashboardModule\n\n\n\n\n\nWorkspacesListPage\n\nWorkspacesListPage\n\nDashboardModule -->\n\nWorkspacesListPage->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nGitIntegrationService\n\nGitIntegrationService\n\nDashboardModule -->\n\nGitIntegrationService->DashboardModule\n\n\n\n\n\nEmailsRoutingModule\n\nEmailsRoutingModule\n\n\n\nEmailsModule\n\nEmailsModule\n\nEmailsModule -->\n\nEmailsRoutingModule->EmailsModule\n\n\n\n\n\nMessagesRoutingModule\n\nMessagesRoutingModule\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nMessagesRoutingModule->MessagesModule\n\n\n\n\n\nIntegrationEntryComponent\n\nIntegrationEntryComponent\n\nSettingsModule -->\n\nIntegrationEntryComponent->SettingsModule\n\n\n\n\n\nListGroupComponent\n\nListGroupComponent\n\nSettingsModule -->\n\nListGroupComponent->SettingsModule\n\n\n\n\n\nSettingsAccountPage\n\nSettingsAccountPage\n\nSettingsModule -->\n\nSettingsAccountPage->SettingsModule\n\n\n\n\n\nSettingsIntegrationsPage\n\nSettingsIntegrationsPage\n\nSettingsModule -->\n\nSettingsIntegrationsPage->SettingsModule\n\n\n\n\n\nSettingsLocalizationPage\n\nSettingsLocalizationPage\n\nSettingsModule -->\n\nSettingsLocalizationPage->SettingsModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\nSettingsModule -->\n\nSettingsPage->SettingsModule\n\n\n\n\n\nSettingsSessionsPage\n\nSettingsSessionsPage\n\nSettingsModule -->\n\nSettingsSessionsPage->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\nBoardPage\n\nBoardPage\n\nTasksModule -->\n\nBoardPage->TasksModule\n\n\n\n\n\nBoardTaskComponent\n\nBoardTaskComponent\n\nTasksModule -->\n\nBoardTaskComponent->TasksModule\n\n\n\n\n\nInputAssigneeComponent\n\nInputAssigneeComponent\n\nTasksModule -->\n\nInputAssigneeComponent->TasksModule\n\n\n\n\n\nInputIssueComponent\n\nInputIssueComponent\n\nTasksModule -->\n\nInputIssueComponent->TasksModule\n\n\n\n\n\nInputPullRequestComponent\n\nInputPullRequestComponent\n\nTasksModule -->\n\nInputPullRequestComponent->TasksModule\n\n\n\n\n\nInputTaskPropertyComponent\n\nInputTaskPropertyComponent\n\nTasksModule -->\n\nInputTaskPropertyComponent->TasksModule\n\n\n\n\n\nSchedulePage\n\nSchedulePage\n\nTasksModule -->\n\nSchedulePage->TasksModule\n\n\n\n\n\nStatusColorPipe\n\nStatusColorPipe\n\nTasksModule -->\n\nStatusColorPipe->TasksModule\n\n\n\n\n\nStatusLabelComponent\n\nStatusLabelComponent\n\nTasksModule -->\n\nStatusLabelComponent->TasksModule\n\n\n\n\n\nTaskDialog\n\nTaskDialog\n\nTasksModule -->\n\nTaskDialog->TasksModule\n\n\n\n\n\nTaskListPage\n\nTaskListPage\n\nTasksModule -->\n\nTaskListPage->TasksModule\n\n\n\n\n\nTaskPriorityIconPipe\n\nTaskPriorityIconPipe\n\nTasksModule -->\n\nTaskPriorityIconPipe->TasksModule\n\n\n\n\n\nTaskPriorityPipe\n\nTaskPriorityPipe\n\nTasksModule -->\n\nTaskPriorityPipe->TasksModule\n\n\n\n\n\nTaskTypeIconPipe\n\nTaskTypeIconPipe\n\nTasksModule -->\n\nTaskTypeIconPipe->TasksModule\n\n\n\n\n\nTaskTypePipe\n\nTaskTypePipe\n\nTasksModule -->\n\nTaskTypePipe->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    60 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    35 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        84 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.14\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            color   (src/.../color.interface.ts)\n                        \n                        \n                            CursorSTateComputer   (src/.../typings.ts)\n                        \n                        \n                            EditOperation   (src/.../monaco-extended.class.ts)\n                        \n                        \n                            EditOperation   (src/.../typings.ts)\n                        \n                        \n                            Editor   (src/.../typings.ts)\n                        \n                        \n                            Filter   (src/.../filters.interface.ts)\n                        \n                        \n                            FilterType   (src/.../filters.interface.ts)\n                        \n                        \n                            MonacoEditor   (src/.../monaco-extended.class.ts)\n                        \n                        \n                            Props   (src/.../story.class.ts)\n                        \n                        \n                            Schedule   (src/.../schedule.interface.ts)\n                        \n                        \n                            Selection   (src/.../monaco-extended.class.ts)\n                        \n                        \n                            Selection   (src/.../typings.ts)\n                        \n                        \n                            SelectionEditOperation   (src/.../selection-edit.plugin.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/interfaces/color.interface.ts\n    \n    \n        \n            \n                \n                    \n                    color\n                \n            \n            \n                \n                            number\n\n                \n            \n        \n    \n    src/app/_main/libs/monaco/typings.ts\n    \n    \n        \n            \n                \n                    \n                    CursorSTateComputer\n                \n            \n            \n                \n                        monaco.editor.ICursorStateComputer\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EditOperation\n                \n            \n            \n                \n                        monaco.editor.IIdentifiedSingleEditOperation\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Editor\n                \n            \n            \n                \n                            monaco.editor.IStandaloneCodeEditor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Selection\n                \n            \n            \n                \n                        monaco.Selection\n\n                \n            \n        \n    \n    src/app/_main/classes/monaco-extended.class.ts\n    \n    \n        \n            \n                \n                    \n                    EditOperation\n                \n            \n            \n                \n                        monaco.editor.IIdentifiedSingleEditOperation\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MonacoEditor\n                \n            \n            \n                \n                            monaco.editor.IStandaloneCodeEditor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Selection\n                \n            \n            \n                \n                        monaco.Selection\n\n                \n            \n        \n    \n    src/app/_main/interfaces/filters.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                            FilterCheckbox\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FilterType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/stories/helpers/classes/story.class.ts\n    \n    \n        \n            \n                \n                    \n                    Props\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/tasks/interfaces/schedule.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Schedule\n                \n            \n            \n                \n                            SinglePersonSchedule[]\n\n                \n            \n        \n    \n    src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts\n    \n    \n        \n            \n                \n                    \n                    SelectionEditOperation\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture.html":{"url":"additional-documentation/architecture.html","title":"additional-page - Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture\nArchitecture of the application is maintained with base Angular methodologies. For more information's about Angular methodologies see Angular documentation.\nNaming conventions\nEach file should be named using only lower case letters and  - to replace spaces. Filename should be .. where  is the name of the file (ex. hello-world),  is the type of the file (ex. module or component) and the  is the extension of the file (ex. .ts).\nSingle responsibility principle\nEach file should have only one responsibility. For example, src/app/hello-world/hello-world.module.ts should have only one responsibility to create the module. For more information's about the Single Responsibility Principle see Wikipedia.\nModules\nApp is splitter into separated modules. Each module has it's own folder in src/app directory. In this dedicated space each module has it's own .module.ts file and optionally .routing.ts file.\nClasses\nIf project is using some additional classes logic like class grouped utility functions or abstract control classes, then they should be placed in dedicated folder in classes/ directory.\nComponents\nComponents are the main building blocks of the application. They are the most important part of the architecture. Each component has it's own folder in components/ directory. In this dedicated space each component has it's own .component.ts file.\nDecorators\nDecorators are used to add additional functionality to the components. For example, @Component decorator is used to mark the component as a component. Each decorator has it's own file in decorators/ directory. In this dedicated space each pipe has it's own .decorator.ts file. For more information's about decorators see Angular documentation.\nDialogs\nDialogs are used to display information to the user. Dialogs are located in dialogs/ directory. For more information's about dialogs see Angular documentation.\nDirectives\nDirectives are used to add additional functionality to the components. For example, @Directive decorator is used to mark the directive as a directive. Each decorator has it's own file in directives/ directory. In this dedicated space each directive has it's own .directive.ts file. For more information's about directives see Angular documentation.\nEnums\nEnums are used to define the values of the enumeration. Each enumerable value has it's own enum.ts file in enums/ directory.\nGuards\nGuards are used to protect routes from unauthorized access. Each guard has it's own folder in guards/ directory. In this dedicated space each guard has it's own .guard.ts file. For more information's about guards see Angular documentation.\nInterfaces\nInterfaces are used to structure the code. They are used to describe the shape of the object. For more information's about interfaces see Angular documentation.\nPipes\nPipes are used to transform data. Each pipe has it's own folder in pipes/ directory. In this dedicated space each pipe has it's own .pipe.ts file. For more information's about pipes see Angular documentation.\nServices\nServices are used to share data between components. Each service has it's own .service.ts file located in services/ directory in one of the modules.\nValidators\nValidators are used to validate the data (mainly in forms). Each validator has it's own .validator.ts file located in validators/ directory in one of the modules.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/localization.html":{"url":"additional-documentation/localization.html","title":"additional-page - Localization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocalization\nApp is localized using angular/localize. At the current stage of the project app is translated in:\nde-DE -> German (Germany)\nen-GB -> English (United Kingdom)\nen-US -> English (United States, Default app language)\nes-ES -> Spanish (Spain)\nit-IT -> Italian (Italy)\npl-PL -> Polish (Poland)\nuk-UA -> Ukrainian (Ukraine)Configuration\nEach language is listed in angular.json file in i18n section.\nFor polish language for example:\n\"i18n\": {\n  ...\n  \"locales\": {\n    \"pl-PL\": {\n      \"translation\": \"src/locales/messages.pl-PL.xlf\"\n    },\n    ...\n  }\n}Languages also requires separated file in src/locales folder to be created before build.\nIn the future adding new language will need some more work to do. For example adding new element in language selection list.\nMaking translations\nBefore translating strings first what you need to do is to extract all translatable strings from the app. To do this run the command:\nyarn extract:i18nEach language translations are located in src/locales folder, for example src/locales/messages.pl-PL.xlf file. This files can be edited using any text editor, but more convenient is to use external tools.\nIn Visual Studio Code there is an extension named Angular I18n Editor. This extension is used to make translations in more human readable way. It serves an UI interface to edit translations. To open this extension press F1 and search for Angular I18n Editor: Open command.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/continuos-integration.html":{"url":"additional-documentation/continuos-integration.html","title":"additional-page - Continuos integration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCI/CD pipeline\nContinuos integration was resolved using tool named GitHub Actions. Actions are located in .github/workflows/ directory. At this moment there is one pipeline to deploy application named deploy.yml. This action after every push to the master branch rebuild the application and deploy it to the production environment using rsync protocol. This action also build documentation page, publishes it and runs tests. There is also included a small script to create badges to use them in Readme.md and documentation files. This file is named badge-generator.js and is located in the root directory.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
