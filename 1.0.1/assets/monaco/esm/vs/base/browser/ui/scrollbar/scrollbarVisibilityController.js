import{TimeoutTimer}from"../../../common/async.js";import{Disposable}from"../../../common/lifecycle.js";export class ScrollbarVisibilityController extends Disposable{constructor(visibility,visibleClassName,invisibleClassName){super(),this._visibility=visibility,this._visibleClassName=visibleClassName,this._invisibleClassName=invisibleClassName,this._domNode=null,this._isVisible=!1,this._isNeeded=!1,this._rawShouldBeVisible=!1,this._shouldBeVisible=!1,this._revealTimer=this._register(new TimeoutTimer)}setVisibility(visibility){this._visibility!==visibility&&(this._visibility=visibility,this._updateShouldBeVisible())}setShouldBeVisible(rawShouldBeVisible){this._rawShouldBeVisible=rawShouldBeVisible,this._updateShouldBeVisible()}_applyVisibilitySetting(){return 2!==this._visibility&&(3===this._visibility||this._rawShouldBeVisible)}_updateShouldBeVisible(){const shouldBeVisible=this._applyVisibilitySetting();this._shouldBeVisible!==shouldBeVisible&&(this._shouldBeVisible=shouldBeVisible,this.ensureVisibility())}setIsNeeded(isNeeded){this._isNeeded!==isNeeded&&(this._isNeeded=isNeeded,this.ensureVisibility())}setDomNode(domNode){this._domNode=domNode,this._domNode.setClassName(this._invisibleClassName),this.setShouldBeVisible(!1)}ensureVisibility(){this._isNeeded?this._shouldBeVisible?this._reveal():this._hide(!0):this._hide(!1)}_reveal(){this._isVisible||(this._isVisible=!0,this._revealTimer.setIfNotSet((()=>{var _a;null===(_a=this._domNode)||void 0===_a||_a.setClassName(this._visibleClassName)}),0))}_hide(withFadeAway){var _a;this._revealTimer.cancel(),this._isVisible&&(this._isVisible=!1,null===(_a=this._domNode)||void 0===_a||_a.setClassName(this._invisibleClassName+(withFadeAway?" fade":"")))}}