var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import{Emitter}from"../../../base/common/event.js";import{Disposable,DisposableStore,dispose}from"../../../base/common/lifecycle.js";import*as platform from"../../../base/common/platform.js";import*as errors from"../../../base/common/errors.js";import{TextModel}from"../model/textModel.js";import{EDITOR_MODEL_DEFAULTS}from"../core/textModelDefaults.js";import{PLAINTEXT_LANGUAGE_ID}from"../languages/modesRegistry.js";import{ILanguageService}from"../languages/language.js";import{IModelService}from"./model.js";import{ITextResourcePropertiesService}from"./textResourceConfiguration.js";import{IConfigurationService}from"../../../platform/configuration/common/configuration.js";import{RunOnceScheduler}from"../../../base/common/async.js";import{CancellationTokenSource}from"../../../base/common/cancellation.js";import{IThemeService}from"../../../platform/theme/common/themeService.js";import{ILogService}from"../../../platform/log/common/log.js";import{IUndoRedoService}from"../../../platform/undoRedo/common/undoRedo.js";import{StringSHA1}from"../../../base/common/hash.js";import{isEditStackElement}from"../model/editStack.js";import{Schemas}from"../../../base/common/network.js";import{SemanticTokensProviderStyling,toMultilineTokens2}from"./semanticTokensProviderStyling.js";import{getDocumentSemanticTokens,hasDocumentSemanticTokensProvider,isSemanticTokens,isSemanticTokensEdits}from"./getSemanticTokens.js";import{equals}from"../../../base/common/objects.js";import{ILanguageConfigurationService}from"../languages/languageConfigurationRegistry.js";import{ILanguageFeatureDebounceService}from"./languageFeatureDebounce.js";import{StopWatch}from"../../../base/common/stopwatch.js";import{ILanguageFeaturesService}from"./languageFeatures.js";function MODEL_ID(resource){return resource.toString()}function computeModelSha1(model){const shaComputer=new StringSHA1,snapshot=model.createSnapshot();let text;for(;text=snapshot.read();)shaComputer.update(text);return shaComputer.digest()}class ModelData{constructor(model,onWillDispose,onDidChangeLanguage){this._modelEventListeners=new DisposableStore,this.model=model,this._languageSelection=null,this._languageSelectionListener=null,this._modelEventListeners.add(model.onWillDispose((()=>onWillDispose(model)))),this._modelEventListeners.add(model.onDidChangeLanguage((e=>onDidChangeLanguage(model,e))))}_disposeLanguageSelection(){this._languageSelectionListener&&(this._languageSelectionListener.dispose(),this._languageSelectionListener=null)}dispose(){this._modelEventListeners.dispose(),this._disposeLanguageSelection()}setLanguage(languageSelection){this._disposeLanguageSelection(),this._languageSelection=languageSelection,this._languageSelectionListener=this._languageSelection.onDidChange((()=>this.model.setMode(languageSelection.languageId))),this.model.setMode(languageSelection.languageId)}}const DEFAULT_EOL=platform.isLinux||platform.isMacintosh?1:2;class DisposedModelInfo{constructor(uri,initialUndoRedoSnapshot,time,sharesUndoRedoStack,heapSize,sha1,versionId,alternativeVersionId){this.uri=uri,this.initialUndoRedoSnapshot=initialUndoRedoSnapshot,this.time=time,this.sharesUndoRedoStack=sharesUndoRedoStack,this.heapSize=heapSize,this.sha1=sha1,this.versionId=versionId,this.alternativeVersionId=alternativeVersionId}}let ModelService=class ModelService extends Disposable{constructor(_configurationService,_resourcePropertiesService,_themeService,_logService,_undoRedoService,_languageService,_languageConfigurationService,_languageFeatureDebounceService,languageFeaturesService){super(),this._configurationService=_configurationService,this._resourcePropertiesService=_resourcePropertiesService,this._themeService=_themeService,this._logService=_logService,this._undoRedoService=_undoRedoService,this._languageService=_languageService,this._languageConfigurationService=_languageConfigurationService,this._languageFeatureDebounceService=_languageFeatureDebounceService,this._onModelAdded=this._register(new Emitter),this.onModelAdded=this._onModelAdded.event,this._onModelRemoved=this._register(new Emitter),this.onModelRemoved=this._onModelRemoved.event,this._onModelModeChanged=this._register(new Emitter),this.onModelLanguageChanged=this._onModelModeChanged.event,this._modelCreationOptionsByLanguageAndResource=Object.create(null),this._models={},this._disposedModels=new Map,this._disposedModelsHeapSize=0,this._semanticStyling=this._register(new SemanticStyling(this._themeService,this._languageService,this._logService)),this._register(this._configurationService.onDidChangeConfiguration((()=>this._updateModelOptions()))),this._updateModelOptions(),this._register(new SemanticColoringFeature(this._semanticStyling,this,this._themeService,this._configurationService,this._languageFeatureDebounceService,languageFeaturesService))}static _readModelOptions(config,isForSimpleWidget){var _a;let tabSize=EDITOR_MODEL_DEFAULTS.tabSize;if(config.editor&&void 0!==config.editor.tabSize){const parsedTabSize=parseInt(config.editor.tabSize,10);isNaN(parsedTabSize)||(tabSize=parsedTabSize),tabSize<1&&(tabSize=1)}let indentSize=tabSize;if(config.editor&&void 0!==config.editor.indentSize&&"tabSize"!==config.editor.indentSize){const parsedIndentSize=parseInt(config.editor.indentSize,10);isNaN(parsedIndentSize)||(indentSize=parsedIndentSize),indentSize<1&&(indentSize=1)}let insertSpaces=EDITOR_MODEL_DEFAULTS.insertSpaces;config.editor&&void 0!==config.editor.insertSpaces&&(insertSpaces="false"!==config.editor.insertSpaces&&Boolean(config.editor.insertSpaces));let newDefaultEOL=DEFAULT_EOL;const eol=config.eol;"\r\n"===eol?newDefaultEOL=2:"\n"===eol&&(newDefaultEOL=1);let trimAutoWhitespace=EDITOR_MODEL_DEFAULTS.trimAutoWhitespace;config.editor&&void 0!==config.editor.trimAutoWhitespace&&(trimAutoWhitespace="false"!==config.editor.trimAutoWhitespace&&Boolean(config.editor.trimAutoWhitespace));let detectIndentation=EDITOR_MODEL_DEFAULTS.detectIndentation;config.editor&&void 0!==config.editor.detectIndentation&&(detectIndentation="false"!==config.editor.detectIndentation&&Boolean(config.editor.detectIndentation));let largeFileOptimizations=EDITOR_MODEL_DEFAULTS.largeFileOptimizations;config.editor&&void 0!==config.editor.largeFileOptimizations&&(largeFileOptimizations="false"!==config.editor.largeFileOptimizations&&Boolean(config.editor.largeFileOptimizations));let bracketPairColorizationOptions=EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions;return(null===(_a=config.editor)||void 0===_a?void 0:_a.bracketPairColorization)&&"object"==typeof config.editor.bracketPairColorization&&(bracketPairColorizationOptions={enabled:!!config.editor.bracketPairColorization.enabled,independentColorPoolPerBracketType:!!config.editor.bracketPairColorization.independentColorPoolPerBracketType}),{isForSimpleWidget,tabSize,indentSize,insertSpaces,detectIndentation,defaultEOL:newDefaultEOL,trimAutoWhitespace,largeFileOptimizations,bracketPairColorizationOptions}}_getEOL(resource,language){if(resource)return this._resourcePropertiesService.getEOL(resource,language);const eol=this._configurationService.getValue("files.eol",{overrideIdentifier:language});return eol&&"string"==typeof eol&&"auto"!==eol?eol:3===platform.OS||2===platform.OS?"\n":"\r\n"}_shouldRestoreUndoStack(){const result=this._configurationService.getValue("files.restoreUndoStack");return"boolean"!=typeof result||result}getCreationOptions(language,resource,isForSimpleWidget){let creationOptions=this._modelCreationOptionsByLanguageAndResource[language+resource];if(!creationOptions){const editor=this._configurationService.getValue("editor",{overrideIdentifier:language,resource}),eol=this._getEOL(resource,language);creationOptions=ModelService._readModelOptions({editor,eol},isForSimpleWidget),this._modelCreationOptionsByLanguageAndResource[language+resource]=creationOptions}return creationOptions}_updateModelOptions(){const oldOptionsByLanguageAndResource=this._modelCreationOptionsByLanguageAndResource;this._modelCreationOptionsByLanguageAndResource=Object.create(null);const keys=Object.keys(this._models);for(let i=0,len=keys.length;i<len;i++){const modelId=keys[i],modelData=this._models[modelId],language=modelData.model.getLanguageId(),uri=modelData.model.uri,oldOptions=oldOptionsByLanguageAndResource[language+uri],newOptions=this.getCreationOptions(language,uri,modelData.model.isForSimpleWidget);ModelService._setModelOptionsForModel(modelData.model,newOptions,oldOptions)}}static _setModelOptionsForModel(model,newOptions,currentOptions){currentOptions&&currentOptions.defaultEOL!==newOptions.defaultEOL&&1===model.getLineCount()&&model.setEOL(1===newOptions.defaultEOL?0:1),currentOptions&&currentOptions.detectIndentation===newOptions.detectIndentation&&currentOptions.insertSpaces===newOptions.insertSpaces&&currentOptions.tabSize===newOptions.tabSize&&currentOptions.indentSize===newOptions.indentSize&&currentOptions.trimAutoWhitespace===newOptions.trimAutoWhitespace&&equals(currentOptions.bracketPairColorizationOptions,newOptions.bracketPairColorizationOptions)||(newOptions.detectIndentation?(model.detectIndentation(newOptions.insertSpaces,newOptions.tabSize),model.updateOptions({trimAutoWhitespace:newOptions.trimAutoWhitespace,bracketColorizationOptions:newOptions.bracketPairColorizationOptions})):model.updateOptions({insertSpaces:newOptions.insertSpaces,tabSize:newOptions.tabSize,indentSize:newOptions.indentSize,trimAutoWhitespace:newOptions.trimAutoWhitespace,bracketColorizationOptions:newOptions.bracketPairColorizationOptions}))}_insertDisposedModel(disposedModelData){this._disposedModels.set(MODEL_ID(disposedModelData.uri),disposedModelData),this._disposedModelsHeapSize+=disposedModelData.heapSize}_removeDisposedModel(resource){const disposedModelData=this._disposedModels.get(MODEL_ID(resource));return disposedModelData&&(this._disposedModelsHeapSize-=disposedModelData.heapSize),this._disposedModels.delete(MODEL_ID(resource)),disposedModelData}_ensureDisposedModelsHeapSize(maxModelsHeapSize){if(this._disposedModelsHeapSize>maxModelsHeapSize){const disposedModels=[];for(this._disposedModels.forEach((entry=>{entry.sharesUndoRedoStack||disposedModels.push(entry)})),disposedModels.sort(((a,b)=>a.time-b.time));disposedModels.length>0&&this._disposedModelsHeapSize>maxModelsHeapSize;){const disposedModel=disposedModels.shift();this._removeDisposedModel(disposedModel.uri),null!==disposedModel.initialUndoRedoSnapshot&&this._undoRedoService.restoreSnapshot(disposedModel.initialUndoRedoSnapshot)}}}_createModelData(value,languageId,resource,isForSimpleWidget){const options=this.getCreationOptions(languageId,resource,isForSimpleWidget),model=new TextModel(value,languageId,options,resource,this._undoRedoService,this._languageService,this._languageConfigurationService);if(resource&&this._disposedModels.has(MODEL_ID(resource))){const disposedModelData=this._removeDisposedModel(resource),elements=this._undoRedoService.getElements(resource),sha1IsEqual=computeModelSha1(model)===disposedModelData.sha1;if(sha1IsEqual||disposedModelData.sharesUndoRedoStack){for(const element of elements.past)isEditStackElement(element)&&element.matchesResource(resource)&&element.setModel(model);for(const element of elements.future)isEditStackElement(element)&&element.matchesResource(resource)&&element.setModel(model);this._undoRedoService.setElementsValidFlag(resource,!0,(element=>isEditStackElement(element)&&element.matchesResource(resource))),sha1IsEqual&&(model._overwriteVersionId(disposedModelData.versionId),model._overwriteAlternativeVersionId(disposedModelData.alternativeVersionId),model._overwriteInitialUndoRedoSnapshot(disposedModelData.initialUndoRedoSnapshot))}else null!==disposedModelData.initialUndoRedoSnapshot&&this._undoRedoService.restoreSnapshot(disposedModelData.initialUndoRedoSnapshot)}const modelId=MODEL_ID(model.uri);if(this._models[modelId])throw new Error("ModelService: Cannot add model because it already exists!");const modelData=new ModelData(model,(model=>this._onWillDispose(model)),((model,e)=>this._onDidChangeLanguage(model,e)));return this._models[modelId]=modelData,modelData}createModel(value,languageSelection,resource,isForSimpleWidget=!1){let modelData;return languageSelection?(modelData=this._createModelData(value,languageSelection.languageId,resource,isForSimpleWidget),this.setMode(modelData.model,languageSelection)):modelData=this._createModelData(value,PLAINTEXT_LANGUAGE_ID,resource,isForSimpleWidget),this._onModelAdded.fire(modelData.model),modelData.model}setMode(model,languageSelection){if(!languageSelection)return;const modelData=this._models[MODEL_ID(model.uri)];modelData&&modelData.setLanguage(languageSelection)}getModels(){const ret=[],keys=Object.keys(this._models);for(let i=0,len=keys.length;i<len;i++){const modelId=keys[i];ret.push(this._models[modelId].model)}return ret}getModel(resource){const modelId=MODEL_ID(resource),modelData=this._models[modelId];return modelData?modelData.model:null}getSemanticTokensProviderStyling(provider){return this._semanticStyling.get(provider)}_schemaShouldMaintainUndoRedoElements(resource){return resource.scheme===Schemas.file||resource.scheme===Schemas.vscodeRemote||resource.scheme===Schemas.vscodeUserData||resource.scheme===Schemas.vscodeNotebookCell||"fake-fs"===resource.scheme}_onWillDispose(model){const modelId=MODEL_ID(model.uri),modelData=this._models[modelId],sharesUndoRedoStack=this._undoRedoService.getUriComparisonKey(model.uri)!==model.uri.toString();let maintainUndoRedoStack=!1,heapSize=0;if(sharesUndoRedoStack||this._shouldRestoreUndoStack()&&this._schemaShouldMaintainUndoRedoElements(model.uri)){const elements=this._undoRedoService.getElements(model.uri);if(elements.past.length>0||elements.future.length>0){for(const element of elements.past)isEditStackElement(element)&&element.matchesResource(model.uri)&&(maintainUndoRedoStack=!0,heapSize+=element.heapSize(model.uri),element.setModel(model.uri));for(const element of elements.future)isEditStackElement(element)&&element.matchesResource(model.uri)&&(maintainUndoRedoStack=!0,heapSize+=element.heapSize(model.uri),element.setModel(model.uri))}}const maxMemory=ModelService.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK;if(maintainUndoRedoStack)if(!sharesUndoRedoStack&&heapSize>maxMemory){const initialUndoRedoSnapshot=modelData.model.getInitialUndoRedoSnapshot();null!==initialUndoRedoSnapshot&&this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot)}else this._ensureDisposedModelsHeapSize(maxMemory-heapSize),this._undoRedoService.setElementsValidFlag(model.uri,!1,(element=>isEditStackElement(element)&&element.matchesResource(model.uri))),this._insertDisposedModel(new DisposedModelInfo(model.uri,modelData.model.getInitialUndoRedoSnapshot(),Date.now(),sharesUndoRedoStack,heapSize,computeModelSha1(model),model.getVersionId(),model.getAlternativeVersionId()));else if(!sharesUndoRedoStack){const initialUndoRedoSnapshot=modelData.model.getInitialUndoRedoSnapshot();null!==initialUndoRedoSnapshot&&this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot)}delete this._models[modelId],modelData.dispose(),delete this._modelCreationOptionsByLanguageAndResource[model.getLanguageId()+model.uri],this._onModelRemoved.fire(model)}_onDidChangeLanguage(model,e){const oldLanguageId=e.oldLanguage,newLanguageId=model.getLanguageId(),oldOptions=this.getCreationOptions(oldLanguageId,model.uri,model.isForSimpleWidget),newOptions=this.getCreationOptions(newLanguageId,model.uri,model.isForSimpleWidget);ModelService._setModelOptionsForModel(model,newOptions,oldOptions),this._onModelModeChanged.fire({model,oldLanguageId})}};ModelService.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK=20971520,ModelService=__decorate([__param(0,IConfigurationService),__param(1,ITextResourcePropertiesService),__param(2,IThemeService),__param(3,ILogService),__param(4,IUndoRedoService),__param(5,ILanguageService),__param(6,ILanguageConfigurationService),__param(7,ILanguageFeatureDebounceService),__param(8,ILanguageFeaturesService)],ModelService);export{ModelService};export const SEMANTIC_HIGHLIGHTING_SETTING_ID="editor.semanticHighlighting";export function isSemanticColoringEnabled(model,themeService,configurationService){var _a;const setting=null===(_a=configurationService.getValue("editor.semanticHighlighting",{overrideIdentifier:model.getLanguageId(),resource:model.uri}))||void 0===_a?void 0:_a.enabled;return"boolean"==typeof setting?setting:themeService.getColorTheme().semanticHighlighting}let SemanticColoringFeature=class SemanticColoringFeature extends Disposable{constructor(semanticStyling,modelService,themeService,configurationService,languageFeatureDebounceService,languageFeaturesService){super(),this._watchers=Object.create(null),this._semanticStyling=semanticStyling;const register=model=>{this._watchers[model.uri.toString()]=new ModelSemanticColoring(model,this._semanticStyling,themeService,languageFeatureDebounceService,languageFeaturesService)},deregister=(model,modelSemanticColoring)=>{modelSemanticColoring.dispose(),delete this._watchers[model.uri.toString()]},handleSettingOrThemeChange=()=>{for(const model of modelService.getModels()){const curr=this._watchers[model.uri.toString()];isSemanticColoringEnabled(model,themeService,configurationService)?curr||register(model):curr&&deregister(model,curr)}};this._register(modelService.onModelAdded((model=>{isSemanticColoringEnabled(model,themeService,configurationService)&&register(model)}))),this._register(modelService.onModelRemoved((model=>{const curr=this._watchers[model.uri.toString()];curr&&deregister(model,curr)}))),this._register(configurationService.onDidChangeConfiguration((e=>{e.affectsConfiguration("editor.semanticHighlighting")&&handleSettingOrThemeChange()}))),this._register(themeService.onDidColorThemeChange(handleSettingOrThemeChange))}dispose(){for(const watcher of Object.values(this._watchers))watcher.dispose();super.dispose()}};SemanticColoringFeature=__decorate([__param(1,IModelService),__param(2,IThemeService),__param(3,IConfigurationService),__param(4,ILanguageFeatureDebounceService),__param(5,ILanguageFeaturesService)],SemanticColoringFeature);class SemanticStyling extends Disposable{constructor(_themeService,_languageService,_logService){super(),this._themeService=_themeService,this._languageService=_languageService,this._logService=_logService,this._caches=new WeakMap,this._register(this._themeService.onDidColorThemeChange((()=>{this._caches=new WeakMap})))}get(provider){return this._caches.has(provider)||this._caches.set(provider,new SemanticTokensProviderStyling(provider.getLegend(),this._themeService,this._languageService,this._logService)),this._caches.get(provider)}}class SemanticTokensResponse{constructor(provider,resultId,data){this.provider=provider,this.resultId=resultId,this.data=data}dispose(){this.provider.releaseDocumentSemanticTokens(this.resultId)}}let ModelSemanticColoring=class ModelSemanticColoring extends Disposable{constructor(model,stylingProvider,themeService,languageFeatureDebounceService,languageFeaturesService){super(),this._isDisposed=!1,this._model=model,this._semanticStyling=stylingProvider,this._provider=languageFeaturesService.documentSemanticTokensProvider,this._debounceInformation=languageFeatureDebounceService.for(this._provider,"DocumentSemanticTokens",{min:ModelSemanticColoring.REQUEST_MIN_DELAY,max:ModelSemanticColoring.REQUEST_MAX_DELAY}),this._fetchDocumentSemanticTokens=this._register(new RunOnceScheduler((()=>this._fetchDocumentSemanticTokensNow()),ModelSemanticColoring.REQUEST_MIN_DELAY)),this._currentDocumentResponse=null,this._currentDocumentRequestCancellationTokenSource=null,this._documentProvidersChangeListeners=[],this._register(this._model.onDidChangeContent((()=>{this._fetchDocumentSemanticTokens.isScheduled()||this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model))}))),this._register(this._model.onDidChangeLanguage((()=>{this._currentDocumentResponse&&(this._currentDocumentResponse.dispose(),this._currentDocumentResponse=null),this._currentDocumentRequestCancellationTokenSource&&(this._currentDocumentRequestCancellationTokenSource.cancel(),this._currentDocumentRequestCancellationTokenSource=null),this._setDocumentSemanticTokens(null,null,null,[]),this._fetchDocumentSemanticTokens.schedule(0)})));const bindDocumentChangeListeners=()=>{dispose(this._documentProvidersChangeListeners),this._documentProvidersChangeListeners=[];for(const provider of this._provider.all(model))"function"==typeof provider.onDidChange&&this._documentProvidersChangeListeners.push(provider.onDidChange((()=>this._fetchDocumentSemanticTokens.schedule(0))))};bindDocumentChangeListeners(),this._register(this._provider.onDidChange((()=>{bindDocumentChangeListeners(),this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model))}))),this._register(themeService.onDidColorThemeChange((_=>{this._setDocumentSemanticTokens(null,null,null,[]),this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model))}))),this._fetchDocumentSemanticTokens.schedule(0)}dispose(){this._currentDocumentResponse&&(this._currentDocumentResponse.dispose(),this._currentDocumentResponse=null),this._currentDocumentRequestCancellationTokenSource&&(this._currentDocumentRequestCancellationTokenSource.cancel(),this._currentDocumentRequestCancellationTokenSource=null),this._setDocumentSemanticTokens(null,null,null,[]),this._isDisposed=!0,super.dispose()}_fetchDocumentSemanticTokensNow(){if(this._currentDocumentRequestCancellationTokenSource)return;if(!hasDocumentSemanticTokensProvider(this._provider,this._model))return void(this._currentDocumentResponse&&this._model.tokenization.setSemanticTokens(null,!1));const cancellationTokenSource=new CancellationTokenSource,lastProvider=this._currentDocumentResponse?this._currentDocumentResponse.provider:null,lastResultId=this._currentDocumentResponse&&this._currentDocumentResponse.resultId||null,request=getDocumentSemanticTokens(this._provider,this._model,lastProvider,lastResultId,cancellationTokenSource.token);this._currentDocumentRequestCancellationTokenSource=cancellationTokenSource;const pendingChanges=[],contentChangeListener=this._model.onDidChangeContent((e=>{pendingChanges.push(e)})),sw=new StopWatch(!1);request.then((res=>{if(this._debounceInformation.update(this._model,sw.elapsed()),this._currentDocumentRequestCancellationTokenSource=null,contentChangeListener.dispose(),res){const{provider,tokens}=res,styling=this._semanticStyling.get(provider);this._setDocumentSemanticTokens(provider,tokens||null,styling,pendingChanges)}else this._setDocumentSemanticTokens(null,null,null,pendingChanges)}),(err=>{err&&(errors.isCancellationError(err)||"string"==typeof err.message&&-1!==err.message.indexOf("busy"))||errors.onUnexpectedError(err),this._currentDocumentRequestCancellationTokenSource=null,contentChangeListener.dispose(),pendingChanges.length>0&&(this._fetchDocumentSemanticTokens.isScheduled()||this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model)))}))}static _copy(src,srcOffset,dest,destOffset,length){length=Math.min(length,dest.length-destOffset,src.length-srcOffset);for(let i=0;i<length;i++)dest[destOffset+i]=src[srcOffset+i]}_setDocumentSemanticTokens(provider,tokens,styling,pendingChanges){const currentResponse=this._currentDocumentResponse,rescheduleIfNeeded=()=>{pendingChanges.length>0&&!this._fetchDocumentSemanticTokens.isScheduled()&&this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model))};if(this._currentDocumentResponse&&(this._currentDocumentResponse.dispose(),this._currentDocumentResponse=null),this._isDisposed)provider&&tokens&&provider.releaseDocumentSemanticTokens(tokens.resultId);else if(provider&&styling){if(!tokens)return this._model.tokenization.setSemanticTokens(null,!0),void rescheduleIfNeeded();if(isSemanticTokensEdits(tokens)){if(!currentResponse)return void this._model.tokenization.setSemanticTokens(null,!0);if(0===tokens.edits.length)tokens={resultId:tokens.resultId,data:currentResponse.data};else{let deltaLength=0;for(const edit of tokens.edits)deltaLength+=(edit.data?edit.data.length:0)-edit.deleteCount;const srcData=currentResponse.data,destData=new Uint32Array(srcData.length+deltaLength);let srcLastStart=srcData.length,destLastStart=destData.length;for(let i=tokens.edits.length-1;i>=0;i--){const edit=tokens.edits[i];if(edit.start>srcData.length)return styling.warnInvalidEditStart(currentResponse.resultId,tokens.resultId,i,edit.start,srcData.length),void this._model.tokenization.setSemanticTokens(null,!0);const copyCount=srcLastStart-(edit.start+edit.deleteCount);copyCount>0&&(ModelSemanticColoring._copy(srcData,srcLastStart-copyCount,destData,destLastStart-copyCount,copyCount),destLastStart-=copyCount),edit.data&&(ModelSemanticColoring._copy(edit.data,0,destData,destLastStart-edit.data.length,edit.data.length),destLastStart-=edit.data.length),srcLastStart=edit.start}srcLastStart>0&&ModelSemanticColoring._copy(srcData,0,destData,0,srcLastStart),tokens={resultId:tokens.resultId,data:destData}}}if(isSemanticTokens(tokens)){this._currentDocumentResponse=new SemanticTokensResponse(provider,tokens.resultId,tokens.data);const result=toMultilineTokens2(tokens,styling,this._model.getLanguageId());if(pendingChanges.length>0)for(const change of pendingChanges)for(const area of result)for(const singleChange of change.changes)area.applyEdit(singleChange.range,singleChange.text);this._model.tokenization.setSemanticTokens(result,!0)}else this._model.tokenization.setSemanticTokens(null,!0);rescheduleIfNeeded()}else this._model.tokenization.setSemanticTokens(null,!1)}};ModelSemanticColoring.REQUEST_MIN_DELAY=300,ModelSemanticColoring.REQUEST_MAX_DELAY=2e3,ModelSemanticColoring=__decorate([__param(2,IThemeService),__param(3,ILanguageFeatureDebounceService),__param(4,ILanguageFeaturesService)],ModelSemanticColoring);export{ModelSemanticColoring};