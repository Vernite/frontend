import{Iterable}from"../../../base/common/iterator.js";import{LinkedList}from"../../../base/common/linkedList.js";export const USUAL_WORD_SEPARATORS="`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?";function createWordRegExp(allowInWords=""){let source="(-?\\d*\\.\\d\\w*)|([^";for(const sep of USUAL_WORD_SEPARATORS)allowInWords.indexOf(sep)>=0||(source+="\\"+sep);return source+="\\s]+)",new RegExp(source,"g")}export const DEFAULT_WORD_REGEXP=createWordRegExp();export function ensureValidWordDefinition(wordDefinition){let result=DEFAULT_WORD_REGEXP;if(wordDefinition&&wordDefinition instanceof RegExp)if(wordDefinition.global)result=wordDefinition;else{let flags="g";wordDefinition.ignoreCase&&(flags+="i"),wordDefinition.multiline&&(flags+="m"),wordDefinition.unicode&&(flags+="u"),result=new RegExp(wordDefinition.source,flags)}return result.lastIndex=0,result}const _defaultConfig=new LinkedList;_defaultConfig.unshift({maxLen:1e3,windowSize:15,timeBudget:150});export function getWordAtText(column,wordDefinition,text,textOffset,config){if(config||(config=Iterable.first(_defaultConfig)),text.length>config.maxLen){let start=column-config.maxLen/2;return start<0?start=0:textOffset+=start,getWordAtText(column,wordDefinition,text=text.substring(start,column+config.maxLen/2),textOffset,config)}const t1=Date.now(),pos=column-1-textOffset;let prevRegexIndex=-1,match=null;for(let i=1;!(Date.now()-t1>=config.timeBudget);i++){const regexIndex=pos-config.windowSize*i;wordDefinition.lastIndex=Math.max(0,regexIndex);const thisMatch=_findRegexMatchEnclosingPosition(wordDefinition,text,pos,prevRegexIndex);if(!thisMatch&&match)break;if(match=thisMatch,regexIndex<=0)break;prevRegexIndex=regexIndex}if(match){const result={word:match[0],startColumn:textOffset+1+match.index,endColumn:textOffset+1+match.index+match[0].length};return wordDefinition.lastIndex=0,result}return null}function _findRegexMatchEnclosingPosition(wordDefinition,text,pos,stopPos){let match;for(;match=wordDefinition.exec(text);){const matchIndex=match.index||0;if(matchIndex<=pos&&wordDefinition.lastIndex>=pos)return match;if(stopPos>0&&matchIndex>stopPos)return null}return null}