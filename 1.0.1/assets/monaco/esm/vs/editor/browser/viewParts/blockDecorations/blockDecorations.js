import{createFastDomNode}from"../../../../base/browser/fastDomNode.js";import"./blockDecorations.css";import{ViewPart}from"../../view/viewPart.js";export class BlockDecorations extends ViewPart{constructor(context){super(context),this.blocks=[],this.contentWidth=-1,this.domNode=createFastDomNode(document.createElement("div")),this.domNode.setAttribute("role","presentation"),this.domNode.setAttribute("aria-hidden","true"),this.domNode.setClassName("blockDecorations-container"),this.update()}update(){let didChange=!1;const layoutInfo=this._context.configuration.options.get(133),newContentWidth=layoutInfo.contentWidth-layoutInfo.verticalScrollbarWidth;return this.contentWidth!==newContentWidth&&(this.contentWidth=newContentWidth,didChange=!0),didChange}dispose(){super.dispose()}onConfigurationChanged(e){return this.update()}onScrollChanged(e){return e.scrollTopChanged||e.scrollLeftChanged}onDecorationsChanged(e){return!0}onZonesChanged(e){return!0}prepareRender(ctx){}render(ctx){let count=0;const decorations=ctx.getDecorationsInViewport();for(const decoration of decorations){if(!decoration.options.blockClassName)continue;let block=this.blocks[count];block||(block=this.blocks[count]=createFastDomNode(document.createElement("div")),this.domNode.appendChild(block));const top=ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber),bottom=ctx.getVerticalOffsetForLineNumber(decoration.range.endLineNumber+1);block.setClassName("blockDecorations-block "+decoration.options.blockClassName),block.setLeft(ctx.scrollLeft),block.setWidth(this.contentWidth),block.setTop(top),block.setHeight(bottom-top),count++}for(let i=count;i<this.blocks.length;i++)this.blocks[i].domNode.remove();this.blocks.length=count}}