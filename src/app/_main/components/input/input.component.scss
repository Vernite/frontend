@import '../../../../styles/typography';

:host {
  display: inline-block;
  width: 100%;

  ::ng-deep {
    color: var(--color-text);
  }
}

.form-field {
  display: flex;
  max-width: 400px;
  flex-direction: column;
  margin-bottom: 0.5rem;

  >label {
    @include text-title;

    margin-bottom: 0.4rem;
    color: var(--color-input-text);

    &.required::after {
      margin-left: 0.2rem;
      color: var(--color-input-text);
      content: '*';
    }
  }
}

.text-align-center {
  input {
    padding-left: 0;
    text-align: center;
  }
}

$padding-left: 0.5rem;
$height: 44px;

// New input
.input-form-field {
  position: relative;

  // Static label for input
  .static-label {
    @include text-title;

    margin-bottom: 0.4rem;
    color: var(--color-input-text);

    &.required::after {
      margin-left: 0.2rem;
      color: var(--color-input-text);
      content: '*';
    }
  }

  // Floating label for input
  .floating-label {
    @include text-base;

    padding: 0 0.4rem;
    color: var(--color-text);
    transition: transform 0.1s ease, font-size 0.1s ease;
  }

  .fragments-wrapper {
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    display: flex;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }

  // Fragments
  .fragment-left,
  .fragment-middle,
  .fragment-right {
    height: 100%;
    border: 2px solid var(--color-input-border);
    pointer-events: none;
  }

  .fragment-left {
    display: flex;
    width: $padding-left;
    align-items: center;
    padding-left: $padding-left;
    border-right-width: 0;
    border-bottom-left-radius: var(--border-radius);
    border-top-left-radius: var(--border-radius);

    .fragment-left-wrapper {
      flex-shrink: 0;
    }
  }

  .fragment-middle {
    display: flex;
    padding-top: calc(22px - 0.75em);
    border-right-width: 0;
    border-left-width: 0;
  }

  .fragment-right {
    display: flex;
    flex-grow: 1;
    align-items: center;
    justify-content: flex-end;
    padding-right: 0.75rem;
    border-left-width: 0;
    border-bottom-right-radius: var(--border-radius);
    border-top-right-radius: var(--border-radius);
  }

  .input-wrapper {
    position: relative;
    display: flex;
    width: 100%;
    background-color: var(--color-input-background);
    border-radius: var(--border-radius);
    transition: background-color 0.1s ease-in-out;

    &:hover {
      .textarea-corner {
        background-color: var(--color-input-background-hover);
      }

      background-color: var(--color-input-background-hover);
    }
  }

  input,
  textarea {
    @include text-base;

    width: 100%;
    min-height: $height;
    padding-left: calc($padding-left + 0.4rem);
    background-color: var(--color-input-background);
    background-color: transparent;
    border-radius: var(--border-radius);
    color: var(--color-text);
  }

  textarea {
    padding-top: 0.8rem;
    padding-bottom: 0.8rem;
  }

  .textarea-corner {
    position: absolute;
    z-index: 1;
    right: 0;
    bottom: 0;
    display: flex;
    width: 1rem;
    height: 1rem;
    align-items: center;
    justify-content: center;
    background-color: var(--color-secondary-500);
    pointer-events: none;
    transform: translateX(-2px) translateY(-2px);
    transition: background-color 0.1s ease-in-out;

    svg {
      transform: scale(2);

      line {
        stroke: var(--color-secondary-300);
      }
    }
  }
}

.has-value,
:host.focused {
  .floating-label {
    font-size: 0.75em;
    transform: translateY(calc($height / -2 + 4px));
  }

  .fragment-middle {
    border-top-width: 0;
  }
}

:host:not(.focused) {

  input::placeholder,
  textarea::placeholder {
    opacity: 0;
  }
}

:host.ng-touched.ng-invalid {

  .fragment-left,
  .fragment-middle,
  .fragment-right {
    border-color: var(--color-red-500);
  }
}

:host.focused .input-form-field {

  .fragment-left,
  .fragment-middle,
  .fragment-right {
    border-color: var(--color-primary-500);
  }
}

.required {

  .static-label::after,
  .floating-label::after {
    margin-left: 0.2rem;
    color: var(--color-red-500);
    content: '*';
  }
}

.error {
  position: absolute;
  margin-top: 0.2rem;
  color: var(--color-red-500);
  font-size: 12px;
  line-height: 0.8rem;
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

/* --- DISABLE ARROW BUTTONS IN INPUT TYPE NUMBER ---  */

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  margin: 0;
  -webkit-appearance: none;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}