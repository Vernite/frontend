export var Range;!function(Range){function intersect(one,other){if(one.start>=other.end||other.start>=one.end)return{start:0,end:0};const start=Math.max(one.start,other.start),end=Math.min(one.end,other.end);return end-start<=0?{start:0,end:0}:{start,end}}function isEmpty(range){return range.end-range.start<=0}Range.intersect=intersect,Range.isEmpty=isEmpty,Range.intersects=function intersects(one,other){return!isEmpty(intersect(one,other))},Range.relativeComplement=function relativeComplement(one,other){const result=[],first={start:one.start,end:Math.min(other.start,one.end)},second={start:Math.max(other.end,one.start),end:one.end};return isEmpty(first)||result.push(first),isEmpty(second)||result.push(second),result}}(Range||(Range={}));