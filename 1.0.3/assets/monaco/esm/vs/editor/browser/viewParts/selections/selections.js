import"./selections.css";import{DynamicViewOverlay}from"../../view/dynamicViewOverlay.js";import{editorInactiveSelection,editorSelectionBackground,editorSelectionForeground}from"../../../../platform/theme/common/colorRegistry.js";import{registerThemingParticipant}from"../../../../platform/theme/common/themeService.js";class HorizontalRangeWithStyle{constructor(other){this.left=other.left,this.width=other.width,this.startStyle=null,this.endStyle=null}}class LineVisibleRangesWithStyle{constructor(lineNumber,ranges){this.lineNumber=lineNumber,this.ranges=ranges}}function toStyledRange(item){return new HorizontalRangeWithStyle(item)}function toStyled(item){return new LineVisibleRangesWithStyle(item.lineNumber,item.ranges.map(toStyledRange))}export class SelectionsOverlay extends DynamicViewOverlay{constructor(context){super(),this._previousFrameVisibleRangesWithStyle=[],this._context=context;const options=this._context.configuration.options;this._lineHeight=options.get(61),this._roundedSelection=options.get(92),this._typicalHalfwidthCharacterWidth=options.get(46).typicalHalfwidthCharacterWidth,this._selections=[],this._renderResult=null,this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),this._renderResult=null,super.dispose()}onConfigurationChanged(e){const options=this._context.configuration.options;return this._lineHeight=options.get(61),this._roundedSelection=options.get(92),this._typicalHalfwidthCharacterWidth=options.get(46).typicalHalfwidthCharacterWidth,!0}onCursorStateChanged(e){return this._selections=e.selections.slice(0),!0}onDecorationsChanged(e){return!0}onFlushed(e){return!0}onLinesChanged(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return e.scrollTopChanged}onZonesChanged(e){return!0}_visibleRangesHaveGaps(linesVisibleRanges){for(let i=0,len=linesVisibleRanges.length;i<len;i++){if(linesVisibleRanges[i].ranges.length>1)return!0}return!1}_enrichVisibleRangesWithStyle(viewport,linesVisibleRanges,previousFrame){const epsilon=this._typicalHalfwidthCharacterWidth/4;let previousFrameTop=null,previousFrameBottom=null;if(previousFrame&&previousFrame.length>0&&linesVisibleRanges.length>0){const topLineNumber=linesVisibleRanges[0].lineNumber;if(topLineNumber===viewport.startLineNumber)for(let i=0;!previousFrameTop&&i<previousFrame.length;i++)previousFrame[i].lineNumber===topLineNumber&&(previousFrameTop=previousFrame[i].ranges[0]);const bottomLineNumber=linesVisibleRanges[linesVisibleRanges.length-1].lineNumber;if(bottomLineNumber===viewport.endLineNumber)for(let i=previousFrame.length-1;!previousFrameBottom&&i>=0;i--)previousFrame[i].lineNumber===bottomLineNumber&&(previousFrameBottom=previousFrame[i].ranges[0]);previousFrameTop&&!previousFrameTop.startStyle&&(previousFrameTop=null),previousFrameBottom&&!previousFrameBottom.startStyle&&(previousFrameBottom=null)}for(let i=0,len=linesVisibleRanges.length;i<len;i++){const curLineRange=linesVisibleRanges[i].ranges[0],curLeft=curLineRange.left,curRight=curLineRange.left+curLineRange.width,startStyle={top:0,bottom:0},endStyle={top:0,bottom:0};if(i>0){const prevLeft=linesVisibleRanges[i-1].ranges[0].left,prevRight=linesVisibleRanges[i-1].ranges[0].left+linesVisibleRanges[i-1].ranges[0].width;abs(curLeft-prevLeft)<epsilon?startStyle.top=2:curLeft>prevLeft&&(startStyle.top=1),abs(curRight-prevRight)<epsilon?endStyle.top=2:prevLeft<curRight&&curRight<prevRight&&(endStyle.top=1)}else previousFrameTop&&(startStyle.top=previousFrameTop.startStyle.top,endStyle.top=previousFrameTop.endStyle.top);if(i+1<len){const nextLeft=linesVisibleRanges[i+1].ranges[0].left,nextRight=linesVisibleRanges[i+1].ranges[0].left+linesVisibleRanges[i+1].ranges[0].width;abs(curLeft-nextLeft)<epsilon?startStyle.bottom=2:nextLeft<curLeft&&curLeft<nextRight&&(startStyle.bottom=1),abs(curRight-nextRight)<epsilon?endStyle.bottom=2:curRight<nextRight&&(endStyle.bottom=1)}else previousFrameBottom&&(startStyle.bottom=previousFrameBottom.startStyle.bottom,endStyle.bottom=previousFrameBottom.endStyle.bottom);curLineRange.startStyle=startStyle,curLineRange.endStyle=endStyle}}_getVisibleRangesWithStyle(selection,ctx,previousFrame){const linesVisibleRanges=(ctx.linesVisibleRangesForRange(selection,!0)||[]).map(toStyled);return!this._visibleRangesHaveGaps(linesVisibleRanges)&&this._roundedSelection&&this._enrichVisibleRangesWithStyle(ctx.visibleRange,linesVisibleRanges,previousFrame),linesVisibleRanges}_createSelectionPiece(top,height,className,left,width){return'<div class="cslr '+className+'" style="top:'+top.toString()+"px;left:"+left.toString()+"px;width:"+width.toString()+"px;height:"+height+'px;"></div>'}_actualRenderOneSelection(output2,visibleStartLineNumber,hasMultipleSelections,visibleRanges){if(0===visibleRanges.length)return;const visibleRangesHaveStyle=!!visibleRanges[0].ranges[0].startStyle,fullLineHeight=this._lineHeight.toString(),reducedLineHeight=(this._lineHeight-1).toString(),firstLineNumber=visibleRanges[0].lineNumber,lastLineNumber=visibleRanges[visibleRanges.length-1].lineNumber;for(let i=0,len=visibleRanges.length;i<len;i++){const lineVisibleRanges=visibleRanges[i],lineNumber=lineVisibleRanges.lineNumber,lineIndex=lineNumber-visibleStartLineNumber,lineHeight=hasMultipleSelections&&(lineNumber===lastLineNumber||lineNumber===firstLineNumber)?reducedLineHeight:fullLineHeight,top=hasMultipleSelections&&lineNumber===firstLineNumber?1:0;let innerCornerOutput="",restOfSelectionOutput="";for(let j=0,lenJ=lineVisibleRanges.ranges.length;j<lenJ;j++){const visibleRange=lineVisibleRanges.ranges[j];if(visibleRangesHaveStyle){const startStyle=visibleRange.startStyle,endStyle=visibleRange.endStyle;if(1===startStyle.top||1===startStyle.bottom){innerCornerOutput+=this._createSelectionPiece(top,lineHeight,SelectionsOverlay.SELECTION_CLASS_NAME,visibleRange.left-SelectionsOverlay.ROUNDED_PIECE_WIDTH,SelectionsOverlay.ROUNDED_PIECE_WIDTH);let className=SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;1===startStyle.top&&(className+=" "+SelectionsOverlay.SELECTION_TOP_RIGHT),1===startStyle.bottom&&(className+=" "+SelectionsOverlay.SELECTION_BOTTOM_RIGHT),innerCornerOutput+=this._createSelectionPiece(top,lineHeight,className,visibleRange.left-SelectionsOverlay.ROUNDED_PIECE_WIDTH,SelectionsOverlay.ROUNDED_PIECE_WIDTH)}if(1===endStyle.top||1===endStyle.bottom){innerCornerOutput+=this._createSelectionPiece(top,lineHeight,SelectionsOverlay.SELECTION_CLASS_NAME,visibleRange.left+visibleRange.width,SelectionsOverlay.ROUNDED_PIECE_WIDTH);let className=SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;1===endStyle.top&&(className+=" "+SelectionsOverlay.SELECTION_TOP_LEFT),1===endStyle.bottom&&(className+=" "+SelectionsOverlay.SELECTION_BOTTOM_LEFT),innerCornerOutput+=this._createSelectionPiece(top,lineHeight,className,visibleRange.left+visibleRange.width,SelectionsOverlay.ROUNDED_PIECE_WIDTH)}}let className=SelectionsOverlay.SELECTION_CLASS_NAME;if(visibleRangesHaveStyle){const startStyle=visibleRange.startStyle,endStyle=visibleRange.endStyle;0===startStyle.top&&(className+=" "+SelectionsOverlay.SELECTION_TOP_LEFT),0===startStyle.bottom&&(className+=" "+SelectionsOverlay.SELECTION_BOTTOM_LEFT),0===endStyle.top&&(className+=" "+SelectionsOverlay.SELECTION_TOP_RIGHT),0===endStyle.bottom&&(className+=" "+SelectionsOverlay.SELECTION_BOTTOM_RIGHT)}restOfSelectionOutput+=this._createSelectionPiece(top,lineHeight,className,visibleRange.left,visibleRange.width)}output2[lineIndex][0]+=innerCornerOutput,output2[lineIndex][1]+=restOfSelectionOutput}}prepareRender(ctx){const output=[],visibleStartLineNumber=ctx.visibleRange.startLineNumber,visibleEndLineNumber=ctx.visibleRange.endLineNumber;for(let lineNumber=visibleStartLineNumber;lineNumber<=visibleEndLineNumber;lineNumber++){output[lineNumber-visibleStartLineNumber]=["",""]}const thisFrameVisibleRangesWithStyle=[];for(let i=0,len=this._selections.length;i<len;i++){const selection=this._selections[i];if(selection.isEmpty()){thisFrameVisibleRangesWithStyle[i]=null;continue}const visibleRangesWithStyle=this._getVisibleRangesWithStyle(selection,ctx,this._previousFrameVisibleRangesWithStyle[i]);thisFrameVisibleRangesWithStyle[i]=visibleRangesWithStyle,this._actualRenderOneSelection(output,visibleStartLineNumber,this._selections.length>1,visibleRangesWithStyle)}this._previousFrameVisibleRangesWithStyle=thisFrameVisibleRangesWithStyle,this._renderResult=output.map((([internalCorners,restOfSelection])=>internalCorners+restOfSelection))}render(startLineNumber,lineNumber){if(!this._renderResult)return"";const lineIndex=lineNumber-startLineNumber;return lineIndex<0||lineIndex>=this._renderResult.length?"":this._renderResult[lineIndex]}}function abs(n){return n<0?-n:n}SelectionsOverlay.SELECTION_CLASS_NAME="selected-text",SelectionsOverlay.SELECTION_TOP_LEFT="top-left-radius",SelectionsOverlay.SELECTION_BOTTOM_LEFT="bottom-left-radius",SelectionsOverlay.SELECTION_TOP_RIGHT="top-right-radius",SelectionsOverlay.SELECTION_BOTTOM_RIGHT="bottom-right-radius",SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME="monaco-editor-background",SelectionsOverlay.ROUNDED_PIECE_WIDTH=10,registerThemingParticipant(((theme,collector)=>{const editorSelectionColor=theme.getColor(editorSelectionBackground);editorSelectionColor&&collector.addRule(`.monaco-editor .focused .selected-text { background-color: ${editorSelectionColor}; }`);const editorInactiveSelectionColor=theme.getColor(editorInactiveSelection);editorInactiveSelectionColor&&collector.addRule(`.monaco-editor .selected-text { background-color: ${editorInactiveSelectionColor}; }`);const editorSelectionForegroundColor=theme.getColor(editorSelectionForeground);editorSelectionForegroundColor&&!editorSelectionForegroundColor.isTransparent()&&collector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`)}));