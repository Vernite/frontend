import{Disposable}from"../../../../base/common/lifecycle.js";import{registerEditorContribution}from"../../../browser/editorExtensions.js";import{Range}from"../../../common/core/range.js";import{ColorDecorationInjectedTextMarker}from"./colorDetector.js";import{ColorHoverParticipant}from"./colorHoverParticipant.js";import{ModesHoverController}from"../../hover/browser/hover.js";import{HoverParticipantRegistry}from"../../hover/browser/hoverTypes.js";export class ColorContribution extends Disposable{constructor(_editor){super(),this._editor=_editor,this._register(_editor.onMouseDown((e=>this.onMouseDown(e))))}dispose(){super.dispose()}onMouseDown(mouseEvent){const target=mouseEvent.target;if(6!==target.type)return;if(!target.detail.injectedText)return;if(target.detail.injectedText.options.attachedData!==ColorDecorationInjectedTextMarker)return;if(!target.range)return;const hoverController=this._editor.getContribution(ModesHoverController.ID);if(hoverController&&!hoverController.isColorPickerVisible()){const range=new Range(target.range.startLineNumber,target.range.startColumn+1,target.range.endLineNumber,target.range.endColumn+1);hoverController.showContentHover(range,1,!1)}}}ColorContribution.ID="editor.contrib.colorContribution",registerEditorContribution(ColorContribution.ID,ColorContribution),HoverParticipantRegistry.register(ColorHoverParticipant);