var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import{createCancelablePromise}from"../../../../../base/common/async.js";import{onUnexpectedError}from"../../../../../base/common/errors.js";import{MarkdownString}from"../../../../../base/common/htmlContent.js";import{DisposableStore}from"../../../../../base/common/lifecycle.js";import{withNullAsUndefined}from"../../../../../base/common/types.js";import"./goToDefinitionAtPosition.css";import{EditorState}from"../../../editorState/browser/editorState.js";import{registerEditorContribution}from"../../../../browser/editorExtensions.js";import{Range}from"../../../../common/core/range.js";import{ILanguageService}from"../../../../common/languages/language.js";import{ITextModelService}from"../../../../common/services/resolverService.js";import{ClickLinkGesture}from"./clickLinkGesture.js";import{PeekContext}from"../../../peekView/browser/peekView.js";import*as nls from"../../../../../nls.js";import{IContextKeyService}from"../../../../../platform/contextkey/common/contextkey.js";import{editorActiveLinkForeground}from"../../../../../platform/theme/common/colorRegistry.js";import{registerThemingParticipant}from"../../../../../platform/theme/common/themeService.js";import{DefinitionAction}from"../goToCommands.js";import{getDefinitionsAtPosition}from"../goToSymbol.js";import{ILanguageFeaturesService}from"../../../../common/services/languageFeatures.js";let GotoDefinitionAtPositionEditorContribution=class GotoDefinitionAtPositionEditorContribution{constructor(editor,textModelResolverService,languageService,languageFeaturesService){this.textModelResolverService=textModelResolverService,this.languageService=languageService,this.languageFeaturesService=languageFeaturesService,this.toUnhook=new DisposableStore,this.toUnhookForKeyboard=new DisposableStore,this.currentWordAtPosition=null,this.previousPromise=null,this.editor=editor,this.linkDecorations=this.editor.createDecorationsCollection();const linkGesture=new ClickLinkGesture(editor);this.toUnhook.add(linkGesture),this.toUnhook.add(linkGesture.onMouseMoveOrRelevantKeyDown((([mouseEvent,keyboardEvent])=>{this.startFindDefinitionFromMouse(mouseEvent,withNullAsUndefined(keyboardEvent))}))),this.toUnhook.add(linkGesture.onExecute((mouseEvent=>{this.isEnabled(mouseEvent)&&this.gotoDefinition(mouseEvent.target.position,mouseEvent.hasSideBySideModifier).then((()=>{this.removeLinkDecorations()}),(error=>{this.removeLinkDecorations(),onUnexpectedError(error)}))}))),this.toUnhook.add(linkGesture.onCancel((()=>{this.removeLinkDecorations(),this.currentWordAtPosition=null})))}static get(editor){return editor.getContribution(GotoDefinitionAtPositionEditorContribution.ID)}startFindDefinitionFromCursor(position){return this.startFindDefinition(position).then((()=>{this.toUnhookForKeyboard.add(this.editor.onDidChangeCursorPosition((()=>{this.currentWordAtPosition=null,this.removeLinkDecorations(),this.toUnhookForKeyboard.clear()}))),this.toUnhookForKeyboard.add(this.editor.onKeyDown((e=>{e&&(this.currentWordAtPosition=null,this.removeLinkDecorations(),this.toUnhookForKeyboard.clear())})))}))}startFindDefinitionFromMouse(mouseEvent,withKey){if(9===mouseEvent.target.type&&this.linkDecorations.length>0)return;if(!this.editor.hasModel()||!this.isEnabled(mouseEvent,withKey))return this.currentWordAtPosition=null,void this.removeLinkDecorations();const position=mouseEvent.target.position;this.startFindDefinition(position)}startFindDefinition(position){var _a;this.toUnhookForKeyboard.clear();const word=position?null===(_a=this.editor.getModel())||void 0===_a?void 0:_a.getWordAtPosition(position):null;if(!word)return this.currentWordAtPosition=null,this.removeLinkDecorations(),Promise.resolve(0);if(this.currentWordAtPosition&&this.currentWordAtPosition.startColumn===word.startColumn&&this.currentWordAtPosition.endColumn===word.endColumn&&this.currentWordAtPosition.word===word.word)return Promise.resolve(0);this.currentWordAtPosition=word;const state=new EditorState(this.editor,15);return this.previousPromise&&(this.previousPromise.cancel(),this.previousPromise=null),this.previousPromise=createCancelablePromise((token=>this.findDefinition(position,token))),this.previousPromise.then((results=>{if(results&&results.length&&state.validate(this.editor))if(results.length>1)this.addDecoration(new Range(position.lineNumber,word.startColumn,position.lineNumber,word.endColumn),(new MarkdownString).appendText(nls.localize("multipleResults","Click to show {0} definitions.",results.length)));else{const result=results[0];if(!result.uri)return;this.textModelResolverService.createModelReference(result.uri).then((ref=>{if(!ref.object||!ref.object.textEditorModel)return void ref.dispose();const{object:{textEditorModel}}=ref,{startLineNumber}=result.range;if(startLineNumber<1||startLineNumber>textEditorModel.getLineCount())return void ref.dispose();const previewValue=this.getPreviewValue(textEditorModel,startLineNumber,result);let wordRange;wordRange=result.originSelectionRange?Range.lift(result.originSelectionRange):new Range(position.lineNumber,word.startColumn,position.lineNumber,word.endColumn);const languageId=this.languageService.guessLanguageIdByFilepathOrFirstLine(textEditorModel.uri);this.addDecoration(wordRange,(new MarkdownString).appendCodeblock(languageId||"",previewValue)),ref.dispose()}))}else this.removeLinkDecorations()})).then(void 0,onUnexpectedError)}getPreviewValue(textEditorModel,startLineNumber,result){let rangeToUse=result.range;rangeToUse.endLineNumber-rangeToUse.startLineNumber>=GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES&&(rangeToUse=this.getPreviewRangeBasedOnIndentation(textEditorModel,startLineNumber));return this.stripIndentationFromPreviewRange(textEditorModel,startLineNumber,rangeToUse)}stripIndentationFromPreviewRange(textEditorModel,startLineNumber,previewRange){let minIndent=textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);for(let endLineNumber=startLineNumber+1;endLineNumber<previewRange.endLineNumber;endLineNumber++){const endIndent=textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);minIndent=Math.min(minIndent,endIndent)}return textEditorModel.getValueInRange(previewRange).replace(new RegExp(`^\\s{${minIndent-1}}`,"gm"),"").trim()}getPreviewRangeBasedOnIndentation(textEditorModel,startLineNumber){const startIndent=textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber),maxLineNumber=Math.min(textEditorModel.getLineCount(),startLineNumber+GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);let endLineNumber=startLineNumber+1;for(;endLineNumber<maxLineNumber;endLineNumber++){if(startIndent===textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber))break}return new Range(startLineNumber,1,endLineNumber+1,1)}addDecoration(range,hoverMessage){const newDecorations={range,options:{description:"goto-definition-link",inlineClassName:"goto-definition-link",hoverMessage}};this.linkDecorations.set([newDecorations])}removeLinkDecorations(){this.linkDecorations.clear()}isEnabled(mouseEvent,withKey){return this.editor.hasModel()&&mouseEvent.isNoneOrSingleMouseDown&&6===mouseEvent.target.type&&(mouseEvent.hasTriggerModifier||!!withKey&&withKey.keyCodeIsTriggerKey)&&this.languageFeaturesService.definitionProvider.has(this.editor.getModel())}findDefinition(position,token){const model=this.editor.getModel();return model?getDefinitionsAtPosition(this.languageFeaturesService.definitionProvider,model,position,token):Promise.resolve(null)}gotoDefinition(position,openToSide){return this.editor.setPosition(position),this.editor.invokeWithinContext((accessor=>{const canPeek=!openToSide&&this.editor.getOption(80)&&!this.isInPeekEditor(accessor);return new DefinitionAction({openToSide,openInPeek:canPeek,muteMessage:!0},{alias:"",label:"",id:"",precondition:void 0}).run(accessor,this.editor)}))}isInPeekEditor(accessor){const contextKeyService=accessor.get(IContextKeyService);return PeekContext.inPeekEditor.getValue(contextKeyService)}dispose(){this.toUnhook.dispose()}};GotoDefinitionAtPositionEditorContribution.ID="editor.contrib.gotodefinitionatposition",GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES=8,GotoDefinitionAtPositionEditorContribution=__decorate([__param(1,ITextModelService),__param(2,ILanguageService),__param(3,ILanguageFeaturesService)],GotoDefinitionAtPositionEditorContribution);export{GotoDefinitionAtPositionEditorContribution};registerEditorContribution(GotoDefinitionAtPositionEditorContribution.ID,GotoDefinitionAtPositionEditorContribution),registerThemingParticipant(((theme,collector)=>{const activeLinkForeground=theme.getColor(editorActiveLinkForeground);activeLinkForeground&&collector.addRule(`.monaco-editor .goto-definition-link { color: ${activeLinkForeground} !important; }`)}));