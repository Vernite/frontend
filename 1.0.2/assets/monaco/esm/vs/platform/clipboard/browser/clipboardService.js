var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}},__awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import{isSafari,isWebkitWebView}from"../../../base/browser/browser.js";import{$,addDisposableListener}from"../../../base/browser/dom.js";import{DeferredPromise}from"../../../base/common/async.js";import{Disposable}from"../../../base/common/lifecycle.js";import{ILayoutService}from"../../layout/browser/layoutService.js";import{ILogService}from"../../log/common/log.js";let BrowserClipboardService=class BrowserClipboardService extends Disposable{constructor(layoutService,logService){super(),this.layoutService=layoutService,this.logService=logService,this.mapTextToType=new Map,this.findText="",this.resources=[],(isSafari||isWebkitWebView)&&this.installWebKitWriteTextWorkaround()}installWebKitWriteTextWorkaround(){const handler=()=>{const currentWritePromise=new DeferredPromise;this.webKitPendingClipboardWritePromise&&!this.webKitPendingClipboardWritePromise.isSettled&&this.webKitPendingClipboardWritePromise.cancel(),this.webKitPendingClipboardWritePromise=currentWritePromise,navigator.clipboard.write([new ClipboardItem({"text/plain":currentWritePromise.p})]).catch((err=>__awaiter(this,void 0,void 0,(function*(){err instanceof Error&&"NotAllowedError"===err.name&&currentWritePromise.isRejected||this.logService.error(err)}))))};this.layoutService.hasContainer&&(this._register(addDisposableListener(this.layoutService.container,"click",handler)),this._register(addDisposableListener(this.layoutService.container,"keydown",handler)))}writeText(text,type){return __awaiter(this,void 0,void 0,(function*(){if(type)return void this.mapTextToType.set(type,text);if(this.webKitPendingClipboardWritePromise)return this.webKitPendingClipboardWritePromise.complete(text);try{return yield navigator.clipboard.writeText(text)}catch(error){console.error(error)}const activeElement=document.activeElement,textArea=document.body.appendChild($("textarea",{"aria-hidden":!0}));textArea.style.height="1px",textArea.style.width="1px",textArea.style.position="absolute",textArea.value=text,textArea.focus(),textArea.select(),document.execCommand("copy"),activeElement instanceof HTMLElement&&activeElement.focus(),document.body.removeChild(textArea)}))}readText(type){return __awaiter(this,void 0,void 0,(function*(){if(type)return this.mapTextToType.get(type)||"";try{return yield navigator.clipboard.readText()}catch(error){return console.error(error),""}}))}readFindText(){return __awaiter(this,void 0,void 0,(function*(){return this.findText}))}writeFindText(text){return __awaiter(this,void 0,void 0,(function*(){this.findText=text}))}readResources(){return __awaiter(this,void 0,void 0,(function*(){return this.resources}))}};BrowserClipboardService=__decorate([__param(0,ILayoutService),__param(1,ILogService)],BrowserClipboardService);export{BrowserClipboardService};