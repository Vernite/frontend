var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}},__awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import"../../common/languages/languageConfigurationRegistry.js";import"./standaloneCodeEditorService.js";import"./standaloneLayoutService.js";import"../../../platform/undoRedo/common/undoRedoService.js";import"../../common/services/languageFeatureDebounce.js";import*as strings from"../../../base/common/strings.js";import*as dom from"../../../base/browser/dom.js";import{StandardKeyboardEvent}from"../../../base/browser/keyboardEvent.js";import{Emitter}from"../../../base/common/event.js";import{SimpleKeybinding,createKeybinding}from"../../../base/common/keybindings.js";import{ImmortalReference,toDisposable,DisposableStore,Disposable,combinedDisposable}from"../../../base/common/lifecycle.js";import{OS,isLinux,isMacintosh}from"../../../base/common/platform.js";import Severity from"../../../base/common/severity.js";import{URI}from"../../../base/common/uri.js";import{IBulkEditService,ResourceTextEdit}from"../../browser/services/bulkEditService.js";import{isDiffEditorConfigurationKey,isEditorConfigurationKey}from"../../common/config/editorConfigurationSchema.js";import{EditOperation}from"../../common/core/editOperation.js";import{Position as Pos}from"../../common/core/position.js";import{Range}from"../../common/core/range.js";import{IModelService}from"../../common/services/model.js";import{ITextModelService}from"../../common/services/resolverService.js";import{ITextResourceConfigurationService,ITextResourcePropertiesService}from"../../common/services/textResourceConfiguration.js";import{CommandsRegistry,ICommandService}from"../../../platform/commands/common/commands.js";import{IConfigurationService}from"../../../platform/configuration/common/configuration.js";import{Configuration,ConfigurationModel,ConfigurationChangeEvent}from"../../../platform/configuration/common/configurationModels.js";import{IContextKeyService}from"../../../platform/contextkey/common/contextkey.js";import{IDialogService}from"../../../platform/dialogs/common/dialogs.js";import{createDecorator,IInstantiationService}from"../../../platform/instantiation/common/instantiation.js";import{AbstractKeybindingService}from"../../../platform/keybinding/common/abstractKeybindingService.js";import{IKeybindingService}from"../../../platform/keybinding/common/keybinding.js";import{KeybindingResolver}from"../../../platform/keybinding/common/keybindingResolver.js";import{KeybindingsRegistry}from"../../../platform/keybinding/common/keybindingsRegistry.js";import{ResolvedKeybindingItem}from"../../../platform/keybinding/common/resolvedKeybindingItem.js";import{USLayoutResolvedKeybinding}from"../../../platform/keybinding/common/usLayoutResolvedKeybinding.js";import{ILabelService}from"../../../platform/label/common/label.js";import{INotificationService,NoOpNotification}from"../../../platform/notification/common/notification.js";import{IEditorProgressService,IProgressService}from"../../../platform/progress/common/progress.js";import{ITelemetryService}from"../../../platform/telemetry/common/telemetry.js";import{IWorkspaceContextService,WorkspaceFolder}from"../../../platform/workspace/common/workspace.js";import{ILayoutService}from"../../../platform/layout/browser/layoutService.js";import{StandaloneServicesNLS}from"../../common/standaloneStrings.js";import{basename}from"../../../base/common/resources.js";import{ICodeEditorService}from"../../browser/services/codeEditorService.js";import{ConsoleLogger,ILogService,LogService}from"../../../platform/log/common/log.js";import{IWorkspaceTrustManagementService}from"../../../platform/workspace/common/workspaceTrust.js";import{IContextMenuService,IContextViewService}from"../../../platform/contextview/browser/contextView.js";import{ContextViewService}from"../../../platform/contextview/browser/contextViewService.js";import{LanguageService}from"../../common/services/languageService.js";import{ContextMenuService}from"../../../platform/contextview/browser/contextMenuService.js";import{IThemeService}from"../../../platform/theme/common/themeService.js";import{getSingletonServiceDescriptors,registerSingleton}from"../../../platform/instantiation/common/extensions.js";import{OpenerService}from"../../browser/services/openerService.js";import{IEditorWorkerService}from"../../common/services/editorWorker.js";import{EditorWorkerService}from"../../browser/services/editorWorkerService.js";import{ILanguageService}from"../../common/languages/language.js";import{MarkerDecorationsService}from"../../common/services/markerDecorationsService.js";import{IMarkerDecorationsService}from"../../common/services/markerDecorations.js";import{ModelService}from"../../common/services/modelService.js";import{StandaloneQuickInputService}from"./quickInput/standaloneQuickInputService.js";import{StandaloneThemeService}from"./standaloneThemeService.js";import{IStandaloneThemeService}from"../common/standaloneTheme.js";import{AccessibilityService}from"../../../platform/accessibility/browser/accessibilityService.js";import{IAccessibilityService}from"../../../platform/accessibility/common/accessibility.js";import{IMenuService}from"../../../platform/actions/common/actions.js";import{MenuService}from"../../../platform/actions/common/menuService.js";import{BrowserClipboardService}from"../../../platform/clipboard/browser/clipboardService.js";import{IClipboardService}from"../../../platform/clipboard/common/clipboardService.js";import{ContextKeyService}from"../../../platform/contextkey/browser/contextKeyService.js";import{SyncDescriptor}from"../../../platform/instantiation/common/descriptors.js";import{InstantiationService}from"../../../platform/instantiation/common/instantiationService.js";import{ServiceCollection}from"../../../platform/instantiation/common/serviceCollection.js";import{IListService,ListService}from"../../../platform/list/browser/listService.js";import{IMarkerService}from"../../../platform/markers/common/markers.js";import{MarkerService}from"../../../platform/markers/common/markerService.js";import{IOpenerService}from"../../../platform/opener/common/opener.js";import{IQuickInputService}from"../../../platform/quickinput/common/quickInput.js";import{IStorageService,InMemoryStorageService}from"../../../platform/storage/common/storage.js";import"../../common/services/languageFeaturesService.js";import{DefaultConfigurationModel}from"../../../platform/configuration/common/configurations.js";class SimpleModel{constructor(model){this.disposed=!1,this.model=model,this._onWillDispose=new Emitter}get textEditorModel(){return this.model}dispose(){this.disposed=!0,this._onWillDispose.fire()}}let StandaloneTextModelService=class StandaloneTextModelService{constructor(modelService){this.modelService=modelService}createModelReference(resource){const model=this.modelService.getModel(resource);return model?Promise.resolve(new ImmortalReference(new SimpleModel(model))):Promise.reject(new Error("Model not found"))}};StandaloneTextModelService=__decorate([__param(0,IModelService)],StandaloneTextModelService);class StandaloneEditorProgressService{show(){return StandaloneEditorProgressService.NULL_PROGRESS_RUNNER}showWhile(promise,delay){return __awaiter(this,void 0,void 0,(function*(){yield promise}))}}StandaloneEditorProgressService.NULL_PROGRESS_RUNNER={done:()=>{},total:()=>{},worked:()=>{}};class StandaloneProgressService{withProgress(_options,task,onDidCancel){return task({report:()=>{}})}}class StandaloneDialogService{confirm(confirmation){return this.doConfirm(confirmation).then((confirmed=>({confirmed,checkboxChecked:!1})))}doConfirm(confirmation){let messageText=confirmation.message;return confirmation.detail&&(messageText=messageText+"\n\n"+confirmation.detail),Promise.resolve(window.confirm(messageText))}show(severity,message,buttons,options){return Promise.resolve({choice:0})}}export class StandaloneNotificationService{info(message){return this.notify({severity:Severity.Info,message})}warn(message){return this.notify({severity:Severity.Warning,message})}error(error){return this.notify({severity:Severity.Error,message:error})}notify(notification){switch(notification.severity){case Severity.Error:console.error(notification.message);break;case Severity.Warning:console.warn(notification.message);break;default:console.log(notification.message)}return StandaloneNotificationService.NO_OP}status(message,options){return Disposable.None}}StandaloneNotificationService.NO_OP=new NoOpNotification;let StandaloneCommandService=class StandaloneCommandService{constructor(instantiationService){this._onWillExecuteCommand=new Emitter,this._onDidExecuteCommand=new Emitter,this.onWillExecuteCommand=this._onWillExecuteCommand.event,this.onDidExecuteCommand=this._onDidExecuteCommand.event,this._instantiationService=instantiationService}executeCommand(id,...args){const command=CommandsRegistry.getCommand(id);if(!command)return Promise.reject(new Error(`command '${id}' not found`));try{this._onWillExecuteCommand.fire({commandId:id,args});const result=this._instantiationService.invokeFunction.apply(this._instantiationService,[command.handler,...args]);return this._onDidExecuteCommand.fire({commandId:id,args}),Promise.resolve(result)}catch(err){return Promise.reject(err)}}};StandaloneCommandService=__decorate([__param(0,IInstantiationService)],StandaloneCommandService);export{StandaloneCommandService};let StandaloneKeybindingService=class StandaloneKeybindingService extends AbstractKeybindingService{constructor(contextKeyService,commandService,telemetryService,notificationService,logService,codeEditorService){super(contextKeyService,commandService,telemetryService,notificationService,logService),this._cachedResolver=null,this._dynamicKeybindings=[],this._domNodeListeners=[];const addContainer=domNode=>{const disposables=new DisposableStore;disposables.add(dom.addDisposableListener(domNode,dom.EventType.KEY_DOWN,(e=>{const keyEvent=new StandardKeyboardEvent(e);this._dispatch(keyEvent,keyEvent.target)&&(keyEvent.preventDefault(),keyEvent.stopPropagation())}))),disposables.add(dom.addDisposableListener(domNode,dom.EventType.KEY_UP,(e=>{const keyEvent=new StandardKeyboardEvent(e);this._singleModifierDispatch(keyEvent,keyEvent.target)&&keyEvent.preventDefault()}))),this._domNodeListeners.push(new DomNodeListeners(domNode,disposables))},removeContainer=domNode=>{for(let i=0;i<this._domNodeListeners.length;i++){const domNodeListeners=this._domNodeListeners[i];domNodeListeners.domNode===domNode&&(this._domNodeListeners.splice(i,1),domNodeListeners.dispose())}},addCodeEditor=codeEditor=>{codeEditor.getOption(56)||addContainer(codeEditor.getContainerDomNode())};this._register(codeEditorService.onCodeEditorAdd(addCodeEditor)),this._register(codeEditorService.onCodeEditorRemove((codeEditor=>{codeEditor.getOption(56)||removeContainer(codeEditor.getContainerDomNode())}))),codeEditorService.listCodeEditors().forEach(addCodeEditor);const addDiffEditor=diffEditor=>{addContainer(diffEditor.getContainerDomNode())};this._register(codeEditorService.onDiffEditorAdd(addDiffEditor)),this._register(codeEditorService.onDiffEditorRemove((diffEditor=>{removeContainer(diffEditor.getContainerDomNode())}))),codeEditorService.listDiffEditors().forEach(addDiffEditor)}addDynamicKeybinding(command,keybinding,handler,when){return combinedDisposable(CommandsRegistry.registerCommand(command,handler),this.addDynamicKeybindings([{keybinding,command,when}]))}addDynamicKeybindings(rules){const entries=rules.map((rule=>{var _a,_b;const keybinding=createKeybinding(rule.keybinding,OS);return{keybinding:null!==(_a=null==keybinding?void 0:keybinding.parts)&&void 0!==_a?_a:null,command:null!==(_b=rule.command)&&void 0!==_b?_b:null,commandArgs:rule.commandArgs,when:rule.when,weight1:1e3,weight2:0,extensionId:null,isBuiltinExtension:!1}}));return this._dynamicKeybindings=this._dynamicKeybindings.concat(entries),this.updateResolver(),toDisposable((()=>{for(let i=0;i<this._dynamicKeybindings.length;i++)if(this._dynamicKeybindings[i]===entries[0])return this._dynamicKeybindings.splice(i,entries.length),void this.updateResolver()}))}updateResolver(){this._cachedResolver=null,this._onDidUpdateKeybindings.fire()}_getResolver(){if(!this._cachedResolver){const defaults=this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(),!0),overrides=this._toNormalizedKeybindingItems(this._dynamicKeybindings,!1);this._cachedResolver=new KeybindingResolver(defaults,overrides,(str=>this._log(str)))}return this._cachedResolver}_documentHasFocus(){return document.hasFocus()}_toNormalizedKeybindingItems(items,isDefault){const result=[];let resultLen=0;for(const item of items){const when=item.when||void 0,keybinding=item.keybinding;if(keybinding){const resolvedKeybindings=USLayoutResolvedKeybinding.resolveUserBinding(keybinding,OS);for(const resolvedKeybinding of resolvedKeybindings)result[resultLen++]=new ResolvedKeybindingItem(resolvedKeybinding,item.command,item.commandArgs,when,isDefault,null,!1)}else result[resultLen++]=new ResolvedKeybindingItem(void 0,item.command,item.commandArgs,when,isDefault,null,!1)}return result}resolveKeyboardEvent(keyboardEvent){const keybinding=new SimpleKeybinding(keyboardEvent.ctrlKey,keyboardEvent.shiftKey,keyboardEvent.altKey,keyboardEvent.metaKey,keyboardEvent.keyCode).toChord();return new USLayoutResolvedKeybinding(keybinding,OS)}};StandaloneKeybindingService=__decorate([__param(0,IContextKeyService),__param(1,ICommandService),__param(2,ITelemetryService),__param(3,INotificationService),__param(4,ILogService),__param(5,ICodeEditorService)],StandaloneKeybindingService);export{StandaloneKeybindingService};class DomNodeListeners extends Disposable{constructor(domNode,disposables){super(),this.domNode=domNode,this._register(disposables)}}function isConfigurationOverrides(thing){return thing&&"object"==typeof thing&&(!thing.overrideIdentifier||"string"==typeof thing.overrideIdentifier)&&(!thing.resource||thing.resource instanceof URI)}export class StandaloneConfigurationService{constructor(){this._onDidChangeConfiguration=new Emitter,this.onDidChangeConfiguration=this._onDidChangeConfiguration.event,this._configuration=new Configuration(new DefaultConfigurationModel,new ConfigurationModel,new ConfigurationModel,new ConfigurationModel)}getValue(arg1,arg2){const section="string"==typeof arg1?arg1:void 0,overrides=isConfigurationOverrides(arg1)?arg1:isConfigurationOverrides(arg2)?arg2:{};return this._configuration.getValue(section,overrides,void 0)}updateValues(values){const previous={data:this._configuration.toData()},changedKeys=[];for(const entry of values){const[key,value]=entry;this.getValue(key)!==value&&(this._configuration.updateValue(key,value),changedKeys.push(key))}if(changedKeys.length>0){const configurationChangeEvent=new ConfigurationChangeEvent({keys:changedKeys,overrides:[]},previous,this._configuration);configurationChangeEvent.source=8,configurationChangeEvent.sourceConfig=null,this._onDidChangeConfiguration.fire(configurationChangeEvent)}return Promise.resolve()}updateValue(key,value,arg3,arg4){return this.updateValues([[key,value]])}inspect(key,options={}){return this._configuration.inspect(key,options,void 0)}}let StandaloneResourceConfigurationService=class StandaloneResourceConfigurationService{constructor(configurationService){this.configurationService=configurationService,this._onDidChangeConfiguration=new Emitter,this.configurationService.onDidChangeConfiguration((e=>{this._onDidChangeConfiguration.fire({affectedKeys:e.affectedKeys,affectsConfiguration:(resource,configuration)=>e.affectsConfiguration(configuration)})}))}getValue(resource,arg2,arg3){const section=(Pos.isIPosition(arg2)?arg2:null)?"string"==typeof arg3?arg3:void 0:"string"==typeof arg2?arg2:void 0;return void 0===section?this.configurationService.getValue():this.configurationService.getValue(section)}};StandaloneResourceConfigurationService=__decorate([__param(0,IConfigurationService)],StandaloneResourceConfigurationService);let StandaloneResourcePropertiesService=class StandaloneResourcePropertiesService{constructor(configurationService){this.configurationService=configurationService}getEOL(resource,language){const eol=this.configurationService.getValue("files.eol",{overrideIdentifier:language,resource});return eol&&"string"==typeof eol&&"auto"!==eol?eol:isLinux||isMacintosh?"\n":"\r\n"}};StandaloneResourcePropertiesService=__decorate([__param(0,IConfigurationService)],StandaloneResourcePropertiesService);class StandaloneTelemetryService{publicLog(eventName,data){return Promise.resolve(void 0)}publicLog2(eventName,data){return this.publicLog(eventName,data)}}class StandaloneWorkspaceContextService{constructor(){const resource=URI.from({scheme:StandaloneWorkspaceContextService.SCHEME,authority:"model",path:"/"});this.workspace={id:"4064f6ec-cb38-4ad0-af64-ee6467e63c82",folders:[new WorkspaceFolder({uri:resource,name:"",index:0})]}}getWorkspace(){return this.workspace}getWorkspaceFolder(resource){return resource&&resource.scheme===StandaloneWorkspaceContextService.SCHEME?this.workspace.folders[0]:null}}StandaloneWorkspaceContextService.SCHEME="inmemory";export function updateConfigurationService(configurationService,source,isDiffEditor){if(!source)return;if(!(configurationService instanceof StandaloneConfigurationService))return;const toUpdate=[];Object.keys(source).forEach((key=>{isEditorConfigurationKey(key)&&toUpdate.push([`editor.${key}`,source[key]]),isDiffEditor&&isDiffEditorConfigurationKey(key)&&toUpdate.push([`diffEditor.${key}`,source[key]])})),toUpdate.length>0&&configurationService.updateValues(toUpdate)}let StandaloneBulkEditService=class StandaloneBulkEditService{constructor(_modelService){this._modelService=_modelService}hasPreviewHandler(){return!1}apply(edits,_options){return __awaiter(this,void 0,void 0,(function*(){const textEdits=new Map;for(const edit of edits){if(!(edit instanceof ResourceTextEdit))throw new Error("bad edit - only text edits are supported");const model=this._modelService.getModel(edit.resource);if(!model)throw new Error("bad edit - model not found");if("number"==typeof edit.versionId&&model.getVersionId()!==edit.versionId)throw new Error("bad state - model changed in the meantime");let array=textEdits.get(model);array||(array=[],textEdits.set(model,array)),array.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range),edit.textEdit.text))}let totalEdits=0,totalFiles=0;for(const[model,edits]of textEdits)model.pushStackElement(),model.pushEditOperations([],edits,(()=>[])),model.pushStackElement(),totalFiles+=1,totalEdits+=edits.length;return{ariaSummary:strings.format(StandaloneServicesNLS.bulkEditServiceSummary,totalEdits,totalFiles)}}))}};StandaloneBulkEditService=__decorate([__param(0,IModelService)],StandaloneBulkEditService);class StandaloneUriLabelService{getUriLabel(resource,options){return"file"===resource.scheme?resource.fsPath:resource.path}getUriBasenameLabel(resource){return basename(resource)}}let StandaloneContextViewService=class StandaloneContextViewService extends ContextViewService{constructor(layoutService,_codeEditorService){super(layoutService),this._codeEditorService=_codeEditorService}showContextView(delegate,container,shadowRoot){if(!container){const codeEditor=this._codeEditorService.getFocusedCodeEditor()||this._codeEditorService.getActiveCodeEditor();codeEditor&&(container=codeEditor.getContainerDomNode())}return super.showContextView(delegate,container,shadowRoot)}};StandaloneContextViewService=__decorate([__param(0,ILayoutService),__param(1,ICodeEditorService)],StandaloneContextViewService);class StandaloneWorkspaceTrustManagementService{constructor(){this._neverEmitter=new Emitter,this.onDidChangeTrust=this._neverEmitter.event}isWorkspaceTrusted(){return!0}}class StandaloneLanguageService extends LanguageService{constructor(){super()}}class StandaloneLogService extends LogService{constructor(){super(new ConsoleLogger)}}let StandaloneContextMenuService=class StandaloneContextMenuService extends ContextMenuService{constructor(telemetryService,notificationService,contextViewService,keybindingService,themeService){super(telemetryService,notificationService,contextViewService,keybindingService,themeService),this.configure({blockMouse:!1})}};StandaloneContextMenuService=__decorate([__param(0,ITelemetryService),__param(1,INotificationService),__param(2,IContextViewService),__param(3,IKeybindingService),__param(4,IThemeService)],StandaloneContextMenuService),registerSingleton(IConfigurationService,StandaloneConfigurationService),registerSingleton(ITextResourceConfigurationService,StandaloneResourceConfigurationService),registerSingleton(ITextResourcePropertiesService,StandaloneResourcePropertiesService),registerSingleton(IWorkspaceContextService,StandaloneWorkspaceContextService),registerSingleton(ILabelService,StandaloneUriLabelService),registerSingleton(ITelemetryService,StandaloneTelemetryService),registerSingleton(IDialogService,StandaloneDialogService),registerSingleton(INotificationService,StandaloneNotificationService),registerSingleton(IMarkerService,MarkerService),registerSingleton(ILanguageService,StandaloneLanguageService),registerSingleton(IStandaloneThemeService,StandaloneThemeService),registerSingleton(ILogService,StandaloneLogService),registerSingleton(IModelService,ModelService),registerSingleton(IMarkerDecorationsService,MarkerDecorationsService),registerSingleton(IContextKeyService,ContextKeyService),registerSingleton(IProgressService,StandaloneProgressService),registerSingleton(IEditorProgressService,StandaloneEditorProgressService),registerSingleton(IStorageService,InMemoryStorageService),registerSingleton(IEditorWorkerService,EditorWorkerService),registerSingleton(IBulkEditService,StandaloneBulkEditService),registerSingleton(IWorkspaceTrustManagementService,StandaloneWorkspaceTrustManagementService),registerSingleton(ITextModelService,StandaloneTextModelService),registerSingleton(IAccessibilityService,AccessibilityService),registerSingleton(IListService,ListService),registerSingleton(ICommandService,StandaloneCommandService),registerSingleton(IKeybindingService,StandaloneKeybindingService),registerSingleton(IQuickInputService,StandaloneQuickInputService),registerSingleton(IContextViewService,StandaloneContextViewService),registerSingleton(IOpenerService,OpenerService),registerSingleton(IClipboardService,BrowserClipboardService),registerSingleton(IContextMenuService,StandaloneContextMenuService),registerSingleton(IMenuService,MenuService);export var StandaloneServices;!function(StandaloneServices){const serviceCollection=new ServiceCollection;for(const[id,descriptor]of getSingletonServiceDescriptors())serviceCollection.set(id,descriptor);const instantiationService=new InstantiationService(serviceCollection,!0);serviceCollection.set(IInstantiationService,instantiationService),StandaloneServices.get=function get(serviceId){const r=serviceCollection.get(serviceId);if(!r)throw new Error("Missing service "+serviceId);return r instanceof SyncDescriptor?instantiationService.invokeFunction((accessor=>accessor.get(serviceId))):r};let initialized=!1;StandaloneServices.initialize=function initialize(overrides){if(initialized)return instantiationService;initialized=!0;for(const[id,descriptor]of getSingletonServiceDescriptors())serviceCollection.get(id)||serviceCollection.set(id,descriptor);for(const serviceId in overrides)if(overrides.hasOwnProperty(serviceId)){const serviceIdentifier=createDecorator(serviceId);serviceCollection.get(serviceIdentifier)instanceof SyncDescriptor&&serviceCollection.set(serviceIdentifier,overrides[serviceId])}return instantiationService}}(StandaloneServices||(StandaloneServices={}));