import*as dom from"../../../../base/browser/dom.js";import{CaseSensitiveToggle,RegexToggle,WholeWordsToggle}from"../../../../base/browser/ui/findinput/findInputToggles.js";import{Widget}from"../../../../base/browser/ui/widget.js";import{RunOnceScheduler}from"../../../../base/common/async.js";import{FIND_IDS}from"./findModel.js";import{contrastBorder,editorWidgetBackground,editorWidgetForeground,inputActiveOptionBackground,inputActiveOptionBorder,inputActiveOptionForeground,widgetShadow}from"../../../../platform/theme/common/colorRegistry.js";import{registerThemingParticipant}from"../../../../platform/theme/common/themeService.js";export class FindOptionsWidget extends Widget{constructor(editor,state,keybindingService,themeService){super(),this._hideSoon=this._register(new RunOnceScheduler((()=>this._hide()),2e3)),this._isVisible=!1,this._editor=editor,this._state=state,this._keybindingService=keybindingService,this._domNode=document.createElement("div"),this._domNode.className="findOptionsWidget",this._domNode.style.display="none",this._domNode.style.top="10px",this._domNode.setAttribute("role","presentation"),this._domNode.setAttribute("aria-hidden","true");const inputActiveOptionBorderColor=themeService.getColorTheme().getColor(inputActiveOptionBorder),inputActiveOptionForegroundColor=themeService.getColorTheme().getColor(inputActiveOptionForeground),inputActiveOptionBackgroundColor=themeService.getColorTheme().getColor(inputActiveOptionBackground);this.caseSensitive=this._register(new CaseSensitiveToggle({appendTitle:this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),isChecked:this._state.matchCase,inputActiveOptionBorder:inputActiveOptionBorderColor,inputActiveOptionForeground:inputActiveOptionForegroundColor,inputActiveOptionBackground:inputActiveOptionBackgroundColor})),this._domNode.appendChild(this.caseSensitive.domNode),this._register(this.caseSensitive.onChange((()=>{this._state.change({matchCase:this.caseSensitive.checked},!1)}))),this.wholeWords=this._register(new WholeWordsToggle({appendTitle:this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),isChecked:this._state.wholeWord,inputActiveOptionBorder:inputActiveOptionBorderColor,inputActiveOptionForeground:inputActiveOptionForegroundColor,inputActiveOptionBackground:inputActiveOptionBackgroundColor})),this._domNode.appendChild(this.wholeWords.domNode),this._register(this.wholeWords.onChange((()=>{this._state.change({wholeWord:this.wholeWords.checked},!1)}))),this.regex=this._register(new RegexToggle({appendTitle:this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),isChecked:this._state.isRegex,inputActiveOptionBorder:inputActiveOptionBorderColor,inputActiveOptionForeground:inputActiveOptionForegroundColor,inputActiveOptionBackground:inputActiveOptionBackgroundColor})),this._domNode.appendChild(this.regex.domNode),this._register(this.regex.onChange((()=>{this._state.change({isRegex:this.regex.checked},!1)}))),this._editor.addOverlayWidget(this),this._register(this._state.onFindReplaceStateChange((e=>{let somethingChanged=!1;e.isRegex&&(this.regex.checked=this._state.isRegex,somethingChanged=!0),e.wholeWord&&(this.wholeWords.checked=this._state.wholeWord,somethingChanged=!0),e.matchCase&&(this.caseSensitive.checked=this._state.matchCase,somethingChanged=!0),!this._state.isRevealed&&somethingChanged&&this._revealTemporarily()}))),this._register(dom.addDisposableListener(this._domNode,dom.EventType.MOUSE_LEAVE,(e=>this._onMouseLeave()))),this._register(dom.addDisposableListener(this._domNode,"mouseover",(e=>this._onMouseOver()))),this._applyTheme(themeService.getColorTheme()),this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)))}_keybindingLabelFor(actionId){const kb=this._keybindingService.lookupKeybinding(actionId);return kb?` (${kb.getLabel()})`:""}dispose(){this._editor.removeOverlayWidget(this),super.dispose()}getId(){return FindOptionsWidget.ID}getDomNode(){return this._domNode}getPosition(){return{preference:0}}highlightFindOptions(){this._revealTemporarily()}_revealTemporarily(){this._show(),this._hideSoon.schedule()}_onMouseLeave(){this._hideSoon.schedule()}_onMouseOver(){this._hideSoon.cancel()}_show(){this._isVisible||(this._isVisible=!0,this._domNode.style.display="block")}_hide(){this._isVisible&&(this._isVisible=!1,this._domNode.style.display="none")}_applyTheme(theme){const inputStyles={inputActiveOptionBorder:theme.getColor(inputActiveOptionBorder),inputActiveOptionForeground:theme.getColor(inputActiveOptionForeground),inputActiveOptionBackground:theme.getColor(inputActiveOptionBackground)};this.caseSensitive.style(inputStyles),this.wholeWords.style(inputStyles),this.regex.style(inputStyles)}}FindOptionsWidget.ID="editor.contrib.findOptionsWidget",registerThemingParticipant(((theme,collector)=>{const widgetBackground=theme.getColor(editorWidgetBackground);widgetBackground&&collector.addRule(`.monaco-editor .findOptionsWidget { background-color: ${widgetBackground}; }`);const widgetForeground=theme.getColor(editorWidgetForeground);widgetForeground&&collector.addRule(`.monaco-editor .findOptionsWidget { color: ${widgetForeground}; }`);const widgetShadowColor=theme.getColor(widgetShadow);widgetShadowColor&&collector.addRule(`.monaco-editor .findOptionsWidget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);const hcBorder=theme.getColor(contrastBorder);hcBorder&&collector.addRule(`.monaco-editor .findOptionsWidget { border: 2px solid ${hcBorder}; }`)}));