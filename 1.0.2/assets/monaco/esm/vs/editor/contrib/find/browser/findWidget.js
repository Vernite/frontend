var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import*as dom from"../../../../base/browser/dom.js";import{alert as alertFn}from"../../../../base/browser/ui/aria/aria.js";import{Toggle}from"../../../../base/browser/ui/toggle/toggle.js";import{Sash}from"../../../../base/browser/ui/sash/sash.js";import{Widget}from"../../../../base/browser/ui/widget.js";import{Delayer}from"../../../../base/common/async.js";import{Codicon}from"../../../../base/common/codicons.js";import{onUnexpectedError}from"../../../../base/common/errors.js";import{toDisposable}from"../../../../base/common/lifecycle.js";import*as platform from"../../../../base/common/platform.js";import*as strings from"../../../../base/common/strings.js";import"./findWidget.css";import{Range}from"../../../common/core/range.js";import{CONTEXT_FIND_INPUT_FOCUSED,CONTEXT_REPLACE_INPUT_FOCUSED,FIND_IDS,MATCHES_LIMIT}from"./findModel.js";import*as nls from"../../../../nls.js";import{ContextScopedFindInput,ContextScopedReplaceInput}from"../../../../platform/history/browser/contextScopedHistoryWidget.js";import{showHistoryKeybindingHint}from"../../../../platform/history/browser/historyWidgetKeybindingHint.js";import{contrastBorder,editorFindMatch,editorFindMatchBorder,editorFindMatchHighlight,editorFindMatchHighlightBorder,editorFindRangeHighlight,editorFindRangeHighlightBorder,editorWidgetBackground,editorWidgetBorder,editorWidgetForeground,editorWidgetResizeBorder,errorForeground,focusBorder,inputActiveOptionBackground,inputActiveOptionBorder,inputActiveOptionForeground,inputBackground,inputBorder,inputForeground,inputValidationErrorBackground,inputValidationErrorBorder,inputValidationErrorForeground,inputValidationInfoBackground,inputValidationInfoBorder,inputValidationInfoForeground,inputValidationWarningBackground,inputValidationWarningBorder,inputValidationWarningForeground,toolbarHoverBackground,widgetShadow}from"../../../../platform/theme/common/colorRegistry.js";import{registerIcon,widgetClose}from"../../../../platform/theme/common/iconRegistry.js";import{registerThemingParticipant,ThemeIcon}from"../../../../platform/theme/common/themeService.js";import{isHighContrast}from"../../../../platform/theme/common/theme.js";const findSelectionIcon=registerIcon("find-selection",Codicon.selection,nls.localize("findSelectionIcon","Icon for 'Find in Selection' in the editor find widget.")),findCollapsedIcon=registerIcon("find-collapsed",Codicon.chevronRight,nls.localize("findCollapsedIcon","Icon to indicate that the editor find widget is collapsed.")),findExpandedIcon=registerIcon("find-expanded",Codicon.chevronDown,nls.localize("findExpandedIcon","Icon to indicate that the editor find widget is expanded."));export const findReplaceIcon=registerIcon("find-replace",Codicon.replace,nls.localize("findReplaceIcon","Icon for 'Replace' in the editor find widget."));export const findReplaceAllIcon=registerIcon("find-replace-all",Codicon.replaceAll,nls.localize("findReplaceAllIcon","Icon for 'Replace All' in the editor find widget."));export const findPreviousMatchIcon=registerIcon("find-previous-match",Codicon.arrowUp,nls.localize("findPreviousMatchIcon","Icon for 'Find Previous' in the editor find widget."));export const findNextMatchIcon=registerIcon("find-next-match",Codicon.arrowDown,nls.localize("findNextMatchIcon","Icon for 'Find Next' in the editor find widget."));const NLS_FIND_INPUT_LABEL=nls.localize("label.find","Find"),NLS_FIND_INPUT_PLACEHOLDER=nls.localize("placeholder.find","Find"),NLS_PREVIOUS_MATCH_BTN_LABEL=nls.localize("label.previousMatchButton","Previous Match"),NLS_NEXT_MATCH_BTN_LABEL=nls.localize("label.nextMatchButton","Next Match"),NLS_TOGGLE_SELECTION_FIND_TITLE=nls.localize("label.toggleSelectionFind","Find in Selection"),NLS_CLOSE_BTN_LABEL=nls.localize("label.closeButton","Close"),NLS_REPLACE_INPUT_LABEL=nls.localize("label.replace","Replace"),NLS_REPLACE_INPUT_PLACEHOLDER=nls.localize("placeholder.replace","Replace"),NLS_REPLACE_BTN_LABEL=nls.localize("label.replaceButton","Replace"),NLS_REPLACE_ALL_BTN_LABEL=nls.localize("label.replaceAllButton","Replace All"),NLS_TOGGLE_REPLACE_MODE_BTN_LABEL=nls.localize("label.toggleReplaceButton","Toggle Replace"),NLS_MATCHES_COUNT_LIMIT_TITLE=nls.localize("title.matchesCountLimit","Only the first {0} results are highlighted, but all find operations work on the entire text.",MATCHES_LIMIT);export const NLS_MATCHES_LOCATION=nls.localize("label.matchesLocation","{0} of {1}");export const NLS_NO_RESULTS=nls.localize("label.noResults","No results");const FIND_WIDGET_INITIAL_WIDTH=419,PART_WIDTH=275,FIND_INPUT_AREA_WIDTH=221;let MAX_MATCHES_COUNT_WIDTH=69;const FIND_INPUT_AREA_HEIGHT=33,ctrlEnterReplaceAllWarningPromptedKey="ctrlEnterReplaceAll.windows.donotask",ctrlKeyMod=platform.isMacintosh?256:2048;export class FindWidgetViewZone{constructor(afterLineNumber){this.afterLineNumber=afterLineNumber,this.heightInPx=33,this.suppressMouseDown=!1,this.domNode=document.createElement("div"),this.domNode.className="dock-find-viewzone"}}function stopPropagationForMultiLineUpwards(event,value,textarea){const isMultiline=!!value.match(/\n/);textarea&&isMultiline&&textarea.selectionStart>0&&event.stopPropagation()}function stopPropagationForMultiLineDownwards(event,value,textarea){const isMultiline=!!value.match(/\n/);textarea&&isMultiline&&textarea.selectionEnd<textarea.value.length&&event.stopPropagation()}export class FindWidget extends Widget{constructor(codeEditor,controller,state,contextViewProvider,keybindingService,contextKeyService,themeService,storageService,notificationService){super(),this._cachedHeight=null,this._revealTimeouts=[],this._codeEditor=codeEditor,this._controller=controller,this._state=state,this._contextViewProvider=contextViewProvider,this._keybindingService=keybindingService,this._contextKeyService=contextKeyService,this._storageService=storageService,this._notificationService=notificationService,this._ctrlEnterReplaceAllWarningPrompted=!!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey,0),this._isVisible=!1,this._isReplaceVisible=!1,this._ignoreChangeEvent=!1,this._updateHistoryDelayer=new Delayer(500),this._register(toDisposable((()=>this._updateHistoryDelayer.cancel()))),this._register(this._state.onFindReplaceStateChange((e=>this._onStateChanged(e)))),this._buildDomNode(),this._updateButtons(),this._tryUpdateWidgetWidth(),this._findInput.inputBox.layout(),this._register(this._codeEditor.onDidChangeConfiguration((e=>{if(e.hasChanged(83)&&(this._codeEditor.getOption(83)&&this._state.change({isReplaceRevealed:!1},!1),this._updateButtons()),e.hasChanged(133)&&this._tryUpdateWidgetWidth(),e.hasChanged(2)&&this.updateAccessibilitySupport(),e.hasChanged(37)){const addExtraSpaceOnTop=this._codeEditor.getOption(37).addExtraSpaceOnTop;addExtraSpaceOnTop&&!this._viewZone&&(this._viewZone=new FindWidgetViewZone(0),this._showViewZone()),!addExtraSpaceOnTop&&this._viewZone&&this._removeViewZone()}}))),this.updateAccessibilitySupport(),this._register(this._codeEditor.onDidChangeCursorSelection((()=>{this._isVisible&&this._updateToggleSelectionFindButton()}))),this._register(this._codeEditor.onDidFocusEditorWidget((()=>__awaiter(this,void 0,void 0,(function*(){if(this._isVisible){const globalBufferTerm=yield this._controller.getGlobalBufferTerm();globalBufferTerm&&globalBufferTerm!==this._state.searchString&&(this._state.change({searchString:globalBufferTerm},!1),this._findInput.select())}}))))),this._findInputFocused=CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService),this._findFocusTracker=this._register(dom.trackFocus(this._findInput.inputBox.inputElement)),this._register(this._findFocusTracker.onDidFocus((()=>{this._findInputFocused.set(!0),this._updateSearchScope()}))),this._register(this._findFocusTracker.onDidBlur((()=>{this._findInputFocused.set(!1)}))),this._replaceInputFocused=CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService),this._replaceFocusTracker=this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement)),this._register(this._replaceFocusTracker.onDidFocus((()=>{this._replaceInputFocused.set(!0),this._updateSearchScope()}))),this._register(this._replaceFocusTracker.onDidBlur((()=>{this._replaceInputFocused.set(!1)}))),this._codeEditor.addOverlayWidget(this),this._codeEditor.getOption(37).addExtraSpaceOnTop&&(this._viewZone=new FindWidgetViewZone(0)),this._applyTheme(themeService.getColorTheme()),this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this))),this._register(this._codeEditor.onDidChangeModel((()=>{this._isVisible&&(this._viewZoneId=void 0)}))),this._register(this._codeEditor.onDidScrollChange((e=>{e.scrollTopChanged?this._layoutViewZone():setTimeout((()=>{this._layoutViewZone()}),0)})))}getId(){return FindWidget.ID}getDomNode(){return this._domNode}getPosition(){return this._isVisible?{preference:0}:null}_onStateChanged(e){if(e.searchString){try{this._ignoreChangeEvent=!0,this._findInput.setValue(this._state.searchString)}finally{this._ignoreChangeEvent=!1}this._updateButtons()}if(e.replaceString&&(this._replaceInput.inputBox.value=this._state.replaceString),e.isRevealed&&(this._state.isRevealed?this._reveal():this._hide(!0)),e.isReplaceRevealed&&(this._state.isReplaceRevealed?this._codeEditor.getOption(83)||this._isReplaceVisible||(this._isReplaceVisible=!0,this._replaceInput.width=dom.getTotalWidth(this._findInput.domNode),this._updateButtons(),this._replaceInput.inputBox.layout()):this._isReplaceVisible&&(this._isReplaceVisible=!1,this._updateButtons())),(e.isRevealed||e.isReplaceRevealed)&&(this._state.isRevealed||this._state.isReplaceRevealed)&&this._tryUpdateHeight()&&this._showViewZone(),e.isRegex&&this._findInput.setRegex(this._state.isRegex),e.wholeWord&&this._findInput.setWholeWords(this._state.wholeWord),e.matchCase&&this._findInput.setCaseSensitive(this._state.matchCase),e.preserveCase&&this._replaceInput.setPreserveCase(this._state.preserveCase),e.searchScope&&(this._state.searchScope?this._toggleSelectionFind.checked=!0:this._toggleSelectionFind.checked=!1,this._updateToggleSelectionFindButton()),e.searchString||e.matchesCount||e.matchesPosition){const showRedOutline=this._state.searchString.length>0&&0===this._state.matchesCount;this._domNode.classList.toggle("no-results",showRedOutline),this._updateMatchesCount(),this._updateButtons()}(e.searchString||e.currentMatch)&&this._layoutViewZone(),e.updateHistory&&this._delayedUpdateHistory(),e.loop&&this._updateButtons()}_delayedUpdateHistory(){this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(void 0,onUnexpectedError)}_updateHistory(){this._state.searchString&&this._findInput.inputBox.addToHistory(),this._state.replaceString&&this._replaceInput.inputBox.addToHistory()}_updateMatchesCount(){let label;if(this._matchesCount.style.minWidth=MAX_MATCHES_COUNT_WIDTH+"px",this._state.matchesCount>=MATCHES_LIMIT?this._matchesCount.title=NLS_MATCHES_COUNT_LIMIT_TITLE:this._matchesCount.title="",this._matchesCount.firstChild&&this._matchesCount.removeChild(this._matchesCount.firstChild),this._state.matchesCount>0){let matchesCount=String(this._state.matchesCount);this._state.matchesCount>=MATCHES_LIMIT&&(matchesCount+="+");let matchesPosition=String(this._state.matchesPosition);"0"===matchesPosition&&(matchesPosition="?"),label=strings.format(NLS_MATCHES_LOCATION,matchesPosition,matchesCount)}else label=NLS_NO_RESULTS;this._matchesCount.appendChild(document.createTextNode(label)),alertFn(this._getAriaLabel(label,this._state.currentMatch,this._state.searchString)),MAX_MATCHES_COUNT_WIDTH=Math.max(MAX_MATCHES_COUNT_WIDTH,this._matchesCount.clientWidth)}_getAriaLabel(label,currentMatch,searchString){if(label===NLS_NO_RESULTS)return""===searchString?nls.localize("ariaSearchNoResultEmpty","{0} found",label):nls.localize("ariaSearchNoResult","{0} found for '{1}'",label,searchString);if(currentMatch){const ariaLabel=nls.localize("ariaSearchNoResultWithLineNum","{0} found for '{1}', at {2}",label,searchString,currentMatch.startLineNumber+":"+currentMatch.startColumn),model=this._codeEditor.getModel();if(model&&currentMatch.startLineNumber<=model.getLineCount()&&currentMatch.startLineNumber>=1){return`${model.getLineContent(currentMatch.startLineNumber)}, ${ariaLabel}`}return ariaLabel}return nls.localize("ariaSearchNoResultWithLineNumNoCurrentMatch","{0} found for '{1}'",label,searchString)}_updateToggleSelectionFindButton(){const selection=this._codeEditor.getSelection(),isSelection=!!selection&&(selection.startLineNumber!==selection.endLineNumber||selection.startColumn!==selection.endColumn),isChecked=this._toggleSelectionFind.checked;this._isVisible&&(isChecked||isSelection)?this._toggleSelectionFind.enable():this._toggleSelectionFind.disable()}_updateButtons(){this._findInput.setEnabled(this._isVisible),this._replaceInput.setEnabled(this._isVisible&&this._isReplaceVisible),this._updateToggleSelectionFindButton(),this._closeBtn.setEnabled(this._isVisible);const findInputIsNonEmpty=this._state.searchString.length>0,matchesCount=!!this._state.matchesCount;this._prevBtn.setEnabled(this._isVisible&&findInputIsNonEmpty&&matchesCount&&this._state.canNavigateBack()),this._nextBtn.setEnabled(this._isVisible&&findInputIsNonEmpty&&matchesCount&&this._state.canNavigateForward()),this._replaceBtn.setEnabled(this._isVisible&&this._isReplaceVisible&&findInputIsNonEmpty),this._replaceAllBtn.setEnabled(this._isVisible&&this._isReplaceVisible&&findInputIsNonEmpty),this._domNode.classList.toggle("replaceToggled",this._isReplaceVisible),this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);const canReplace=!this._codeEditor.getOption(83);this._toggleReplaceBtn.setEnabled(this._isVisible&&canReplace)}_reveal(){if(this._revealTimeouts.forEach((e=>{clearTimeout(e)})),this._revealTimeouts=[],!this._isVisible){this._isVisible=!0;const selection=this._codeEditor.getSelection();switch(this._codeEditor.getOption(37).autoFindInSelection){case"always":this._toggleSelectionFind.checked=!0;break;case"never":this._toggleSelectionFind.checked=!1;break;case"multiline":{const isSelectionMultipleLine=!!selection&&selection.startLineNumber!==selection.endLineNumber;this._toggleSelectionFind.checked=isSelectionMultipleLine;break}}this._tryUpdateWidgetWidth(),this._updateButtons(),this._revealTimeouts.push(setTimeout((()=>{this._domNode.classList.add("visible"),this._domNode.setAttribute("aria-hidden","false")}),0)),this._revealTimeouts.push(setTimeout((()=>{this._findInput.validate()}),200)),this._codeEditor.layoutOverlayWidget(this);let adjustEditorScrollTop=!0;if(this._codeEditor.getOption(37).seedSearchStringFromSelection&&selection){const domNode=this._codeEditor.getDomNode();if(domNode){const editorCoords=dom.getDomNodePagePosition(domNode),startCoords=this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition()),startLeft=editorCoords.left+(startCoords?startCoords.left:0),startTop=startCoords?startCoords.top:0;if(this._viewZone&&startTop<this._viewZone.heightInPx){selection.endLineNumber>selection.startLineNumber&&(adjustEditorScrollTop=!1);const leftOfFindWidget=dom.getTopLeftOffset(this._domNode).left;startLeft>leftOfFindWidget&&(adjustEditorScrollTop=!1);const endCoords=this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());editorCoords.left+(endCoords?endCoords.left:0)>leftOfFindWidget&&(adjustEditorScrollTop=!1)}}}this._showViewZone(adjustEditorScrollTop)}}_hide(focusTheEditor){this._revealTimeouts.forEach((e=>{clearTimeout(e)})),this._revealTimeouts=[],this._isVisible&&(this._isVisible=!1,this._updateButtons(),this._domNode.classList.remove("visible"),this._domNode.setAttribute("aria-hidden","true"),this._findInput.clearMessage(),focusTheEditor&&this._codeEditor.focus(),this._codeEditor.layoutOverlayWidget(this),this._removeViewZone())}_layoutViewZone(targetScrollTop){if(!this._codeEditor.getOption(37).addExtraSpaceOnTop)return void this._removeViewZone();if(!this._isVisible)return;const viewZone=this._viewZone;void 0===this._viewZoneId&&viewZone&&this._codeEditor.changeViewZones((accessor=>{viewZone.heightInPx=this._getHeight(),this._viewZoneId=accessor.addZone(viewZone),this._codeEditor.setScrollTop(targetScrollTop||this._codeEditor.getScrollTop()+viewZone.heightInPx)}))}_showViewZone(adjustScroll=!0){if(!this._isVisible)return;if(!this._codeEditor.getOption(37).addExtraSpaceOnTop)return;void 0===this._viewZone&&(this._viewZone=new FindWidgetViewZone(0));const viewZone=this._viewZone;this._codeEditor.changeViewZones((accessor=>{if(void 0!==this._viewZoneId){const newHeight=this._getHeight();if(newHeight===viewZone.heightInPx)return;const scrollAdjustment=newHeight-viewZone.heightInPx;return viewZone.heightInPx=newHeight,accessor.layoutZone(this._viewZoneId),void(adjustScroll&&this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()+scrollAdjustment))}{let scrollAdjustment=this._getHeight();if(scrollAdjustment-=this._codeEditor.getOption(77).top,scrollAdjustment<=0)return;viewZone.heightInPx=scrollAdjustment,this._viewZoneId=accessor.addZone(viewZone),adjustScroll&&this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()+scrollAdjustment)}}))}_removeViewZone(){this._codeEditor.changeViewZones((accessor=>{void 0!==this._viewZoneId&&(accessor.removeZone(this._viewZoneId),this._viewZoneId=void 0,this._viewZone&&(this._codeEditor.setScrollTop(this._codeEditor.getScrollTop()-this._viewZone.heightInPx),this._viewZone=void 0))}))}_applyTheme(theme){const inputStyles={inputActiveOptionBorder:theme.getColor(inputActiveOptionBorder),inputActiveOptionBackground:theme.getColor(inputActiveOptionBackground),inputActiveOptionForeground:theme.getColor(inputActiveOptionForeground),inputBackground:theme.getColor(inputBackground),inputForeground:theme.getColor(inputForeground),inputBorder:theme.getColor(inputBorder),inputValidationInfoBackground:theme.getColor(inputValidationInfoBackground),inputValidationInfoForeground:theme.getColor(inputValidationInfoForeground),inputValidationInfoBorder:theme.getColor(inputValidationInfoBorder),inputValidationWarningBackground:theme.getColor(inputValidationWarningBackground),inputValidationWarningForeground:theme.getColor(inputValidationWarningForeground),inputValidationWarningBorder:theme.getColor(inputValidationWarningBorder),inputValidationErrorBackground:theme.getColor(inputValidationErrorBackground),inputValidationErrorForeground:theme.getColor(inputValidationErrorForeground),inputValidationErrorBorder:theme.getColor(inputValidationErrorBorder)};this._findInput.style(inputStyles),this._replaceInput.style(inputStyles),this._toggleSelectionFind.style(inputStyles)}_tryUpdateWidgetWidth(){if(!this._isVisible)return;if(!dom.isInDOM(this._domNode))return;const layoutInfo=this._codeEditor.getLayoutInfo();if(layoutInfo.contentWidth<=0)return void this._domNode.classList.add("hiddenEditor");this._domNode.classList.contains("hiddenEditor")&&this._domNode.classList.remove("hiddenEditor");const editorWidth=layoutInfo.width,minimapWidth=layoutInfo.minimap.minimapWidth;let collapsedFindWidget=!1,reducedFindWidget=!1,narrowFindWidget=!1;if(this._resized){if(dom.getTotalWidth(this._domNode)>419)return this._domNode.style.maxWidth=editorWidth-28-minimapWidth-15+"px",void(this._replaceInput.width=dom.getTotalWidth(this._findInput.domNode))}if(447+minimapWidth>=editorWidth&&(reducedFindWidget=!0),447+minimapWidth-MAX_MATCHES_COUNT_WIDTH>=editorWidth&&(narrowFindWidget=!0),447+minimapWidth-MAX_MATCHES_COUNT_WIDTH>=editorWidth+50&&(collapsedFindWidget=!0),this._domNode.classList.toggle("collapsed-find-widget",collapsedFindWidget),this._domNode.classList.toggle("narrow-find-widget",narrowFindWidget),this._domNode.classList.toggle("reduced-find-widget",reducedFindWidget),narrowFindWidget||collapsedFindWidget||(this._domNode.style.maxWidth=editorWidth-28-minimapWidth-15+"px"),this._resized){this._findInput.inputBox.layout();const findInputWidth=this._findInput.inputBox.element.clientWidth;findInputWidth>0&&(this._replaceInput.width=findInputWidth)}else this._isReplaceVisible&&(this._replaceInput.width=dom.getTotalWidth(this._findInput.domNode))}_getHeight(){let totalheight=0;return totalheight+=4,totalheight+=this._findInput.inputBox.height+2,this._isReplaceVisible&&(totalheight+=4,totalheight+=this._replaceInput.inputBox.height+2),totalheight+=4,totalheight}_tryUpdateHeight(){const totalHeight=this._getHeight();return(null===this._cachedHeight||this._cachedHeight!==totalHeight)&&(this._cachedHeight=totalHeight,this._domNode.style.height=`${totalHeight}px`,!0)}focusFindInput(){this._findInput.select(),this._findInput.focus()}focusReplaceInput(){this._replaceInput.select(),this._replaceInput.focus()}highlightFindOptions(){this._findInput.highlightFindOptions()}_updateSearchScope(){if(this._codeEditor.hasModel()&&this._toggleSelectionFind.checked){const selections=this._codeEditor.getSelections();selections.map((selection=>{1===selection.endColumn&&selection.endLineNumber>selection.startLineNumber&&(selection=selection.setEndPosition(selection.endLineNumber-1,this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber-1)));const currentMatch=this._state.currentMatch;return selection.startLineNumber===selection.endLineNumber||Range.equalsRange(selection,currentMatch)?null:selection})).filter((element=>!!element)),selections.length&&this._state.change({searchScope:selections},!0)}}_onFindInputMouseDown(e){e.middleButton&&e.stopPropagation()}_onFindInputKeyDown(e){return e.equals(3|ctrlKeyMod)?(this._keybindingService.dispatchEvent(e,e.target)||this._findInput.inputBox.insertAtCursor("\n"),void e.preventDefault()):e.equals(2)?(this._isReplaceVisible?this._replaceInput.focus():this._findInput.focusOnCaseSensitive(),void e.preventDefault()):e.equals(2066)?(this._codeEditor.focus(),void e.preventDefault()):e.equals(16)?stopPropagationForMultiLineUpwards(e,this._findInput.getValue(),this._findInput.domNode.querySelector("textarea")):e.equals(18)?stopPropagationForMultiLineDownwards(e,this._findInput.getValue(),this._findInput.domNode.querySelector("textarea")):void 0}_onReplaceInputKeyDown(e){return e.equals(3|ctrlKeyMod)?(this._keybindingService.dispatchEvent(e,e.target)||(platform.isWindows&&platform.isNative&&!this._ctrlEnterReplaceAllWarningPrompted&&(this._notificationService.info(nls.localize("ctrlEnter.keybindingChanged","Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.")),this._ctrlEnterReplaceAllWarningPrompted=!0,this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey,!0,0,0)),this._replaceInput.inputBox.insertAtCursor("\n")),void e.preventDefault()):e.equals(2)?(this._findInput.focusOnCaseSensitive(),void e.preventDefault()):e.equals(1026)?(this._findInput.focus(),void e.preventDefault()):e.equals(2066)?(this._codeEditor.focus(),void e.preventDefault()):e.equals(16)?stopPropagationForMultiLineUpwards(e,this._replaceInput.inputBox.value,this._replaceInput.inputBox.element.querySelector("textarea")):e.equals(18)?stopPropagationForMultiLineDownwards(e,this._replaceInput.inputBox.value,this._replaceInput.inputBox.element.querySelector("textarea")):void 0}getVerticalSashLeft(_sash){return 0}_keybindingLabelFor(actionId){const kb=this._keybindingService.lookupKeybinding(actionId);return kb?` (${kb.getLabel()})`:""}_buildDomNode(){this._findInput=this._register(new ContextScopedFindInput(null,this._contextViewProvider,{width:221,label:NLS_FIND_INPUT_LABEL,placeholder:NLS_FIND_INPUT_PLACEHOLDER,appendCaseSensitiveLabel:this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),appendWholeWordsLabel:this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),appendRegexLabel:this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),validation:value=>{if(0===value.length||!this._findInput.getRegex())return null;try{return new RegExp(value,"gu"),null}catch(e){return{content:e.message}}},flexibleHeight:true,flexibleWidth:true,flexibleMaxHeight:118,showHistoryHint:()=>showHistoryKeybindingHint(this._keybindingService)},this._contextKeyService,!0)),this._findInput.setRegex(!!this._state.isRegex),this._findInput.setCaseSensitive(!!this._state.matchCase),this._findInput.setWholeWords(!!this._state.wholeWord),this._register(this._findInput.onKeyDown((e=>this._onFindInputKeyDown(e)))),this._register(this._findInput.inputBox.onDidChange((()=>{this._ignoreChangeEvent||this._state.change({searchString:this._findInput.getValue()},!0)}))),this._register(this._findInput.onDidOptionChange((()=>{this._state.change({isRegex:this._findInput.getRegex(),wholeWord:this._findInput.getWholeWords(),matchCase:this._findInput.getCaseSensitive()},!0)}))),this._register(this._findInput.onCaseSensitiveKeyDown((e=>{e.equals(1026)&&this._isReplaceVisible&&(this._replaceInput.focus(),e.preventDefault())}))),this._register(this._findInput.onRegexKeyDown((e=>{e.equals(2)&&this._isReplaceVisible&&(this._replaceInput.focusOnPreserve(),e.preventDefault())}))),this._register(this._findInput.inputBox.onDidHeightChange((e=>{this._tryUpdateHeight()&&this._showViewZone()}))),platform.isLinux&&this._register(this._findInput.onMouseDown((e=>this._onFindInputMouseDown(e)))),this._matchesCount=document.createElement("div"),this._matchesCount.className="matchesCount",this._updateMatchesCount(),this._prevBtn=this._register(new SimpleButton({label:NLS_PREVIOUS_MATCH_BTN_LABEL+this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),icon:findPreviousMatchIcon,onTrigger:()=>{this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction).run().then(void 0,onUnexpectedError)}})),this._nextBtn=this._register(new SimpleButton({label:NLS_NEXT_MATCH_BTN_LABEL+this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),icon:findNextMatchIcon,onTrigger:()=>{this._codeEditor.getAction(FIND_IDS.NextMatchFindAction).run().then(void 0,onUnexpectedError)}}));const findPart=document.createElement("div");findPart.className="find-part",findPart.appendChild(this._findInput.domNode);const actionsContainer=document.createElement("div");actionsContainer.className="find-actions",findPart.appendChild(actionsContainer),actionsContainer.appendChild(this._matchesCount),actionsContainer.appendChild(this._prevBtn.domNode),actionsContainer.appendChild(this._nextBtn.domNode),this._toggleSelectionFind=this._register(new Toggle({icon:findSelectionIcon,title:NLS_TOGGLE_SELECTION_FIND_TITLE+this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),isChecked:!1})),this._register(this._toggleSelectionFind.onChange((()=>{if(this._toggleSelectionFind.checked){if(this._codeEditor.hasModel()){const selections=this._codeEditor.getSelections();selections.map((selection=>(1===selection.endColumn&&selection.endLineNumber>selection.startLineNumber&&(selection=selection.setEndPosition(selection.endLineNumber-1,this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber-1))),selection.isEmpty()?null:selection))).filter((element=>!!element)),selections.length&&this._state.change({searchScope:selections},!0)}}else this._state.change({searchScope:null},!0)}))),actionsContainer.appendChild(this._toggleSelectionFind.domNode),this._closeBtn=this._register(new SimpleButton({label:NLS_CLOSE_BTN_LABEL+this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),icon:widgetClose,onTrigger:()=>{this._state.change({isRevealed:!1,searchScope:null},!1)},onKeyDown:e=>{e.equals(2)&&this._isReplaceVisible&&(this._replaceBtn.isEnabled()?this._replaceBtn.focus():this._codeEditor.focus(),e.preventDefault())}})),actionsContainer.appendChild(this._closeBtn.domNode),this._replaceInput=this._register(new ContextScopedReplaceInput(null,void 0,{label:NLS_REPLACE_INPUT_LABEL,placeholder:NLS_REPLACE_INPUT_PLACEHOLDER,appendPreserveCaseLabel:this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),history:[],flexibleHeight:true,flexibleWidth:true,flexibleMaxHeight:118,showHistoryHint:()=>showHistoryKeybindingHint(this._keybindingService)},this._contextKeyService,!0)),this._replaceInput.setPreserveCase(!!this._state.preserveCase),this._register(this._replaceInput.onKeyDown((e=>this._onReplaceInputKeyDown(e)))),this._register(this._replaceInput.inputBox.onDidChange((()=>{this._state.change({replaceString:this._replaceInput.inputBox.value},!1)}))),this._register(this._replaceInput.inputBox.onDidHeightChange((e=>{this._isReplaceVisible&&this._tryUpdateHeight()&&this._showViewZone()}))),this._register(this._replaceInput.onDidOptionChange((()=>{this._state.change({preserveCase:this._replaceInput.getPreserveCase()},!0)}))),this._register(this._replaceInput.onPreserveCaseKeyDown((e=>{e.equals(2)&&(this._prevBtn.isEnabled()?this._prevBtn.focus():this._nextBtn.isEnabled()?this._nextBtn.focus():this._toggleSelectionFind.enabled?this._toggleSelectionFind.focus():this._closeBtn.isEnabled()&&this._closeBtn.focus(),e.preventDefault())}))),this._replaceBtn=this._register(new SimpleButton({label:NLS_REPLACE_BTN_LABEL+this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),icon:findReplaceIcon,onTrigger:()=>{this._controller.replace()},onKeyDown:e=>{e.equals(1026)&&(this._closeBtn.focus(),e.preventDefault())}})),this._replaceAllBtn=this._register(new SimpleButton({label:NLS_REPLACE_ALL_BTN_LABEL+this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),icon:findReplaceAllIcon,onTrigger:()=>{this._controller.replaceAll()}}));const replacePart=document.createElement("div");replacePart.className="replace-part",replacePart.appendChild(this._replaceInput.domNode);const replaceActionsContainer=document.createElement("div");replaceActionsContainer.className="replace-actions",replacePart.appendChild(replaceActionsContainer),replaceActionsContainer.appendChild(this._replaceBtn.domNode),replaceActionsContainer.appendChild(this._replaceAllBtn.domNode),this._toggleReplaceBtn=this._register(new SimpleButton({label:NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,className:"codicon toggle left",onTrigger:()=>{this._state.change({isReplaceRevealed:!this._isReplaceVisible},!1),this._isReplaceVisible&&(this._replaceInput.width=dom.getTotalWidth(this._findInput.domNode),this._replaceInput.inputBox.layout()),this._showViewZone()}})),this._toggleReplaceBtn.setExpanded(this._isReplaceVisible),this._domNode=document.createElement("div"),this._domNode.className="editor-widget find-widget",this._domNode.setAttribute("aria-hidden","true"),this._domNode.style.width="419px",this._domNode.appendChild(this._toggleReplaceBtn.domNode),this._domNode.appendChild(findPart),this._domNode.appendChild(replacePart),this._resizeSash=new Sash(this._domNode,this,{orientation:0,size:2}),this._resized=!1;let originalWidth=419;this._register(this._resizeSash.onDidStart((()=>{originalWidth=dom.getTotalWidth(this._domNode)}))),this._register(this._resizeSash.onDidChange((evt=>{this._resized=!0;const width=originalWidth+evt.startX-evt.currentX;if(width<419)return;width>(parseFloat(dom.getComputedStyle(this._domNode).maxWidth)||0)||(this._domNode.style.width=`${width}px`,this._isReplaceVisible&&(this._replaceInput.width=dom.getTotalWidth(this._findInput.domNode)),this._findInput.inputBox.layout(),this._tryUpdateHeight())}))),this._register(this._resizeSash.onDidReset((()=>{const currentWidth=dom.getTotalWidth(this._domNode);if(currentWidth<419)return;let width=419;if(!this._resized||419===currentWidth){const layoutInfo=this._codeEditor.getLayoutInfo();width=layoutInfo.width-28-layoutInfo.minimap.minimapWidth-15,this._resized=!0}this._domNode.style.width=`${width}px`,this._isReplaceVisible&&(this._replaceInput.width=dom.getTotalWidth(this._findInput.domNode)),this._findInput.inputBox.layout()})))}updateAccessibilitySupport(){const value=this._codeEditor.getOption(2);this._findInput.setFocusInputOnOptionClick(2!==value)}}FindWidget.ID="editor.contrib.findWidget";export class SimpleButton extends Widget{constructor(opts){super(),this._opts=opts;let className="button";this._opts.className&&(className=className+" "+this._opts.className),this._opts.icon&&(className=className+" "+ThemeIcon.asClassName(this._opts.icon)),this._domNode=document.createElement("div"),this._domNode.title=this._opts.label,this._domNode.tabIndex=0,this._domNode.className=className,this._domNode.setAttribute("role","button"),this._domNode.setAttribute("aria-label",this._opts.label),this.onclick(this._domNode,(e=>{this._opts.onTrigger(),e.preventDefault()})),this.onkeydown(this._domNode,(e=>{var _a,_b;if(e.equals(10)||e.equals(3))return this._opts.onTrigger(),void e.preventDefault();null===(_b=(_a=this._opts).onKeyDown)||void 0===_b||_b.call(_a,e)}))}get domNode(){return this._domNode}isEnabled(){return this._domNode.tabIndex>=0}focus(){this._domNode.focus()}setEnabled(enabled){this._domNode.classList.toggle("disabled",!enabled),this._domNode.setAttribute("aria-disabled",String(!enabled)),this._domNode.tabIndex=enabled?0:-1}setExpanded(expanded){this._domNode.setAttribute("aria-expanded",String(!!expanded)),expanded?(this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon)),this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon))):(this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon)),this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon)))}}registerThemingParticipant(((theme,collector)=>{const addBackgroundColorRule=(selector,color)=>{color&&collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`)};addBackgroundColorRule(".findMatch",theme.getColor(editorFindMatchHighlight)),addBackgroundColorRule(".currentFindMatch",theme.getColor(editorFindMatch)),addBackgroundColorRule(".findScope",theme.getColor(editorFindRangeHighlight));addBackgroundColorRule(".find-widget",theme.getColor(editorWidgetBackground));const widgetShadowColor=theme.getColor(widgetShadow);widgetShadowColor&&collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);const findMatchHighlightBorder=theme.getColor(editorFindMatchHighlightBorder);findMatchHighlightBorder&&collector.addRule(`.monaco-editor .findMatch { border: 1px ${isHighContrast(theme.type)?"dotted":"solid"} ${findMatchHighlightBorder}; box-sizing: border-box; }`);const findMatchBorder=theme.getColor(editorFindMatchBorder);findMatchBorder&&collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);const findRangeHighlightBorder=theme.getColor(editorFindRangeHighlightBorder);findRangeHighlightBorder&&collector.addRule(`.monaco-editor .findScope { border: 1px ${isHighContrast(theme.type)?"dashed":"solid"} ${findRangeHighlightBorder}; }`);const hcBorder=theme.getColor(contrastBorder);hcBorder&&collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);const foreground=theme.getColor(editorWidgetForeground);foreground&&collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);const error=theme.getColor(errorForeground);error&&collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);const resizeBorderBackground=theme.getColor(editorWidgetResizeBorder);if(resizeBorderBackground)collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);else{const border=theme.getColor(editorWidgetBorder);border&&collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`)}const toolbarHoverBackgroundColor=theme.getColor(toolbarHoverBackground);toolbarHoverBackgroundColor&&collector.addRule(`\n\t\t.monaco-editor .find-widget .button:not(.disabled):hover,\n\t\t.monaco-editor .find-widget .codicon-find-selection:hover {\n\t\t\tbackground-color: ${toolbarHoverBackgroundColor} !important;\n\t\t}\n\t`);const focusOutline=theme.getColor(focusBorder);focusOutline&&collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`)}));