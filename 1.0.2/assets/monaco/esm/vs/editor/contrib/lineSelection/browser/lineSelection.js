import{EditorAction,registerEditorAction}from"../../../browser/editorExtensions.js";import{CursorMoveCommands}from"../../../common/cursor/cursorMoveCommands.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import*as nls from"../../../../nls.js";export class ExpandLineSelectionAction extends EditorAction{constructor(){super({id:"expandLineSelection",label:nls.localize("expandLineSelection","Expand Line Selection"),alias:"Expand Line Selection",precondition:void 0,kbOpts:{weight:0,kbExpr:EditorContextKeys.textInputFocus,primary:2090}})}run(_accessor,editor,args){if(args=args||{},!editor.hasModel())return;const viewModel=editor._getViewModel();viewModel.model.pushStackElement(),viewModel.setCursorStates(args.source,3,CursorMoveCommands.expandLineSelection(viewModel,viewModel.getCursorStates())),viewModel.revealPrimaryCursor(args.source,!0)}}registerEditorAction(ExpandLineSelectionAction);