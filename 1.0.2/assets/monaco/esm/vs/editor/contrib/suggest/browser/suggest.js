var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import{CancellationToken}from"../../../../base/common/cancellation.js";import{CancellationError,isCancellationError,onUnexpectedExternalError}from"../../../../base/common/errors.js";import{FuzzyScore}from"../../../../base/common/filters.js";import{DisposableStore,isDisposable}from"../../../../base/common/lifecycle.js";import{StopWatch}from"../../../../base/common/stopwatch.js";import{assertType}from"../../../../base/common/types.js";import{URI}from"../../../../base/common/uri.js";import{Position}from"../../../common/core/position.js";import{Range}from"../../../common/core/range.js";import{ITextModelService}from"../../../common/services/resolverService.js";import{SnippetParser}from"../../snippet/browser/snippetParser.js";import{localize}from"../../../../nls.js";import{MenuId}from"../../../../platform/actions/common/actions.js";import{CommandsRegistry}from"../../../../platform/commands/common/commands.js";import{RawContextKey}from"../../../../platform/contextkey/common/contextkey.js";import{ILanguageFeaturesService}from"../../../common/services/languageFeatures.js";import{historyNavigationVisible}from"../../../../platform/history/browser/contextScopedHistoryWidget.js";export const Context={Visible:historyNavigationVisible,HasFocusedSuggestion:new RawContextKey("suggestWidgetHasFocusedSuggestion",!1,localize("suggestWidgetHasSelection","Whether any suggestion is focused")),DetailsVisible:new RawContextKey("suggestWidgetDetailsVisible",!1,localize("suggestWidgetDetailsVisible","Whether suggestion details are visible")),MultipleSuggestions:new RawContextKey("suggestWidgetMultipleSuggestions",!1,localize("suggestWidgetMultipleSuggestions","Whether there are multiple suggestions to pick from")),MakesTextEdit:new RawContextKey("suggestionMakesTextEdit",!0,localize("suggestionMakesTextEdit","Whether inserting the current suggestion yields in a change or has everything already been typed")),AcceptSuggestionsOnEnter:new RawContextKey("acceptSuggestionOnEnter",!0,localize("acceptSuggestionOnEnter","Whether suggestions are inserted when pressing Enter")),HasInsertAndReplaceRange:new RawContextKey("suggestionHasInsertAndReplaceRange",!1,localize("suggestionHasInsertAndReplaceRange","Whether the current suggestion has insert and replace behaviour")),InsertMode:new RawContextKey("suggestionInsertMode",void 0,{type:"string",description:localize("suggestionInsertMode","Whether the default behaviour is to insert or replace")}),CanResolve:new RawContextKey("suggestionCanResolve",!1,localize("suggestionCanResolve","Whether the current suggestion supports to resolve further details"))};export const suggestWidgetStatusbarMenu=new MenuId("suggestWidgetStatusBar");export class CompletionItem{constructor(position,completion,container,provider){this.position=position,this.completion=completion,this.container=container,this.provider=provider,this.isInvalid=!1,this.score=FuzzyScore.Default,this.distance=0,this.textLabel="string"==typeof completion.label?completion.label:completion.label.label,this.labelLow=this.textLabel.toLowerCase(),this.isInvalid=!this.textLabel,this.sortTextLow=completion.sortText&&completion.sortText.toLowerCase(),this.filterTextLow=completion.filterText&&completion.filterText.toLowerCase(),this.extensionId=completion.extensionId,Range.isIRange(completion.range)?(this.editStart=new Position(completion.range.startLineNumber,completion.range.startColumn),this.editInsertEnd=new Position(completion.range.endLineNumber,completion.range.endColumn),this.editReplaceEnd=new Position(completion.range.endLineNumber,completion.range.endColumn),this.isInvalid=this.isInvalid||Range.spansMultipleLines(completion.range)||completion.range.startLineNumber!==position.lineNumber):(this.editStart=new Position(completion.range.insert.startLineNumber,completion.range.insert.startColumn),this.editInsertEnd=new Position(completion.range.insert.endLineNumber,completion.range.insert.endColumn),this.editReplaceEnd=new Position(completion.range.replace.endLineNumber,completion.range.replace.endColumn),this.isInvalid=this.isInvalid||Range.spansMultipleLines(completion.range.insert)||Range.spansMultipleLines(completion.range.replace)||completion.range.insert.startLineNumber!==position.lineNumber||completion.range.replace.startLineNumber!==position.lineNumber||completion.range.insert.startColumn!==completion.range.replace.startColumn),"function"!=typeof provider.resolveCompletionItem&&(this._resolveCache=Promise.resolve(),this._isResolved=!0)}get isResolved(){return!!this._isResolved}resolve(token){return __awaiter(this,void 0,void 0,(function*(){if(!this._resolveCache){const sub=token.onCancellationRequested((()=>{this._resolveCache=void 0,this._isResolved=!1}));this._resolveCache=Promise.resolve(this.provider.resolveCompletionItem(this.completion,token)).then((value=>{Object.assign(this.completion,value),this._isResolved=!0,sub.dispose()}),(err=>{isCancellationError(err)&&(this._resolveCache=void 0,this._isResolved=!1)}))}return this._resolveCache}))}}export class CompletionOptions{constructor(snippetSortOrder=2,kindFilter=new Set,providerFilter=new Set,showDeprecated=!0){this.snippetSortOrder=snippetSortOrder,this.kindFilter=kindFilter,this.providerFilter=providerFilter,this.showDeprecated=showDeprecated}}let _snippetSuggestSupport;CompletionOptions.default=new CompletionOptions;export function getSnippetSuggestSupport(){return _snippetSuggestSupport}export class CompletionItemModel{constructor(items,needsClipboard,durations,disposable){this.items=items,this.needsClipboard=needsClipboard,this.durations=durations,this.disposable=disposable}}export function provideSuggestionItems(registry,model,position,options=CompletionOptions.default,context={triggerKind:0},token=CancellationToken.None){return __awaiter(this,void 0,void 0,(function*(){const sw=new StopWatch(!0);position=position.clone();const word=model.getWordAtPosition(position),defaultReplaceRange=word?new Range(position.lineNumber,word.startColumn,position.lineNumber,word.endColumn):Range.fromPositions(position),defaultRange={replace:defaultReplaceRange,insert:defaultReplaceRange.setEndPosition(position.lineNumber,position.column)},result=[],disposables=new DisposableStore,durations=[];let needsClipboard=!1;const onCompletionList=(provider,container,sw)=>{var _a,_b,_c;let didAddResult=!1;if(!container)return didAddResult;for(const suggestion of container.suggestions)if(!options.kindFilter.has(suggestion.kind)){if(!options.showDeprecated&&(null===(_a=null==suggestion?void 0:suggestion.tags)||void 0===_a?void 0:_a.includes(1)))continue;suggestion.range||(suggestion.range=defaultRange),suggestion.sortText||(suggestion.sortText="string"==typeof suggestion.label?suggestion.label:suggestion.label.label),!needsClipboard&&suggestion.insertTextRules&&4&suggestion.insertTextRules&&(needsClipboard=SnippetParser.guessNeedsClipboard(suggestion.insertText)),result.push(new CompletionItem(position,suggestion,container,provider)),didAddResult=!0}return isDisposable(container)&&disposables.add(container),durations.push({providerName:null!==(_b=provider._debugDisplayName)&&void 0!==_b?_b:"unknown_provider",elapsedProvider:null!==(_c=container.duration)&&void 0!==_c?_c:-1,elapsedOverall:sw.elapsed()}),didAddResult},snippetCompletions=(()=>__awaiter(this,void 0,void 0,(function*(){if(!_snippetSuggestSupport||options.kindFilter.has(27))return;if(options.providerFilter.size>0&&!options.providerFilter.has(_snippetSuggestSupport))return;const sw=new StopWatch(!0),list=yield _snippetSuggestSupport.provideCompletionItems(model,position,context,token);onCompletionList(_snippetSuggestSupport,list,sw)})))();for(const providerGroup of registry.orderedGroups(model)){let didAddResult=!1;if(yield Promise.all(providerGroup.map((provider=>__awaiter(this,void 0,void 0,(function*(){if(!(options.providerFilter.size>0)||options.providerFilter.has(provider))try{const sw=new StopWatch(!0),list=yield provider.provideCompletionItems(model,position,context,token);didAddResult=onCompletionList(provider,list,sw)||didAddResult}catch(err){onUnexpectedExternalError(err)}}))))),didAddResult||token.isCancellationRequested)break}return yield snippetCompletions,token.isCancellationRequested?(disposables.dispose(),Promise.reject(new CancellationError)):new CompletionItemModel(result.sort(getSuggestionComparator(options.snippetSortOrder)),needsClipboard,{entries:durations,elapsed:sw.elapsed()},disposables)}))}function defaultComparator(a,b){if(a.sortTextLow&&b.sortTextLow){if(a.sortTextLow<b.sortTextLow)return-1;if(a.sortTextLow>b.sortTextLow)return 1}return a.textLabel<b.textLabel?-1:a.textLabel>b.textLabel?1:a.completion.kind-b.completion.kind}function snippetUpComparator(a,b){if(a.completion.kind!==b.completion.kind){if(27===a.completion.kind)return-1;if(27===b.completion.kind)return 1}return defaultComparator(a,b)}function snippetDownComparator(a,b){if(a.completion.kind!==b.completion.kind){if(27===a.completion.kind)return 1;if(27===b.completion.kind)return-1}return defaultComparator(a,b)}const _snippetComparators=new Map;_snippetComparators.set(0,snippetUpComparator),_snippetComparators.set(2,snippetDownComparator),_snippetComparators.set(1,defaultComparator);export function getSuggestionComparator(snippetConfig){return _snippetComparators.get(snippetConfig)}CommandsRegistry.registerCommand("_executeCompletionItemProvider",((accessor,...args)=>__awaiter(void 0,void 0,void 0,(function*(){const[uri,position,triggerCharacter,maxItemsToResolve]=args;assertType(URI.isUri(uri)),assertType(Position.isIPosition(position)),assertType("string"==typeof triggerCharacter||!triggerCharacter),assertType("number"==typeof maxItemsToResolve||!maxItemsToResolve);const{completionProvider}=accessor.get(ILanguageFeaturesService),ref=yield accessor.get(ITextModelService).createModelReference(uri);try{const result={incomplete:!1,suggestions:[]},resolving=[],completions=yield provideSuggestionItems(completionProvider,ref.object.textEditorModel,Position.lift(position),void 0,{triggerCharacter,triggerKind:triggerCharacter?1:0});for(const item of completions.items)resolving.length<(null!=maxItemsToResolve?maxItemsToResolve:0)&&resolving.push(item.resolve(CancellationToken.None)),result.incomplete=result.incomplete||item.container.incomplete,result.suggestions.push(item.completion);try{return yield Promise.all(resolving),result}finally{setTimeout((()=>completions.disposable.dispose()),100)}}finally{ref.dispose()}}))));export function showSimpleSuggestions(editor,provider){var _a;null===(_a=editor.getContribution("editor.contrib.suggestController"))||void 0===_a||_a.triggerSuggest((new Set).add(provider),void 0,!0)}export class QuickSuggestionsOptions{static isAllOff(config){return"off"===config.other&&"off"===config.comments&&"off"===config.strings}static isAllOn(config){return"on"===config.other&&"on"===config.comments&&"on"===config.strings}static valueFor(config,tokenType){switch(tokenType){case 1:return config.comments;case 2:return config.strings;default:return config.other}}}