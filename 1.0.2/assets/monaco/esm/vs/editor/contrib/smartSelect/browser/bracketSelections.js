var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import{LinkedList}from"../../../../base/common/linkedList.js";import{Position}from"../../../common/core/position.js";import{Range}from"../../../common/core/range.js";export class BracketSelectionRangeProvider{provideSelectionRanges(model,positions){return __awaiter(this,void 0,void 0,(function*(){const result=[];for(const position of positions){const bucket=[];result.push(bucket);const ranges=new Map;yield new Promise((resolve=>BracketSelectionRangeProvider._bracketsRightYield(resolve,0,model,position,ranges))),yield new Promise((resolve=>BracketSelectionRangeProvider._bracketsLeftYield(resolve,0,model,position,ranges,bucket)))}return result}))}static _bracketsRightYield(resolve,round,model,pos,ranges){const counts=new Map,t1=Date.now();for(;;){if(round>=BracketSelectionRangeProvider._maxRounds){resolve();break}if(!pos){resolve();break}const bracket=model.bracketPairs.findNextBracket(pos);if(!bracket){resolve();break}if(Date.now()-t1>BracketSelectionRangeProvider._maxDuration){setTimeout((()=>BracketSelectionRangeProvider._bracketsRightYield(resolve,round+1,model,pos,ranges)));break}if(bracket.bracketInfo.isOpeningBracket){const key=bracket.bracketInfo.bracketText,val=counts.has(key)?counts.get(key):0;counts.set(key,val+1)}else{const key=bracket.bracketInfo.getClosedBrackets()[0].bracketText;let val=counts.has(key)?counts.get(key):0;if(val-=1,counts.set(key,Math.max(0,val)),val<0){let list=ranges.get(key);list||(list=new LinkedList,ranges.set(key,list)),list.push(bracket.range)}}pos=bracket.range.getEndPosition()}}static _bracketsLeftYield(resolve,round,model,pos,ranges,bucket){const counts=new Map,t1=Date.now();for(;;){if(round>=BracketSelectionRangeProvider._maxRounds&&0===ranges.size){resolve();break}if(!pos){resolve();break}const bracket=model.bracketPairs.findPrevBracket(pos);if(!bracket){resolve();break}if(Date.now()-t1>BracketSelectionRangeProvider._maxDuration){setTimeout((()=>BracketSelectionRangeProvider._bracketsLeftYield(resolve,round+1,model,pos,ranges,bucket)));break}if(bracket.bracketInfo.isOpeningBracket){const key=bracket.bracketInfo.bracketText;let val=counts.has(key)?counts.get(key):0;if(val-=1,counts.set(key,Math.max(0,val)),val<0){const list=ranges.get(key);if(list){const closing=list.shift();0===list.size&&ranges.delete(key);const innerBracket=Range.fromPositions(bracket.range.getEndPosition(),closing.getStartPosition()),outerBracket=Range.fromPositions(bracket.range.getStartPosition(),closing.getEndPosition());bucket.push({range:innerBracket}),bucket.push({range:outerBracket}),BracketSelectionRangeProvider._addBracketLeading(model,outerBracket,bucket)}}}else{const key=bracket.bracketInfo.getClosedBrackets()[0].bracketText,val=counts.has(key)?counts.get(key):0;counts.set(key,val+1)}pos=bracket.range.getStartPosition()}}static _addBracketLeading(model,bracket,bucket){if(bracket.startLineNumber===bracket.endLineNumber)return;const startLine=bracket.startLineNumber,column=model.getLineFirstNonWhitespaceColumn(startLine);0!==column&&column!==bracket.startColumn&&(bucket.push({range:Range.fromPositions(new Position(startLine,column),bracket.getEndPosition())}),bucket.push({range:Range.fromPositions(new Position(startLine,1),bracket.getEndPosition())}));const aboveLine=startLine-1;if(aboveLine>0){const column=model.getLineFirstNonWhitespaceColumn(aboveLine);column===bracket.startColumn&&column!==model.getLineLastNonWhitespaceColumn(aboveLine)&&(bucket.push({range:Range.fromPositions(new Position(aboveLine,column),bracket.getEndPosition())}),bucket.push({range:Range.fromPositions(new Position(aboveLine,1),bracket.getEndPosition())}))}}}BracketSelectionRangeProvider._maxDuration=30,BracketSelectionRangeProvider._maxRounds=2;