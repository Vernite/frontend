var _a,__decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import"./media/diffEditor.css";import*as nls from"../../../nls.js";import*as dom from"../../../base/browser/dom.js";import*as assert from"../../../base/common/assert.js";import{createFastDomNode}from"../../../base/browser/fastDomNode.js";import{Sash}from"../../../base/browser/ui/sash/sash.js";import{RunOnceScheduler}from"../../../base/common/async.js";import{Emitter}from"../../../base/common/event.js";import{Disposable}from"../../../base/common/lifecycle.js";import{applyFontInfo}from"../config/domFontInfo.js";import{StableEditorScrollState}from"../stableEditorScroll.js";import{ICodeEditorService}from"../services/codeEditorService.js";import{CodeEditorWidget}from"./codeEditorWidget.js";import{DiffReview}from"./diffReview.js";import{EditorOptions,EditorFontLigatures,stringSet as validateStringSetOption,boolean as validateBooleanOption,clampedInt}from"../../common/config/editorOptions.js";import{Position}from"../../common/core/position.js";import{Range}from"../../common/core/range.js";import{createStringBuilder}from"../../common/core/stringBuilder.js";import*as editorCommon from"../../common/editorCommon.js";import{ModelDecorationOptions}from"../../common/model/textModel.js";import{IEditorWorkerService}from"../../common/services/editorWorker.js";import{OverviewRulerZone}from"../../common/viewModel/overviewZoneManager.js";import{LineDecoration}from"../../common/viewLayout/lineDecorations.js";import{RenderLineInput,renderViewLine}from"../../common/viewLayout/viewLineRenderer.js";import{InlineDecoration,ViewLineRenderingData}from"../../common/viewModel.js";import{IContextKeyService}from"../../../platform/contextkey/common/contextkey.js";import{IInstantiationService}from"../../../platform/instantiation/common/instantiation.js";import{ServiceCollection}from"../../../platform/instantiation/common/serviceCollection.js";import{INotificationService}from"../../../platform/notification/common/notification.js";import{defaultInsertColor,defaultRemoveColor,diffBorder,diffInserted,diffInsertedOutline,diffRemoved,diffRemovedOutline,scrollbarShadow,scrollbarSliderBackground,scrollbarSliderHoverBackground,scrollbarSliderActiveBackground,diffDiagonalFill,diffInsertedLineGutter,diffRemovedLineGutter,diffInsertedLine,diffRemovedLine,diffOverviewRulerInserted,diffOverviewRulerRemoved}from"../../../platform/theme/common/colorRegistry.js";import{IThemeService,getThemeTypeSelector,registerThemingParticipant,ThemeIcon}from"../../../platform/theme/common/themeService.js";import{IContextMenuService}from"../../../platform/contextview/browser/contextView.js";import{InlineDiffMargin}from"./inlineDiffMargin.js";import{IClipboardService}from"../../../platform/clipboard/common/clipboardService.js";import{EditorExtensionsRegistry}from"../editorExtensions.js";import{onUnexpectedError}from"../../../base/common/errors.js";import{IEditorProgressService}from"../../../platform/progress/common/progress.js";import{ElementSizeObserver}from"../config/elementSizeObserver.js";import{Codicon}from"../../../base/common/codicons.js";import{MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}from"../../../base/browser/ui/mouseCursor/mouseCursor.js";import{registerIcon}from"../../../platform/theme/common/iconRegistry.js";import{isHighContrast}from"../../../platform/theme/common/theme.js";class VisualEditorState{constructor(_contextMenuService,_clipboardService){this._contextMenuService=_contextMenuService,this._clipboardService=_clipboardService,this._zones=[],this._inlineDiffMargins=[],this._zonesMap={},this._decorations=[]}getForeignViewZones(allViewZones){return allViewZones.filter((z=>!this._zonesMap[String(z.id)]))}clean(editor){this._zones.length>0&&editor.changeViewZones((viewChangeAccessor=>{for(const zoneId of this._zones)viewChangeAccessor.removeZone(zoneId)})),this._zones=[],this._zonesMap={},editor.changeDecorations((changeAccessor=>{this._decorations=changeAccessor.deltaDecorations(this._decorations,[])}))}apply(editor,overviewRuler,newDecorations,restoreScrollState){const scrollState=restoreScrollState?StableEditorScrollState.capture(editor):null;editor.changeViewZones((viewChangeAccessor=>{var _a;for(const zoneId of this._zones)viewChangeAccessor.removeZone(zoneId);for(const inlineDiffMargin of this._inlineDiffMargins)inlineDiffMargin.dispose();this._zones=[],this._zonesMap={},this._inlineDiffMargins=[];for(let i=0,length=newDecorations.zones.length;i<length;i++){const viewZone=newDecorations.zones[i];viewZone.suppressMouseDown=!0;const zoneId=viewChangeAccessor.addZone(viewZone);this._zones.push(zoneId),this._zonesMap[String(zoneId)]=!0,newDecorations.zones[i].diff&&viewZone.marginDomNode&&(viewZone.suppressMouseDown=!1,0!==(null===(_a=newDecorations.zones[i].diff)||void 0===_a?void 0:_a.originalModel.getValueLength())&&this._inlineDiffMargins.push(new InlineDiffMargin(zoneId,viewZone.marginDomNode,editor,newDecorations.zones[i].diff,this._contextMenuService,this._clipboardService)))}})),null==scrollState||scrollState.restore(editor),editor.changeDecorations((changeAccessor=>{this._decorations=changeAccessor.deltaDecorations(this._decorations,newDecorations.decorations)})),null==overviewRuler||overviewRuler.setZones(newDecorations.overviewZones)}}let DIFF_EDITOR_ID=0;const diffInsertIcon=registerIcon("diff-insert",Codicon.add,nls.localize("diffInsertIcon","Line decoration for inserts in the diff editor.")),diffRemoveIcon=registerIcon("diff-remove",Codicon.remove,nls.localize("diffRemoveIcon","Line decoration for removals in the diff editor.")),ttPolicy=null===(_a=window.trustedTypes)||void 0===_a?void 0:_a.createPolicy("diffEditorWidget",{createHTML:value=>value});let DiffEditorWidget=class DiffEditorWidget extends Disposable{constructor(domElement,options,codeEditorWidgetOptions,clipboardService,editorWorkerService,contextKeyService,instantiationService,codeEditorService,themeService,notificationService,contextMenuService,_editorProgressService){super(),this._editorProgressService=_editorProgressService,this._onDidDispose=this._register(new Emitter),this.onDidDispose=this._onDidDispose.event,this._onDidUpdateDiff=this._register(new Emitter),this.onDidUpdateDiff=this._onDidUpdateDiff.event,this._onDidContentSizeChange=this._register(new Emitter),this._lastOriginalWarning=null,this._lastModifiedWarning=null,this._editorWorkerService=editorWorkerService,this._codeEditorService=codeEditorService,this._contextKeyService=this._register(contextKeyService.createScoped(domElement)),this._instantiationService=instantiationService.createChild(new ServiceCollection([IContextKeyService,this._contextKeyService])),this._contextKeyService.createKey("isInDiffEditor",!0),this._themeService=themeService,this._notificationService=notificationService,this._id=++DIFF_EDITOR_ID,this._state=0,this._updatingDiffProgress=null,this._domElement=domElement,options=options||{},this._options=validateDiffEditorOptions(options,{enableSplitViewResizing:!0,renderSideBySide:!0,renderMarginRevertIcon:!0,maxComputationTime:5e3,maxFileSize:50,ignoreTrimWhitespace:!0,renderIndicators:!0,originalEditable:!1,diffCodeLens:!1,renderOverviewRuler:!0,diffWordWrap:"inherit"}),void 0!==options.isInEmbeddedEditor?this._contextKeyService.createKey("isInEmbeddedDiffEditor",options.isInEmbeddedEditor):this._contextKeyService.createKey("isInEmbeddedDiffEditor",!1),this._updateDecorationsRunner=this._register(new RunOnceScheduler((()=>this._updateDecorations()),0)),this._containerDomElement=document.createElement("div"),this._containerDomElement.className=DiffEditorWidget._getClassName(this._themeService.getColorTheme(),this._options.renderSideBySide),this._containerDomElement.style.position="relative",this._containerDomElement.style.height="100%",this._domElement.appendChild(this._containerDomElement),this._overviewViewportDomElement=createFastDomNode(document.createElement("div")),this._overviewViewportDomElement.setClassName("diffViewport"),this._overviewViewportDomElement.setPosition("absolute"),this._overviewDomElement=document.createElement("div"),this._overviewDomElement.className="diffOverview",this._overviewDomElement.style.position="absolute",this._overviewDomElement.appendChild(this._overviewViewportDomElement.domNode),this._register(dom.addStandardDisposableListener(this._overviewDomElement,dom.EventType.POINTER_DOWN,(e=>{this._modifiedEditor.delegateVerticalScrollbarPointerDown(e)}))),this._options.renderOverviewRuler&&this._containerDomElement.appendChild(this._overviewDomElement),this._originalDomNode=document.createElement("div"),this._originalDomNode.className="editor original",this._originalDomNode.style.position="absolute",this._originalDomNode.style.height="100%",this._containerDomElement.appendChild(this._originalDomNode),this._modifiedDomNode=document.createElement("div"),this._modifiedDomNode.className="editor modified",this._modifiedDomNode.style.position="absolute",this._modifiedDomNode.style.height="100%",this._containerDomElement.appendChild(this._modifiedDomNode),this._beginUpdateDecorationsTimeout=-1,this._currentlyChangingViewZones=!1,this._diffComputationToken=0,this._originalEditorState=new VisualEditorState(contextMenuService,clipboardService),this._modifiedEditorState=new VisualEditorState(contextMenuService,clipboardService),this._isVisible=!0,this._isHandlingScrollEvent=!1,this._elementSizeObserver=this._register(new ElementSizeObserver(this._containerDomElement,options.dimension)),this._register(this._elementSizeObserver.onDidChange((()=>this._onDidContainerSizeChanged()))),options.automaticLayout&&this._elementSizeObserver.startObserving(),this._diffComputationResult=null,this._originalEditor=this._createLeftHandSideEditor(options,codeEditorWidgetOptions.originalEditor||{}),this._modifiedEditor=this._createRightHandSideEditor(options,codeEditorWidgetOptions.modifiedEditor||{}),this._originalOverviewRuler=null,this._modifiedOverviewRuler=null,this._reviewPane=instantiationService.createInstance(DiffReview,this),this._containerDomElement.appendChild(this._reviewPane.domNode.domNode),this._containerDomElement.appendChild(this._reviewPane.shadow.domNode),this._containerDomElement.appendChild(this._reviewPane.actionBarContainer.domNode),this._options.renderSideBySide?this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(),this._options.enableSplitViewResizing)):this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(),this._options.enableSplitViewResizing)),this._register(themeService.onDidColorThemeChange((t=>{this._strategy&&this._strategy.applyColors(t)&&this._updateDecorationsRunner.schedule(),this._containerDomElement.className=DiffEditorWidget._getClassName(this._themeService.getColorTheme(),this._options.renderSideBySide)})));const contributions=EditorExtensionsRegistry.getDiffEditorContributions();for(const desc of contributions)try{this._register(instantiationService.createInstance(desc.ctor,this))}catch(err){onUnexpectedError(err)}this._codeEditorService.addDiffEditor(this)}_setState(newState){this._state!==newState&&(this._state=newState,this._updatingDiffProgress&&(this._updatingDiffProgress.done(),this._updatingDiffProgress=null),1===this._state&&(this._updatingDiffProgress=this._editorProgressService.show(!0,1e3)))}diffReviewNext(){this._reviewPane.next()}diffReviewPrev(){this._reviewPane.prev()}static _getClassName(theme,renderSideBySide){let result="monaco-diff-editor monaco-editor-background ";return renderSideBySide&&(result+="side-by-side "),result+=getThemeTypeSelector(theme.type),result}_disposeOverviewRulers(){this._originalOverviewRuler&&(this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode()),this._originalOverviewRuler.dispose(),this._originalOverviewRuler=null),this._modifiedOverviewRuler&&(this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode()),this._modifiedOverviewRuler.dispose(),this._modifiedOverviewRuler=null)}_createOverviewRulers(){this._options.renderOverviewRuler&&(assert.ok(!this._originalOverviewRuler&&!this._modifiedOverviewRuler),this._originalEditor.hasModel()&&(this._originalOverviewRuler=this._originalEditor.createOverviewRuler("original diffOverviewRuler"),this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode())),this._modifiedEditor.hasModel()&&(this._modifiedOverviewRuler=this._modifiedEditor.createOverviewRuler("modified diffOverviewRuler"),this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode())),this._layoutOverviewRulers())}_createLeftHandSideEditor(options,codeEditorWidgetOptions){const editor=this._createInnerEditor(this._instantiationService,this._originalDomNode,this._adjustOptionsForLeftHandSide(options),codeEditorWidgetOptions);this._register(editor.onDidScrollChange((e=>{this._isHandlingScrollEvent||(e.scrollTopChanged||e.scrollLeftChanged||e.scrollHeightChanged)&&(this._isHandlingScrollEvent=!0,this._modifiedEditor.setScrollPosition({scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}),this._isHandlingScrollEvent=!1,this._layoutOverviewViewport())}))),this._register(editor.onDidChangeViewZones((()=>{this._onViewZonesChanged()}))),this._register(editor.onDidChangeConfiguration((e=>{editor.getModel()&&(e.hasChanged(46)&&this._updateDecorationsRunner.schedule(),e.hasChanged(134)&&(this._updateDecorationsRunner.cancel(),this._updateDecorations()))}))),this._register(editor.onDidChangeHiddenAreas((()=>{this._updateDecorationsRunner.cancel(),this._updateDecorations()}))),this._register(editor.onDidChangeModelContent((()=>{this._isVisible&&this._beginUpdateDecorationsSoon()})));const isInDiffLeftEditorKey=this._contextKeyService.createKey("isInDiffLeftEditor",editor.hasWidgetFocus());return this._register(editor.onDidFocusEditorWidget((()=>isInDiffLeftEditorKey.set(!0)))),this._register(editor.onDidBlurEditorWidget((()=>isInDiffLeftEditorKey.set(!1)))),this._register(editor.onDidContentSizeChange((e=>{const width=this._originalEditor.getContentWidth()+this._modifiedEditor.getContentWidth()+DiffEditorWidget.ONE_OVERVIEW_WIDTH,height=Math.max(this._modifiedEditor.getContentHeight(),this._originalEditor.getContentHeight());this._onDidContentSizeChange.fire({contentHeight:height,contentWidth:width,contentHeightChanged:e.contentHeightChanged,contentWidthChanged:e.contentWidthChanged})}))),editor}_createRightHandSideEditor(options,codeEditorWidgetOptions){const editor=this._createInnerEditor(this._instantiationService,this._modifiedDomNode,this._adjustOptionsForRightHandSide(options),codeEditorWidgetOptions);this._register(editor.onDidScrollChange((e=>{this._isHandlingScrollEvent||(e.scrollTopChanged||e.scrollLeftChanged||e.scrollHeightChanged)&&(this._isHandlingScrollEvent=!0,this._originalEditor.setScrollPosition({scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}),this._isHandlingScrollEvent=!1,this._layoutOverviewViewport())}))),this._register(editor.onDidChangeViewZones((()=>{this._onViewZonesChanged()}))),this._register(editor.onDidChangeConfiguration((e=>{editor.getModel()&&(e.hasChanged(46)&&this._updateDecorationsRunner.schedule(),e.hasChanged(134)&&(this._updateDecorationsRunner.cancel(),this._updateDecorations()))}))),this._register(editor.onDidChangeHiddenAreas((()=>{this._updateDecorationsRunner.cancel(),this._updateDecorations()}))),this._register(editor.onDidChangeModelContent((()=>{this._isVisible&&this._beginUpdateDecorationsSoon()}))),this._register(editor.onDidChangeModelOptions((e=>{e.tabSize&&this._updateDecorationsRunner.schedule()})));const isInDiffRightEditorKey=this._contextKeyService.createKey("isInDiffRightEditor",editor.hasWidgetFocus());return this._register(editor.onDidFocusEditorWidget((()=>isInDiffRightEditorKey.set(!0)))),this._register(editor.onDidBlurEditorWidget((()=>isInDiffRightEditorKey.set(!1)))),this._register(editor.onDidContentSizeChange((e=>{const width=this._originalEditor.getContentWidth()+this._modifiedEditor.getContentWidth()+DiffEditorWidget.ONE_OVERVIEW_WIDTH,height=Math.max(this._modifiedEditor.getContentHeight(),this._originalEditor.getContentHeight());this._onDidContentSizeChange.fire({contentHeight:height,contentWidth:width,contentHeightChanged:e.contentHeightChanged,contentWidthChanged:e.contentWidthChanged})}))),this._register(editor.onMouseDown((event=>{var _a,_b;if(!event.event.rightButton&&event.target.position&&(null===(_a=event.target.element)||void 0===_a?void 0:_a.className.includes("arrow-revert-change"))){const lineNumber=event.target.position.lineNumber,change=null===(_b=this._diffComputationResult)||void 0===_b?void 0:_b.changes.find((c=>c.modifiedStartLineNumber===lineNumber-1||c.modifiedStartLineNumber===lineNumber));return change&&this.revertChange(change),event.event.stopPropagation(),void this._updateDecorations()}}))),editor}revertChange(change){const editor=this._modifiedEditor,original=this._originalEditor.getModel(),modified=this._modifiedEditor.getModel();if(!original||!modified||!editor)return;const originalRange=change.originalEndLineNumber>0?new Range(change.originalStartLineNumber,1,change.originalEndLineNumber,original.getLineMaxColumn(change.originalEndLineNumber)):null,originalContent=originalRange?original.getValueInRange(originalRange):null,newRange=change.modifiedEndLineNumber>0?new Range(change.modifiedStartLineNumber,1,change.modifiedEndLineNumber,modified.getLineMaxColumn(change.modifiedEndLineNumber)):null,eol=modified.getEOL();if(0===change.originalEndLineNumber&&newRange){let range=newRange;change.modifiedStartLineNumber>1?range=newRange.setStartPosition(change.modifiedStartLineNumber-1,modified.getLineMaxColumn(change.modifiedStartLineNumber-1)):change.modifiedEndLineNumber<modified.getLineCount()&&(range=newRange.setEndPosition(change.modifiedEndLineNumber+1,1)),editor.executeEdits("diffEditor",[{range,text:""}])}else if(0===change.modifiedEndLineNumber&&null!==originalContent){const insertAt=change.modifiedStartLineNumber<modified.getLineCount()?new Position(change.modifiedStartLineNumber+1,1):new Position(change.modifiedStartLineNumber,modified.getLineMaxColumn(change.modifiedStartLineNumber));editor.executeEdits("diffEditor",[{range:Range.fromPositions(insertAt,insertAt),text:change.modifiedStartLineNumber<modified.getLineCount()?originalContent+eol:eol+originalContent}])}else newRange&&null!==originalContent&&editor.executeEdits("diffEditor",[{range:newRange,text:originalContent}])}_createInnerEditor(instantiationService,container,options,editorWidgetOptions){return instantiationService.createInstance(CodeEditorWidget,container,options,editorWidgetOptions)}dispose(){this._codeEditorService.removeDiffEditor(this),-1!==this._beginUpdateDecorationsTimeout&&(window.clearTimeout(this._beginUpdateDecorationsTimeout),this._beginUpdateDecorationsTimeout=-1),this._cleanViewZonesAndDecorations(),this._originalOverviewRuler&&(this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode()),this._originalOverviewRuler.dispose()),this._modifiedOverviewRuler&&(this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode()),this._modifiedOverviewRuler.dispose()),this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode),this._options.renderOverviewRuler&&this._containerDomElement.removeChild(this._overviewDomElement),this._containerDomElement.removeChild(this._originalDomNode),this._originalEditor.dispose(),this._containerDomElement.removeChild(this._modifiedDomNode),this._modifiedEditor.dispose(),this._strategy.dispose(),this._containerDomElement.removeChild(this._reviewPane.domNode.domNode),this._containerDomElement.removeChild(this._reviewPane.shadow.domNode),this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode),this._reviewPane.dispose(),this._domElement.removeChild(this._containerDomElement),this._onDidDispose.fire(),super.dispose()}getId(){return this.getEditorType()+":"+this._id}getEditorType(){return editorCommon.EditorType.IDiffEditor}getLineChanges(){return this._diffComputationResult?this._diffComputationResult.changes:null}getOriginalEditor(){return this._originalEditor}getModifiedEditor(){return this._modifiedEditor}updateOptions(_newOptions){const newOptions=validateDiffEditorOptions(_newOptions,this._options),changed=changedDiffEditorOptions(this._options,newOptions);this._options=newOptions;const beginUpdateDecorations=changed.ignoreTrimWhitespace||changed.renderIndicators||changed.renderMarginRevertIcon,beginUpdateDecorationsSoon=this._isVisible&&(changed.maxComputationTime||changed.maxFileSize);beginUpdateDecorations?this._beginUpdateDecorations():beginUpdateDecorationsSoon&&this._beginUpdateDecorationsSoon(),this._modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(_newOptions)),this._originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(_newOptions)),this._strategy.setEnableSplitViewResizing(this._options.enableSplitViewResizing),changed.renderSideBySide&&(this._options.renderSideBySide?this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(),this._options.enableSplitViewResizing)):this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(),this._options.enableSplitViewResizing)),this._containerDomElement.className=DiffEditorWidget._getClassName(this._themeService.getColorTheme(),this._options.renderSideBySide)),changed.renderOverviewRuler&&(this._options.renderOverviewRuler?this._containerDomElement.appendChild(this._overviewDomElement):this._containerDomElement.removeChild(this._overviewDomElement))}getModel(){return{original:this._originalEditor.getModel(),modified:this._modifiedEditor.getModel()}}setModel(model){if(model&&(!model.original||!model.modified))throw new Error(model.original?"DiffEditorWidget.setModel: Modified model is null":"DiffEditorWidget.setModel: Original model is null");this._cleanViewZonesAndDecorations(),this._disposeOverviewRulers(),this._originalEditor.setModel(model?model.original:null),this._modifiedEditor.setModel(model?model.modified:null),this._updateDecorationsRunner.cancel(),model&&(this._originalEditor.setScrollTop(0),this._modifiedEditor.setScrollTop(0)),this._diffComputationResult=null,this._diffComputationToken++,this._setState(0),model&&(this._createOverviewRulers(),this._beginUpdateDecorations()),this._layoutOverviewViewport()}getContainerDomNode(){return this._domElement}getVisibleColumnFromPosition(position){return this._modifiedEditor.getVisibleColumnFromPosition(position)}getPosition(){return this._modifiedEditor.getPosition()}setPosition(position,source="api"){this._modifiedEditor.setPosition(position,source)}revealLine(lineNumber,scrollType=0){this._modifiedEditor.revealLine(lineNumber,scrollType)}revealLineInCenter(lineNumber,scrollType=0){this._modifiedEditor.revealLineInCenter(lineNumber,scrollType)}revealLineInCenterIfOutsideViewport(lineNumber,scrollType=0){this._modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber,scrollType)}revealLineNearTop(lineNumber,scrollType=0){this._modifiedEditor.revealLineNearTop(lineNumber,scrollType)}revealPosition(position,scrollType=0){this._modifiedEditor.revealPosition(position,scrollType)}revealPositionInCenter(position,scrollType=0){this._modifiedEditor.revealPositionInCenter(position,scrollType)}revealPositionInCenterIfOutsideViewport(position,scrollType=0){this._modifiedEditor.revealPositionInCenterIfOutsideViewport(position,scrollType)}revealPositionNearTop(position,scrollType=0){this._modifiedEditor.revealPositionNearTop(position,scrollType)}getSelection(){return this._modifiedEditor.getSelection()}getSelections(){return this._modifiedEditor.getSelections()}setSelection(something,source="api"){this._modifiedEditor.setSelection(something,source)}setSelections(ranges,source="api"){this._modifiedEditor.setSelections(ranges,source)}revealLines(startLineNumber,endLineNumber,scrollType=0){this._modifiedEditor.revealLines(startLineNumber,endLineNumber,scrollType)}revealLinesInCenter(startLineNumber,endLineNumber,scrollType=0){this._modifiedEditor.revealLinesInCenter(startLineNumber,endLineNumber,scrollType)}revealLinesInCenterIfOutsideViewport(startLineNumber,endLineNumber,scrollType=0){this._modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber,endLineNumber,scrollType)}revealLinesNearTop(startLineNumber,endLineNumber,scrollType=0){this._modifiedEditor.revealLinesNearTop(startLineNumber,endLineNumber,scrollType)}revealRange(range,scrollType=0,revealVerticalInCenter=!1,revealHorizontal=!0){this._modifiedEditor.revealRange(range,scrollType,revealVerticalInCenter,revealHorizontal)}revealRangeInCenter(range,scrollType=0){this._modifiedEditor.revealRangeInCenter(range,scrollType)}revealRangeInCenterIfOutsideViewport(range,scrollType=0){this._modifiedEditor.revealRangeInCenterIfOutsideViewport(range,scrollType)}revealRangeNearTop(range,scrollType=0){this._modifiedEditor.revealRangeNearTop(range,scrollType)}revealRangeNearTopIfOutsideViewport(range,scrollType=0){this._modifiedEditor.revealRangeNearTopIfOutsideViewport(range,scrollType)}revealRangeAtTop(range,scrollType=0){this._modifiedEditor.revealRangeAtTop(range,scrollType)}getSupportedActions(){return this._modifiedEditor.getSupportedActions()}saveViewState(){return{original:this._originalEditor.saveViewState(),modified:this._modifiedEditor.saveViewState()}}restoreViewState(s){if(s&&s.original&&s.modified){const diffEditorState=s;this._originalEditor.restoreViewState(diffEditorState.original),this._modifiedEditor.restoreViewState(diffEditorState.modified)}}layout(dimension){this._elementSizeObserver.observe(dimension)}focus(){this._modifiedEditor.focus()}hasTextFocus(){return this._originalEditor.hasTextFocus()||this._modifiedEditor.hasTextFocus()}trigger(source,handlerId,payload){this._modifiedEditor.trigger(source,handlerId,payload)}createDecorationsCollection(decorations){return this._modifiedEditor.createDecorationsCollection(decorations)}changeDecorations(callback){return this._modifiedEditor.changeDecorations(callback)}_onDidContainerSizeChanged(){this._doLayout()}_getReviewHeight(){return this._reviewPane.isVisible()?this._elementSizeObserver.getHeight():0}_layoutOverviewRulers(){if(!this._options.renderOverviewRuler)return;if(!this._originalOverviewRuler||!this._modifiedOverviewRuler)return;const height=this._elementSizeObserver.getHeight(),reviewHeight=this._getReviewHeight(),freeSpace=DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH-2*DiffEditorWidget.ONE_OVERVIEW_WIDTH;this._modifiedEditor.getLayoutInfo()&&(this._originalOverviewRuler.setLayout({top:0,width:DiffEditorWidget.ONE_OVERVIEW_WIDTH,right:freeSpace+DiffEditorWidget.ONE_OVERVIEW_WIDTH,height:height-reviewHeight}),this._modifiedOverviewRuler.setLayout({top:0,right:0,width:DiffEditorWidget.ONE_OVERVIEW_WIDTH,height:height-reviewHeight}))}_onViewZonesChanged(){this._currentlyChangingViewZones||this._updateDecorationsRunner.schedule()}_beginUpdateDecorationsSoon(){-1!==this._beginUpdateDecorationsTimeout&&(window.clearTimeout(this._beginUpdateDecorationsTimeout),this._beginUpdateDecorationsTimeout=-1),this._beginUpdateDecorationsTimeout=window.setTimeout((()=>this._beginUpdateDecorations()),DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY)}static _equals(a,b){return!a&&!b||!(!a||!b)&&a.toString()===b.toString()}_beginUpdateDecorations(){this._beginUpdateDecorationsTimeout=-1;const currentOriginalModel=this._originalEditor.getModel(),currentModifiedModel=this._modifiedEditor.getModel();if(!currentOriginalModel||!currentModifiedModel)return;this._diffComputationToken++;const currentToken=this._diffComputationToken,diffLimit=1024*this._options.maxFileSize*1024,canSyncModelForDiff=model=>{const bufferTextLength=model.getValueLength();return 0===diffLimit||bufferTextLength<=diffLimit};canSyncModelForDiff(currentOriginalModel)&&canSyncModelForDiff(currentModifiedModel)?(this._setState(1),this._editorWorkerService.computeDiff(currentOriginalModel.uri,currentModifiedModel.uri,this._options.ignoreTrimWhitespace,this._options.maxComputationTime).then((result=>{currentToken===this._diffComputationToken&&currentOriginalModel===this._originalEditor.getModel()&&currentModifiedModel===this._modifiedEditor.getModel()&&(this._setState(2),this._diffComputationResult=result,this._updateDecorationsRunner.schedule(),this._onDidUpdateDiff.fire())}),(error=>{currentToken===this._diffComputationToken&&currentOriginalModel===this._originalEditor.getModel()&&currentModifiedModel===this._modifiedEditor.getModel()&&(this._setState(2),this._diffComputationResult=null,this._updateDecorationsRunner.schedule())}))):DiffEditorWidget._equals(currentOriginalModel.uri,this._lastOriginalWarning)&&DiffEditorWidget._equals(currentModifiedModel.uri,this._lastModifiedWarning)||(this._lastOriginalWarning=currentOriginalModel.uri,this._lastModifiedWarning=currentModifiedModel.uri,this._notificationService.warn(nls.localize("diff.tooLarge","Cannot compare files because one file is too large.")))}_cleanViewZonesAndDecorations(){this._originalEditorState.clean(this._originalEditor),this._modifiedEditorState.clean(this._modifiedEditor)}_updateDecorations(){if(!this._originalEditor.getModel()||!this._modifiedEditor.getModel())return;const lineChanges=this._diffComputationResult?this._diffComputationResult.changes:[],foreignOriginal=this._originalEditorState.getForeignViewZones(this._originalEditor.getWhitespaces()),foreignModified=this._modifiedEditorState.getForeignViewZones(this._modifiedEditor.getWhitespaces()),diffDecorations=this._strategy.getEditorsDiffDecorations(lineChanges,this._options.ignoreTrimWhitespace,this._options.renderIndicators,this._options.renderMarginRevertIcon,foreignOriginal,foreignModified);try{this._currentlyChangingViewZones=!0,this._originalEditorState.apply(this._originalEditor,this._originalOverviewRuler,diffDecorations.original,!1),this._modifiedEditorState.apply(this._modifiedEditor,this._modifiedOverviewRuler,diffDecorations.modified,!0)}finally{this._currentlyChangingViewZones=!1}}_adjustOptionsForSubEditor(options){const clonedOptions=Object.assign({},options);return clonedOptions.inDiffEditor=!0,clonedOptions.automaticLayout=!1,clonedOptions.scrollbar=Object.assign({},clonedOptions.scrollbar||{}),clonedOptions.scrollbar.vertical="visible",clonedOptions.folding=!1,clonedOptions.codeLens=this._options.diffCodeLens,clonedOptions.fixedOverflowWidgets=!0,clonedOptions.minimap=Object.assign({},clonedOptions.minimap||{}),clonedOptions.minimap.enabled=!1,clonedOptions}_adjustOptionsForLeftHandSide(options){const result=this._adjustOptionsForSubEditor(options);return this._options.renderSideBySide?result.wordWrapOverride1=this._options.diffWordWrap:(result.wordWrapOverride1="off",result.wordWrapOverride2="off"),options.originalAriaLabel&&(result.ariaLabel=options.originalAriaLabel),result.readOnly=!this._options.originalEditable,result.dropIntoEditor={enabled:!result.readOnly},result.extraEditorClassName="original-in-monaco-diff-editor",Object.assign(Object.assign({},result),{dimension:{height:0,width:0}})}_adjustOptionsForRightHandSide(options){const result=this._adjustOptionsForSubEditor(options);return options.modifiedAriaLabel&&(result.ariaLabel=options.modifiedAriaLabel),result.wordWrapOverride1=this._options.diffWordWrap,result.revealHorizontalRightPadding=EditorOptions.revealHorizontalRightPadding.defaultValue+DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH,result.scrollbar.verticalHasArrows=!1,result.extraEditorClassName="modified-in-monaco-diff-editor",Object.assign(Object.assign({},result),{dimension:{height:0,width:0}})}doLayout(){this._elementSizeObserver.observe(),this._doLayout()}_doLayout(){const width=this._elementSizeObserver.getWidth(),height=this._elementSizeObserver.getHeight(),reviewHeight=this._getReviewHeight(),splitPoint=this._strategy.layout();this._originalDomNode.style.width=splitPoint+"px",this._originalDomNode.style.left="0px",this._modifiedDomNode.style.width=width-splitPoint+"px",this._modifiedDomNode.style.left=splitPoint+"px",this._overviewDomElement.style.top="0px",this._overviewDomElement.style.height=height-reviewHeight+"px",this._overviewDomElement.style.width=DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH+"px",this._overviewDomElement.style.left=width-DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH+"px",this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH),this._overviewViewportDomElement.setHeight(30),this._originalEditor.layout({width:splitPoint,height:height-reviewHeight}),this._modifiedEditor.layout({width:width-splitPoint-(this._options.renderOverviewRuler?DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH:0),height:height-reviewHeight}),(this._originalOverviewRuler||this._modifiedOverviewRuler)&&this._layoutOverviewRulers(),this._reviewPane.layout(height-reviewHeight,width,reviewHeight),this._layoutOverviewViewport()}_layoutOverviewViewport(){const layout=this._computeOverviewViewport();layout?(this._overviewViewportDomElement.setTop(layout.top),this._overviewViewportDomElement.setHeight(layout.height)):(this._overviewViewportDomElement.setTop(0),this._overviewViewportDomElement.setHeight(0))}_computeOverviewViewport(){const layoutInfo=this._modifiedEditor.getLayoutInfo();if(!layoutInfo)return null;const scrollTop=this._modifiedEditor.getScrollTop(),scrollHeight=this._modifiedEditor.getScrollHeight(),computedAvailableSize=Math.max(0,layoutInfo.height),computedRepresentableSize=Math.max(0,computedAvailableSize-0),computedRatio=scrollHeight>0?computedRepresentableSize/scrollHeight:0;return{height:Math.max(0,Math.floor(layoutInfo.height*computedRatio)),top:Math.floor(scrollTop*computedRatio)}}_createDataSource(){return{getWidth:()=>this._elementSizeObserver.getWidth(),getHeight:()=>this._elementSizeObserver.getHeight()-this._getReviewHeight(),getOptions:()=>({renderOverviewRuler:this._options.renderOverviewRuler}),getContainerDomNode:()=>this._containerDomElement,relayoutEditors:()=>{this._doLayout()},getOriginalEditor:()=>this._originalEditor,getModifiedEditor:()=>this._modifiedEditor}}_setStrategy(newStrategy){this._strategy&&this._strategy.dispose(),this._strategy=newStrategy,newStrategy.applyColors(this._themeService.getColorTheme()),this._diffComputationResult&&this._updateDecorations(),this._doLayout()}_getLineChangeAtOrBeforeLineNumber(lineNumber,startLineNumberExtractor){const lineChanges=this._diffComputationResult?this._diffComputationResult.changes:[];if(0===lineChanges.length||lineNumber<startLineNumberExtractor(lineChanges[0]))return null;let min=0,max=lineChanges.length-1;for(;min<max;){const mid=Math.floor((min+max)/2),midStart=startLineNumberExtractor(lineChanges[mid]),midEnd=mid+1<=max?startLineNumberExtractor(lineChanges[mid+1]):1073741824;lineNumber<midStart?max=mid-1:lineNumber>=midEnd?min=mid+1:(min=mid,max=mid)}return lineChanges[min]}_getEquivalentLineForOriginalLineNumber(lineNumber){const lineChange=this._getLineChangeAtOrBeforeLineNumber(lineNumber,(lineChange=>lineChange.originalStartLineNumber));if(!lineChange)return lineNumber;const originalEquivalentLineNumber=lineChange.originalStartLineNumber+(lineChange.originalEndLineNumber>0?-1:0),modifiedEquivalentLineNumber=lineChange.modifiedStartLineNumber+(lineChange.modifiedEndLineNumber>0?-1:0),lineChangeOriginalLength=lineChange.originalEndLineNumber>0?lineChange.originalEndLineNumber-lineChange.originalStartLineNumber+1:0,lineChangeModifiedLength=lineChange.modifiedEndLineNumber>0?lineChange.modifiedEndLineNumber-lineChange.modifiedStartLineNumber+1:0,delta=lineNumber-originalEquivalentLineNumber;return delta<=lineChangeOriginalLength?modifiedEquivalentLineNumber+Math.min(delta,lineChangeModifiedLength):modifiedEquivalentLineNumber+lineChangeModifiedLength-lineChangeOriginalLength+delta}_getEquivalentLineForModifiedLineNumber(lineNumber){const lineChange=this._getLineChangeAtOrBeforeLineNumber(lineNumber,(lineChange=>lineChange.modifiedStartLineNumber));if(!lineChange)return lineNumber;const originalEquivalentLineNumber=lineChange.originalStartLineNumber+(lineChange.originalEndLineNumber>0?-1:0),modifiedEquivalentLineNumber=lineChange.modifiedStartLineNumber+(lineChange.modifiedEndLineNumber>0?-1:0),lineChangeOriginalLength=lineChange.originalEndLineNumber>0?lineChange.originalEndLineNumber-lineChange.originalStartLineNumber+1:0,lineChangeModifiedLength=lineChange.modifiedEndLineNumber>0?lineChange.modifiedEndLineNumber-lineChange.modifiedStartLineNumber+1:0,delta=lineNumber-modifiedEquivalentLineNumber;return delta<=lineChangeModifiedLength?originalEquivalentLineNumber+Math.min(delta,lineChangeOriginalLength):originalEquivalentLineNumber+lineChangeOriginalLength-lineChangeModifiedLength+delta}getDiffLineInformationForOriginal(lineNumber){return this._diffComputationResult?{equivalentLineNumber:this._getEquivalentLineForOriginalLineNumber(lineNumber)}:null}getDiffLineInformationForModified(lineNumber){return this._diffComputationResult?{equivalentLineNumber:this._getEquivalentLineForModifiedLineNumber(lineNumber)}:null}};DiffEditorWidget.ONE_OVERVIEW_WIDTH=15,DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH=30,DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY=200,DiffEditorWidget=__decorate([__param(3,IClipboardService),__param(4,IEditorWorkerService),__param(5,IContextKeyService),__param(6,IInstantiationService),__param(7,ICodeEditorService),__param(8,IThemeService),__param(9,INotificationService),__param(10,IContextMenuService),__param(11,IEditorProgressService)],DiffEditorWidget);export{DiffEditorWidget};class DiffEditorWidgetStyle extends Disposable{constructor(dataSource){super(),this._dataSource=dataSource,this._insertColor=null,this._removeColor=null}applyColors(theme){const newInsertColor=theme.getColor(diffOverviewRulerInserted)||(theme.getColor(diffInserted)||defaultInsertColor).transparent(2),newRemoveColor=theme.getColor(diffOverviewRulerRemoved)||(theme.getColor(diffRemoved)||defaultRemoveColor).transparent(2),hasChanges=!newInsertColor.equals(this._insertColor)||!newRemoveColor.equals(this._removeColor);return this._insertColor=newInsertColor,this._removeColor=newRemoveColor,hasChanges}getEditorsDiffDecorations(lineChanges,ignoreTrimWhitespace,renderIndicators,renderMarginRevertIcon,originalWhitespaces,modifiedWhitespaces){modifiedWhitespaces=modifiedWhitespaces.sort(((a,b)=>a.afterLineNumber-b.afterLineNumber)),originalWhitespaces=originalWhitespaces.sort(((a,b)=>a.afterLineNumber-b.afterLineNumber));const zones=this._getViewZones(lineChanges,originalWhitespaces,modifiedWhitespaces,renderIndicators),originalDecorations=this._getOriginalEditorDecorations(zones,lineChanges,ignoreTrimWhitespace,renderIndicators),modifiedDecorations=this._getModifiedEditorDecorations(zones,lineChanges,ignoreTrimWhitespace,renderIndicators,renderMarginRevertIcon);return{original:{decorations:originalDecorations.decorations,overviewZones:originalDecorations.overviewZones,zones:zones.original},modified:{decorations:modifiedDecorations.decorations,overviewZones:modifiedDecorations.overviewZones,zones:zones.modified}}}}class ForeignViewZonesIterator{constructor(source){this._source=source,this._index=-1,this.current=null,this.advance()}advance(){this._index++,this._index<this._source.length?this.current=this._source[this._index]:this.current=null}}class ViewZonesComputer{constructor(_lineChanges,_originalForeignVZ,_modifiedForeignVZ,_originalEditor,_modifiedEditor){this._lineChanges=_lineChanges,this._originalForeignVZ=_originalForeignVZ,this._modifiedForeignVZ=_modifiedForeignVZ,this._originalEditor=_originalEditor,this._modifiedEditor=_modifiedEditor}static _getViewLineCount(editor,startLineNumber,endLineNumber){const model=editor.getModel(),viewModel=editor._getViewModel();if(model&&viewModel){const viewRange=getViewRange(model,viewModel,startLineNumber,endLineNumber);return viewRange.endLineNumber-viewRange.startLineNumber+1}return endLineNumber-startLineNumber+1}getViewZones(){const originalLineHeight=this._originalEditor.getOption(61),modifiedLineHeight=this._modifiedEditor.getOption(61),originalHasWrapping=-1!==this._originalEditor.getOption(134).wrappingColumn,modifiedHasWrapping=-1!==this._modifiedEditor.getOption(134).wrappingColumn,hasWrapping=originalHasWrapping||modifiedHasWrapping,originalModel=this._originalEditor.getModel(),originalCoordinatesConverter=this._originalEditor._getViewModel().coordinatesConverter,modifiedCoordinatesConverter=this._modifiedEditor._getViewModel().coordinatesConverter,result_original=[],result_modified=[];let lineChangeModifiedLength=0,lineChangeOriginalLength=0,originalEquivalentLineNumber=0,modifiedEquivalentLineNumber=0,originalEndEquivalentLineNumber=0,modifiedEndEquivalentLineNumber=0;const sortMyViewZones=(a,b)=>a.afterLineNumber-b.afterLineNumber,addAndCombineIfPossible=(destination,item)=>{if(null===item.domNode&&destination.length>0){const lastItem=destination[destination.length-1];if(lastItem.afterLineNumber===item.afterLineNumber&&null===lastItem.domNode)return void(lastItem.heightInLines+=item.heightInLines)}destination.push(item)},modifiedForeignVZ=new ForeignViewZonesIterator(this._modifiedForeignVZ),originalForeignVZ=new ForeignViewZonesIterator(this._originalForeignVZ);let lastOriginalLineNumber=1,lastModifiedLineNumber=1;for(let i=0,length=this._lineChanges.length;i<=length;i++){const lineChange=i<length?this._lineChanges[i]:null;null!==lineChange?(originalEquivalentLineNumber=lineChange.originalStartLineNumber+(lineChange.originalEndLineNumber>0?-1:0),modifiedEquivalentLineNumber=lineChange.modifiedStartLineNumber+(lineChange.modifiedEndLineNumber>0?-1:0),lineChangeOriginalLength=lineChange.originalEndLineNumber>0?ViewZonesComputer._getViewLineCount(this._originalEditor,lineChange.originalStartLineNumber,lineChange.originalEndLineNumber):0,lineChangeModifiedLength=lineChange.modifiedEndLineNumber>0?ViewZonesComputer._getViewLineCount(this._modifiedEditor,lineChange.modifiedStartLineNumber,lineChange.modifiedEndLineNumber):0,originalEndEquivalentLineNumber=Math.max(lineChange.originalStartLineNumber,lineChange.originalEndLineNumber),modifiedEndEquivalentLineNumber=Math.max(lineChange.modifiedStartLineNumber,lineChange.modifiedEndLineNumber)):(originalEquivalentLineNumber+=1e7+lineChangeOriginalLength,modifiedEquivalentLineNumber+=1e7+lineChangeModifiedLength,originalEndEquivalentLineNumber=originalEquivalentLineNumber,modifiedEndEquivalentLineNumber=modifiedEquivalentLineNumber);let stepOriginal=[],stepModified=[];if(hasWrapping){let count;count=lineChange?lineChange.originalEndLineNumber>0?lineChange.originalStartLineNumber-lastOriginalLineNumber:lineChange.modifiedStartLineNumber-lastModifiedLineNumber:originalModel.getLineCount()-lastOriginalLineNumber+1;for(let i=0;i<count;i++){const originalLineNumber=lastOriginalLineNumber+i,modifiedLineNumber=lastModifiedLineNumber+i,originalViewLineCount=originalCoordinatesConverter.getModelLineViewLineCount(originalLineNumber),modifiedViewLineCount=modifiedCoordinatesConverter.getModelLineViewLineCount(modifiedLineNumber);originalViewLineCount<modifiedViewLineCount?stepOriginal.push({afterLineNumber:originalLineNumber,heightInLines:modifiedViewLineCount-originalViewLineCount,domNode:null,marginDomNode:null}):originalViewLineCount>modifiedViewLineCount&&stepModified.push({afterLineNumber:modifiedLineNumber,heightInLines:originalViewLineCount-modifiedViewLineCount,domNode:null,marginDomNode:null})}lineChange&&(lastOriginalLineNumber=(lineChange.originalEndLineNumber>0?lineChange.originalEndLineNumber:lineChange.originalStartLineNumber)+1,lastModifiedLineNumber=(lineChange.modifiedEndLineNumber>0?lineChange.modifiedEndLineNumber:lineChange.modifiedStartLineNumber)+1)}for(;modifiedForeignVZ.current&&modifiedForeignVZ.current.afterLineNumber<=modifiedEndEquivalentLineNumber;){let viewZoneLineNumber;viewZoneLineNumber=modifiedForeignVZ.current.afterLineNumber<=modifiedEquivalentLineNumber?originalEquivalentLineNumber-modifiedEquivalentLineNumber+modifiedForeignVZ.current.afterLineNumber:originalEndEquivalentLineNumber;let marginDomNode=null;lineChange&&lineChange.modifiedStartLineNumber<=modifiedForeignVZ.current.afterLineNumber&&modifiedForeignVZ.current.afterLineNumber<=lineChange.modifiedEndLineNumber&&(marginDomNode=this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion()),stepOriginal.push({afterLineNumber:viewZoneLineNumber,heightInLines:modifiedForeignVZ.current.height/modifiedLineHeight,domNode:null,marginDomNode}),modifiedForeignVZ.advance()}for(;originalForeignVZ.current&&originalForeignVZ.current.afterLineNumber<=originalEndEquivalentLineNumber;){let viewZoneLineNumber;viewZoneLineNumber=originalForeignVZ.current.afterLineNumber<=originalEquivalentLineNumber?modifiedEquivalentLineNumber-originalEquivalentLineNumber+originalForeignVZ.current.afterLineNumber:modifiedEndEquivalentLineNumber,stepModified.push({afterLineNumber:viewZoneLineNumber,heightInLines:originalForeignVZ.current.height/originalLineHeight,domNode:null}),originalForeignVZ.advance()}if(null!==lineChange&&isChangeOrInsert(lineChange)){const r=this._produceOriginalFromDiff(lineChange,lineChangeOriginalLength,lineChangeModifiedLength);r&&stepOriginal.push(r)}if(null!==lineChange&&isChangeOrDelete(lineChange)){const r=this._produceModifiedFromDiff(lineChange,lineChangeOriginalLength,lineChangeModifiedLength);r&&stepModified.push(r)}let stepOriginalIndex=0,stepModifiedIndex=0;for(stepOriginal=stepOriginal.sort(sortMyViewZones),stepModified=stepModified.sort(sortMyViewZones);stepOriginalIndex<stepOriginal.length&&stepModifiedIndex<stepModified.length;){const original=stepOriginal[stepOriginalIndex],modified=stepModified[stepModifiedIndex],originalDelta=original.afterLineNumber-originalEquivalentLineNumber,modifiedDelta=modified.afterLineNumber-modifiedEquivalentLineNumber;originalDelta<modifiedDelta?(addAndCombineIfPossible(result_original,original),stepOriginalIndex++):modifiedDelta<originalDelta?(addAndCombineIfPossible(result_modified,modified),stepModifiedIndex++):original.shouldNotShrink?(addAndCombineIfPossible(result_original,original),stepOriginalIndex++):modified.shouldNotShrink?(addAndCombineIfPossible(result_modified,modified),stepModifiedIndex++):original.heightInLines>=modified.heightInLines?(original.heightInLines-=modified.heightInLines,stepModifiedIndex++):(modified.heightInLines-=original.heightInLines,stepOriginalIndex++)}for(;stepOriginalIndex<stepOriginal.length;)addAndCombineIfPossible(result_original,stepOriginal[stepOriginalIndex]),stepOriginalIndex++;for(;stepModifiedIndex<stepModified.length;)addAndCombineIfPossible(result_modified,stepModified[stepModifiedIndex]),stepModifiedIndex++}return{original:ViewZonesComputer._ensureDomNodes(result_original),modified:ViewZonesComputer._ensureDomNodes(result_modified)}}static _ensureDomNodes(zones){return zones.map((z=>(z.domNode||(z.domNode=createFakeLinesDiv()),z)))}}function createDecoration(startLineNumber,startColumn,endLineNumber,endColumn,options){return{range:new Range(startLineNumber,startColumn,endLineNumber,endColumn),options}}const DECORATIONS={arrowRevertChange:ModelDecorationOptions.register({description:"diff-editor-arrow-revert-change",glyphMarginClassName:"arrow-revert-change "+ThemeIcon.asClassName(Codicon.arrowRight)}),charDelete:ModelDecorationOptions.register({description:"diff-editor-char-delete",className:"char-delete"}),charDeleteWholeLine:ModelDecorationOptions.register({description:"diff-editor-char-delete-whole-line",className:"char-delete",isWholeLine:!0}),charInsert:ModelDecorationOptions.register({description:"diff-editor-char-insert",className:"char-insert"}),charInsertWholeLine:ModelDecorationOptions.register({description:"diff-editor-char-insert-whole-line",className:"char-insert",isWholeLine:!0}),lineInsert:ModelDecorationOptions.register({description:"diff-editor-line-insert",className:"line-insert",marginClassName:"gutter-insert",isWholeLine:!0}),lineInsertWithSign:ModelDecorationOptions.register({description:"diff-editor-line-insert-with-sign",className:"line-insert",linesDecorationsClassName:"insert-sign "+ThemeIcon.asClassName(diffInsertIcon),marginClassName:"gutter-insert",isWholeLine:!0}),lineDelete:ModelDecorationOptions.register({description:"diff-editor-line-delete",className:"line-delete",marginClassName:"gutter-delete",isWholeLine:!0}),lineDeleteWithSign:ModelDecorationOptions.register({description:"diff-editor-line-delete-with-sign",className:"line-delete",linesDecorationsClassName:"delete-sign "+ThemeIcon.asClassName(diffRemoveIcon),marginClassName:"gutter-delete",isWholeLine:!0}),lineDeleteMargin:ModelDecorationOptions.register({description:"diff-editor-line-delete-margin",marginClassName:"gutter-delete"})};class DiffEditorWidgetSideBySide extends DiffEditorWidgetStyle{constructor(dataSource,enableSplitViewResizing){super(dataSource),this._disableSash=!1===enableSplitViewResizing,this._sashRatio=null,this._sashPosition=null,this._startSashPosition=null,this._sash=this._register(new Sash(this._dataSource.getContainerDomNode(),this,{orientation:0})),this._disableSash&&(this._sash.state=0),this._sash.onDidStart((()=>this._onSashDragStart())),this._sash.onDidChange((e=>this._onSashDrag(e))),this._sash.onDidEnd((()=>this._onSashDragEnd())),this._sash.onDidReset((()=>this._onSashReset()))}setEnableSplitViewResizing(enableSplitViewResizing){const newDisableSash=!1===enableSplitViewResizing;this._disableSash!==newDisableSash&&(this._disableSash=newDisableSash,this._sash.state=this._disableSash?0:3)}layout(sashRatio=this._sashRatio){const contentWidth=this._dataSource.getWidth()-(this._dataSource.getOptions().renderOverviewRuler?DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH:0);let sashPosition=Math.floor((sashRatio||.5)*contentWidth);const midPoint=Math.floor(.5*contentWidth);return sashPosition=this._disableSash?midPoint:sashPosition||midPoint,contentWidth>2*DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH?(sashPosition<DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH&&(sashPosition=DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH),sashPosition>contentWidth-DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH&&(sashPosition=contentWidth-DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH)):sashPosition=midPoint,this._sashPosition!==sashPosition&&(this._sashPosition=sashPosition),this._sash.layout(),this._sashPosition}_onSashDragStart(){this._startSashPosition=this._sashPosition}_onSashDrag(e){const contentWidth=this._dataSource.getWidth()-(this._dataSource.getOptions().renderOverviewRuler?DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH:0),sashPosition=this.layout((this._startSashPosition+(e.currentX-e.startX))/contentWidth);this._sashRatio=sashPosition/contentWidth,this._dataSource.relayoutEditors()}_onSashDragEnd(){this._sash.layout()}_onSashReset(){this._sashRatio=.5,this._dataSource.relayoutEditors(),this._sash.layout()}getVerticalSashTop(sash){return 0}getVerticalSashLeft(sash){return this._sashPosition}getVerticalSashHeight(sash){return this._dataSource.getHeight()}_getViewZones(lineChanges,originalForeignVZ,modifiedForeignVZ){const originalEditor=this._dataSource.getOriginalEditor(),modifiedEditor=this._dataSource.getModifiedEditor();return new SideBySideViewZonesComputer(lineChanges,originalForeignVZ,modifiedForeignVZ,originalEditor,modifiedEditor).getViewZones()}_getOriginalEditorDecorations(zones,lineChanges,ignoreTrimWhitespace,renderIndicators){const originalEditor=this._dataSource.getOriginalEditor(),overviewZoneColor=String(this._removeColor),result={decorations:[],overviewZones:[]},originalModel=originalEditor.getModel(),originalViewModel=originalEditor._getViewModel();for(const lineChange of lineChanges)if(isChangeOrDelete(lineChange)){result.decorations.push({range:new Range(lineChange.originalStartLineNumber,1,lineChange.originalEndLineNumber,1073741824),options:renderIndicators?DECORATIONS.lineDeleteWithSign:DECORATIONS.lineDelete}),isChangeOrInsert(lineChange)&&lineChange.charChanges||result.decorations.push(createDecoration(lineChange.originalStartLineNumber,1,lineChange.originalEndLineNumber,1073741824,DECORATIONS.charDeleteWholeLine));const viewRange=getViewRange(originalModel,originalViewModel,lineChange.originalStartLineNumber,lineChange.originalEndLineNumber);if(result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber,viewRange.endLineNumber,0,overviewZoneColor)),lineChange.charChanges)for(const charChange of lineChange.charChanges)if(isCharChangeOrDelete(charChange))if(ignoreTrimWhitespace)for(let lineNumber=charChange.originalStartLineNumber;lineNumber<=charChange.originalEndLineNumber;lineNumber++){let startColumn,endColumn;startColumn=lineNumber===charChange.originalStartLineNumber?charChange.originalStartColumn:originalModel.getLineFirstNonWhitespaceColumn(lineNumber),endColumn=lineNumber===charChange.originalEndLineNumber?charChange.originalEndColumn:originalModel.getLineLastNonWhitespaceColumn(lineNumber),result.decorations.push(createDecoration(lineNumber,startColumn,lineNumber,endColumn,DECORATIONS.charDelete))}else result.decorations.push(createDecoration(charChange.originalStartLineNumber,charChange.originalStartColumn,charChange.originalEndLineNumber,charChange.originalEndColumn,DECORATIONS.charDelete))}return result}_getModifiedEditorDecorations(zones,lineChanges,ignoreTrimWhitespace,renderIndicators,renderMarginRevertIcon){const modifiedEditor=this._dataSource.getModifiedEditor(),overviewZoneColor=String(this._insertColor),result={decorations:[],overviewZones:[]},modifiedModel=modifiedEditor.getModel(),modifiedViewModel=modifiedEditor._getViewModel();for(const lineChange of lineChanges){if(renderMarginRevertIcon)if(lineChange.modifiedEndLineNumber>0)result.decorations.push({range:new Range(lineChange.modifiedStartLineNumber,1,lineChange.modifiedStartLineNumber,1),options:DECORATIONS.arrowRevertChange});else{const viewZone=zones.modified.find((z=>z.afterLineNumber===lineChange.modifiedStartLineNumber));viewZone&&(viewZone.marginDomNode=createViewZoneMarginArrow())}if(isChangeOrInsert(lineChange)){result.decorations.push({range:new Range(lineChange.modifiedStartLineNumber,1,lineChange.modifiedEndLineNumber,1073741824),options:renderIndicators?DECORATIONS.lineInsertWithSign:DECORATIONS.lineInsert}),isChangeOrDelete(lineChange)&&lineChange.charChanges||result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber,1,lineChange.modifiedEndLineNumber,1073741824,DECORATIONS.charInsertWholeLine));const viewRange=getViewRange(modifiedModel,modifiedViewModel,lineChange.modifiedStartLineNumber,lineChange.modifiedEndLineNumber);if(result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber,viewRange.endLineNumber,0,overviewZoneColor)),lineChange.charChanges)for(const charChange of lineChange.charChanges)if(isCharChangeOrInsert(charChange))if(ignoreTrimWhitespace)for(let lineNumber=charChange.modifiedStartLineNumber;lineNumber<=charChange.modifiedEndLineNumber;lineNumber++){let startColumn,endColumn;startColumn=lineNumber===charChange.modifiedStartLineNumber?charChange.modifiedStartColumn:modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber),endColumn=lineNumber===charChange.modifiedEndLineNumber?charChange.modifiedEndColumn:modifiedModel.getLineLastNonWhitespaceColumn(lineNumber),result.decorations.push(createDecoration(lineNumber,startColumn,lineNumber,endColumn,DECORATIONS.charInsert))}else result.decorations.push(createDecoration(charChange.modifiedStartLineNumber,charChange.modifiedStartColumn,charChange.modifiedEndLineNumber,charChange.modifiedEndColumn,DECORATIONS.charInsert))}}return result}}DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH=100;class SideBySideViewZonesComputer extends ViewZonesComputer{constructor(lineChanges,originalForeignVZ,modifiedForeignVZ,originalEditor,modifiedEditor){super(lineChanges,originalForeignVZ,modifiedForeignVZ,originalEditor,modifiedEditor)}_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion(){return null}_produceOriginalFromDiff(lineChange,lineChangeOriginalLength,lineChangeModifiedLength){return lineChangeModifiedLength>lineChangeOriginalLength?{afterLineNumber:Math.max(lineChange.originalStartLineNumber,lineChange.originalEndLineNumber),heightInLines:lineChangeModifiedLength-lineChangeOriginalLength,domNode:null}:null}_produceModifiedFromDiff(lineChange,lineChangeOriginalLength,lineChangeModifiedLength){return lineChangeOriginalLength>lineChangeModifiedLength?{afterLineNumber:Math.max(lineChange.modifiedStartLineNumber,lineChange.modifiedEndLineNumber),heightInLines:lineChangeOriginalLength-lineChangeModifiedLength,domNode:null}:null}}class DiffEditorWidgetInline extends DiffEditorWidgetStyle{constructor(dataSource,enableSplitViewResizing){super(dataSource),this._decorationsLeft=dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft,this._register(dataSource.getOriginalEditor().onDidLayoutChange((layoutInfo=>{this._decorationsLeft!==layoutInfo.decorationsLeft&&(this._decorationsLeft=layoutInfo.decorationsLeft,dataSource.relayoutEditors())})))}setEnableSplitViewResizing(enableSplitViewResizing){}_getViewZones(lineChanges,originalForeignVZ,modifiedForeignVZ,renderIndicators){const originalEditor=this._dataSource.getOriginalEditor(),modifiedEditor=this._dataSource.getModifiedEditor();return new InlineViewZonesComputer(lineChanges,originalForeignVZ,modifiedForeignVZ,originalEditor,modifiedEditor,renderIndicators).getViewZones()}_getOriginalEditorDecorations(zones,lineChanges,ignoreTrimWhitespace,renderIndicators){const overviewZoneColor=String(this._removeColor),result={decorations:[],overviewZones:[]},originalEditor=this._dataSource.getOriginalEditor(),originalModel=originalEditor.getModel(),originalViewModel=originalEditor._getViewModel();let zoneIndex=0;for(const lineChange of lineChanges)if(isChangeOrDelete(lineChange)){for(result.decorations.push({range:new Range(lineChange.originalStartLineNumber,1,lineChange.originalEndLineNumber,1073741824),options:DECORATIONS.lineDeleteMargin});zoneIndex<zones.modified.length;){const zone=zones.modified[zoneIndex];if(zone.diff&&zone.diff.originalStartLineNumber>=lineChange.originalStartLineNumber)break;zoneIndex++}let zoneHeightInLines=0;if(zoneIndex<zones.modified.length){const zone=zones.modified[zoneIndex];zone.diff&&zone.diff.originalStartLineNumber===lineChange.originalStartLineNumber&&zone.diff.originalEndLineNumber===lineChange.originalEndLineNumber&&zone.diff.modifiedStartLineNumber===lineChange.modifiedStartLineNumber&&zone.diff.modifiedEndLineNumber===lineChange.modifiedEndLineNumber&&(zoneHeightInLines=zone.heightInLines)}const viewRange=getViewRange(originalModel,originalViewModel,lineChange.originalStartLineNumber,lineChange.originalEndLineNumber);result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber,viewRange.endLineNumber,zoneHeightInLines,overviewZoneColor))}return result}_getModifiedEditorDecorations(zones,lineChanges,ignoreTrimWhitespace,renderIndicators,renderMarginRevertIcon){const modifiedEditor=this._dataSource.getModifiedEditor(),overviewZoneColor=String(this._insertColor),result={decorations:[],overviewZones:[]},modifiedModel=modifiedEditor.getModel(),modifiedViewModel=modifiedEditor._getViewModel();for(const lineChange of lineChanges)if(isChangeOrInsert(lineChange)){result.decorations.push({range:new Range(lineChange.modifiedStartLineNumber,1,lineChange.modifiedEndLineNumber,1073741824),options:renderIndicators?DECORATIONS.lineInsertWithSign:DECORATIONS.lineInsert});const viewRange=getViewRange(modifiedModel,modifiedViewModel,lineChange.modifiedStartLineNumber,lineChange.modifiedEndLineNumber);if(result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber,viewRange.endLineNumber,0,overviewZoneColor)),lineChange.charChanges){for(const charChange of lineChange.charChanges)if(isCharChangeOrInsert(charChange))if(ignoreTrimWhitespace)for(let lineNumber=charChange.modifiedStartLineNumber;lineNumber<=charChange.modifiedEndLineNumber;lineNumber++){let startColumn,endColumn;startColumn=lineNumber===charChange.modifiedStartLineNumber?charChange.modifiedStartColumn:modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber),endColumn=lineNumber===charChange.modifiedEndLineNumber?charChange.modifiedEndColumn:modifiedModel.getLineLastNonWhitespaceColumn(lineNumber),result.decorations.push(createDecoration(lineNumber,startColumn,lineNumber,endColumn,DECORATIONS.charInsert))}else result.decorations.push(createDecoration(charChange.modifiedStartLineNumber,charChange.modifiedStartColumn,charChange.modifiedEndLineNumber,charChange.modifiedEndColumn,DECORATIONS.charInsert))}else result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber,1,lineChange.modifiedEndLineNumber,1073741824,DECORATIONS.charInsertWholeLine))}return result}layout(){return Math.max(5,this._decorationsLeft)}}class InlineViewZonesComputer extends ViewZonesComputer{constructor(lineChanges,originalForeignVZ,modifiedForeignVZ,originalEditor,modifiedEditor,renderIndicators){super(lineChanges,originalForeignVZ,modifiedForeignVZ,originalEditor,modifiedEditor),this._originalModel=originalEditor.getModel(),this._renderIndicators=renderIndicators,this._pendingLineChange=[],this._pendingViewZones=[],this._lineBreaksComputer=this._modifiedEditor._getViewModel().createLineBreaksComputer()}getViewZones(){const result=super.getViewZones();return this._finalize(result),result}_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion(){const result=document.createElement("div");return result.className="inline-added-margin-view-zone",result}_produceOriginalFromDiff(lineChange,lineChangeOriginalLength,lineChangeModifiedLength){const marginDomNode=document.createElement("div");return marginDomNode.className="inline-added-margin-view-zone",{afterLineNumber:Math.max(lineChange.originalStartLineNumber,lineChange.originalEndLineNumber),heightInLines:lineChangeModifiedLength,domNode:document.createElement("div"),marginDomNode}}_produceModifiedFromDiff(lineChange,lineChangeOriginalLength,lineChangeModifiedLength){const domNode=document.createElement("div");domNode.className=`view-lines line-delete ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`;const marginDomNode=document.createElement("div");marginDomNode.className="inline-deleted-margin-view-zone";const viewZone={shouldNotShrink:!0,afterLineNumber:0===lineChange.modifiedEndLineNumber?lineChange.modifiedStartLineNumber:lineChange.modifiedStartLineNumber-1,heightInLines:lineChangeOriginalLength,minWidthInPx:0,domNode,marginDomNode,diff:{originalStartLineNumber:lineChange.originalStartLineNumber,originalEndLineNumber:lineChange.originalEndLineNumber,modifiedStartLineNumber:lineChange.modifiedStartLineNumber,modifiedEndLineNumber:lineChange.modifiedEndLineNumber,originalModel:this._originalModel,viewLineCounts:null}};for(let lineNumber=lineChange.originalStartLineNumber;lineNumber<=lineChange.originalEndLineNumber;lineNumber++)this._lineBreaksComputer.addRequest(this._originalModel.getLineContent(lineNumber),null,null);return this._pendingLineChange.push(lineChange),this._pendingViewZones.push(viewZone),viewZone}_finalize(result){const modifiedEditorOptions=this._modifiedEditor.getOptions(),tabSize=this._modifiedEditor.getModel().getOptions().tabSize,fontInfo=modifiedEditorOptions.get(46),disableMonospaceOptimizations=modifiedEditorOptions.get(29),typicalHalfwidthCharacterWidth=fontInfo.typicalHalfwidthCharacterWidth,scrollBeyondLastColumn=modifiedEditorOptions.get(95),mightContainNonBasicASCII=this._originalModel.mightContainNonBasicASCII(),mightContainRTL=this._originalModel.mightContainRTL(),lineHeight=modifiedEditorOptions.get(61),lineDecorationsWidth=modifiedEditorOptions.get(133).decorationsWidth,stopRenderingLineAfter=modifiedEditorOptions.get(107),renderWhitespace=modifiedEditorOptions.get(90),renderControlCharacters=modifiedEditorOptions.get(85),fontLigatures=modifiedEditorOptions.get(47),lineBreaks=this._lineBreaksComputer.finalize();let lineBreakIndex=0;for(let i=0;i<this._pendingLineChange.length;i++){const lineChange=this._pendingLineChange[i],viewZone=this._pendingViewZones[i],domNode=viewZone.domNode;applyFontInfo(domNode,fontInfo);const marginDomNode=viewZone.marginDomNode;applyFontInfo(marginDomNode,fontInfo);const decorations=[];if(lineChange.charChanges)for(const charChange of lineChange.charChanges)isCharChangeOrDelete(charChange)&&decorations.push(new InlineDecoration(new Range(charChange.originalStartLineNumber,charChange.originalStartColumn,charChange.originalEndLineNumber,charChange.originalEndColumn),"char-delete",0));const hasCharChanges=decorations.length>0,sb=createStringBuilder(1e4);let maxCharsPerLine=0,renderedLineCount=0,viewLineCounts=null;for(let lineNumber=lineChange.originalStartLineNumber;lineNumber<=lineChange.originalEndLineNumber;lineNumber++){const lineIndex=lineNumber-lineChange.originalStartLineNumber,lineTokens=this._originalModel.tokenization.getLineTokens(lineNumber),lineContent=lineTokens.getLineContent(),lineBreakData=lineBreaks[lineBreakIndex++],actualDecorations=LineDecoration.filter(decorations,lineNumber,1,lineContent.length+1);if(lineBreakData){let lastBreakOffset=0;for(const breakOffset of lineBreakData.breakOffsets){const viewLineTokens=lineTokens.sliceAndInflate(lastBreakOffset,breakOffset,0),viewLineContent=lineContent.substring(lastBreakOffset,breakOffset);maxCharsPerLine=Math.max(maxCharsPerLine,this._renderOriginalLine(renderedLineCount++,viewLineContent,viewLineTokens,LineDecoration.extractWrapped(actualDecorations,lastBreakOffset,breakOffset),hasCharChanges,mightContainNonBasicASCII,mightContainRTL,fontInfo,disableMonospaceOptimizations,lineHeight,lineDecorationsWidth,stopRenderingLineAfter,renderWhitespace,renderControlCharacters,fontLigatures,tabSize,sb,marginDomNode)),lastBreakOffset=breakOffset}for(viewLineCounts||(viewLineCounts=[]);viewLineCounts.length<lineIndex;)viewLineCounts[viewLineCounts.length]=1;viewLineCounts[lineIndex]=lineBreakData.breakOffsets.length,viewZone.heightInLines+=lineBreakData.breakOffsets.length-1;const marginDomNode2=document.createElement("div");marginDomNode2.className="gutter-delete",result.original.push({afterLineNumber:lineNumber,afterColumn:0,heightInLines:lineBreakData.breakOffsets.length-1,domNode:createFakeLinesDiv(),marginDomNode:marginDomNode2})}else maxCharsPerLine=Math.max(maxCharsPerLine,this._renderOriginalLine(renderedLineCount++,lineContent,lineTokens,actualDecorations,hasCharChanges,mightContainNonBasicASCII,mightContainRTL,fontInfo,disableMonospaceOptimizations,lineHeight,lineDecorationsWidth,stopRenderingLineAfter,renderWhitespace,renderControlCharacters,fontLigatures,tabSize,sb,marginDomNode))}maxCharsPerLine+=scrollBeyondLastColumn;const html=sb.build(),trustedhtml=ttPolicy?ttPolicy.createHTML(html):html;if(domNode.innerHTML=trustedhtml,viewZone.minWidthInPx=maxCharsPerLine*typicalHalfwidthCharacterWidth,viewLineCounts){const cnt=lineChange.originalEndLineNumber-lineChange.originalStartLineNumber;for(;viewLineCounts.length<=cnt;)viewLineCounts[viewLineCounts.length]=1}viewZone.diff.viewLineCounts=viewLineCounts}result.original.sort(((a,b)=>a.afterLineNumber-b.afterLineNumber))}_renderOriginalLine(renderedLineCount,lineContent,lineTokens,decorations,hasCharChanges,mightContainNonBasicASCII,mightContainRTL,fontInfo,disableMonospaceOptimizations,lineHeight,lineDecorationsWidth,stopRenderingLineAfter,renderWhitespace,renderControlCharacters,fontLigatures,tabSize,sb,marginDomNode){sb.appendASCIIString('<div class="view-line'),hasCharChanges||sb.appendASCIIString(" char-delete"),sb.appendASCIIString('" style="top:'),sb.appendASCIIString(String(renderedLineCount*lineHeight)),sb.appendASCIIString('px;width:1000000px;">');const isBasicASCII=ViewLineRenderingData.isBasicASCII(lineContent,mightContainNonBasicASCII),containsRTL=ViewLineRenderingData.containsRTL(lineContent,isBasicASCII,mightContainRTL),output=renderViewLine(new RenderLineInput(fontInfo.isMonospace&&!disableMonospaceOptimizations,fontInfo.canUseHalfwidthRightwardsArrow,lineContent,!1,isBasicASCII,containsRTL,0,lineTokens,decorations,tabSize,0,fontInfo.spaceWidth,fontInfo.middotWidth,fontInfo.wsmiddotWidth,stopRenderingLineAfter,renderWhitespace,renderControlCharacters,fontLigatures!==EditorFontLigatures.OFF,null),sb);if(sb.appendASCIIString("</div>"),this._renderIndicators){const marginElement=document.createElement("div");marginElement.className=`delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`,marginElement.setAttribute("style",`position:absolute;top:${renderedLineCount*lineHeight}px;width:${lineDecorationsWidth}px;height:${lineHeight}px;right:0;`),marginDomNode.appendChild(marginElement)}return output.characterMapping.getHorizontalOffset(output.characterMapping.length)}}function validateDiffWordWrap(value,defaultValue){return validateStringSetOption(value,defaultValue,["off","on","inherit"])}function isChangeOrInsert(lineChange){return lineChange.modifiedEndLineNumber>0}function isChangeOrDelete(lineChange){return lineChange.originalEndLineNumber>0}function isCharChangeOrInsert(charChange){return charChange.modifiedStartLineNumber===charChange.modifiedEndLineNumber?charChange.modifiedEndColumn-charChange.modifiedStartColumn>0:charChange.modifiedEndLineNumber-charChange.modifiedStartLineNumber>0}function isCharChangeOrDelete(charChange){return charChange.originalStartLineNumber===charChange.originalEndLineNumber?charChange.originalEndColumn-charChange.originalStartColumn>0:charChange.originalEndLineNumber-charChange.originalStartLineNumber>0}function createFakeLinesDiv(){const r=document.createElement("div");return r.className="diagonal-fill",r}function createViewZoneMarginArrow(){const arrow=document.createElement("div");return arrow.className="arrow-revert-change "+ThemeIcon.asClassName(Codicon.arrowRight),dom.$("div",{},arrow)}function getViewRange(model,viewModel,startLineNumber,endLineNumber){const lineCount=model.getLineCount();return startLineNumber=Math.min(lineCount,Math.max(1,startLineNumber)),endLineNumber=Math.min(lineCount,Math.max(1,endLineNumber)),viewModel.coordinatesConverter.convertModelRangeToViewRange(new Range(startLineNumber,model.getLineMinColumn(startLineNumber),endLineNumber,model.getLineMaxColumn(endLineNumber)))}function validateDiffEditorOptions(options,defaults){return{enableSplitViewResizing:validateBooleanOption(options.enableSplitViewResizing,defaults.enableSplitViewResizing),renderSideBySide:validateBooleanOption(options.renderSideBySide,defaults.renderSideBySide),renderMarginRevertIcon:validateBooleanOption(options.renderMarginRevertIcon,defaults.renderMarginRevertIcon),maxComputationTime:clampedInt(options.maxComputationTime,defaults.maxComputationTime,0,1073741824),maxFileSize:clampedInt(options.maxFileSize,defaults.maxFileSize,0,1073741824),ignoreTrimWhitespace:validateBooleanOption(options.ignoreTrimWhitespace,defaults.ignoreTrimWhitespace),renderIndicators:validateBooleanOption(options.renderIndicators,defaults.renderIndicators),originalEditable:validateBooleanOption(options.originalEditable,defaults.originalEditable),diffCodeLens:validateBooleanOption(options.diffCodeLens,defaults.diffCodeLens),renderOverviewRuler:validateBooleanOption(options.renderOverviewRuler,defaults.renderOverviewRuler),diffWordWrap:validateDiffWordWrap(options.diffWordWrap,defaults.diffWordWrap)}}function changedDiffEditorOptions(a,b){return{enableSplitViewResizing:a.enableSplitViewResizing!==b.enableSplitViewResizing,renderSideBySide:a.renderSideBySide!==b.renderSideBySide,renderMarginRevertIcon:a.renderMarginRevertIcon!==b.renderMarginRevertIcon,maxComputationTime:a.maxComputationTime!==b.maxComputationTime,maxFileSize:a.maxFileSize!==b.maxFileSize,ignoreTrimWhitespace:a.ignoreTrimWhitespace!==b.ignoreTrimWhitespace,renderIndicators:a.renderIndicators!==b.renderIndicators,originalEditable:a.originalEditable!==b.originalEditable,diffCodeLens:a.diffCodeLens!==b.diffCodeLens,renderOverviewRuler:a.renderOverviewRuler!==b.renderOverviewRuler,diffWordWrap:a.diffWordWrap!==b.diffWordWrap}}registerThemingParticipant(((theme,collector)=>{const added=theme.getColor(diffInserted);added&&collector.addRule(`.monaco-editor .char-insert, .monaco-diff-editor .char-insert { background-color: ${added}; }`);const lineAdded=theme.getColor(diffInsertedLine)||added;lineAdded&&collector.addRule(`.monaco-editor .line-insert, .monaco-diff-editor .line-insert { background-color: ${lineAdded}; }`);const gutterAdded=theme.getColor(diffInsertedLineGutter)||lineAdded;gutterAdded&&(collector.addRule(`.monaco-editor .inline-added-margin-view-zone { background-color: ${gutterAdded}; }`),collector.addRule(`.monaco-editor .gutter-insert, .monaco-diff-editor .gutter-insert { background-color: ${gutterAdded}; }`));const removed=theme.getColor(diffRemoved);removed&&collector.addRule(`.monaco-editor .char-delete, .monaco-diff-editor .char-delete { background-color: ${removed}; }`);const lineRemoved=theme.getColor(diffRemovedLine)||removed;lineRemoved&&collector.addRule(`.monaco-editor .line-delete, .monaco-diff-editor .line-delete { background-color: ${lineRemoved}; }`);const gutterRemoved=theme.getColor(diffRemovedLineGutter)||lineRemoved;gutterRemoved&&(collector.addRule(`.monaco-editor .inline-deleted-margin-view-zone { background-color: ${gutterRemoved}; }`),collector.addRule(`.monaco-editor .gutter-delete, .monaco-diff-editor .gutter-delete { background-color: ${gutterRemoved}; }`));const addedOutline=theme.getColor(diffInsertedOutline);addedOutline&&collector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { border: 1px ${isHighContrast(theme.type)?"dashed":"solid"} ${addedOutline}; }`);const removedOutline=theme.getColor(diffRemovedOutline);removedOutline&&collector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { border: 1px ${isHighContrast(theme.type)?"dashed":"solid"} ${removedOutline}; }`);const shadow=theme.getColor(scrollbarShadow);shadow&&collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { box-shadow: -6px 0 5px -5px ${shadow}; }`);const border=theme.getColor(diffBorder);border&&collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { border-left: 1px solid ${border}; }`);const scrollbarSliderBackgroundColor=theme.getColor(scrollbarSliderBackground);scrollbarSliderBackgroundColor&&collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport {\n\t\t\t\tbackground: ${scrollbarSliderBackgroundColor};\n\t\t\t}\n\t\t`);const scrollbarSliderHoverBackgroundColor=theme.getColor(scrollbarSliderHoverBackground);scrollbarSliderHoverBackgroundColor&&collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:hover {\n\t\t\t\tbackground: ${scrollbarSliderHoverBackgroundColor};\n\t\t\t}\n\t\t`);const scrollbarSliderActiveBackgroundColor=theme.getColor(scrollbarSliderActiveBackground);scrollbarSliderActiveBackgroundColor&&collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:active {\n\t\t\t\tbackground: ${scrollbarSliderActiveBackgroundColor};\n\t\t\t}\n\t\t`);const diffDiagonalFillColor=theme.getColor(diffDiagonalFill);collector.addRule(`\n\t.monaco-editor .diagonal-fill {\n\t\tbackground-image: linear-gradient(\n\t\t\t-45deg,\n\t\t\t${diffDiagonalFillColor} 12.5%,\n\t\t\t#0000 12.5%, #0000 50%,\n\t\t\t${diffDiagonalFillColor} 50%, ${diffDiagonalFillColor} 62.5%,\n\t\t\t#0000 62.5%, #0000 100%\n\t\t);\n\t\tbackground-size: 8px 8px;\n\t}\n\t`)}));