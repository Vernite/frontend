var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import*as dom from"../../../browser/dom.js";import{StandardKeyboardEvent}from"../../../browser/keyboardEvent.js";import{ActionBar}from"../../../browser/ui/actionbar/actionbar.js";import{Button}from"../../../browser/ui/button/button.js";import{CountBadge}from"../../../browser/ui/countBadge/countBadge.js";import{renderLabelWithIcons}from"../../../browser/ui/iconLabel/iconLabels.js";import{ProgressBar}from"../../../browser/ui/progressbar/progressbar.js";import{Action}from"../../../common/actions.js";import{equals}from"../../../common/arrays.js";import{TimeoutTimer}from"../../../common/async.js";import{CancellationToken}from"../../../common/cancellation.js";import{Codicon}from"../../../common/codicons.js";import{Emitter}from"../../../common/event.js";import{Disposable,DisposableStore,dispose}from"../../../common/lifecycle.js";import{isIOS}from"../../../common/platform.js";import Severity from"../../../common/severity.js";import{withNullAsUndefined}from"../../../common/types.js";import{getIconClass}from"./quickInputUtils.js";import{ItemActivation,NO_KEY_MODS,QuickInputHideReason}from"../common/quickInput.js";import"./media/quickInput.css";import{localize}from"../../../../nls.js";import{QuickInputBox}from"./quickInputBox.js";import{QuickInputList,QuickInputListFocus}from"./quickInputList.js";const $=dom.$,backButton={iconClass:Codicon.quickInputBack.classNames,tooltip:localize("quickInput.back","Back"),handle:-1};class QuickInput extends Disposable{constructor(ui){super(),this.ui=ui,this.visible=!1,this._enabled=!0,this._busy=!1,this._ignoreFocusOut=!1,this._buttons=[],this.noValidationMessage=QuickInput.noPromptMessage,this._severity=Severity.Ignore,this.buttonsUpdated=!1,this.onDidTriggerButtonEmitter=this._register(new Emitter),this.onDidHideEmitter=this._register(new Emitter),this.onDisposeEmitter=this._register(new Emitter),this.visibleDisposables=this._register(new DisposableStore),this.onDidHide=this.onDidHideEmitter.event}get title(){return this._title}set title(title){this._title=title,this.update()}get description(){return this._description}set description(description){this._description=description,this.update()}get step(){return this._steps}set step(step){this._steps=step,this.update()}get totalSteps(){return this._totalSteps}set totalSteps(totalSteps){this._totalSteps=totalSteps,this.update()}get enabled(){return this._enabled}set enabled(enabled){this._enabled=enabled,this.update()}get contextKey(){return this._contextKey}set contextKey(contextKey){this._contextKey=contextKey,this.update()}get busy(){return this._busy}set busy(busy){this._busy=busy,this.update()}get ignoreFocusOut(){return this._ignoreFocusOut}set ignoreFocusOut(ignoreFocusOut){const shouldUpdate=this._ignoreFocusOut!==ignoreFocusOut&&!isIOS;this._ignoreFocusOut=ignoreFocusOut&&!isIOS,shouldUpdate&&this.update()}get buttons(){return this._buttons}set buttons(buttons){this._buttons=buttons,this.buttonsUpdated=!0,this.update()}get validationMessage(){return this._validationMessage}set validationMessage(validationMessage){this._validationMessage=validationMessage,this.update()}get severity(){return this._severity}set severity(severity){this._severity=severity,this.update()}show(){this.visible||(this.visibleDisposables.add(this.ui.onDidTriggerButton((button=>{-1!==this.buttons.indexOf(button)&&this.onDidTriggerButtonEmitter.fire(button)}))),this.ui.show(this),this.visible=!0,this._lastValidationMessage=void 0,this._lastSeverity=void 0,this.buttons.length&&(this.buttonsUpdated=!0),this.update())}hide(){this.visible&&this.ui.hide()}didHide(reason=QuickInputHideReason.Other){this.visible=!1,this.visibleDisposables.clear(),this.onDidHideEmitter.fire({reason})}update(){if(!this.visible)return;const title=this.getTitle();title&&this.ui.title.textContent!==title?this.ui.title.textContent=title:title||"&nbsp;"===this.ui.title.innerHTML||(this.ui.title.innerText="Â ");const description=this.getDescription();if(this.ui.description1.textContent!==description&&(this.ui.description1.textContent=description),this.ui.description2.textContent!==description&&(this.ui.description2.textContent=description),this.busy&&!this.busyDelay&&(this.busyDelay=new TimeoutTimer,this.busyDelay.setIfNotSet((()=>{this.visible&&this.ui.progressBar.infinite()}),800)),!this.busy&&this.busyDelay&&(this.ui.progressBar.stop(),this.busyDelay.cancel(),this.busyDelay=void 0),this.buttonsUpdated){this.buttonsUpdated=!1,this.ui.leftActionBar.clear();const leftButtons=this.buttons.filter((button=>button===backButton));this.ui.leftActionBar.push(leftButtons.map(((button,index)=>{const action=new Action(`id-${index}`,"",button.iconClass||getIconClass(button.iconPath),!0,(()=>__awaiter(this,void 0,void 0,(function*(){this.onDidTriggerButtonEmitter.fire(button)}))));return action.tooltip=button.tooltip||"",action})),{icon:!0,label:!1}),this.ui.rightActionBar.clear();const rightButtons=this.buttons.filter((button=>button!==backButton));this.ui.rightActionBar.push(rightButtons.map(((button,index)=>{const action=new Action(`id-${index}`,"",button.iconClass||getIconClass(button.iconPath),!0,(()=>__awaiter(this,void 0,void 0,(function*(){this.onDidTriggerButtonEmitter.fire(button)}))));return action.tooltip=button.tooltip||"",action})),{icon:!0,label:!1})}this.ui.ignoreFocusOut=this.ignoreFocusOut,this.ui.setEnabled(this.enabled),this.ui.setContextKey(this.contextKey);const validationMessage=this.validationMessage||this.noValidationMessage;this._lastValidationMessage!==validationMessage&&(this._lastValidationMessage=validationMessage,dom.reset(this.ui.message,...renderLabelWithIcons(validationMessage))),this._lastSeverity!==this.severity&&(this._lastSeverity=this.severity,this.showMessageDecoration(this.severity))}getTitle(){return this.title&&this.step?`${this.title} (${this.getSteps()})`:this.title?this.title:this.step?this.getSteps():""}getDescription(){return this.description||""}getSteps(){return this.step&&this.totalSteps?localize("quickInput.steps","{0}/{1}",this.step,this.totalSteps):this.step?String(this.step):""}showMessageDecoration(severity){if(this.ui.inputBox.showDecoration(severity),severity!==Severity.Ignore){const styles=this.ui.inputBox.stylesForType(severity);this.ui.message.style.color=styles.foreground?`${styles.foreground}`:"",this.ui.message.style.backgroundColor=styles.background?`${styles.background}`:"",this.ui.message.style.border=styles.border?`1px solid ${styles.border}`:"",this.ui.message.style.marginBottom="-2px"}else this.ui.message.style.color="",this.ui.message.style.backgroundColor="",this.ui.message.style.border="",this.ui.message.style.marginBottom=""}dispose(){this.hide(),this.onDisposeEmitter.fire(),super.dispose()}}QuickInput.noPromptMessage=localize("inputModeEntry","Press 'Enter' to confirm your input or 'Escape' to cancel");class QuickPick extends QuickInput{constructor(){super(...arguments),this._value="",this.onDidChangeValueEmitter=this._register(new Emitter),this.onWillAcceptEmitter=this._register(new Emitter),this.onDidAcceptEmitter=this._register(new Emitter),this.onDidCustomEmitter=this._register(new Emitter),this._items=[],this.itemsUpdated=!1,this._canSelectMany=!1,this._canAcceptInBackground=!1,this._matchOnDescription=!1,this._matchOnDetail=!1,this._matchOnLabel=!0,this._matchOnLabelMode="fuzzy",this._sortByLabel=!0,this._autoFocusOnList=!0,this._keepScrollPosition=!1,this._itemActivation=this.ui.isScreenReaderOptimized()?ItemActivation.NONE:ItemActivation.FIRST,this._activeItems=[],this.activeItemsUpdated=!1,this.activeItemsToConfirm=[],this.onDidChangeActiveEmitter=this._register(new Emitter),this._selectedItems=[],this.selectedItemsUpdated=!1,this.selectedItemsToConfirm=[],this.onDidChangeSelectionEmitter=this._register(new Emitter),this.onDidTriggerItemButtonEmitter=this._register(new Emitter),this.valueSelectionUpdated=!0,this._ok="default",this._customButton=!1,this.filterValue=value=>value,this.onDidChangeValue=this.onDidChangeValueEmitter.event,this.onWillAccept=this.onWillAcceptEmitter.event,this.onDidAccept=this.onDidAcceptEmitter.event,this.onDidChangeActive=this.onDidChangeActiveEmitter.event,this.onDidChangeSelection=this.onDidChangeSelectionEmitter.event,this.onDidTriggerItemButton=this.onDidTriggerItemButtonEmitter.event}get quickNavigate(){return this._quickNavigate}set quickNavigate(quickNavigate){this._quickNavigate=quickNavigate,this.update()}get value(){return this._value}set value(value){this.doSetValue(value)}doSetValue(value,skipUpdate){if(this._value!==value){if(this._value=value,skipUpdate||this.update(),this.visible){this.ui.list.filter(this.filterValue(this._value))&&this.trySelectFirst()}this.onDidChangeValueEmitter.fire(this._value)}}set ariaLabel(ariaLabel){this._ariaLabel=ariaLabel,this.update()}get ariaLabel(){return this._ariaLabel}get placeholder(){return this._placeholder}set placeholder(placeholder){this._placeholder=placeholder,this.update()}get items(){return this._items}get scrollTop(){return this.ui.list.scrollTop}set scrollTop(scrollTop){this.ui.list.scrollTop=scrollTop}set items(items){this._items=items,this.itemsUpdated=!0,this.update()}get canSelectMany(){return this._canSelectMany}set canSelectMany(canSelectMany){this._canSelectMany=canSelectMany,this.update()}get canAcceptInBackground(){return this._canAcceptInBackground}set canAcceptInBackground(canAcceptInBackground){this._canAcceptInBackground=canAcceptInBackground}get matchOnDescription(){return this._matchOnDescription}set matchOnDescription(matchOnDescription){this._matchOnDescription=matchOnDescription,this.update()}get matchOnDetail(){return this._matchOnDetail}set matchOnDetail(matchOnDetail){this._matchOnDetail=matchOnDetail,this.update()}get matchOnLabel(){return this._matchOnLabel}set matchOnLabel(matchOnLabel){this._matchOnLabel=matchOnLabel,this.update()}get matchOnLabelMode(){return this._matchOnLabelMode}set matchOnLabelMode(matchOnLabelMode){this._matchOnLabelMode=matchOnLabelMode,this.update()}get sortByLabel(){return this._sortByLabel}set sortByLabel(sortByLabel){this._sortByLabel=sortByLabel,this.update()}get autoFocusOnList(){return this._autoFocusOnList}set autoFocusOnList(autoFocusOnList){this._autoFocusOnList=autoFocusOnList,this.update()}get keepScrollPosition(){return this._keepScrollPosition}set keepScrollPosition(keepScrollPosition){this._keepScrollPosition=keepScrollPosition}get itemActivation(){return this._itemActivation}set itemActivation(itemActivation){this._itemActivation=itemActivation}get activeItems(){return this._activeItems}set activeItems(activeItems){this._activeItems=activeItems,this.activeItemsUpdated=!0,this.update()}get selectedItems(){return this._selectedItems}set selectedItems(selectedItems){this._selectedItems=selectedItems,this.selectedItemsUpdated=!0,this.update()}get keyMods(){return this._quickNavigate?NO_KEY_MODS:this.ui.keyMods}set valueSelection(valueSelection){this._valueSelection=valueSelection,this.valueSelectionUpdated=!0,this.update()}get customButton(){return this._customButton}set customButton(showCustomButton){this._customButton=showCustomButton,this.update()}get customLabel(){return this._customButtonLabel}set customLabel(label){this._customButtonLabel=label,this.update()}get customHover(){return this._customButtonHover}set customHover(hover){this._customButtonHover=hover,this.update()}get ok(){return this._ok}set ok(showOkButton){this._ok=showOkButton,this.update()}get hideInput(){return!!this._hideInput}set hideInput(hideInput){this._hideInput=hideInput,this.update()}trySelectFirst(){this.autoFocusOnList&&(this.canSelectMany||this.ui.list.focus(QuickInputListFocus.First))}show(){this.visible||(this.visibleDisposables.add(this.ui.inputBox.onDidChange((value=>{this.doSetValue(value,!0)}))),this.visibleDisposables.add(this.ui.inputBox.onMouseDown((event=>{this.autoFocusOnList||this.ui.list.clearFocus()}))),this.visibleDisposables.add((this._hideInput?this.ui.list:this.ui.inputBox).onKeyDown((event=>{switch(event.keyCode){case 18:this.ui.list.focus(QuickInputListFocus.Next),this.canSelectMany&&this.ui.list.domFocus(),dom.EventHelper.stop(event,!0);break;case 16:this.ui.list.getFocusedElements().length?this.ui.list.focus(QuickInputListFocus.Previous):this.ui.list.focus(QuickInputListFocus.Last),this.canSelectMany&&this.ui.list.domFocus(),dom.EventHelper.stop(event,!0);break;case 12:this.ui.list.focus(QuickInputListFocus.NextPage),this.canSelectMany&&this.ui.list.domFocus(),dom.EventHelper.stop(event,!0);break;case 11:this.ui.list.focus(QuickInputListFocus.PreviousPage),this.canSelectMany&&this.ui.list.domFocus(),dom.EventHelper.stop(event,!0);break;case 17:if(!this._canAcceptInBackground)return;if(!this.ui.inputBox.isSelectionAtEnd())return;this.activeItems[0]&&(this._selectedItems=[this.activeItems[0]],this.onDidChangeSelectionEmitter.fire(this.selectedItems),this.handleAccept(!0));break;case 14:!event.ctrlKey&&!event.metaKey||event.shiftKey||event.altKey||(this.ui.list.focus(QuickInputListFocus.First),dom.EventHelper.stop(event,!0));break;case 13:!event.ctrlKey&&!event.metaKey||event.shiftKey||event.altKey||(this.ui.list.focus(QuickInputListFocus.Last),dom.EventHelper.stop(event,!0))}}))),this.visibleDisposables.add(this.ui.onDidAccept((()=>{this.canSelectMany?this.ui.list.getCheckedElements().length||(this._selectedItems=[],this.onDidChangeSelectionEmitter.fire(this.selectedItems)):this.activeItems[0]&&(this._selectedItems=[this.activeItems[0]],this.onDidChangeSelectionEmitter.fire(this.selectedItems)),this.handleAccept(!1)}))),this.visibleDisposables.add(this.ui.onDidCustom((()=>{this.onDidCustomEmitter.fire()}))),this.visibleDisposables.add(this.ui.list.onDidChangeFocus((focusedItems=>{this.activeItemsUpdated||this.activeItemsToConfirm!==this._activeItems&&equals(focusedItems,this._activeItems,((a,b)=>a===b))||(this._activeItems=focusedItems,this.onDidChangeActiveEmitter.fire(focusedItems))}))),this.visibleDisposables.add(this.ui.list.onDidChangeSelection((({items:selectedItems,event})=>{this.canSelectMany?selectedItems.length&&this.ui.list.setSelectedElements([]):this.selectedItemsToConfirm!==this._selectedItems&&equals(selectedItems,this._selectedItems,((a,b)=>a===b))||(this._selectedItems=selectedItems,this.onDidChangeSelectionEmitter.fire(selectedItems),selectedItems.length&&this.handleAccept(event instanceof MouseEvent&&1===event.button))}))),this.visibleDisposables.add(this.ui.list.onChangedCheckedElements((checkedItems=>{this.canSelectMany&&(this.selectedItemsToConfirm!==this._selectedItems&&equals(checkedItems,this._selectedItems,((a,b)=>a===b))||(this._selectedItems=checkedItems,this.onDidChangeSelectionEmitter.fire(checkedItems)))}))),this.visibleDisposables.add(this.ui.list.onButtonTriggered((event=>this.onDidTriggerItemButtonEmitter.fire(event)))),this.visibleDisposables.add(this.registerQuickNavigation()),this.valueSelectionUpdated=!0),super.show()}handleAccept(inBackground){let veto=!1;this.onWillAcceptEmitter.fire({veto:()=>veto=!0}),veto||this.onDidAcceptEmitter.fire({inBackground})}registerQuickNavigation(){return dom.addDisposableListener(this.ui.container,dom.EventType.KEY_UP,(e=>{if(this.canSelectMany||!this._quickNavigate)return;const keyboardEvent=new StandardKeyboardEvent(e),keyCode=keyboardEvent.keyCode;this._quickNavigate.keybindings.some((k=>{const[firstPart,chordPart]=k.getParts();return!chordPart&&(firstPart.shiftKey&&4===keyCode?!(keyboardEvent.ctrlKey||keyboardEvent.altKey||keyboardEvent.metaKey):!(!firstPart.altKey||6!==keyCode)||(!(!firstPart.ctrlKey||5!==keyCode)||!(!firstPart.metaKey||57!==keyCode)))}))&&(this.activeItems[0]&&(this._selectedItems=[this.activeItems[0]],this.onDidChangeSelectionEmitter.fire(this.selectedItems),this.handleAccept(!1)),this._quickNavigate=void 0)}))}update(){if(!this.visible)return;const scrollTopBefore=this.keepScrollPosition?this.scrollTop:0,hideInput=!!this._hideInput&&this._items.length>0;this.ui.container.classList.toggle("hidden-input",hideInput&&!this.description);const visibilities={title:!!this.title||!!this.step||!!this.buttons.length,description:!!this.description,checkAll:this.canSelectMany&&!this._hideCheckAll,checkBox:this.canSelectMany,inputBox:!hideInput,progressBar:!hideInput,visibleCount:!0,count:this.canSelectMany,ok:"default"===this.ok?this.canSelectMany:this.ok,list:!0,message:!!this.validationMessage,customButton:this.customButton};this.ui.setVisibilities(visibilities),super.update(),this.ui.inputBox.value!==this.value&&(this.ui.inputBox.value=this.value),this.valueSelectionUpdated&&(this.valueSelectionUpdated=!1,this.ui.inputBox.select(this._valueSelection&&{start:this._valueSelection[0],end:this._valueSelection[1]})),this.ui.inputBox.placeholder!==(this.placeholder||"")&&(this.ui.inputBox.placeholder=this.placeholder||"");let ariaLabel=this.ariaLabel;if(ariaLabel||(ariaLabel=this.placeholder||QuickPick.DEFAULT_ARIA_LABEL,this.title&&(ariaLabel+=` - ${this.title}`)),this.ui.inputBox.ariaLabel!==ariaLabel&&(this.ui.inputBox.ariaLabel=ariaLabel),this.ui.list.matchOnDescription=this.matchOnDescription,this.ui.list.matchOnDetail=this.matchOnDetail,this.ui.list.matchOnLabel=this.matchOnLabel,this.ui.list.matchOnLabelMode=this.matchOnLabelMode,this.ui.list.sortByLabel=this.sortByLabel,this.itemsUpdated)switch(this.itemsUpdated=!1,this.ui.list.setElements(this.items),this.ui.list.filter(this.filterValue(this.ui.inputBox.value)),this.ui.checkAll.checked=this.ui.list.getAllVisibleChecked(),this.ui.visibleCount.setCount(this.ui.list.getVisibleCount()),this.ui.count.setCount(this.ui.list.getCheckedCount()),this._itemActivation){case ItemActivation.NONE:this._itemActivation=ItemActivation.FIRST;break;case ItemActivation.SECOND:this.ui.list.focus(QuickInputListFocus.Second),this._itemActivation=ItemActivation.FIRST;break;case ItemActivation.LAST:this.ui.list.focus(QuickInputListFocus.Last),this._itemActivation=ItemActivation.FIRST;break;default:this.trySelectFirst()}this.ui.container.classList.contains("show-checkboxes")!==!!this.canSelectMany&&(this.canSelectMany?this.ui.list.clearFocus():this.trySelectFirst()),this.activeItemsUpdated&&(this.activeItemsUpdated=!1,this.activeItemsToConfirm=this._activeItems,this.ui.list.setFocusedElements(this.activeItems),this.activeItemsToConfirm===this._activeItems&&(this.activeItemsToConfirm=null)),this.selectedItemsUpdated&&(this.selectedItemsUpdated=!1,this.selectedItemsToConfirm=this._selectedItems,this.canSelectMany?this.ui.list.setCheckedElements(this.selectedItems):this.ui.list.setSelectedElements(this.selectedItems),this.selectedItemsToConfirm===this._selectedItems&&(this.selectedItemsToConfirm=null)),this.ui.customButton.label=this.customLabel||"",this.ui.customButton.element.title=this.customHover||"",this.ui.setComboboxAccessibility(!0),visibilities.inputBox||(this.ui.list.domFocus(),this.canSelectMany&&this.ui.list.focus(QuickInputListFocus.First)),this.keepScrollPosition&&(this.scrollTop=scrollTopBefore)}}QuickPick.DEFAULT_ARIA_LABEL=localize("quickInputBox.ariaLabel","Type to narrow down results.");export class QuickInputController extends Disposable{constructor(options){super(),this.options=options,this.comboboxAccessibility=!1,this.enabled=!0,this.onDidAcceptEmitter=this._register(new Emitter),this.onDidCustomEmitter=this._register(new Emitter),this.onDidTriggerButtonEmitter=this._register(new Emitter),this.keyMods={ctrlCmd:!1,alt:!1},this.controller=null,this.onShowEmitter=this._register(new Emitter),this.onShow=this.onShowEmitter.event,this.onHideEmitter=this._register(new Emitter),this.onHide=this.onHideEmitter.event,this.idPrefix=options.idPrefix,this.parentElement=options.container,this.styles=options.styles,this.registerKeyModsListeners()}registerKeyModsListeners(){const listener=e=>{this.keyMods.ctrlCmd=e.ctrlKey||e.metaKey,this.keyMods.alt=e.altKey};this._register(dom.addDisposableListener(window,dom.EventType.KEY_DOWN,listener,!0)),this._register(dom.addDisposableListener(window,dom.EventType.KEY_UP,listener,!0)),this._register(dom.addDisposableListener(window,dom.EventType.MOUSE_DOWN,listener,!0))}getUI(){if(this.ui)return this.ui;const container=dom.append(this.parentElement,$(".quick-input-widget.show-file-icons"));container.tabIndex=-1,container.style.display="none";const styleSheet=dom.createStyleSheet(container),titleBar=dom.append(container,$(".quick-input-titlebar")),leftActionBar=this._register(new ActionBar(titleBar));leftActionBar.domNode.classList.add("quick-input-left-action-bar");const title=dom.append(titleBar,$(".quick-input-title")),rightActionBar=this._register(new ActionBar(titleBar));rightActionBar.domNode.classList.add("quick-input-right-action-bar");const description1=dom.append(container,$(".quick-input-description")),headerContainer=dom.append(container,$(".quick-input-header")),checkAll=dom.append(headerContainer,$("input.quick-input-check-all"));checkAll.type="checkbox",checkAll.setAttribute("aria-label",localize("quickInput.checkAll","Toggle all checkboxes")),this._register(dom.addStandardDisposableListener(checkAll,dom.EventType.CHANGE,(e=>{const checked=checkAll.checked;list.setAllVisibleChecked(checked)}))),this._register(dom.addDisposableListener(checkAll,dom.EventType.CLICK,(e=>{(e.x||e.y)&&inputBox.setFocus()})));const description2=dom.append(headerContainer,$(".quick-input-description")),extraContainer=dom.append(headerContainer,$(".quick-input-and-message")),filterContainer=dom.append(extraContainer,$(".quick-input-filter")),inputBox=this._register(new QuickInputBox(filterContainer));inputBox.setAttribute("aria-describedby",`${this.idPrefix}message`);const visibleCountContainer=dom.append(filterContainer,$(".quick-input-visible-count"));visibleCountContainer.setAttribute("aria-live","polite"),visibleCountContainer.setAttribute("aria-atomic","true");const visibleCount=new CountBadge(visibleCountContainer,{countFormat:localize({key:"quickInput.visibleCount",comment:["This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers."]},"{0} Results")}),countContainer=dom.append(filterContainer,$(".quick-input-count"));countContainer.setAttribute("aria-live","polite");const count=new CountBadge(countContainer,{countFormat:localize({key:"quickInput.countSelected",comment:["This tells the user how many items are selected in a list of items to select from. The items can be anything."]},"{0} Selected")}),okContainer=dom.append(headerContainer,$(".quick-input-action")),ok=new Button(okContainer);ok.label=localize("ok","OK"),this._register(ok.onDidClick((e=>{this.onDidAcceptEmitter.fire()})));const customButtonContainer=dom.append(headerContainer,$(".quick-input-action")),customButton=new Button(customButtonContainer);customButton.label=localize("custom","Custom"),this._register(customButton.onDidClick((e=>{this.onDidCustomEmitter.fire()})));const message=dom.append(extraContainer,$(`#${this.idPrefix}message.quick-input-message`)),list=this._register(new QuickInputList(container,this.idPrefix+"list",this.options));this._register(list.onChangedAllVisibleChecked((checked=>{checkAll.checked=checked}))),this._register(list.onChangedVisibleCount((c=>{visibleCount.setCount(c)}))),this._register(list.onChangedCheckedCount((c=>{count.setCount(c)}))),this._register(list.onLeave((()=>{setTimeout((()=>{inputBox.setFocus(),this.controller instanceof QuickPick&&this.controller.canSelectMany&&list.clearFocus()}),0)}))),this._register(list.onDidChangeFocus((()=>{this.comboboxAccessibility&&this.getUI().inputBox.setAttribute("aria-activedescendant",this.getUI().list.getActiveDescendant()||"")})));const progressBar=new ProgressBar(container);progressBar.getContainer().classList.add("quick-input-progress");const focusTracker=dom.trackFocus(container);return this._register(focusTracker),this._register(dom.addDisposableListener(container,dom.EventType.FOCUS,(e=>{this.previousFocusElement=e.relatedTarget instanceof HTMLElement?e.relatedTarget:void 0}),!0)),this._register(focusTracker.onDidBlur((()=>{this.getUI().ignoreFocusOut||this.options.ignoreFocusOut()||this.hide(QuickInputHideReason.Blur),this.previousFocusElement=void 0}))),this._register(dom.addDisposableListener(container,dom.EventType.FOCUS,(e=>{inputBox.setFocus()}))),this._register(dom.addDisposableListener(container,dom.EventType.KEY_DOWN,(e=>{const event=new StandardKeyboardEvent(e);switch(event.keyCode){case 3:dom.EventHelper.stop(e,!0),this.onDidAcceptEmitter.fire();break;case 9:dom.EventHelper.stop(e,!0),this.hide(QuickInputHideReason.Gesture);break;case 2:if(!event.altKey&&!event.ctrlKey&&!event.metaKey){const selectors=[".action-label.codicon"];container.classList.contains("show-checkboxes")?selectors.push("input"):selectors.push("input[type=text]"),this.getUI().list.isDisplayed()&&selectors.push(".monaco-list");const stops=container.querySelectorAll(selectors.join(", "));event.shiftKey&&event.target===stops[0]?(dom.EventHelper.stop(e,!0),stops[stops.length-1].focus()):event.shiftKey||event.target!==stops[stops.length-1]||(dom.EventHelper.stop(e,!0),stops[0].focus())}}}))),this.ui={container,styleSheet,leftActionBar,titleBar,title,description1,description2,rightActionBar,checkAll,filterContainer,inputBox,visibleCountContainer,visibleCount,countContainer,count,okContainer,ok,message,customButtonContainer,customButton,list,progressBar,onDidAccept:this.onDidAcceptEmitter.event,onDidCustom:this.onDidCustomEmitter.event,onDidTriggerButton:this.onDidTriggerButtonEmitter.event,ignoreFocusOut:!1,keyMods:this.keyMods,isScreenReaderOptimized:()=>this.options.isScreenReaderOptimized(),show:controller=>this.show(controller),hide:()=>this.hide(),setVisibilities:visibilities=>this.setVisibilities(visibilities),setComboboxAccessibility:enabled=>this.setComboboxAccessibility(enabled),setEnabled:enabled=>this.setEnabled(enabled),setContextKey:contextKey=>this.options.setContextKey(contextKey)},this.updateStyles(),this.ui}pick(picks,options={},token=CancellationToken.None){return new Promise(((doResolve,reject)=>{let resolve=result=>{var _a;resolve=doResolve,null===(_a=options.onKeyMods)||void 0===_a||_a.call(options,input.keyMods),doResolve(result)};if(token.isCancellationRequested)return void resolve(void 0);const input=this.createQuickPick();let activeItem;const disposables=[input,input.onDidAccept((()=>{if(input.canSelectMany)resolve(input.selectedItems.slice()),input.hide();else{const result=input.activeItems[0];result&&(resolve(result),input.hide())}})),input.onDidChangeActive((items=>{const focused=items[0];focused&&options.onDidFocus&&options.onDidFocus(focused)})),input.onDidChangeSelection((items=>{if(!input.canSelectMany){const result=items[0];result&&(resolve(result),input.hide())}})),input.onDidTriggerItemButton((event=>options.onDidTriggerItemButton&&options.onDidTriggerItemButton(Object.assign(Object.assign({},event),{removeItem:()=>{const index=input.items.indexOf(event.item);if(-1!==index){const items=input.items.slice(),removed=items.splice(index,1),activeItems=input.activeItems.filter((activeItem=>activeItem!==removed[0])),keepScrollPositionBefore=input.keepScrollPosition;input.keepScrollPosition=!0,input.items=items,activeItems&&(input.activeItems=activeItems),input.keepScrollPosition=keepScrollPositionBefore}}})))),input.onDidChangeValue((value=>{!activeItem||value||1===input.activeItems.length&&input.activeItems[0]===activeItem||(input.activeItems=[activeItem])})),token.onCancellationRequested((()=>{input.hide()})),input.onDidHide((()=>{dispose(disposables),resolve(void 0)}))];input.title=options.title,input.canSelectMany=!!options.canPickMany,input.placeholder=options.placeHolder,input.ignoreFocusOut=!!options.ignoreFocusLost,input.matchOnDescription=!!options.matchOnDescription,input.matchOnDetail=!!options.matchOnDetail,input.matchOnLabel=void 0===options.matchOnLabel||options.matchOnLabel,input.autoFocusOnList=void 0===options.autoFocusOnList||options.autoFocusOnList,input.quickNavigate=options.quickNavigate,input.hideInput=!!options.hideInput,input.contextKey=options.contextKey,input.busy=!0,Promise.all([picks,options.activeItem]).then((([items,_activeItem])=>{activeItem=_activeItem,input.busy=!1,input.items=items,input.canSelectMany&&(input.selectedItems=items.filter((item=>"separator"!==item.type&&item.picked))),activeItem&&(input.activeItems=[activeItem])})),input.show(),Promise.resolve(picks).then(void 0,(err=>{reject(err),input.hide()}))}))}createQuickPick(){const ui=this.getUI();return new QuickPick(ui)}show(controller){const ui=this.getUI();this.onShowEmitter.fire();const oldController=this.controller;this.controller=controller,oldController&&oldController.didHide(),this.setEnabled(!0),ui.leftActionBar.clear(),ui.title.textContent="",ui.description1.textContent="",ui.description2.textContent="",ui.rightActionBar.clear(),ui.checkAll.checked=!1,ui.inputBox.placeholder="",ui.inputBox.password=!1,ui.inputBox.showDecoration(Severity.Ignore),ui.visibleCount.setCount(0),ui.count.setCount(0),dom.reset(ui.message),ui.progressBar.stop(),ui.list.setElements([]),ui.list.matchOnDescription=!1,ui.list.matchOnDetail=!1,ui.list.matchOnLabel=!0,ui.list.sortByLabel=!0,ui.ignoreFocusOut=!1,this.setComboboxAccessibility(!1),ui.inputBox.ariaLabel="";const backKeybindingLabel=this.options.backKeybindingLabel();backButton.tooltip=backKeybindingLabel?localize("quickInput.backWithKeybinding","Back ({0})",backKeybindingLabel):localize("quickInput.back","Back"),ui.container.style.display="",this.updateLayout(),ui.inputBox.setFocus()}setVisibilities(visibilities){const ui=this.getUI();ui.title.style.display=visibilities.title?"":"none",ui.description1.style.display=visibilities.description&&(visibilities.inputBox||visibilities.checkAll)?"":"none",ui.description2.style.display=!visibilities.description||visibilities.inputBox||visibilities.checkAll?"none":"",ui.checkAll.style.display=visibilities.checkAll?"":"none",ui.filterContainer.style.display=visibilities.inputBox?"":"none",ui.visibleCountContainer.style.display=visibilities.visibleCount?"":"none",ui.countContainer.style.display=visibilities.count?"":"none",ui.okContainer.style.display=visibilities.ok?"":"none",ui.customButtonContainer.style.display=visibilities.customButton?"":"none",ui.message.style.display=visibilities.message?"":"none",ui.progressBar.getContainer().style.display=visibilities.progressBar?"":"none",ui.list.display(!!visibilities.list),ui.container.classList[visibilities.checkBox?"add":"remove"]("show-checkboxes"),this.updateLayout()}setComboboxAccessibility(enabled){if(enabled!==this.comboboxAccessibility){const ui=this.getUI();this.comboboxAccessibility=enabled,this.comboboxAccessibility?(ui.inputBox.setAttribute("role","combobox"),ui.inputBox.setAttribute("aria-haspopup","true"),ui.inputBox.setAttribute("aria-autocomplete","list"),ui.inputBox.setAttribute("aria-activedescendant",ui.list.getActiveDescendant()||"")):(ui.inputBox.removeAttribute("role"),ui.inputBox.removeAttribute("aria-haspopup"),ui.inputBox.removeAttribute("aria-autocomplete"),ui.inputBox.removeAttribute("aria-activedescendant"))}}setEnabled(enabled){if(enabled!==this.enabled){this.enabled=enabled;for(const item of this.getUI().leftActionBar.viewItems)item.getAction().enabled=enabled;for(const item of this.getUI().rightActionBar.viewItems)item.getAction().enabled=enabled;this.getUI().checkAll.disabled=!enabled,this.getUI().ok.enabled=enabled,this.getUI().list.enabled=enabled}}hide(reason){var _a;const controller=this.controller;if(controller){const focusChanged=!(null===(_a=this.ui)||void 0===_a?void 0:_a.container.contains(document.activeElement));if(this.controller=null,this.onHideEmitter.fire(),this.getUI().container.style.display="none",!focusChanged){let currentElement=this.previousFocusElement;for(;currentElement&&!currentElement.offsetParent;)currentElement=withNullAsUndefined(currentElement.parentElement);(null==currentElement?void 0:currentElement.offsetParent)?(currentElement.focus(),this.previousFocusElement=void 0):this.options.returnFocus()}controller.didHide(reason)}}layout(dimension,titleBarOffset){this.dimension=dimension,this.titleBarOffset=titleBarOffset,this.updateLayout()}updateLayout(){if(this.ui){this.ui.container.style.top=`${this.titleBarOffset}px`;const style=this.ui.container.style,width=Math.min(.62*this.dimension.width,QuickInputController.MAX_WIDTH);style.width=width+"px",style.marginLeft="-"+width/2+"px",this.ui.inputBox.layout(),this.ui.list.layout(this.dimension&&.4*this.dimension.height)}}applyStyles(styles){this.styles=styles,this.updateStyles()}updateStyles(){if(this.ui){const{quickInputTitleBackground,quickInputBackground,quickInputForeground,contrastBorder,widgetShadow}=this.styles.widget;this.ui.titleBar.style.backgroundColor=quickInputTitleBackground?quickInputTitleBackground.toString():"",this.ui.container.style.backgroundColor=quickInputBackground?quickInputBackground.toString():"",this.ui.container.style.color=quickInputForeground?quickInputForeground.toString():"",this.ui.container.style.border=contrastBorder?`1px solid ${contrastBorder}`:"",this.ui.container.style.boxShadow=widgetShadow?`0 0 8px 2px ${widgetShadow}`:"",this.ui.inputBox.style(this.styles.inputBox),this.ui.count.style(this.styles.countBadge),this.ui.ok.style(this.styles.button),this.ui.customButton.style(this.styles.button),this.ui.progressBar.style(this.styles.progressBar),this.ui.list.style(this.styles.list);const content=[];this.styles.list.pickerGroupBorder&&content.push(`.quick-input-list .quick-input-list-entry { border-top-color:  ${this.styles.list.pickerGroupBorder}; }`),this.styles.list.pickerGroupForeground&&content.push(`.quick-input-list .quick-input-list-separator { color:  ${this.styles.list.pickerGroupForeground}; }`),(this.styles.keybindingLabel.keybindingLabelBackground||this.styles.keybindingLabel.keybindingLabelBorder||this.styles.keybindingLabel.keybindingLabelBottomBorder||this.styles.keybindingLabel.keybindingLabelShadow||this.styles.keybindingLabel.keybindingLabelForeground)&&(content.push(".quick-input-list .monaco-keybinding > .monaco-keybinding-key {"),this.styles.keybindingLabel.keybindingLabelBackground&&content.push(`background-color: ${this.styles.keybindingLabel.keybindingLabelBackground};`),this.styles.keybindingLabel.keybindingLabelBorder&&content.push(`border-color: ${this.styles.keybindingLabel.keybindingLabelBorder};`),this.styles.keybindingLabel.keybindingLabelBottomBorder&&content.push(`border-bottom-color: ${this.styles.keybindingLabel.keybindingLabelBottomBorder};`),this.styles.keybindingLabel.keybindingLabelShadow&&content.push(`box-shadow: inset 0 -1px 0 ${this.styles.keybindingLabel.keybindingLabelShadow};`),this.styles.keybindingLabel.keybindingLabelForeground&&content.push(`color: ${this.styles.keybindingLabel.keybindingLabelForeground};`),content.push("}"));const newStyles=content.join("\n");newStyles!==this.ui.styleSheet.textContent&&(this.ui.styleSheet.textContent=newStyles)}}}QuickInputController.MAX_WIDTH=600;