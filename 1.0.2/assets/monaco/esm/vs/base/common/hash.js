import*as strings from"./strings.js";export function hash(obj){return doHash(obj,0)}export function doHash(obj,hashVal){switch(typeof obj){case"object":return null===obj?numberHash(349,hashVal):Array.isArray(obj)?arrayHash(obj,hashVal):objectHash(obj,hashVal);case"string":return stringHash(obj,hashVal);case"boolean":return booleanHash(obj,hashVal);case"number":return numberHash(obj,hashVal);case"undefined":return numberHash(937,hashVal);default:return numberHash(617,hashVal)}}export function numberHash(val,initialHashVal){return(initialHashVal<<5)-initialHashVal+val|0}function booleanHash(b,initialHashVal){return numberHash(b?433:863,initialHashVal)}export function stringHash(s,hashVal){hashVal=numberHash(149417,hashVal);for(let i=0,length=s.length;i<length;i++)hashVal=numberHash(s.charCodeAt(i),hashVal);return hashVal}function arrayHash(arr,initialHashVal){return initialHashVal=numberHash(104579,initialHashVal),arr.reduce(((hashVal,item)=>doHash(item,hashVal)),initialHashVal)}function objectHash(obj,initialHashVal){return initialHashVal=numberHash(181387,initialHashVal),Object.keys(obj).sort().reduce(((hashVal,key)=>(hashVal=stringHash(key,hashVal),doHash(obj[key],hashVal))),initialHashVal)}function leftRotate(value,bits,totalBits=32){const delta=totalBits-bits;return(value<<bits|(~((1<<delta)-1)&value)>>>delta)>>>0}function fill(dest,index=0,count=dest.byteLength,value=0){for(let i=0;i<count;i++)dest[index+i]=value}function leftPad(value,length,char="0"){for(;value.length<length;)value=char+value;return value}export function toHexString(bufferOrValue,bitsize=32){return bufferOrValue instanceof ArrayBuffer?Array.from(new Uint8Array(bufferOrValue)).map((b=>b.toString(16).padStart(2,"0"))).join(""):leftPad((bufferOrValue>>>0).toString(16),bitsize/4)}export class StringSHA1{constructor(){this._h0=1732584193,this._h1=4023233417,this._h2=2562383102,this._h3=271733878,this._h4=3285377520,this._buff=new Uint8Array(67),this._buffDV=new DataView(this._buff.buffer),this._buffLen=0,this._totalLen=0,this._leftoverHighSurrogate=0,this._finished=!1}update(str){const strLen=str.length;if(0===strLen)return;const buff=this._buff;let charCode,offset,buffLen=this._buffLen,leftoverHighSurrogate=this._leftoverHighSurrogate;for(0!==leftoverHighSurrogate?(charCode=leftoverHighSurrogate,offset=-1,leftoverHighSurrogate=0):(charCode=str.charCodeAt(0),offset=0);;){let codePoint=charCode;if(strings.isHighSurrogate(charCode)){if(!(offset+1<strLen)){leftoverHighSurrogate=charCode;break}{const nextCharCode=str.charCodeAt(offset+1);strings.isLowSurrogate(nextCharCode)?(offset++,codePoint=strings.computeCodePoint(charCode,nextCharCode)):codePoint=65533}}else strings.isLowSurrogate(charCode)&&(codePoint=65533);if(buffLen=this._push(buff,buffLen,codePoint),offset++,!(offset<strLen))break;charCode=str.charCodeAt(offset)}this._buffLen=buffLen,this._leftoverHighSurrogate=leftoverHighSurrogate}_push(buff,buffLen,codePoint){return codePoint<128?buff[buffLen++]=codePoint:codePoint<2048?(buff[buffLen++]=192|(1984&codePoint)>>>6,buff[buffLen++]=128|(63&codePoint)>>>0):codePoint<65536?(buff[buffLen++]=224|(61440&codePoint)>>>12,buff[buffLen++]=128|(4032&codePoint)>>>6,buff[buffLen++]=128|(63&codePoint)>>>0):(buff[buffLen++]=240|(1835008&codePoint)>>>18,buff[buffLen++]=128|(258048&codePoint)>>>12,buff[buffLen++]=128|(4032&codePoint)>>>6,buff[buffLen++]=128|(63&codePoint)>>>0),buffLen>=64&&(this._step(),buffLen-=64,this._totalLen+=64,buff[0]=buff[64],buff[1]=buff[65],buff[2]=buff[66]),buffLen}digest(){return this._finished||(this._finished=!0,this._leftoverHighSurrogate&&(this._leftoverHighSurrogate=0,this._buffLen=this._push(this._buff,this._buffLen,65533)),this._totalLen+=this._buffLen,this._wrapUp()),toHexString(this._h0)+toHexString(this._h1)+toHexString(this._h2)+toHexString(this._h3)+toHexString(this._h4)}_wrapUp(){this._buff[this._buffLen++]=128,fill(this._buff,this._buffLen),this._buffLen>56&&(this._step(),fill(this._buff));const ml=8*this._totalLen;this._buffDV.setUint32(56,Math.floor(ml/4294967296),!1),this._buffDV.setUint32(60,ml%4294967296,!1),this._step()}_step(){const bigBlock32=StringSHA1._bigBlock32,data=this._buffDV;for(let j=0;j<64;j+=4)bigBlock32.setUint32(j,data.getUint32(j,!1),!1);for(let j=64;j<320;j+=4)bigBlock32.setUint32(j,leftRotate(bigBlock32.getUint32(j-12,!1)^bigBlock32.getUint32(j-32,!1)^bigBlock32.getUint32(j-56,!1)^bigBlock32.getUint32(j-64,!1),1),!1);let f,k,temp,a=this._h0,b=this._h1,c=this._h2,d=this._h3,e=this._h4;for(let j=0;j<80;j++)j<20?(f=b&c|~b&d,k=1518500249):j<40?(f=b^c^d,k=1859775393):j<60?(f=b&c|b&d|c&d,k=2400959708):(f=b^c^d,k=3395469782),temp=leftRotate(a,5)+f+e+k+bigBlock32.getUint32(4*j,!1)&4294967295,e=d,d=c,c=leftRotate(b,30),b=a,a=temp;this._h0=this._h0+a&4294967295,this._h1=this._h1+b&4294967295,this._h2=this._h2+c&4294967295,this._h3=this._h3+d&4294967295,this._h4=this._h4+e&4294967295}}StringSHA1._bigBlock32=new DataView(new ArrayBuffer(320));