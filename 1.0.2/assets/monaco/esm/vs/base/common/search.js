import*as strings from"./strings.js";export function buildReplaceStringWithCasePreserved(matches,pattern){if(matches&&""!==matches[0]){const containsHyphens=validateSpecificSpecialCharacter(matches,pattern,"-"),containsUnderscores=validateSpecificSpecialCharacter(matches,pattern,"_");return containsHyphens&&!containsUnderscores?buildReplaceStringForSpecificSpecialCharacter(matches,pattern,"-"):!containsHyphens&&containsUnderscores?buildReplaceStringForSpecificSpecialCharacter(matches,pattern,"_"):matches[0].toUpperCase()===matches[0]?pattern.toUpperCase():matches[0].toLowerCase()===matches[0]?pattern.toLowerCase():strings.containsUppercaseCharacter(matches[0][0])&&pattern.length>0?pattern[0].toUpperCase()+pattern.substr(1):matches[0][0].toUpperCase()!==matches[0][0]&&pattern.length>0?pattern[0].toLowerCase()+pattern.substr(1):pattern}return pattern}function validateSpecificSpecialCharacter(matches,pattern,specialCharacter){return-1!==matches[0].indexOf(specialCharacter)&&-1!==pattern.indexOf(specialCharacter)&&matches[0].split(specialCharacter).length===pattern.split(specialCharacter).length}function buildReplaceStringForSpecificSpecialCharacter(matches,pattern,specialCharacter){const splitPatternAtSpecialCharacter=pattern.split(specialCharacter),splitMatchAtSpecialCharacter=matches[0].split(specialCharacter);let replaceString="";return splitPatternAtSpecialCharacter.forEach(((splitValue,index)=>{replaceString+=buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]],splitValue)+specialCharacter})),replaceString.slice(0,-1)}