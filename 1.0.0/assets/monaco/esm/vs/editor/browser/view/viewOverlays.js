import{createFastDomNode}from"../../../base/browser/fastDomNode.js";import{applyFontInfo}from"../config/domFontInfo.js";import{VisibleLinesCollection}from"./viewLayer.js";import{ViewPart}from"./viewPart.js";export class ViewOverlays extends ViewPart{constructor(context){super(context),this._visibleLines=new VisibleLinesCollection(this),this.domNode=this._visibleLines.domNode,this._dynamicOverlays=[],this._isFocused=!1,this.domNode.setClassName("view-overlays")}shouldRender(){if(super.shouldRender())return!0;for(let i=0,len=this._dynamicOverlays.length;i<len;i++){if(this._dynamicOverlays[i].shouldRender())return!0}return!1}dispose(){super.dispose();for(let i=0,len=this._dynamicOverlays.length;i<len;i++){this._dynamicOverlays[i].dispose()}this._dynamicOverlays=[]}getDomNode(){return this.domNode}createVisibleLine(){return new ViewOverlayLine(this._context.configuration,this._dynamicOverlays)}addDynamicOverlay(overlay){this._dynamicOverlays.push(overlay)}onConfigurationChanged(e){this._visibleLines.onConfigurationChanged(e);const startLineNumber=this._visibleLines.getStartLineNumber(),endLineNumber=this._visibleLines.getEndLineNumber();for(let lineNumber=startLineNumber;lineNumber<=endLineNumber;lineNumber++){this._visibleLines.getVisibleLine(lineNumber).onConfigurationChanged(e)}return!0}onFlushed(e){return this._visibleLines.onFlushed(e)}onFocusChanged(e){return this._isFocused=e.isFocused,!0}onLinesChanged(e){return this._visibleLines.onLinesChanged(e)}onLinesDeleted(e){return this._visibleLines.onLinesDeleted(e)}onLinesInserted(e){return this._visibleLines.onLinesInserted(e)}onScrollChanged(e){return this._visibleLines.onScrollChanged(e)||!0}onTokensChanged(e){return this._visibleLines.onTokensChanged(e)}onZonesChanged(e){return this._visibleLines.onZonesChanged(e)}prepareRender(ctx){const toRender=this._dynamicOverlays.filter((overlay=>overlay.shouldRender()));for(let i=0,len=toRender.length;i<len;i++){const dynamicOverlay=toRender[i];dynamicOverlay.prepareRender(ctx),dynamicOverlay.onDidRender()}}render(ctx){this._viewOverlaysRender(ctx),this.domNode.toggleClassName("focused",this._isFocused)}_viewOverlaysRender(ctx){this._visibleLines.renderLines(ctx.viewportData)}}export class ViewOverlayLine{constructor(configuration,dynamicOverlays){this._configuration=configuration,this._lineHeight=this._configuration.options.get(61),this._dynamicOverlays=dynamicOverlays,this._domNode=null,this._renderedContent=null}getDomNode(){return this._domNode?this._domNode.domNode:null}setDomNode(domNode){this._domNode=createFastDomNode(domNode)}onContentChanged(){}onTokensChanged(){}onConfigurationChanged(e){this._lineHeight=this._configuration.options.get(61)}renderLine(lineNumber,deltaTop,viewportData,sb){let result="";for(let i=0,len=this._dynamicOverlays.length;i<len;i++){result+=this._dynamicOverlays[i].render(viewportData.startLineNumber,lineNumber)}return this._renderedContent!==result&&(this._renderedContent=result,sb.appendASCIIString('<div style="position:absolute;top:'),sb.appendASCIIString(String(deltaTop)),sb.appendASCIIString("px;width:100%;height:"),sb.appendASCIIString(String(this._lineHeight)),sb.appendASCIIString('px;">'),sb.appendASCIIString(result),sb.appendASCIIString("</div>"),!0)}layoutLine(lineNumber,deltaTop){this._domNode&&(this._domNode.setTop(deltaTop),this._domNode.setHeight(this._lineHeight))}}export class ContentViewOverlays extends ViewOverlays{constructor(context){super(context);const layoutInfo=this._context.configuration.options.get(133);this._contentWidth=layoutInfo.contentWidth,this.domNode.setHeight(0)}onConfigurationChanged(e){const layoutInfo=this._context.configuration.options.get(133);return this._contentWidth=layoutInfo.contentWidth,super.onConfigurationChanged(e)||!0}onScrollChanged(e){return super.onScrollChanged(e)||e.scrollWidthChanged}_viewOverlaysRender(ctx){super._viewOverlaysRender(ctx),this.domNode.setWidth(Math.max(ctx.scrollWidth,this._contentWidth))}}export class MarginViewOverlays extends ViewOverlays{constructor(context){super(context);const options=this._context.configuration.options,layoutInfo=options.get(133);this._contentLeft=layoutInfo.contentLeft,this.domNode.setClassName("margin-view-overlays"),this.domNode.setWidth(1),applyFontInfo(this.domNode,options.get(46))}onConfigurationChanged(e){const options=this._context.configuration.options;applyFontInfo(this.domNode,options.get(46));const layoutInfo=options.get(133);return this._contentLeft=layoutInfo.contentLeft,super.onConfigurationChanged(e)||!0}onScrollChanged(e){return super.onScrollChanged(e)||e.scrollHeightChanged}_viewOverlaysRender(ctx){super._viewOverlaysRender(ctx);const height=Math.min(ctx.scrollHeight,1e6);this.domNode.setHeight(height),this.domNode.setWidth(this._contentLeft)}}