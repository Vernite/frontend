import"./currentLineHighlight.css";import{DynamicViewOverlay}from"../../view/dynamicViewOverlay.js";import{editorLineHighlight,editorLineHighlightBorder}from"../../../common/core/editorColorRegistry.js";import*as arrays from"../../../../base/common/arrays.js";import{registerThemingParticipant}from"../../../../platform/theme/common/themeService.js";import{Selection}from"../../../common/core/selection.js";import{isHighContrast}from"../../../../platform/theme/common/theme.js";export class AbstractLineHighlightOverlay extends DynamicViewOverlay{constructor(context){super(),this._context=context;const options=this._context.configuration.options,layoutInfo=options.get(133);this._lineHeight=options.get(61),this._renderLineHighlight=options.get(87),this._renderLineHighlightOnlyWhenFocus=options.get(88),this._contentLeft=layoutInfo.contentLeft,this._contentWidth=layoutInfo.contentWidth,this._selectionIsEmpty=!0,this._focused=!1,this._cursorLineNumbers=[1],this._selections=[new Selection(1,1,1,1)],this._renderData=null,this._context.addEventHandler(this)}dispose(){this._context.removeEventHandler(this),super.dispose()}_readFromSelections(){let hasChanged=!1;const cursorsLineNumbers=this._selections.map((s=>s.positionLineNumber));cursorsLineNumbers.sort(((a,b)=>a-b)),arrays.equals(this._cursorLineNumbers,cursorsLineNumbers)||(this._cursorLineNumbers=cursorsLineNumbers,hasChanged=!0);const selectionIsEmpty=this._selections.every((s=>s.isEmpty()));return this._selectionIsEmpty!==selectionIsEmpty&&(this._selectionIsEmpty=selectionIsEmpty,hasChanged=!0),hasChanged}onThemeChanged(e){return this._readFromSelections()}onConfigurationChanged(e){const options=this._context.configuration.options,layoutInfo=options.get(133);return this._lineHeight=options.get(61),this._renderLineHighlight=options.get(87),this._renderLineHighlightOnlyWhenFocus=options.get(88),this._contentLeft=layoutInfo.contentLeft,this._contentWidth=layoutInfo.contentWidth,!0}onCursorStateChanged(e){return this._selections=e.selections,this._readFromSelections()}onFlushed(e){return!0}onLinesDeleted(e){return!0}onLinesInserted(e){return!0}onScrollChanged(e){return e.scrollWidthChanged||e.scrollTopChanged}onZonesChanged(e){return!0}onFocusChanged(e){return!!this._renderLineHighlightOnlyWhenFocus&&(this._focused=e.isFocused,!0)}prepareRender(ctx){if(!this._shouldRenderThis())return void(this._renderData=null);const renderedLine=this._renderOne(ctx),visibleStartLineNumber=ctx.visibleRange.startLineNumber,visibleEndLineNumber=ctx.visibleRange.endLineNumber,len=this._cursorLineNumbers.length;let index=0;const renderData=[];for(let lineNumber=visibleStartLineNumber;lineNumber<=visibleEndLineNumber;lineNumber++){const lineIndex=lineNumber-visibleStartLineNumber;for(;index<len&&this._cursorLineNumbers[index]<lineNumber;)index++;index<len&&this._cursorLineNumbers[index]===lineNumber?renderData[lineIndex]=renderedLine:renderData[lineIndex]=""}this._renderData=renderData}render(startLineNumber,lineNumber){if(!this._renderData)return"";const lineIndex=lineNumber-startLineNumber;return lineIndex>=this._renderData.length?"":this._renderData[lineIndex]}_shouldRenderInMargin(){return("gutter"===this._renderLineHighlight||"all"===this._renderLineHighlight)&&(!this._renderLineHighlightOnlyWhenFocus||this._focused)}_shouldRenderInContent(){return("line"===this._renderLineHighlight||"all"===this._renderLineHighlight)&&this._selectionIsEmpty&&(!this._renderLineHighlightOnlyWhenFocus||this._focused)}}export class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay{_renderOne(ctx){return`<div class="${"current-line"+(this._shouldRenderOther()?" current-line-both":"")}" style="width:${Math.max(ctx.scrollWidth,this._contentWidth)}px; height:${this._lineHeight}px;"></div>`}_shouldRenderThis(){return this._shouldRenderInContent()}_shouldRenderOther(){return this._shouldRenderInMargin()}}export class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay{_renderOne(ctx){return`<div class="${"current-line"+(this._shouldRenderInMargin()?" current-line-margin":"")+(this._shouldRenderOther()?" current-line-margin-both":"")}" style="width:${this._contentLeft}px; height:${this._lineHeight}px;"></div>`}_shouldRenderThis(){return!0}_shouldRenderOther(){return this._shouldRenderInContent()}}registerThemingParticipant(((theme,collector)=>{const lineHighlight=theme.getColor(editorLineHighlight);if(lineHighlight&&(collector.addRule(`.monaco-editor .view-overlays .current-line { background-color: ${lineHighlight}; }`),collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { background-color: ${lineHighlight}; border: none; }`)),!lineHighlight||lineHighlight.isTransparent()||theme.defines(editorLineHighlightBorder)){const lineHighlightBorder=theme.getColor(editorLineHighlightBorder);lineHighlightBorder&&(collector.addRule(`.monaco-editor .view-overlays .current-line { border: 2px solid ${lineHighlightBorder}; }`),collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { border: 2px solid ${lineHighlightBorder}; }`),isHighContrast(theme.type)&&(collector.addRule(".monaco-editor .view-overlays .current-line { border-width: 1px; }"),collector.addRule(".monaco-editor .margin-view-overlays .current-line-margin { border-width: 1px; }")))}}));