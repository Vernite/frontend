import{createFastDomNode}from"../../../../base/browser/fastDomNode.js";import{onUnexpectedError}from"../../../../base/common/errors.js";import{ViewPart}from"../../view/viewPart.js";import{Position}from"../../../common/core/position.js";const invalidFunc=()=>{throw new Error("Invalid change accessor")};export class ViewZones extends ViewPart{constructor(context){super(context);const options=this._context.configuration.options,layoutInfo=options.get(133);this._lineHeight=options.get(61),this._contentWidth=layoutInfo.contentWidth,this._contentLeft=layoutInfo.contentLeft,this.domNode=createFastDomNode(document.createElement("div")),this.domNode.setClassName("view-zones"),this.domNode.setPosition("absolute"),this.domNode.setAttribute("role","presentation"),this.domNode.setAttribute("aria-hidden","true"),this.marginDomNode=createFastDomNode(document.createElement("div")),this.marginDomNode.setClassName("margin-view-zones"),this.marginDomNode.setPosition("absolute"),this.marginDomNode.setAttribute("role","presentation"),this.marginDomNode.setAttribute("aria-hidden","true"),this._zones={}}dispose(){super.dispose(),this._zones={}}_recomputeWhitespacesProps(){const whitespaces=this._context.viewLayout.getWhitespaces(),oldWhitespaces=new Map;for(const whitespace of whitespaces)oldWhitespaces.set(whitespace.id,whitespace);let hadAChange=!1;return this._context.viewModel.changeWhitespace((whitespaceAccessor=>{const keys=Object.keys(this._zones);for(let i=0,len=keys.length;i<len;i++){const id=keys[i],zone=this._zones[id],props=this._computeWhitespaceProps(zone.delegate);zone.isInHiddenArea=props.isInHiddenArea;const oldWhitespace=oldWhitespaces.get(id);!oldWhitespace||oldWhitespace.afterLineNumber===props.afterViewLineNumber&&oldWhitespace.height===props.heightInPx||(whitespaceAccessor.changeOneWhitespace(id,props.afterViewLineNumber,props.heightInPx),this._safeCallOnComputedHeight(zone.delegate,props.heightInPx),hadAChange=!0)}})),hadAChange}onConfigurationChanged(e){const options=this._context.configuration.options,layoutInfo=options.get(133);return this._lineHeight=options.get(61),this._contentWidth=layoutInfo.contentWidth,this._contentLeft=layoutInfo.contentLeft,e.hasChanged(61)&&this._recomputeWhitespacesProps(),!0}onLineMappingChanged(e){return this._recomputeWhitespacesProps()}onLinesDeleted(e){return!0}onScrollChanged(e){return e.scrollTopChanged||e.scrollWidthChanged}onZonesChanged(e){return!0}onLinesInserted(e){return!0}_getZoneOrdinal(zone){return void 0!==zone.afterColumn?zone.afterColumn:1e4}_computeWhitespaceProps(zone){if(0===zone.afterLineNumber)return{isInHiddenArea:!1,afterViewLineNumber:0,heightInPx:this._heightInPixels(zone),minWidthInPx:this._minWidthInPixels(zone)};let zoneAfterModelPosition,zoneBeforeModelPosition;if(void 0!==zone.afterColumn)zoneAfterModelPosition=this._context.viewModel.model.validatePosition({lineNumber:zone.afterLineNumber,column:zone.afterColumn});else{const validAfterLineNumber=this._context.viewModel.model.validatePosition({lineNumber:zone.afterLineNumber,column:1}).lineNumber;zoneAfterModelPosition=new Position(validAfterLineNumber,this._context.viewModel.model.getLineMaxColumn(validAfterLineNumber))}zoneBeforeModelPosition=zoneAfterModelPosition.column===this._context.viewModel.model.getLineMaxColumn(zoneAfterModelPosition.lineNumber)?this._context.viewModel.model.validatePosition({lineNumber:zoneAfterModelPosition.lineNumber+1,column:1}):this._context.viewModel.model.validatePosition({lineNumber:zoneAfterModelPosition.lineNumber,column:zoneAfterModelPosition.column+1});const viewPosition=this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition,zone.afterColumnAffinity),isVisible=this._context.viewModel.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);return{isInHiddenArea:!isVisible,afterViewLineNumber:viewPosition.lineNumber,heightInPx:isVisible?this._heightInPixels(zone):0,minWidthInPx:this._minWidthInPixels(zone)}}changeViewZones(callback){let zonesHaveChanged=!1;return this._context.viewModel.changeWhitespace((whitespaceAccessor=>{const changeAccessor={addZone:zone=>(zonesHaveChanged=!0,this._addZone(whitespaceAccessor,zone)),removeZone:id=>{id&&(zonesHaveChanged=this._removeZone(whitespaceAccessor,id)||zonesHaveChanged)},layoutZone:id=>{id&&(zonesHaveChanged=this._layoutZone(whitespaceAccessor,id)||zonesHaveChanged)}};safeInvoke1Arg(callback,changeAccessor),changeAccessor.addZone=invalidFunc,changeAccessor.removeZone=invalidFunc,changeAccessor.layoutZone=invalidFunc})),zonesHaveChanged}_addZone(whitespaceAccessor,zone){const props=this._computeWhitespaceProps(zone),myZone={whitespaceId:whitespaceAccessor.insertWhitespace(props.afterViewLineNumber,this._getZoneOrdinal(zone),props.heightInPx,props.minWidthInPx),delegate:zone,isInHiddenArea:props.isInHiddenArea,isVisible:!1,domNode:createFastDomNode(zone.domNode),marginDomNode:zone.marginDomNode?createFastDomNode(zone.marginDomNode):null};return this._safeCallOnComputedHeight(myZone.delegate,props.heightInPx),myZone.domNode.setPosition("absolute"),myZone.domNode.domNode.style.width="100%",myZone.domNode.setDisplay("none"),myZone.domNode.setAttribute("monaco-view-zone",myZone.whitespaceId),this.domNode.appendChild(myZone.domNode),myZone.marginDomNode&&(myZone.marginDomNode.setPosition("absolute"),myZone.marginDomNode.domNode.style.width="100%",myZone.marginDomNode.setDisplay("none"),myZone.marginDomNode.setAttribute("monaco-view-zone",myZone.whitespaceId),this.marginDomNode.appendChild(myZone.marginDomNode)),this._zones[myZone.whitespaceId]=myZone,this.setShouldRender(),myZone.whitespaceId}_removeZone(whitespaceAccessor,id){if(this._zones.hasOwnProperty(id)){const zone=this._zones[id];return delete this._zones[id],whitespaceAccessor.removeWhitespace(zone.whitespaceId),zone.domNode.removeAttribute("monaco-visible-view-zone"),zone.domNode.removeAttribute("monaco-view-zone"),zone.domNode.domNode.parentNode.removeChild(zone.domNode.domNode),zone.marginDomNode&&(zone.marginDomNode.removeAttribute("monaco-visible-view-zone"),zone.marginDomNode.removeAttribute("monaco-view-zone"),zone.marginDomNode.domNode.parentNode.removeChild(zone.marginDomNode.domNode)),this.setShouldRender(),!0}return!1}_layoutZone(whitespaceAccessor,id){if(this._zones.hasOwnProperty(id)){const zone=this._zones[id],props=this._computeWhitespaceProps(zone.delegate);return zone.isInHiddenArea=props.isInHiddenArea,whitespaceAccessor.changeOneWhitespace(zone.whitespaceId,props.afterViewLineNumber,props.heightInPx),this._safeCallOnComputedHeight(zone.delegate,props.heightInPx),this.setShouldRender(),!0}return!1}shouldSuppressMouseDownOnViewZone(id){if(this._zones.hasOwnProperty(id)){const zone=this._zones[id];return Boolean(zone.delegate.suppressMouseDown)}return!1}_heightInPixels(zone){return"number"==typeof zone.heightInPx?zone.heightInPx:"number"==typeof zone.heightInLines?this._lineHeight*zone.heightInLines:this._lineHeight}_minWidthInPixels(zone){return"number"==typeof zone.minWidthInPx?zone.minWidthInPx:0}_safeCallOnComputedHeight(zone,height){if("function"==typeof zone.onComputedHeight)try{zone.onComputedHeight(height)}catch(e){onUnexpectedError(e)}}_safeCallOnDomNodeTop(zone,top){if("function"==typeof zone.onDomNodeTop)try{zone.onDomNodeTop(top)}catch(e){onUnexpectedError(e)}}prepareRender(ctx){}render(ctx){const visibleWhitespaces=ctx.viewportData.whitespaceViewportData,visibleZones={};let hasVisibleZone=!1;for(const visibleWhitespace of visibleWhitespaces)this._zones[visibleWhitespace.id].isInHiddenArea||(visibleZones[visibleWhitespace.id]=visibleWhitespace,hasVisibleZone=!0);const keys=Object.keys(this._zones);for(let i=0,len=keys.length;i<len;i++){const id=keys[i],zone=this._zones[id];let newTop=0,newHeight=0,newDisplay="none";visibleZones.hasOwnProperty(id)?(newTop=visibleZones[id].verticalOffset-ctx.bigNumbersDelta,newHeight=visibleZones[id].height,newDisplay="block",zone.isVisible||(zone.domNode.setAttribute("monaco-visible-view-zone","true"),zone.isVisible=!0),this._safeCallOnDomNodeTop(zone.delegate,ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset))):(zone.isVisible&&(zone.domNode.removeAttribute("monaco-visible-view-zone"),zone.isVisible=!1),this._safeCallOnDomNodeTop(zone.delegate,ctx.getScrolledTopFromAbsoluteTop(-1e6))),zone.domNode.setTop(newTop),zone.domNode.setHeight(newHeight),zone.domNode.setDisplay(newDisplay),zone.marginDomNode&&(zone.marginDomNode.setTop(newTop),zone.marginDomNode.setHeight(newHeight),zone.marginDomNode.setDisplay(newDisplay))}hasVisibleZone&&(this.domNode.setWidth(Math.max(ctx.scrollWidth,this._contentWidth)),this.marginDomNode.setWidth(this._contentLeft))}}function safeInvoke1Arg(func,arg1){try{return func(arg1)}catch(e){onUnexpectedError(e)}}