var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import{KeyChord}from"../../../../base/common/keyCodes.js";import{DisposableStore}from"../../../../base/common/lifecycle.js";import{EditorAction,registerEditorAction,registerEditorContribution}from"../../../browser/editorExtensions.js";import{Range}from"../../../common/core/range.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import{ILanguageService}from"../../../common/languages/language.js";import{GotoDefinitionAtPositionEditorContribution}from"../../gotoSymbol/browser/link/goToDefinitionAtPosition.js";import{ContentHoverWidget,ContentHoverController}from"./contentHover.js";import{MarginHoverWidget}from"./marginHover.js";import*as nls from"../../../../nls.js";import{IContextKeyService}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService}from"../../../../platform/instantiation/common/instantiation.js";import{IOpenerService}from"../../../../platform/opener/common/opener.js";import{editorHoverBackground,editorHoverBorder,editorHoverForeground,editorHoverHighlight,editorHoverStatusBarBackground,textCodeBlockBackground,textLinkActiveForeground,textLinkForeground}from"../../../../platform/theme/common/colorRegistry.js";import{registerThemingParticipant}from"../../../../platform/theme/common/themeService.js";import{HoverParticipantRegistry}from"./hoverTypes.js";import{MarkdownHoverParticipant}from"./markdownHoverParticipant.js";import{MarkerHoverParticipant}from"./markerHoverParticipant.js";let ModesHoverController=class ModesHoverController{constructor(_editor,_instantiationService,_openerService,_languageService,_contextKeyService){this._editor=_editor,this._instantiationService=_instantiationService,this._openerService=_openerService,this._languageService=_languageService,this._toUnhook=new DisposableStore,this._isMouseDown=!1,this._hoverClicked=!1,this._contentWidget=null,this._glyphWidget=null,this._hookEvents(),this._didChangeConfigurationHandler=this._editor.onDidChangeConfiguration((e=>{e.hasChanged(55)&&(this._unhookEvents(),this._hookEvents())}))}static get(editor){return editor.getContribution(ModesHoverController.ID)}_hookEvents(){const hoverOpts=this._editor.getOption(55);this._isHoverEnabled=hoverOpts.enabled,this._isHoverSticky=hoverOpts.sticky,this._isHoverEnabled?(this._toUnhook.add(this._editor.onMouseDown((e=>this._onEditorMouseDown(e)))),this._toUnhook.add(this._editor.onMouseUp((e=>this._onEditorMouseUp(e)))),this._toUnhook.add(this._editor.onMouseMove((e=>this._onEditorMouseMove(e)))),this._toUnhook.add(this._editor.onKeyDown((e=>this._onKeyDown(e))))):(this._toUnhook.add(this._editor.onMouseMove((e=>this._onEditorMouseMove(e)))),this._toUnhook.add(this._editor.onKeyDown((e=>this._onKeyDown(e))))),this._toUnhook.add(this._editor.onMouseLeave((e=>this._onEditorMouseLeave(e)))),this._toUnhook.add(this._editor.onDidChangeModel((()=>this._hideWidgets()))),this._toUnhook.add(this._editor.onDidScrollChange((e=>this._onEditorScrollChanged(e))))}_unhookEvents(){this._toUnhook.clear()}_onEditorScrollChanged(e){(e.scrollTopChanged||e.scrollLeftChanged)&&this._hideWidgets()}_onEditorMouseDown(mouseEvent){this._isMouseDown=!0;const target=mouseEvent.target;9!==target.type||target.detail!==ContentHoverWidget.ID?12===target.type&&target.detail===MarginHoverWidget.ID||(12!==target.type&&(this._hoverClicked=!1),this._hideWidgets()):this._hoverClicked=!0}_onEditorMouseUp(mouseEvent){this._isMouseDown=!1}_onEditorMouseLeave(mouseEvent){var _a;const targetEm=mouseEvent.event.browserEvent.relatedTarget;(null===(_a=this._contentWidget)||void 0===_a?void 0:_a.containsNode(targetEm))||this._hideWidgets()}_onEditorMouseMove(mouseEvent){var _a,_b,_c,_d,_e;const target=mouseEvent.target;if(this._isMouseDown&&this._hoverClicked)return;if(this._isHoverSticky&&9===target.type&&target.detail===ContentHoverWidget.ID)return;if(this._isHoverSticky&&!(null===(_b=null===(_a=mouseEvent.event.browserEvent.view)||void 0===_a?void 0:_a.getSelection())||void 0===_b?void 0:_b.isCollapsed))return;if(!this._isHoverSticky&&9===target.type&&target.detail===ContentHoverWidget.ID&&(null===(_c=this._contentWidget)||void 0===_c?void 0:_c.isColorPickerVisible()))return;if(this._isHoverSticky&&12===target.type&&target.detail===MarginHoverWidget.ID)return;if(!this._isHoverEnabled)return void this._hideWidgets();if(!this._getOrCreateContentWidget().maybeShowAt(mouseEvent))return 2===target.type&&target.position?(null===(_e=this._contentWidget)||void 0===_e||_e.hide(),this._glyphWidget||(this._glyphWidget=new MarginHoverWidget(this._editor,this._languageService,this._openerService)),void this._glyphWidget.startShowingAt(target.position.lineNumber)):void this._hideWidgets();null===(_d=this._glyphWidget)||void 0===_d||_d.hide()}_onKeyDown(e){5!==e.keyCode&&6!==e.keyCode&&57!==e.keyCode&&4!==e.keyCode&&this._hideWidgets()}_hideWidgets(){var _a,_b,_c;this._isMouseDown&&this._hoverClicked&&(null===(_a=this._contentWidget)||void 0===_a?void 0:_a.isColorPickerVisible())||(this._hoverClicked=!1,null===(_b=this._glyphWidget)||void 0===_b||_b.hide(),null===(_c=this._contentWidget)||void 0===_c||_c.hide())}_getOrCreateContentWidget(){return this._contentWidget||(this._contentWidget=this._instantiationService.createInstance(ContentHoverController,this._editor)),this._contentWidget}isColorPickerVisible(){var _a;return(null===(_a=this._contentWidget)||void 0===_a?void 0:_a.isColorPickerVisible())||!1}showContentHover(range,mode,focus){this._getOrCreateContentWidget().startShowingAtRange(range,mode,focus)}dispose(){var _a,_b;this._unhookEvents(),this._toUnhook.dispose(),this._didChangeConfigurationHandler.dispose(),null===(_a=this._glyphWidget)||void 0===_a||_a.dispose(),null===(_b=this._contentWidget)||void 0===_b||_b.dispose()}};ModesHoverController.ID="editor.contrib.hover",ModesHoverController=__decorate([__param(1,IInstantiationService),__param(2,IOpenerService),__param(3,ILanguageService),__param(4,IContextKeyService)],ModesHoverController);export{ModesHoverController};class ShowHoverAction extends EditorAction{constructor(){super({id:"editor.action.showHover",label:nls.localize({key:"showHover",comment:["Label for action that will trigger the showing of a hover in the editor.","This allows for users to show the hover without using the mouse."]},"Show Hover"),alias:"Show Hover",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.editorTextFocus,primary:KeyChord(2089,2087),weight:100}})}run(accessor,editor){if(!editor.hasModel())return;const controller=ModesHoverController.get(editor);if(!controller)return;const position=editor.getPosition(),range=new Range(position.lineNumber,position.column,position.lineNumber,position.column),focus=2===editor.getOption(2);controller.showContentHover(range,1,focus)}}class ShowDefinitionPreviewHoverAction extends EditorAction{constructor(){super({id:"editor.action.showDefinitionPreviewHover",label:nls.localize({key:"showDefinitionPreviewHover",comment:["Label for action that will trigger the showing of definition preview hover in the editor.","This allows for users to show the definition preview hover without using the mouse."]},"Show Definition Preview Hover"),alias:"Show Definition Preview Hover",precondition:void 0})}run(accessor,editor){const controller=ModesHoverController.get(editor);if(!controller)return;const position=editor.getPosition();if(!position)return;const range=new Range(position.lineNumber,position.column,position.lineNumber,position.column),goto=GotoDefinitionAtPositionEditorContribution.get(editor);if(!goto)return;goto.startFindDefinitionFromCursor(position).then((()=>{controller.showContentHover(range,1,!0)}))}}registerEditorContribution(ModesHoverController.ID,ModesHoverController),registerEditorAction(ShowHoverAction),registerEditorAction(ShowDefinitionPreviewHoverAction),HoverParticipantRegistry.register(MarkdownHoverParticipant),HoverParticipantRegistry.register(MarkerHoverParticipant),registerThemingParticipant(((theme,collector)=>{const editorHoverHighlightColor=theme.getColor(editorHoverHighlight);editorHoverHighlightColor&&collector.addRule(`.monaco-editor .hoverHighlight { background-color: ${editorHoverHighlightColor}; }`);const hoverBackground=theme.getColor(editorHoverBackground);hoverBackground&&collector.addRule(`.monaco-editor .monaco-hover { background-color: ${hoverBackground}; }`);const hoverBorder=theme.getColor(editorHoverBorder);hoverBorder&&(collector.addRule(`.monaco-editor .monaco-hover { border: 1px solid ${hoverBorder}; }`),collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(.5)}; }`),collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(.5)}; }`),collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(.5)}; }`));const link=theme.getColor(textLinkForeground);link&&collector.addRule(`.monaco-editor .monaco-hover a { color: ${link}; }`);const linkHover=theme.getColor(textLinkActiveForeground);linkHover&&collector.addRule(`.monaco-editor .monaco-hover a:hover { color: ${linkHover}; }`);const hoverForeground=theme.getColor(editorHoverForeground);hoverForeground&&collector.addRule(`.monaco-editor .monaco-hover { color: ${hoverForeground}; }`);const actionsBackground=theme.getColor(editorHoverStatusBarBackground);actionsBackground&&collector.addRule(`.monaco-editor .monaco-hover .hover-row .actions { background-color: ${actionsBackground}; }`);const codeBackground=theme.getColor(textCodeBlockBackground);codeBackground&&collector.addRule(`.monaco-editor .monaco-hover code { background-color: ${codeBackground}; }`)}));