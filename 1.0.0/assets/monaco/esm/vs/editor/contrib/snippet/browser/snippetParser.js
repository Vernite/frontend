export class Scanner{constructor(){this.value="",this.pos=0}static isDigitCharacter(ch){return ch>=48&&ch<=57}static isVariableCharacter(ch){return 95===ch||ch>=97&&ch<=122||ch>=65&&ch<=90}text(value){this.value=value,this.pos=0}tokenText(token){return this.value.substr(token.pos,token.len)}next(){if(this.pos>=this.value.length)return{type:14,pos:this.pos,len:0};const pos=this.pos;let type,len=0,ch=this.value.charCodeAt(pos);if(type=Scanner._table[ch],"number"==typeof type)return this.pos+=1,{type,pos,len:1};if(Scanner.isDigitCharacter(ch)){type=8;do{len+=1,ch=this.value.charCodeAt(pos+len)}while(Scanner.isDigitCharacter(ch));return this.pos+=len,{type,pos,len}}if(Scanner.isVariableCharacter(ch)){type=9;do{ch=this.value.charCodeAt(pos+ ++len)}while(Scanner.isVariableCharacter(ch)||Scanner.isDigitCharacter(ch));return this.pos+=len,{type,pos,len}}type=10;do{len+=1,ch=this.value.charCodeAt(pos+len)}while(!isNaN(ch)&&void 0===Scanner._table[ch]&&!Scanner.isDigitCharacter(ch)&&!Scanner.isVariableCharacter(ch));return this.pos+=len,{type,pos,len}}}Scanner._table={36:0,58:1,44:2,123:3,125:4,92:5,47:6,124:7,43:11,45:12,63:13};export class Marker{constructor(){this._children=[]}appendChild(child){return child instanceof Text&&this._children[this._children.length-1]instanceof Text?this._children[this._children.length-1].value+=child.value:(child.parent=this,this._children.push(child)),this}replace(child,others){const{parent}=child,idx=parent.children.indexOf(child),newChildren=parent.children.slice(0);newChildren.splice(idx,1,...others),parent._children=newChildren,function _fixParent(children,parent){for(const child of children)child.parent=parent,_fixParent(child.children,child)}(others,parent)}get children(){return this._children}get snippet(){let candidate=this;for(;;){if(!candidate)return;if(candidate instanceof TextmateSnippet)return candidate;candidate=candidate.parent}}toString(){return this.children.reduce(((prev,cur)=>prev+cur.toString()),"")}len(){return 0}}export class Text extends Marker{constructor(value){super(),this.value=value}toString(){return this.value}len(){return this.value.length}clone(){return new Text(this.value)}}export class TransformableMarker extends Marker{}export class Placeholder extends TransformableMarker{constructor(index){super(),this.index=index}static compareByIndex(a,b){return a.index===b.index?0:a.isFinalTabstop?1:b.isFinalTabstop||a.index<b.index?-1:a.index>b.index?1:0}get isFinalTabstop(){return 0===this.index}get choice(){return 1===this._children.length&&this._children[0]instanceof Choice?this._children[0]:void 0}clone(){const ret=new Placeholder(this.index);return this.transform&&(ret.transform=this.transform.clone()),ret._children=this.children.map((child=>child.clone())),ret}}export class Choice extends Marker{constructor(){super(...arguments),this.options=[]}appendChild(marker){return marker instanceof Text&&(marker.parent=this,this.options.push(marker)),this}toString(){return this.options[0].value}len(){return this.options[0].len()}clone(){const ret=new Choice;return this.options.forEach(ret.appendChild,ret),ret}}export class Transform extends Marker{constructor(){super(...arguments),this.regexp=new RegExp("")}resolve(value){const _this=this;let didMatch=!1,ret=value.replace(this.regexp,(function(){return didMatch=!0,_this._replace(Array.prototype.slice.call(arguments,0,-2))}));return!didMatch&&this._children.some((child=>child instanceof FormatString&&Boolean(child.elseValue)))&&(ret=this._replace([])),ret}_replace(groups){let ret="";for(const marker of this._children)if(marker instanceof FormatString){let value=groups[marker.index]||"";value=marker.resolve(value),ret+=value}else ret+=marker.toString();return ret}toString(){return""}clone(){const ret=new Transform;return ret.regexp=new RegExp(this.regexp.source,(this.regexp.ignoreCase?"i":"")+(this.regexp.global?"g":"")),ret._children=this.children.map((child=>child.clone())),ret}}export class FormatString extends Marker{constructor(index,shorthandName,ifValue,elseValue){super(),this.index=index,this.shorthandName=shorthandName,this.ifValue=ifValue,this.elseValue=elseValue}resolve(value){return"upcase"===this.shorthandName?value?value.toLocaleUpperCase():"":"downcase"===this.shorthandName?value?value.toLocaleLowerCase():"":"capitalize"===this.shorthandName?value?value[0].toLocaleUpperCase()+value.substr(1):"":"pascalcase"===this.shorthandName?value?this._toPascalCase(value):"":"camelcase"===this.shorthandName?value?this._toCamelCase(value):"":Boolean(value)&&"string"==typeof this.ifValue?this.ifValue:Boolean(value)||"string"!=typeof this.elseValue?value||"":this.elseValue}_toPascalCase(value){const match=value.match(/[a-z0-9]+/gi);return match?match.map((word=>word.charAt(0).toUpperCase()+word.substr(1))).join(""):value}_toCamelCase(value){const match=value.match(/[a-z0-9]+/gi);return match?match.map(((word,index)=>0===index?word.charAt(0).toLowerCase()+word.substr(1):word.charAt(0).toUpperCase()+word.substr(1))).join(""):value}clone(){return new FormatString(this.index,this.shorthandName,this.ifValue,this.elseValue)}}export class Variable extends TransformableMarker{constructor(name){super(),this.name=name}resolve(resolver){let value=resolver.resolve(this);return this.transform&&(value=this.transform.resolve(value||"")),void 0!==value&&(this._children=[new Text(value)],!0)}clone(){const ret=new Variable(this.name);return this.transform&&(ret.transform=this.transform.clone()),ret._children=this.children.map((child=>child.clone())),ret}}function walk(marker,visitor){const stack=[...marker];for(;stack.length>0;){const marker=stack.shift();if(!visitor(marker))break;stack.unshift(...marker.children)}}export class TextmateSnippet extends Marker{get placeholderInfo(){if(!this._placeholders){const all=[];let last;this.walk((function(candidate){return candidate instanceof Placeholder&&(all.push(candidate),last=!last||last.index<candidate.index?candidate:last),!0})),this._placeholders={all,last}}return this._placeholders}get placeholders(){const{all}=this.placeholderInfo;return all}offset(marker){let pos=0,found=!1;return this.walk((candidate=>candidate===marker?(found=!0,!1):(pos+=candidate.len(),!0))),found?pos:-1}fullLen(marker){let ret=0;return walk([marker],(marker=>(ret+=marker.len(),!0))),ret}enclosingPlaceholders(placeholder){const ret=[];let{parent}=placeholder;for(;parent;)parent instanceof Placeholder&&ret.push(parent),parent=parent.parent;return ret}resolveVariables(resolver){return this.walk((candidate=>(candidate instanceof Variable&&candidate.resolve(resolver)&&(this._placeholders=void 0),!0))),this}appendChild(child){return this._placeholders=void 0,super.appendChild(child)}replace(child,others){return this._placeholders=void 0,super.replace(child,others)}clone(){const ret=new TextmateSnippet;return this._children=this.children.map((child=>child.clone())),ret}walk(visitor){walk(this.children,visitor)}}export class SnippetParser{constructor(){this._scanner=new Scanner,this._token={type:14,pos:0,len:0}}static escape(value){return value.replace(/\$|}|\\/g,"\\$&")}static guessNeedsClipboard(template){return/\${?CLIPBOARD/.test(template)}parse(value,insertFinalTabstop,enforceFinalTabstop){const snippet=new TextmateSnippet;return this.parseFragment(value,snippet),this.ensureFinalTabstop(snippet,null!=enforceFinalTabstop&&enforceFinalTabstop,null!=insertFinalTabstop&&insertFinalTabstop),snippet}parseFragment(value,snippet){const offset=snippet.children.length;for(this._scanner.text(value),this._token=this._scanner.next();this._parse(snippet););const placeholderDefaultValues=new Map,incompletePlaceholders=[];snippet.walk((marker=>(marker instanceof Placeholder&&(marker.isFinalTabstop?placeholderDefaultValues.set(0,void 0):!placeholderDefaultValues.has(marker.index)&&marker.children.length>0?placeholderDefaultValues.set(marker.index,marker.children):incompletePlaceholders.push(marker)),!0)));for(const placeholder of incompletePlaceholders){const defaultValues=placeholderDefaultValues.get(placeholder.index);if(defaultValues){const clone=new Placeholder(placeholder.index);clone.transform=placeholder.transform;for(const child of defaultValues)clone.appendChild(child.clone());snippet.replace(placeholder,[clone])}}return snippet.children.slice(offset)}ensureFinalTabstop(snippet,enforceFinalTabstop,insertFinalTabstop){if(enforceFinalTabstop||insertFinalTabstop&&snippet.placeholders.length>0){snippet.placeholders.find((p=>0===p.index))||snippet.appendChild(new Placeholder(0))}}_accept(type,value){if(void 0===type||this._token.type===type){const ret=!value||this._scanner.tokenText(this._token);return this._token=this._scanner.next(),ret}return!1}_backTo(token){return this._scanner.pos=token.pos+token.len,this._token=token,!1}_until(type){const start=this._token;for(;this._token.type!==type;){if(14===this._token.type)return!1;if(5===this._token.type){const nextToken=this._scanner.next();if(0!==nextToken.type&&4!==nextToken.type&&5!==nextToken.type)return!1}this._token=this._scanner.next()}const value=this._scanner.value.substring(start.pos,this._token.pos).replace(/\\(\$|}|\\)/g,"$1");return this._token=this._scanner.next(),value}_parse(marker){return this._parseEscaped(marker)||this._parseTabstopOrVariableName(marker)||this._parseComplexPlaceholder(marker)||this._parseComplexVariable(marker)||this._parseAnything(marker)}_parseEscaped(marker){let value;return!!(value=this._accept(5,!0))&&(value=this._accept(0,!0)||this._accept(4,!0)||this._accept(5,!0)||value,marker.appendChild(new Text(value)),!0)}_parseTabstopOrVariableName(parent){let value;const token=this._token;return this._accept(0)&&(value=this._accept(9,!0)||this._accept(8,!0))?(parent.appendChild(/^\d+$/.test(value)?new Placeholder(Number(value)):new Variable(value)),!0):this._backTo(token)}_parseComplexPlaceholder(parent){let index;const token=this._token;if(!(this._accept(0)&&this._accept(3)&&(index=this._accept(8,!0))))return this._backTo(token);const placeholder=new Placeholder(Number(index));if(this._accept(1))for(;;){if(this._accept(4))return parent.appendChild(placeholder),!0;if(!this._parse(placeholder))return parent.appendChild(new Text("${"+index+":")),placeholder.children.forEach(parent.appendChild,parent),!0}else{if(!(placeholder.index>0&&this._accept(7)))return this._accept(6)?this._parseTransform(placeholder)?(parent.appendChild(placeholder),!0):(this._backTo(token),!1):this._accept(4)?(parent.appendChild(placeholder),!0):this._backTo(token);{const choice=new Choice;for(;;){if(this._parseChoiceElement(choice)){if(this._accept(2))continue;if(this._accept(7)&&(placeholder.appendChild(choice),this._accept(4)))return parent.appendChild(placeholder),!0}return this._backTo(token),!1}}}}_parseChoiceElement(parent){const token=this._token,values=[];for(;2!==this._token.type&&7!==this._token.type;){let value;if(value=(value=this._accept(5,!0))?this._accept(2,!0)||this._accept(7,!0)||this._accept(5,!0)||value:this._accept(void 0,!0),!value)return this._backTo(token),!1;values.push(value)}return 0===values.length?(this._backTo(token),!1):(parent.appendChild(new Text(values.join(""))),!0)}_parseComplexVariable(parent){let name;const token=this._token;if(!(this._accept(0)&&this._accept(3)&&(name=this._accept(9,!0))))return this._backTo(token);const variable=new Variable(name);if(!this._accept(1))return this._accept(6)?this._parseTransform(variable)?(parent.appendChild(variable),!0):(this._backTo(token),!1):this._accept(4)?(parent.appendChild(variable),!0):this._backTo(token);for(;;){if(this._accept(4))return parent.appendChild(variable),!0;if(!this._parse(variable))return parent.appendChild(new Text("${"+name+":")),variable.children.forEach(parent.appendChild,parent),!0}}_parseTransform(parent){const transform=new Transform;let regexValue="",regexOptions="";for(;!this._accept(6);){let escaped;if(escaped=this._accept(5,!0))escaped=this._accept(6,!0)||escaped,regexValue+=escaped;else{if(14===this._token.type)return!1;regexValue+=this._accept(void 0,!0)}}for(;!this._accept(6);){let escaped;if(escaped=this._accept(5,!0))escaped=this._accept(5,!0)||this._accept(6,!0)||escaped,transform.appendChild(new Text(escaped));else if(!this._parseFormatString(transform)&&!this._parseAnything(transform))return!1}for(;!this._accept(4);){if(14===this._token.type)return!1;regexOptions+=this._accept(void 0,!0)}try{transform.regexp=new RegExp(regexValue,regexOptions)}catch(e){return!1}return parent.transform=transform,!0}_parseFormatString(parent){const token=this._token;if(!this._accept(0))return!1;let complex=!1;this._accept(3)&&(complex=!0);const index=this._accept(8,!0);if(!index)return this._backTo(token),!1;if(!complex)return parent.appendChild(new FormatString(Number(index))),!0;if(this._accept(4))return parent.appendChild(new FormatString(Number(index))),!0;if(!this._accept(1))return this._backTo(token),!1;if(this._accept(6)){const shorthand=this._accept(9,!0);return shorthand&&this._accept(4)?(parent.appendChild(new FormatString(Number(index),shorthand)),!0):(this._backTo(token),!1)}if(this._accept(11)){const ifValue=this._until(4);if(ifValue)return parent.appendChild(new FormatString(Number(index),void 0,ifValue,void 0)),!0}else if(this._accept(12)){const elseValue=this._until(4);if(elseValue)return parent.appendChild(new FormatString(Number(index),void 0,void 0,elseValue)),!0}else if(this._accept(13)){const ifValue=this._until(1);if(ifValue){const elseValue=this._until(4);if(elseValue)return parent.appendChild(new FormatString(Number(index),void 0,ifValue,elseValue)),!0}}else{const elseValue=this._until(4);if(elseValue)return parent.appendChild(new FormatString(Number(index),void 0,void 0,elseValue)),!0}return this._backTo(token),!1}_parseAnything(marker){return 14!==this._token.type&&(marker.appendChild(new Text(this._scanner.tokenText(this._token))),this._accept(void 0),!0)}}