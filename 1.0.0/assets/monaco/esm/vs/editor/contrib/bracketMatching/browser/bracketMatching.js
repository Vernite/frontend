import{RunOnceScheduler}from"../../../../base/common/async.js";import{Disposable}from"../../../../base/common/lifecycle.js";import"./bracketMatching.css";import{EditorAction,registerEditorAction,registerEditorContribution}from"../../../browser/editorExtensions.js";import{Position}from"../../../common/core/position.js";import{Range}from"../../../common/core/range.js";import{Selection}from"../../../common/core/selection.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import{OverviewRulerLane}from"../../../common/model.js";import{ModelDecorationOptions}from"../../../common/model/textModel.js";import{editorBracketMatchBackground,editorBracketMatchBorder}from"../../../common/core/editorColorRegistry.js";import*as nls from"../../../../nls.js";import{MenuId,MenuRegistry}from"../../../../platform/actions/common/actions.js";import{registerColor}from"../../../../platform/theme/common/colorRegistry.js";import{registerThemingParticipant,themeColorFromId}from"../../../../platform/theme/common/themeService.js";const overviewRulerBracketMatchForeground=registerColor("editorOverviewRuler.bracketMatchForeground",{dark:"#A0A0A0",light:"#A0A0A0",hcDark:"#A0A0A0",hcLight:"#A0A0A0"},nls.localize("overviewRulerBracketMatchForeground","Overview ruler marker color for matching brackets."));class JumpToBracketAction extends EditorAction{constructor(){super({id:"editor.action.jumpToBracket",label:nls.localize("smartSelect.jumpBracket","Go to Bracket"),alias:"Go to Bracket",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.editorTextFocus,primary:3160,weight:100}})}run(accessor,editor){var _a;null===(_a=BracketMatchingController.get(editor))||void 0===_a||_a.jumpToBracket()}}class SelectToBracketAction extends EditorAction{constructor(){super({id:"editor.action.selectToBracket",label:nls.localize("smartSelect.selectToBracket","Select to Bracket"),alias:"Select to Bracket",precondition:void 0,description:{description:"Select to Bracket",args:[{name:"args",schema:{type:"object",properties:{selectBrackets:{type:"boolean",default:!0}}}}]}})}run(accessor,editor,args){var _a;let selectBrackets=!0;args&&!1===args.selectBrackets&&(selectBrackets=!1),null===(_a=BracketMatchingController.get(editor))||void 0===_a||_a.selectToBracket(selectBrackets)}}class BracketsData{constructor(position,brackets,options){this.position=position,this.brackets=brackets,this.options=options}}export class BracketMatchingController extends Disposable{constructor(editor){super(),this._editor=editor,this._lastBracketsData=[],this._lastVersionId=0,this._decorations=this._editor.createDecorationsCollection(),this._updateBracketsSoon=this._register(new RunOnceScheduler((()=>this._updateBrackets()),50)),this._matchBrackets=this._editor.getOption(66),this._updateBracketsSoon.schedule(),this._register(editor.onDidChangeCursorPosition((e=>{"never"!==this._matchBrackets&&this._updateBracketsSoon.schedule()}))),this._register(editor.onDidChangeModelContent((e=>{this._updateBracketsSoon.schedule()}))),this._register(editor.onDidChangeModel((e=>{this._lastBracketsData=[],this._updateBracketsSoon.schedule()}))),this._register(editor.onDidChangeModelLanguageConfiguration((e=>{this._lastBracketsData=[],this._updateBracketsSoon.schedule()}))),this._register(editor.onDidChangeConfiguration((e=>{e.hasChanged(66)&&(this._matchBrackets=this._editor.getOption(66),this._decorations.clear(),this._lastBracketsData=[],this._lastVersionId=0,this._updateBracketsSoon.schedule())}))),this._register(editor.onDidBlurEditorWidget((()=>{this._updateBracketsSoon.schedule()}))),this._register(editor.onDidFocusEditorWidget((()=>{this._updateBracketsSoon.schedule()})))}static get(editor){return editor.getContribution(BracketMatchingController.ID)}jumpToBracket(){if(!this._editor.hasModel())return;const model=this._editor.getModel(),newSelections=this._editor.getSelections().map((selection=>{const position=selection.getStartPosition(),brackets=model.bracketPairs.matchBracket(position);let newCursorPosition=null;if(brackets)brackets[0].containsPosition(position)&&!brackets[1].containsPosition(position)?newCursorPosition=brackets[1].getStartPosition():brackets[1].containsPosition(position)&&(newCursorPosition=brackets[0].getStartPosition());else{const enclosingBrackets=model.bracketPairs.findEnclosingBrackets(position);if(enclosingBrackets)newCursorPosition=enclosingBrackets[1].getStartPosition();else{const nextBracket=model.bracketPairs.findNextBracket(position);nextBracket&&nextBracket.range&&(newCursorPosition=nextBracket.range.getStartPosition())}}return newCursorPosition?new Selection(newCursorPosition.lineNumber,newCursorPosition.column,newCursorPosition.lineNumber,newCursorPosition.column):new Selection(position.lineNumber,position.column,position.lineNumber,position.column)}));this._editor.setSelections(newSelections),this._editor.revealRange(newSelections[0])}selectToBracket(selectBrackets){if(!this._editor.hasModel())return;const model=this._editor.getModel(),newSelections=[];this._editor.getSelections().forEach((selection=>{const position=selection.getStartPosition();let brackets=model.bracketPairs.matchBracket(position);if(!brackets&&(brackets=model.bracketPairs.findEnclosingBrackets(position),!brackets)){const nextBracket=model.bracketPairs.findNextBracket(position);nextBracket&&nextBracket.range&&(brackets=model.bracketPairs.matchBracket(nextBracket.range.getStartPosition()))}let selectFrom=null,selectTo=null;if(brackets){brackets.sort(Range.compareRangesUsingStarts);const[open,close]=brackets;if(selectFrom=selectBrackets?open.getStartPosition():open.getEndPosition(),selectTo=selectBrackets?close.getEndPosition():close.getStartPosition(),close.containsPosition(position)){const tmp=selectFrom;selectFrom=selectTo,selectTo=tmp}}selectFrom&&selectTo&&newSelections.push(new Selection(selectFrom.lineNumber,selectFrom.column,selectTo.lineNumber,selectTo.column))})),newSelections.length>0&&(this._editor.setSelections(newSelections),this._editor.revealRange(newSelections[0]))}_updateBrackets(){if("never"===this._matchBrackets)return;this._recomputeBrackets();const newDecorations=[];let newDecorationsLen=0;for(const bracketData of this._lastBracketsData){const brackets=bracketData.brackets;brackets&&(newDecorations[newDecorationsLen++]={range:brackets[0],options:bracketData.options},newDecorations[newDecorationsLen++]={range:brackets[1],options:bracketData.options})}this._decorations.set(newDecorations)}_recomputeBrackets(){if(!this._editor.hasModel()||!this._editor.hasWidgetFocus())return this._lastBracketsData=[],void(this._lastVersionId=0);const selections=this._editor.getSelections();if(selections.length>100)return this._lastBracketsData=[],void(this._lastVersionId=0);const model=this._editor.getModel(),versionId=model.getVersionId();let previousData=[];this._lastVersionId===versionId&&(previousData=this._lastBracketsData);const positions=[];let positionsLen=0;for(let i=0,len=selections.length;i<len;i++){const selection=selections[i];selection.isEmpty()&&(positions[positionsLen++]=selection.getStartPosition())}positions.length>1&&positions.sort(Position.compare);const newData=[];let newDataLen=0,previousIndex=0;const previousLen=previousData.length;for(let i=0,len=positions.length;i<len;i++){const position=positions[i];for(;previousIndex<previousLen&&previousData[previousIndex].position.isBefore(position);)previousIndex++;if(previousIndex<previousLen&&previousData[previousIndex].position.equals(position))newData[newDataLen++]=previousData[previousIndex];else{let brackets=model.bracketPairs.matchBracket(position,20),options=BracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;brackets||"always"!==this._matchBrackets||(brackets=model.bracketPairs.findEnclosingBrackets(position,20),options=BracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER),newData[newDataLen++]=new BracketsData(position,brackets,options)}}this._lastBracketsData=newData,this._lastVersionId=versionId}}BracketMatchingController.ID="editor.contrib.bracketMatchingController",BracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER=ModelDecorationOptions.register({description:"bracket-match-overview",stickiness:1,className:"bracket-match",overviewRuler:{color:themeColorFromId(overviewRulerBracketMatchForeground),position:OverviewRulerLane.Center}}),BracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER=ModelDecorationOptions.register({description:"bracket-match-no-overview",stickiness:1,className:"bracket-match"}),registerEditorContribution(BracketMatchingController.ID,BracketMatchingController),registerEditorAction(SelectToBracketAction),registerEditorAction(JumpToBracketAction),registerThemingParticipant(((theme,collector)=>{const bracketMatchBackground=theme.getColor(editorBracketMatchBackground);bracketMatchBackground&&collector.addRule(`.monaco-editor .bracket-match { background-color: ${bracketMatchBackground}; }`);const bracketMatchBorder=theme.getColor(editorBracketMatchBorder);bracketMatchBorder&&collector.addRule(`.monaco-editor .bracket-match { border: 1px solid ${bracketMatchBorder}; }`)})),MenuRegistry.appendMenuItem(MenuId.MenubarGoMenu,{group:"5_infile_nav",command:{id:"editor.action.jumpToBracket",title:nls.localize({key:"miGoToBracket",comment:["&& denotes a mnemonic"]},"Go to &&Bracket")},order:2});