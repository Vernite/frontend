import*as nls from"../../../nls.js";import{Emitter}from"../../../base/common/event.js";import{Registry}from"../../../platform/registry/common/platform.js";import{Mimes}from"../../../base/common/mime.js";import{Extensions as ConfigurationExtensions}from"../../../platform/configuration/common/configurationRegistry.js";export const Extensions={ModesRegistry:"editor.modesRegistry"};export class EditorModesRegistry{constructor(){this._onDidChangeLanguages=new Emitter,this.onDidChangeLanguages=this._onDidChangeLanguages.event,this._languages=[]}registerLanguage(def){return this._languages.push(def),this._onDidChangeLanguages.fire(void 0),{dispose:()=>{for(let i=0,len=this._languages.length;i<len;i++)if(this._languages[i]===def)return void this._languages.splice(i,1)}}}getLanguages(){return this._languages}}export const ModesRegistry=new EditorModesRegistry;Registry.add(Extensions.ModesRegistry,ModesRegistry);export const PLAINTEXT_LANGUAGE_ID="plaintext";export const PLAINTEXT_EXTENSION=".txt";ModesRegistry.registerLanguage({id:"plaintext",extensions:[".txt"],aliases:[nls.localize("plainText.alias","Plain Text"),"text"],mimetypes:[Mimes.text]}),Registry.as(ConfigurationExtensions.Configuration).registerDefaultConfigurations([{overrides:{"[plaintext]":{"editor.unicodeHighlight.ambiguousCharacters":!1,"editor.unicodeHighlight.invisibleCharacters":!1}}}]);