import{createKeybinding}from"../../../base/common/keybindings.js";import{OS}from"../../../base/common/platform.js";import{CommandsRegistry}from"../../commands/common/commands.js";import{Registry}from"../../registry/common/platform.js";class KeybindingsRegistryImpl{constructor(){this._coreKeybindings=[],this._extensionKeybindings=[],this._cachedMergedKeybindings=null}static bindToCurrentPlatform(kb){if(1===OS){if(kb&&kb.win)return kb.win}else if(2===OS){if(kb&&kb.mac)return kb.mac}else if(kb&&kb.linux)return kb.linux;return kb}registerKeybindingRule(rule){const actualKb=KeybindingsRegistryImpl.bindToCurrentPlatform(rule);if(actualKb&&actualKb.primary){const kk=createKeybinding(actualKb.primary,OS);kk&&this._registerDefaultKeybinding(kk,rule.id,rule.args,rule.weight,0,rule.when)}if(actualKb&&Array.isArray(actualKb.secondary))for(let i=0,len=actualKb.secondary.length;i<len;i++){const k=actualKb.secondary[i],kk=createKeybinding(k,OS);kk&&this._registerDefaultKeybinding(kk,rule.id,rule.args,rule.weight,-i-1,rule.when)}}registerCommandAndKeybindingRule(desc){this.registerKeybindingRule(desc),CommandsRegistry.registerCommand(desc)}static _mightProduceChar(keyCode){return keyCode>=21&&keyCode<=30||(keyCode>=31&&keyCode<=56||(80===keyCode||81===keyCode||82===keyCode||83===keyCode||84===keyCode||85===keyCode||86===keyCode||110===keyCode||111===keyCode||87===keyCode||88===keyCode||89===keyCode||90===keyCode||91===keyCode||92===keyCode))}_assertNoCtrlAlt(keybinding,commandId){keybinding.ctrlKey&&keybinding.altKey&&!keybinding.metaKey&&KeybindingsRegistryImpl._mightProduceChar(keybinding.keyCode)&&console.warn("Ctrl+Alt+ keybindings should not be used by default under Windows. Offender: ",keybinding," for ",commandId)}_registerDefaultKeybinding(keybinding,commandId,commandArgs,weight1,weight2,when){1===OS&&this._assertNoCtrlAlt(keybinding.parts[0],commandId),this._coreKeybindings.push({keybinding:keybinding.parts,command:commandId,commandArgs,when,weight1,weight2,extensionId:null,isBuiltinExtension:!1}),this._cachedMergedKeybindings=null}getDefaultKeybindings(){return this._cachedMergedKeybindings||(this._cachedMergedKeybindings=[].concat(this._coreKeybindings).concat(this._extensionKeybindings),this._cachedMergedKeybindings.sort(sorter)),this._cachedMergedKeybindings.slice(0)}}export const KeybindingsRegistry=new KeybindingsRegistryImpl;export const Extensions={EditorModes:"platform.keybindingsRegistry"};function sorter(a,b){if(a.weight1!==b.weight1)return a.weight1-b.weight1;if(a.command&&b.command){if(a.command<b.command)return-1;if(a.command>b.command)return 1}return a.weight2-b.weight2}Registry.add(Extensions.EditorModes,KeybindingsRegistry);