import{Codicon}from"../../../base/common/codicons.js";import Severity from"../../../base/common/severity.js";import{problemsErrorIconForeground,problemsInfoIconForeground,problemsWarningIconForeground}from"../../theme/common/colorRegistry.js";import{registerThemingParticipant}from"../../theme/common/themeService.js";export var SeverityIcon;!function(SeverityIcon){SeverityIcon.className=function className(severity){switch(severity){case Severity.Ignore:return"severity-ignore "+Codicon.info.classNames;case Severity.Info:return Codicon.info.classNames;case Severity.Warning:return Codicon.warning.classNames;case Severity.Error:return Codicon.error.classNames;default:return""}}}(SeverityIcon||(SeverityIcon={})),registerThemingParticipant(((theme,collector)=>{const errorIconForeground=theme.getColor(problemsErrorIconForeground);if(errorIconForeground){const errorCodiconSelector=Codicon.error.cssSelector;collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${errorCodiconSelector},\n\t\t\t.markers-panel .marker-icon${errorCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${errorCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${errorCodiconSelector} {\n\t\t\t\tcolor: ${errorIconForeground};\n\t\t\t}\n\t\t`)}const warningIconForeground=theme.getColor(problemsWarningIconForeground);if(warningIconForeground){const warningCodiconSelector=Codicon.warning.cssSelector;collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${warningCodiconSelector},\n\t\t\t.markers-panel .marker-icon${warningCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${warningCodiconSelector},\n\t\t\t.extension-editor ${warningCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${warningCodiconSelector},\n\t\t\t.preferences-editor ${warningCodiconSelector} {\n\t\t\t\tcolor: ${warningIconForeground};\n\t\t\t}\n\t\t`)}const infoIconForeground=theme.getColor(problemsInfoIconForeground);if(infoIconForeground){const infoCodiconSelector=Codicon.info.cssSelector;collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${infoCodiconSelector},\n\t\t\t.markers-panel .marker-icon${infoCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${infoCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${infoCodiconSelector},\n\t\t\t.extension-editor ${infoCodiconSelector} {\n\t\t\t\tcolor: ${infoIconForeground};\n\t\t\t}\n\t\t`)}}));