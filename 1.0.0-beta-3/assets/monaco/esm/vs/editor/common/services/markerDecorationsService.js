var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import{IMarkerService,MarkerSeverity}from"../../../platform/markers/common/markers.js";import{Disposable,toDisposable}from"../../../base/common/lifecycle.js";import{OverviewRulerLane,MinimapPosition}from"../model.js";import{themeColorFromId}from"../../../platform/theme/common/themeService.js";import{overviewRulerWarning,overviewRulerInfo,overviewRulerError}from"../core/editorColorRegistry.js";import{IModelService}from"./model.js";import{Range}from"../core/range.js";import{Schemas}from"../../../base/common/network.js";import{Emitter}from"../../../base/common/event.js";import{minimapWarning,minimapError}from"../../../platform/theme/common/colorRegistry.js";import{ResourceMap}from"../../../base/common/map.js";class MarkerDecorations extends Disposable{constructor(model){super(),this.model=model,this._markersData=new Map,this._register(toDisposable((()=>{this.model.deltaDecorations([...this._markersData.keys()],[]),this._markersData.clear()})))}update(markers,newDecorations){const oldIds=[...this._markersData.keys()];this._markersData.clear();const ids=this.model.deltaDecorations(oldIds,newDecorations);for(let index=0;index<ids.length;index++)this._markersData.set(ids[index],markers[index]);return 0!==oldIds.length||0!==ids.length}getMarker(decoration){return this._markersData.get(decoration.id)}}let MarkerDecorationsService=class MarkerDecorationsService extends Disposable{constructor(modelService,_markerService){super(),this._markerService=_markerService,this._onDidChangeMarker=this._register(new Emitter),this._markerDecorations=new ResourceMap,modelService.getModels().forEach((model=>this._onModelAdded(model))),this._register(modelService.onModelAdded(this._onModelAdded,this)),this._register(modelService.onModelRemoved(this._onModelRemoved,this)),this._register(this._markerService.onMarkerChanged(this._handleMarkerChange,this))}dispose(){super.dispose(),this._markerDecorations.forEach((value=>value.dispose())),this._markerDecorations.clear()}getMarker(uri,decoration){const markerDecorations=this._markerDecorations.get(uri);return markerDecorations&&markerDecorations.getMarker(decoration)||null}_handleMarkerChange(changedResources){changedResources.forEach((resource=>{const markerDecorations=this._markerDecorations.get(resource);markerDecorations&&this._updateDecorations(markerDecorations)}))}_onModelAdded(model){const markerDecorations=new MarkerDecorations(model);this._markerDecorations.set(model.uri,markerDecorations),this._updateDecorations(markerDecorations)}_onModelRemoved(model){var _a;const markerDecorations=this._markerDecorations.get(model.uri);markerDecorations&&(markerDecorations.dispose(),this._markerDecorations.delete(model.uri)),model.uri.scheme!==Schemas.inMemory&&model.uri.scheme!==Schemas.internal&&model.uri.scheme!==Schemas.vscode||null===(_a=this._markerService)||void 0===_a||_a.read({resource:model.uri}).map((marker=>marker.owner)).forEach((owner=>this._markerService.remove(owner,[model.uri])))}_updateDecorations(markerDecorations){const markers=this._markerService.read({resource:markerDecorations.model.uri,take:500}),newModelDecorations=markers.map((marker=>({range:this._createDecorationRange(markerDecorations.model,marker),options:this._createDecorationOption(marker)})));markerDecorations.update(markers,newModelDecorations)&&this._onDidChangeMarker.fire(markerDecorations.model)}_createDecorationRange(model,rawMarker){let ret=Range.lift(rawMarker);if(rawMarker.severity!==MarkerSeverity.Hint||this._hasMarkerTag(rawMarker,1)||this._hasMarkerTag(rawMarker,2)||(ret=ret.setEndPosition(ret.startLineNumber,ret.startColumn+2)),ret=model.validateRange(ret),ret.isEmpty()){const maxColumn=model.getLineLastNonWhitespaceColumn(ret.startLineNumber)||model.getLineMaxColumn(ret.startLineNumber);if(1===maxColumn||ret.endColumn>=maxColumn)return ret;const word=model.getWordAtPosition(ret.getStartPosition());word&&(ret=new Range(ret.startLineNumber,word.startColumn,ret.endLineNumber,word.endColumn))}else if(rawMarker.endColumn===Number.MAX_VALUE&&1===rawMarker.startColumn&&ret.startLineNumber===ret.endLineNumber){const minColumn=model.getLineFirstNonWhitespaceColumn(rawMarker.startLineNumber);minColumn<ret.endColumn&&(ret=new Range(ret.startLineNumber,minColumn,ret.endLineNumber,ret.endColumn),rawMarker.startColumn=minColumn)}return ret}_createDecorationOption(marker){let className,color,zIndex,inlineClassName,minimap;switch(marker.severity){case MarkerSeverity.Hint:className=this._hasMarkerTag(marker,2)?void 0:this._hasMarkerTag(marker,1)?"squiggly-unnecessary":"squiggly-hint",zIndex=0;break;case MarkerSeverity.Warning:className="squiggly-warning",color=themeColorFromId(overviewRulerWarning),zIndex=20,minimap={color:themeColorFromId(minimapWarning),position:MinimapPosition.Inline};break;case MarkerSeverity.Info:className="squiggly-info",color=themeColorFromId(overviewRulerInfo),zIndex=10;break;case MarkerSeverity.Error:default:className="squiggly-error",color=themeColorFromId(overviewRulerError),zIndex=30,minimap={color:themeColorFromId(minimapError),position:MinimapPosition.Inline}}return marker.tags&&(-1!==marker.tags.indexOf(1)&&(inlineClassName="squiggly-inline-unnecessary"),-1!==marker.tags.indexOf(2)&&(inlineClassName="squiggly-inline-deprecated")),{description:"marker-decoration",stickiness:1,className,showIfCollapsed:!0,overviewRuler:{color,position:OverviewRulerLane.Right},minimap,zIndex,inlineClassName}}_hasMarkerTag(marker,tag){return!!marker.tags&&marker.tags.indexOf(tag)>=0}};MarkerDecorationsService=__decorate([__param(0,IModelService),__param(1,IMarkerService)],MarkerDecorationsService);export{MarkerDecorationsService};