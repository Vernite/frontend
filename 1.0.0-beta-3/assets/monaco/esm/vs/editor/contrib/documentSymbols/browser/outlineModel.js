var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}},__awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import{equals}from"../../../../base/common/arrays.js";import{CancellationTokenSource}from"../../../../base/common/cancellation.js";import{onUnexpectedExternalError}from"../../../../base/common/errors.js";import{Iterable}from"../../../../base/common/iterator.js";import{LRUCache}from"../../../../base/common/map.js";import{Position}from"../../../common/core/position.js";import{Range}from"../../../common/core/range.js";import{ILanguageFeatureDebounceService}from"../../../common/services/languageFeatureDebounce.js";import{createDecorator}from"../../../../platform/instantiation/common/instantiation.js";import{registerSingleton}from"../../../../platform/instantiation/common/extensions.js";import{IModelService}from"../../../common/services/model.js";import{DisposableStore}from"../../../../base/common/lifecycle.js";import{ILanguageFeaturesService}from"../../../common/services/languageFeatures.js";export class TreeElement{remove(){var _a;null===(_a=this.parent)||void 0===_a||_a.children.delete(this.id)}static findId(candidate,container){let candidateId;"string"==typeof candidate?candidateId=`${container.id}/${candidate}`:(candidateId=`${container.id}/${candidate.name}`,void 0!==container.children.get(candidateId)&&(candidateId=`${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`));let id=candidateId;for(let i=0;void 0!==container.children.get(id);i++)id=`${candidateId}_${i}`;return id}static empty(element){return 0===element.children.size}}export class OutlineElement extends TreeElement{constructor(id,parent,symbol){super(),this.id=id,this.parent=parent,this.symbol=symbol,this.children=new Map}}export class OutlineGroup extends TreeElement{constructor(id,parent,label,order){super(),this.id=id,this.parent=parent,this.label=label,this.order=order,this.children=new Map}}export class OutlineModel extends TreeElement{constructor(uri){super(),this.uri=uri,this.id="root",this.parent=void 0,this._groups=new Map,this.children=new Map,this.id="root",this.parent=void 0}static create(registry,textModel,token){const cts=new CancellationTokenSource(token),result=new OutlineModel(textModel.uri),provider=registry.ordered(textModel),promises=provider.map(((provider,index)=>{var _a;const id=TreeElement.findId(`provider_${index}`,result),group=new OutlineGroup(id,result,null!==(_a=provider.displayName)&&void 0!==_a?_a:"Unknown Outline Provider",index);return Promise.resolve(provider.provideDocumentSymbols(textModel,cts.token)).then((result=>{for(const info of result||[])OutlineModel._makeOutlineElement(info,group);return group}),(err=>(onUnexpectedExternalError(err),group))).then((group=>{TreeElement.empty(group)?group.remove():result._groups.set(id,group)}))})),listener=registry.onDidChange((()=>{const newProvider=registry.ordered(textModel);equals(newProvider,provider)||cts.cancel()}));return Promise.all(promises).then((()=>cts.token.isCancellationRequested&&!token.isCancellationRequested?OutlineModel.create(registry,textModel,token):result._compact())).finally((()=>{listener.dispose()}))}static _makeOutlineElement(info,container){const id=TreeElement.findId(info,container),res=new OutlineElement(id,container,info);if(info.children)for(const childInfo of info.children)OutlineModel._makeOutlineElement(childInfo,res);container.children.set(res.id,res)}_compact(){let count=0;for(const[key,group]of this._groups)0===group.children.size?this._groups.delete(key):count+=1;if(1!==count)this.children=this._groups;else{const group=Iterable.first(this._groups.values());for(const[,child]of group.children)child.parent=this,this.children.set(child.id,child)}return this}getTopLevelSymbols(){const roots=[];for(const child of this.children.values())child instanceof OutlineElement?roots.push(child.symbol):roots.push(...Iterable.map(child.children.values(),(child=>child.symbol)));return roots.sort(((a,b)=>Range.compareRangesUsingStarts(a.range,b.range)))}asListOfDocumentSymbols(){const roots=this.getTopLevelSymbols(),bucket=[];return OutlineModel._flattenDocumentSymbols(bucket,roots,""),bucket.sort(((a,b)=>Position.compare(Range.getStartPosition(a.range),Range.getStartPosition(b.range))||Position.compare(Range.getEndPosition(b.range),Range.getEndPosition(a.range))))}static _flattenDocumentSymbols(bucket,entries,overrideContainerLabel){for(const entry of entries)bucket.push({kind:entry.kind,tags:entry.tags,name:entry.name,detail:entry.detail,containerName:entry.containerName||overrideContainerLabel,range:entry.range,selectionRange:entry.selectionRange,children:void 0}),entry.children&&OutlineModel._flattenDocumentSymbols(bucket,entry.children,entry.name)}}export const IOutlineModelService=createDecorator("IOutlineModelService");let OutlineModelService=class OutlineModelService{constructor(_languageFeaturesService,debounces,modelService){this._languageFeaturesService=_languageFeaturesService,this._disposables=new DisposableStore,this._cache=new LRUCache(10,.7),this._debounceInformation=debounces.for(_languageFeaturesService.documentSymbolProvider,"DocumentSymbols",{min:350}),this._disposables.add(modelService.onModelRemoved((textModel=>{this._cache.delete(textModel.id)})))}dispose(){this._disposables.dispose()}getOrCreate(textModel,token){return __awaiter(this,void 0,void 0,(function*(){const registry=this._languageFeaturesService.documentSymbolProvider,provider=registry.ordered(textModel);let data=this._cache.get(textModel.id);if(!data||data.versionId!==textModel.getVersionId()||!equals(data.provider,provider)){const source=new CancellationTokenSource;data={versionId:textModel.getVersionId(),provider,promiseCnt:0,source,promise:OutlineModel.create(registry,textModel,source.token),model:void 0},this._cache.set(textModel.id,data);const now=Date.now();data.promise.then((outlineModel=>{data.model=outlineModel,this._debounceInformation.update(textModel,Date.now()-now)})).catch((_err=>{this._cache.delete(textModel.id)}))}if(data.model)return data.model;data.promiseCnt+=1;const listener=token.onCancellationRequested((()=>{0==--data.promiseCnt&&(data.source.cancel(),this._cache.delete(textModel.id))}));try{return yield data.promise}finally{listener.dispose()}}))}};OutlineModelService=__decorate([__param(0,ILanguageFeaturesService),__param(1,ILanguageFeatureDebounceService),__param(2,IModelService)],OutlineModelService);export{OutlineModelService};registerSingleton(IOutlineModelService,OutlineModelService,!0);