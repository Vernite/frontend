var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import{status}from"../../../../base/browser/ui/aria/aria.js";import{RunOnceScheduler}from"../../../../base/common/async.js";import{KeyChord}from"../../../../base/common/keyCodes.js";import{Disposable,DisposableStore}from"../../../../base/common/lifecycle.js";import{EditorAction,registerEditorAction,registerEditorContribution}from"../../../browser/editorExtensions.js";import{CursorMoveCommands}from"../../../common/cursor/cursorMoveCommands.js";import{Range}from"../../../common/core/range.js";import{Selection}from"../../../common/core/selection.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import{OverviewRulerLane,MinimapPosition}from"../../../common/model.js";import{ModelDecorationOptions}from"../../../common/model/textModel.js";import{CommonFindController}from"../../find/browser/findController.js";import*as nls from"../../../../nls.js";import{MenuId}from"../../../../platform/actions/common/actions.js";import{ContextKeyExpr}from"../../../../platform/contextkey/common/contextkey.js";import{overviewRulerSelectionHighlightForeground,minimapSelectionOccurrenceHighlight}from"../../../../platform/theme/common/colorRegistry.js";import{themeColorFromId}from"../../../../platform/theme/common/themeService.js";import{ILanguageFeaturesService}from"../../../common/services/languageFeatures.js";function announceCursorChange(previousCursorState,cursorState){const cursorDiff=cursorState.filter((cs=>!previousCursorState.find((pcs=>pcs.equals(cs)))));if(cursorDiff.length>=1){const cursorPositions=cursorDiff.map((cs=>`line ${cs.viewState.position.lineNumber} column ${cs.viewState.position.column}`)).join(", "),msg=1===cursorDiff.length?nls.localize("cursorAdded","Cursor added: {0}",cursorPositions):nls.localize("cursorsAdded","Cursors added: {0}",cursorPositions);status(msg)}}export class InsertCursorAbove extends EditorAction{constructor(){super({id:"editor.action.insertCursorAbove",label:nls.localize("mutlicursor.insertAbove","Add Cursor Above"),alias:"Add Cursor Above",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.editorTextFocus,primary:2576,linux:{primary:1552,secondary:[3088]},weight:100},menuOpts:{menuId:MenuId.MenubarSelectionMenu,group:"3_multi",title:nls.localize({key:"miInsertCursorAbove",comment:["&& denotes a mnemonic"]},"&&Add Cursor Above"),order:2}})}run(accessor,editor,args){if(!editor.hasModel())return;let useLogicalLine=!0;args&&!1===args.logicalLine&&(useLogicalLine=!1);const viewModel=editor._getViewModel();if(viewModel.cursorConfig.readOnly)return;viewModel.model.pushStackElement();const previousCursorState=viewModel.getCursorStates();viewModel.setCursorStates(args.source,3,CursorMoveCommands.addCursorUp(viewModel,previousCursorState,useLogicalLine)),viewModel.revealTopMostCursor(args.source),announceCursorChange(previousCursorState,viewModel.getCursorStates())}}export class InsertCursorBelow extends EditorAction{constructor(){super({id:"editor.action.insertCursorBelow",label:nls.localize("mutlicursor.insertBelow","Add Cursor Below"),alias:"Add Cursor Below",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.editorTextFocus,primary:2578,linux:{primary:1554,secondary:[3090]},weight:100},menuOpts:{menuId:MenuId.MenubarSelectionMenu,group:"3_multi",title:nls.localize({key:"miInsertCursorBelow",comment:["&& denotes a mnemonic"]},"A&&dd Cursor Below"),order:3}})}run(accessor,editor,args){if(!editor.hasModel())return;let useLogicalLine=!0;args&&!1===args.logicalLine&&(useLogicalLine=!1);const viewModel=editor._getViewModel();if(viewModel.cursorConfig.readOnly)return;viewModel.model.pushStackElement();const previousCursorState=viewModel.getCursorStates();viewModel.setCursorStates(args.source,3,CursorMoveCommands.addCursorDown(viewModel,previousCursorState,useLogicalLine)),viewModel.revealBottomMostCursor(args.source),announceCursorChange(previousCursorState,viewModel.getCursorStates())}}class InsertCursorAtEndOfEachLineSelected extends EditorAction{constructor(){super({id:"editor.action.insertCursorAtEndOfEachLineSelected",label:nls.localize("mutlicursor.insertAtEndOfEachLineSelected","Add Cursors to Line Ends"),alias:"Add Cursors to Line Ends",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.editorTextFocus,primary:1575,weight:100},menuOpts:{menuId:MenuId.MenubarSelectionMenu,group:"3_multi",title:nls.localize({key:"miInsertCursorAtEndOfEachLineSelected",comment:["&& denotes a mnemonic"]},"Add C&&ursors to Line Ends"),order:4}})}getCursorsForSelection(selection,model,result){if(!selection.isEmpty()){for(let i=selection.startLineNumber;i<selection.endLineNumber;i++){const currentLineMaxColumn=model.getLineMaxColumn(i);result.push(new Selection(i,currentLineMaxColumn,i,currentLineMaxColumn))}selection.endColumn>1&&result.push(new Selection(selection.endLineNumber,selection.endColumn,selection.endLineNumber,selection.endColumn))}}run(accessor,editor){if(!editor.hasModel())return;const model=editor.getModel(),selections=editor.getSelections(),viewModel=editor._getViewModel(),previousCursorState=viewModel.getCursorStates(),newSelections=[];selections.forEach((sel=>this.getCursorsForSelection(sel,model,newSelections))),newSelections.length>0&&editor.setSelections(newSelections),announceCursorChange(previousCursorState,viewModel.getCursorStates())}}class InsertCursorAtEndOfLineSelected extends EditorAction{constructor(){super({id:"editor.action.addCursorsToBottom",label:nls.localize("mutlicursor.addCursorsToBottom","Add Cursors To Bottom"),alias:"Add Cursors To Bottom",precondition:void 0})}run(accessor,editor){if(!editor.hasModel())return;const selections=editor.getSelections(),lineCount=editor.getModel().getLineCount(),newSelections=[];for(let i=selections[0].startLineNumber;i<=lineCount;i++)newSelections.push(new Selection(i,selections[0].startColumn,i,selections[0].endColumn));const viewModel=editor._getViewModel(),previousCursorState=viewModel.getCursorStates();newSelections.length>0&&editor.setSelections(newSelections),announceCursorChange(previousCursorState,viewModel.getCursorStates())}}class InsertCursorAtTopOfLineSelected extends EditorAction{constructor(){super({id:"editor.action.addCursorsToTop",label:nls.localize("mutlicursor.addCursorsToTop","Add Cursors To Top"),alias:"Add Cursors To Top",precondition:void 0})}run(accessor,editor){if(!editor.hasModel())return;const selections=editor.getSelections(),newSelections=[];for(let i=selections[0].startLineNumber;i>=1;i--)newSelections.push(new Selection(i,selections[0].startColumn,i,selections[0].endColumn));const viewModel=editor._getViewModel(),previousCursorState=viewModel.getCursorStates();newSelections.length>0&&editor.setSelections(newSelections),announceCursorChange(previousCursorState,viewModel.getCursorStates())}}export class MultiCursorSessionResult{constructor(selections,revealRange,revealScrollType){this.selections=selections,this.revealRange=revealRange,this.revealScrollType=revealScrollType}}export class MultiCursorSession{constructor(_editor,findController,isDisconnectedFromFindController,searchText,wholeWord,matchCase,currentMatch){this._editor=_editor,this.findController=findController,this.isDisconnectedFromFindController=isDisconnectedFromFindController,this.searchText=searchText,this.wholeWord=wholeWord,this.matchCase=matchCase,this.currentMatch=currentMatch}static create(editor,findController){if(!editor.hasModel())return null;const findState=findController.getState();if(!editor.hasTextFocus()&&findState.isRevealed&&findState.searchString.length>0)return new MultiCursorSession(editor,findController,!1,findState.searchString,findState.wholeWord,findState.matchCase,null);let wholeWord,matchCase,isDisconnectedFromFindController=!1;const selections=editor.getSelections();1===selections.length&&selections[0].isEmpty()?(isDisconnectedFromFindController=!0,wholeWord=!0,matchCase=!0):(wholeWord=findState.wholeWord,matchCase=findState.matchCase);const s=editor.getSelection();let searchText,currentMatch=null;if(s.isEmpty()){const word=editor.getConfiguredWordAtPosition(s.getStartPosition());if(!word)return null;searchText=word.word,currentMatch=new Selection(s.startLineNumber,word.startColumn,s.startLineNumber,word.endColumn)}else searchText=editor.getModel().getValueInRange(s).replace(/\r\n/g,"\n");return new MultiCursorSession(editor,findController,isDisconnectedFromFindController,searchText,wholeWord,matchCase,currentMatch)}addSelectionToNextFindMatch(){if(!this._editor.hasModel())return null;const nextMatch=this._getNextMatch();if(!nextMatch)return null;const allSelections=this._editor.getSelections();return new MultiCursorSessionResult(allSelections.concat(nextMatch),nextMatch,0)}moveSelectionToNextFindMatch(){if(!this._editor.hasModel())return null;const nextMatch=this._getNextMatch();if(!nextMatch)return null;const allSelections=this._editor.getSelections();return new MultiCursorSessionResult(allSelections.slice(0,allSelections.length-1).concat(nextMatch),nextMatch,0)}_getNextMatch(){if(!this._editor.hasModel())return null;if(this.currentMatch){const result=this.currentMatch;return this.currentMatch=null,result}this.findController.highlightFindOptions();const allSelections=this._editor.getSelections(),lastAddedSelection=allSelections[allSelections.length-1],nextMatch=this._editor.getModel().findNextMatch(this.searchText,lastAddedSelection.getEndPosition(),!1,this.matchCase,this.wholeWord?this._editor.getOption(119):null,!1);return nextMatch?new Selection(nextMatch.range.startLineNumber,nextMatch.range.startColumn,nextMatch.range.endLineNumber,nextMatch.range.endColumn):null}addSelectionToPreviousFindMatch(){if(!this._editor.hasModel())return null;const previousMatch=this._getPreviousMatch();if(!previousMatch)return null;const allSelections=this._editor.getSelections();return new MultiCursorSessionResult(allSelections.concat(previousMatch),previousMatch,0)}moveSelectionToPreviousFindMatch(){if(!this._editor.hasModel())return null;const previousMatch=this._getPreviousMatch();if(!previousMatch)return null;const allSelections=this._editor.getSelections();return new MultiCursorSessionResult(allSelections.slice(0,allSelections.length-1).concat(previousMatch),previousMatch,0)}_getPreviousMatch(){if(!this._editor.hasModel())return null;if(this.currentMatch){const result=this.currentMatch;return this.currentMatch=null,result}this.findController.highlightFindOptions();const allSelections=this._editor.getSelections(),lastAddedSelection=allSelections[allSelections.length-1],previousMatch=this._editor.getModel().findPreviousMatch(this.searchText,lastAddedSelection.getStartPosition(),!1,this.matchCase,this.wholeWord?this._editor.getOption(119):null,!1);return previousMatch?new Selection(previousMatch.range.startLineNumber,previousMatch.range.startColumn,previousMatch.range.endLineNumber,previousMatch.range.endColumn):null}selectAll(searchScope){if(!this._editor.hasModel())return[];this.findController.highlightFindOptions();const editorModel=this._editor.getModel();return searchScope?editorModel.findMatches(this.searchText,searchScope,!1,this.matchCase,this.wholeWord?this._editor.getOption(119):null,!1,1073741824):editorModel.findMatches(this.searchText,!0,!1,this.matchCase,this.wholeWord?this._editor.getOption(119):null,!1,1073741824)}}export class MultiCursorSelectionController extends Disposable{constructor(editor){super(),this._sessionDispose=this._register(new DisposableStore),this._editor=editor,this._ignoreSelectionChange=!1,this._session=null}static get(editor){return editor.getContribution(MultiCursorSelectionController.ID)}dispose(){this._endSession(),super.dispose()}_beginSessionIfNeeded(findController){if(!this._session){const session=MultiCursorSession.create(this._editor,findController);if(!session)return;this._session=session;const newState={searchString:this._session.searchText};this._session.isDisconnectedFromFindController&&(newState.wholeWordOverride=1,newState.matchCaseOverride=1,newState.isRegexOverride=2),findController.getState().change(newState,!1),this._sessionDispose.add(this._editor.onDidChangeCursorSelection((e=>{this._ignoreSelectionChange||this._endSession()}))),this._sessionDispose.add(this._editor.onDidBlurEditorText((()=>{this._endSession()}))),this._sessionDispose.add(findController.getState().onFindReplaceStateChange((e=>{(e.matchCase||e.wholeWord)&&this._endSession()})))}}_endSession(){if(this._sessionDispose.clear(),this._session&&this._session.isDisconnectedFromFindController){const newState={wholeWordOverride:0,matchCaseOverride:0,isRegexOverride:0};this._session.findController.getState().change(newState,!1)}this._session=null}_setSelections(selections){this._ignoreSelectionChange=!0,this._editor.setSelections(selections),this._ignoreSelectionChange=!1}_expandEmptyToWord(model,selection){if(!selection.isEmpty())return selection;const word=this._editor.getConfiguredWordAtPosition(selection.getStartPosition());return word?new Selection(selection.startLineNumber,word.startColumn,selection.startLineNumber,word.endColumn):selection}_applySessionResult(result){result&&(this._setSelections(result.selections),result.revealRange&&this._editor.revealRangeInCenterIfOutsideViewport(result.revealRange,result.revealScrollType))}getSession(findController){return this._session}addSelectionToNextFindMatch(findController){if(this._editor.hasModel()){if(!this._session){const allSelections=this._editor.getSelections();if(allSelections.length>1){const matchCase=findController.getState().matchCase;if(!modelRangesContainSameText(this._editor.getModel(),allSelections,matchCase)){const model=this._editor.getModel(),resultingSelections=[];for(let i=0,len=allSelections.length;i<len;i++)resultingSelections[i]=this._expandEmptyToWord(model,allSelections[i]);return void this._editor.setSelections(resultingSelections)}}}this._beginSessionIfNeeded(findController),this._session&&this._applySessionResult(this._session.addSelectionToNextFindMatch())}}addSelectionToPreviousFindMatch(findController){this._beginSessionIfNeeded(findController),this._session&&this._applySessionResult(this._session.addSelectionToPreviousFindMatch())}moveSelectionToNextFindMatch(findController){this._beginSessionIfNeeded(findController),this._session&&this._applySessionResult(this._session.moveSelectionToNextFindMatch())}moveSelectionToPreviousFindMatch(findController){this._beginSessionIfNeeded(findController),this._session&&this._applySessionResult(this._session.moveSelectionToPreviousFindMatch())}selectAll(findController){if(!this._editor.hasModel())return;let matches=null;const findState=findController.getState();if(findState.isRevealed&&findState.searchString.length>0&&findState.isRegex){const editorModel=this._editor.getModel();matches=findState.searchScope?editorModel.findMatches(findState.searchString,findState.searchScope,findState.isRegex,findState.matchCase,findState.wholeWord?this._editor.getOption(119):null,!1,1073741824):editorModel.findMatches(findState.searchString,!0,findState.isRegex,findState.matchCase,findState.wholeWord?this._editor.getOption(119):null,!1,1073741824)}else{if(this._beginSessionIfNeeded(findController),!this._session)return;matches=this._session.selectAll(findState.searchScope)}if(matches.length>0){const editorSelection=this._editor.getSelection();for(let i=0,len=matches.length;i<len;i++){const match=matches[i];if(match.range.intersectRanges(editorSelection)){matches[i]=matches[0],matches[0]=match;break}}this._setSelections(matches.map((m=>new Selection(m.range.startLineNumber,m.range.startColumn,m.range.endLineNumber,m.range.endColumn))))}}}MultiCursorSelectionController.ID="editor.contrib.multiCursorController";export class MultiCursorSelectionControllerAction extends EditorAction{run(accessor,editor){const multiCursorController=MultiCursorSelectionController.get(editor);if(!multiCursorController)return;const findController=CommonFindController.get(editor);if(!findController)return;const viewModel=editor._getViewModel();if(viewModel){const previousCursorState=viewModel.getCursorStates();this._run(multiCursorController,findController),announceCursorChange(previousCursorState,viewModel.getCursorStates())}}}export class AddSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction{constructor(){super({id:"editor.action.addSelectionToNextFindMatch",label:nls.localize("addSelectionToNextFindMatch","Add Selection To Next Find Match"),alias:"Add Selection To Next Find Match",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.focus,primary:2082,weight:100},menuOpts:{menuId:MenuId.MenubarSelectionMenu,group:"3_multi",title:nls.localize({key:"miAddSelectionToNextFindMatch",comment:["&& denotes a mnemonic"]},"Add &&Next Occurrence"),order:5}})}_run(multiCursorController,findController){multiCursorController.addSelectionToNextFindMatch(findController)}}export class AddSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction{constructor(){super({id:"editor.action.addSelectionToPreviousFindMatch",label:nls.localize("addSelectionToPreviousFindMatch","Add Selection To Previous Find Match"),alias:"Add Selection To Previous Find Match",precondition:void 0,menuOpts:{menuId:MenuId.MenubarSelectionMenu,group:"3_multi",title:nls.localize({key:"miAddSelectionToPreviousFindMatch",comment:["&& denotes a mnemonic"]},"Add P&&revious Occurrence"),order:6}})}_run(multiCursorController,findController){multiCursorController.addSelectionToPreviousFindMatch(findController)}}export class MoveSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction{constructor(){super({id:"editor.action.moveSelectionToNextFindMatch",label:nls.localize("moveSelectionToNextFindMatch","Move Last Selection To Next Find Match"),alias:"Move Last Selection To Next Find Match",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.focus,primary:KeyChord(2089,2082),weight:100}})}_run(multiCursorController,findController){multiCursorController.moveSelectionToNextFindMatch(findController)}}export class MoveSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction{constructor(){super({id:"editor.action.moveSelectionToPreviousFindMatch",label:nls.localize("moveSelectionToPreviousFindMatch","Move Last Selection To Previous Find Match"),alias:"Move Last Selection To Previous Find Match",precondition:void 0})}_run(multiCursorController,findController){multiCursorController.moveSelectionToPreviousFindMatch(findController)}}export class SelectHighlightsAction extends MultiCursorSelectionControllerAction{constructor(){super({id:"editor.action.selectHighlights",label:nls.localize("selectAllOccurrencesOfFindMatch","Select All Occurrences of Find Match"),alias:"Select All Occurrences of Find Match",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.focus,primary:3114,weight:100},menuOpts:{menuId:MenuId.MenubarSelectionMenu,group:"3_multi",title:nls.localize({key:"miSelectHighlights",comment:["&& denotes a mnemonic"]},"Select All &&Occurrences"),order:7}})}_run(multiCursorController,findController){multiCursorController.selectAll(findController)}}export class CompatChangeAll extends MultiCursorSelectionControllerAction{constructor(){super({id:"editor.action.changeAll",label:nls.localize("changeAll.label","Change All Occurrences"),alias:"Change All Occurrences",precondition:ContextKeyExpr.and(EditorContextKeys.writable,EditorContextKeys.editorTextFocus),kbOpts:{kbExpr:EditorContextKeys.editorTextFocus,primary:2108,weight:100},contextMenuOpts:{group:"1_modification",order:1.2}})}_run(multiCursorController,findController){multiCursorController.selectAll(findController)}}class SelectionHighlighterState{constructor(_model,_searchText,_matchCase,_wordSeparators,prevState){this._model=_model,this._searchText=_searchText,this._matchCase=_matchCase,this._wordSeparators=_wordSeparators,this._modelVersionId=this._model.getVersionId(),this._cachedFindMatches=null,prevState&&this._model===prevState._model&&this._searchText===prevState._searchText&&this._matchCase===prevState._matchCase&&this._wordSeparators===prevState._wordSeparators&&this._modelVersionId===prevState._modelVersionId&&(this._cachedFindMatches=prevState._cachedFindMatches)}findMatches(){return null===this._cachedFindMatches&&(this._cachedFindMatches=this._model.findMatches(this._searchText,!0,!1,this._matchCase,this._wordSeparators,!1).map((m=>m.range)),this._cachedFindMatches.sort(Range.compareRangesUsingStarts)),this._cachedFindMatches}}let SelectionHighlighter=class SelectionHighlighter extends Disposable{constructor(editor,_languageFeaturesService){super(),this._languageFeaturesService=_languageFeaturesService,this.editor=editor,this._isEnabled=editor.getOption(99),this._decorations=editor.createDecorationsCollection(),this.updateSoon=this._register(new RunOnceScheduler((()=>this._update()),300)),this.state=null,this._register(editor.onDidChangeConfiguration((e=>{this._isEnabled=editor.getOption(99)}))),this._register(editor.onDidChangeCursorSelection((e=>{this._isEnabled&&(e.selection.isEmpty()?3===e.reason?(this.state&&this._setState(null),this.updateSoon.schedule()):this._setState(null):this._update())}))),this._register(editor.onDidChangeModel((e=>{this._setState(null)}))),this._register(editor.onDidChangeModelContent((e=>{this._isEnabled&&this.updateSoon.schedule()})));const findController=CommonFindController.get(editor);findController&&this._register(findController.getState().onFindReplaceStateChange((e=>{this._update()})))}_update(){this._setState(SelectionHighlighter._createState(this.state,this._isEnabled,this.editor))}static _createState(oldState,isEnabled,editor){if(!isEnabled)return null;if(!editor.hasModel())return null;const s=editor.getSelection();if(s.startLineNumber!==s.endLineNumber)return null;const multiCursorController=MultiCursorSelectionController.get(editor);if(!multiCursorController)return null;const findController=CommonFindController.get(editor);if(!findController)return null;let r=multiCursorController.getSession(findController);if(!r){const allSelections=editor.getSelections();if(allSelections.length>1){const matchCase=findController.getState().matchCase;if(!modelRangesContainSameText(editor.getModel(),allSelections,matchCase))return null}r=MultiCursorSession.create(editor,findController)}if(!r)return null;if(r.currentMatch)return null;if(/^[ \t]+$/.test(r.searchText))return null;if(r.searchText.length>200)return null;const findState=findController.getState(),caseSensitive=findState.matchCase;if(findState.isRevealed){let findStateSearchString=findState.searchString;caseSensitive||(findStateSearchString=findStateSearchString.toLowerCase());let mySearchString=r.searchText;if(caseSensitive||(mySearchString=mySearchString.toLowerCase()),findStateSearchString===mySearchString&&r.matchCase===findState.matchCase&&r.wholeWord===findState.wholeWord&&!findState.isRegex)return null}return new SelectionHighlighterState(editor.getModel(),r.searchText,r.matchCase,r.wholeWord?editor.getOption(119):null,oldState)}_setState(newState){if(this.state=newState,!this.state)return void this._decorations.clear();if(!this.editor.hasModel())return;const model=this.editor.getModel();if(model.isTooLargeForTokenization())return;const allMatches=this.state.findMatches(),selections=this.editor.getSelections();selections.sort(Range.compareRangesUsingStarts);const matches=[];for(let i=0,j=0,len=allMatches.length,lenJ=selections.length;i<len;){const match=allMatches[i];if(j>=lenJ)matches.push(match),i++;else{const cmp=Range.compareRangesUsingStarts(match,selections[j]);cmp<0?(!selections[j].isEmpty()&&Range.areIntersecting(match,selections[j])||matches.push(match),i++):(cmp>0||i++,j++)}}const hasFindOccurrences=this._languageFeaturesService.documentHighlightProvider.has(model)&&this.editor.getOption(74),decorations=matches.map((r=>({range:r,options:hasFindOccurrences?SelectionHighlighter._SELECTION_HIGHLIGHT:SelectionHighlighter._SELECTION_HIGHLIGHT_OVERVIEW})));this._decorations.set(decorations)}dispose(){this._setState(null),super.dispose()}};SelectionHighlighter.ID="editor.contrib.selectionHighlighter",SelectionHighlighter._SELECTION_HIGHLIGHT_OVERVIEW=ModelDecorationOptions.register({description:"selection-highlight-overview",stickiness:1,className:"selectionHighlight",minimap:{color:themeColorFromId(minimapSelectionOccurrenceHighlight),position:MinimapPosition.Inline},overviewRuler:{color:themeColorFromId(overviewRulerSelectionHighlightForeground),position:OverviewRulerLane.Center}}),SelectionHighlighter._SELECTION_HIGHLIGHT=ModelDecorationOptions.register({description:"selection-highlight",stickiness:1,className:"selectionHighlight"}),SelectionHighlighter=__decorate([__param(1,ILanguageFeaturesService)],SelectionHighlighter);export{SelectionHighlighter};function modelRangesContainSameText(model,ranges,matchCase){const selectedText=getValueInRange(model,ranges[0],!matchCase);for(let i=1,len=ranges.length;i<len;i++){const range=ranges[i];if(range.isEmpty())return!1;if(selectedText!==getValueInRange(model,range,!matchCase))return!1}return!0}function getValueInRange(model,range,toLowerCase){const text=model.getValueInRange(range);return toLowerCase?text.toLowerCase():text}export class FocusNextCursor extends EditorAction{constructor(){super({id:"editor.action.focusNextCursor",label:nls.localize("mutlicursor.focusNextCursor","Focus Next Cursor"),description:{description:nls.localize("mutlicursor.focusNextCursor.description","Focuses the next cursor"),args:[]},alias:"Focus Next Cursor",precondition:void 0})}run(accessor,editor,args){if(!editor.hasModel())return;const viewModel=editor._getViewModel();if(viewModel.cursorConfig.readOnly)return;viewModel.model.pushStackElement();const previousCursorState=Array.from(viewModel.getCursorStates()),firstCursor=previousCursorState.shift();firstCursor&&(previousCursorState.push(firstCursor),viewModel.setCursorStates(args.source,3,previousCursorState),viewModel.revealPrimaryCursor(args.source,!0),announceCursorChange(previousCursorState,viewModel.getCursorStates()))}}export class FocusPreviousCursor extends EditorAction{constructor(){super({id:"editor.action.focusPreviousCursor",label:nls.localize("mutlicursor.focusPreviousCursor","Focus Previous Cursor"),description:{description:nls.localize("mutlicursor.focusPreviousCursor.description","Focuses the previous cursor"),args:[]},alias:"Focus Previous Cursor",precondition:void 0})}run(accessor,editor,args){if(!editor.hasModel())return;const viewModel=editor._getViewModel();if(viewModel.cursorConfig.readOnly)return;viewModel.model.pushStackElement();const previousCursorState=Array.from(viewModel.getCursorStates()),firstCursor=previousCursorState.pop();firstCursor&&(previousCursorState.unshift(firstCursor),viewModel.setCursorStates(args.source,3,previousCursorState),viewModel.revealPrimaryCursor(args.source,!0),announceCursorChange(previousCursorState,viewModel.getCursorStates()))}}registerEditorContribution(MultiCursorSelectionController.ID,MultiCursorSelectionController),registerEditorContribution(SelectionHighlighter.ID,SelectionHighlighter),registerEditorAction(InsertCursorAbove),registerEditorAction(InsertCursorBelow),registerEditorAction(InsertCursorAtEndOfEachLineSelected),registerEditorAction(AddSelectionToNextFindMatchAction),registerEditorAction(AddSelectionToPreviousFindMatchAction),registerEditorAction(MoveSelectionToNextFindMatchAction),registerEditorAction(MoveSelectionToPreviousFindMatchAction),registerEditorAction(SelectHighlightsAction),registerEditorAction(CompatChangeAll),registerEditorAction(InsertCursorAtEndOfLineSelected),registerEditorAction(InsertCursorAtTopOfLineSelected),registerEditorAction(FocusNextCursor),registerEditorAction(FocusPreviousCursor);