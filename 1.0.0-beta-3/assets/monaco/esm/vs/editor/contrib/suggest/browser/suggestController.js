var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import{alert}from"../../../../base/browser/ui/aria/aria.js";import{isNonEmptyArray}from"../../../../base/common/arrays.js";import{IdleValue}from"../../../../base/common/async.js";import{CancellationTokenSource}from"../../../../base/common/cancellation.js";import{onUnexpectedError}from"../../../../base/common/errors.js";import{Event}from"../../../../base/common/event.js";import{SimpleKeybinding}from"../../../../base/common/keybindings.js";import{DisposableStore,dispose,MutableDisposable,toDisposable}from"../../../../base/common/lifecycle.js";import*as platform from"../../../../base/common/platform.js";import{StopWatch}from"../../../../base/common/stopwatch.js";import{assertType,isObject}from"../../../../base/common/types.js";import{StableEditorScrollState}from"../../../browser/stableEditorScroll.js";import{EditorAction,EditorCommand,registerEditorAction,registerEditorCommand,registerEditorContribution}from"../../../browser/editorExtensions.js";import{EditOperation}from"../../../common/core/editOperation.js";import{Position}from"../../../common/core/position.js";import{Range}from"../../../common/core/range.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import{SnippetController2}from"../../snippet/browser/snippetController2.js";import{SnippetParser}from"../../snippet/browser/snippetParser.js";import{ISuggestMemoryService}from"./suggestMemory.js";import{WordContextKey}from"./wordContextKey.js";import*as nls from"../../../../nls.js";import{CommandsRegistry,ICommandService}from"../../../../platform/commands/common/commands.js";import{ContextKeyExpr,IContextKeyService}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService}from"../../../../platform/instantiation/common/instantiation.js";import{ILogService}from"../../../../platform/log/common/log.js";import{Context as SuggestContext,suggestWidgetStatusbarMenu}from"./suggest.js";import{SuggestAlternatives}from"./suggestAlternatives.js";import{CommitCharacterController}from"./suggestCommitCharacters.js";import{SuggestModel}from"./suggestModel.js";import{OvertypingCapturer}from"./suggestOvertypingCapturer.js";import{SuggestWidget}from"./suggestWidget.js";import{ITelemetryService}from"../../../../platform/telemetry/common/telemetry.js";import{basename,extname}from"../../../../base/common/resources.js";import{hash}from"../../../../base/common/hash.js";const _sticky=!1;class LineSuffix{constructor(_model,_position){this._model=_model,this._position=_position;if(_model.getLineMaxColumn(_position.lineNumber)!==_position.column){const offset=_model.getOffsetAt(_position),end=_model.getPositionAt(offset+1);this._marker=_model.deltaDecorations([],[{range:Range.fromPositions(_position,end),options:{description:"suggest-line-suffix",stickiness:1}}])}}dispose(){this._marker&&!this._model.isDisposed()&&this._model.deltaDecorations(this._marker,[])}delta(position){if(this._model.isDisposed()||this._position.lineNumber!==position.lineNumber)return 0;if(this._marker){const range=this._model.getDecorationRange(this._marker[0]);return this._model.getOffsetAt(range.getStartPosition())-this._model.getOffsetAt(position)}return this._model.getLineMaxColumn(position.lineNumber)-position.column}}let SuggestController=class SuggestController{constructor(editor,_memoryService,_commandService,_contextKeyService,_instantiationService,_logService,_telemetryService){this._memoryService=_memoryService,this._commandService=_commandService,this._contextKeyService=_contextKeyService,this._instantiationService=_instantiationService,this._logService=_logService,this._telemetryService=_telemetryService,this._lineSuffix=new MutableDisposable,this._toDispose=new DisposableStore,this._selectors=new PriorityRegistry((s=>s.priority)),this._telemetryGate=0,this.editor=editor,this.model=_instantiationService.createInstance(SuggestModel,this.editor);const ctxInsertMode=SuggestContext.InsertMode.bindTo(_contextKeyService);ctxInsertMode.set(editor.getOption(108).insertMode),this.model.onDidTrigger((()=>ctxInsertMode.set(editor.getOption(108).insertMode))),this.widget=this._toDispose.add(new IdleValue((()=>{const widget=this._instantiationService.createInstance(SuggestWidget,this.editor);this._toDispose.add(widget),this._toDispose.add(widget.onDidSelect((item=>this._insertSuggestion(item,0)),this));const commitCharacterController=new CommitCharacterController(this.editor,widget,(item=>this._insertSuggestion(item,2)));this._toDispose.add(commitCharacterController),this._toDispose.add(this.model.onDidSuggest((e=>{0===e.completionModel.items.length&&commitCharacterController.reset()})));const ctxMakesTextEdit=SuggestContext.MakesTextEdit.bindTo(this._contextKeyService),ctxHasInsertAndReplace=SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService),ctxCanResolve=SuggestContext.CanResolve.bindTo(this._contextKeyService);return this._toDispose.add(toDisposable((()=>{ctxMakesTextEdit.reset(),ctxHasInsertAndReplace.reset(),ctxCanResolve.reset()}))),this._toDispose.add(widget.onDidFocus((({item})=>{const position=this.editor.getPosition(),startColumn=item.editStart.column,endColumn=position.column;let value=!0;if(!("smart"!==this.editor.getOption(1)||2!==this.model.state||item.completion.additionalTextEdits||4&item.completion.insertTextRules||endColumn-startColumn!==item.completion.insertText.length)){value=this.editor.getModel().getValueInRange({startLineNumber:position.lineNumber,startColumn,endLineNumber:position.lineNumber,endColumn})!==item.completion.insertText}ctxMakesTextEdit.set(value),ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd,item.editReplaceEnd)),ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem)||Boolean(item.completion.documentation)||item.completion.detail!==item.completion.label)}))),this._toDispose.add(widget.onDetailsKeyDown((e=>{e.toKeybinding().equals(new SimpleKeybinding(!0,!1,!1,!1,33))||platform.isMacintosh&&e.toKeybinding().equals(new SimpleKeybinding(!1,!1,!1,!0,33))?e.stopPropagation():e.toKeybinding().isModifierKey()||this.editor.focus()}))),widget}))),this._overtypingCapturer=this._toDispose.add(new IdleValue((()=>this._toDispose.add(new OvertypingCapturer(this.editor,this.model))))),this._alternatives=this._toDispose.add(new IdleValue((()=>this._toDispose.add(new SuggestAlternatives(this.editor,this._contextKeyService))))),this._toDispose.add(_instantiationService.createInstance(WordContextKey,editor)),this._toDispose.add(this.model.onDidTrigger((e=>{this.widget.value.showTriggered(e.auto,e.shy?250:50),this._lineSuffix.value=new LineSuffix(this.editor.getModel(),e.position)}))),this._toDispose.add(this.model.onDidSuggest((e=>{if(e.shy)return;let index=-1;if(!e.noSelect){for(const selector of this._selectors.itemsOrderedByPriorityDesc)if(index=selector.select(this.editor.getModel(),this.editor.getPosition(),e.completionModel.items),-1!==index)break;-1===index&&(index=this._memoryService.select(this.editor.getModel(),this.editor.getPosition(),e.completionModel.items))}this.widget.value.showSuggestions(e.completionModel,index,e.isFrozen,e.auto)}))),this._toDispose.add(this.model.onDidCancel((e=>{e.retrigger||this.widget.value.hideWidget()}))),this._toDispose.add(this.editor.onDidBlurEditorWidget((()=>{this.model.cancel(),this.model.clear()})));const acceptSuggestionsOnEnter=SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService),updateFromConfig=()=>{const acceptSuggestionOnEnter=this.editor.getOption(1);acceptSuggestionsOnEnter.set("on"===acceptSuggestionOnEnter||"smart"===acceptSuggestionOnEnter)};this._toDispose.add(this.editor.onDidChangeConfiguration((()=>updateFromConfig()))),updateFromConfig()}static get(editor){return editor.getContribution(SuggestController.ID)}dispose(){this._alternatives.dispose(),this._toDispose.dispose(),this.widget.dispose(),this.model.dispose(),this._lineSuffix.dispose()}_insertSuggestion(event,flags){if(!event||!event.item)return this._alternatives.value.reset(),this.model.cancel(),void this.model.clear();if(!this.editor.hasModel())return;const snippetController=SnippetController2.get(this.editor);if(!snippetController)return;const model=this.editor.getModel(),modelVersionNow=model.getAlternativeVersionId(),{item}=event,tasks=[],cts=new CancellationTokenSource;1&flags||this.editor.pushUndoStop();const info=this.getOverwriteInfo(item,Boolean(8&flags));if(this._memoryService.memorize(model,this.editor.getPosition(),item),Array.isArray(item.completion.additionalTextEdits)){const scrollState=StableEditorScrollState.capture(this.editor);this.editor.executeEdits("suggestController.additionalTextEdits.sync",item.completion.additionalTextEdits.map((edit=>EditOperation.replaceMove(Range.lift(edit.range),edit.text)))),scrollState.restoreRelativeVerticalPositionOfCursor(this.editor)}else if(!item.isResolved){const sw=new StopWatch(!0);let position;const docListener=model.onDidChangeContent((e=>{if(e.isFlush)return cts.cancel(),void docListener.dispose();for(const change of e.changes){const thisPosition=Range.getEndPosition(change.range);position&&!Position.isBefore(thisPosition,position)||(position=thisPosition)}})),oldFlags=flags;flags|=2;let didType=!1;const typeListener=this.editor.onWillType((()=>{typeListener.dispose(),didType=!0,2&oldFlags||this.editor.pushUndoStop()}));tasks.push(item.resolve(cts.token).then((()=>{if(!item.completion.additionalTextEdits||cts.token.isCancellationRequested)return!1;if(position&&item.completion.additionalTextEdits.some((edit=>Position.isBefore(position,Range.getStartPosition(edit.range)))))return!1;didType&&this.editor.pushUndoStop();const scrollState=StableEditorScrollState.capture(this.editor);return this.editor.executeEdits("suggestController.additionalTextEdits.async",item.completion.additionalTextEdits.map((edit=>EditOperation.replaceMove(Range.lift(edit.range),edit.text)))),scrollState.restoreRelativeVerticalPositionOfCursor(this.editor),!didType&&2&oldFlags||this.editor.pushUndoStop(),!0})).then((applied=>{this._logService.trace("[suggest] async resolving of edits DONE (ms, applied?)",sw.elapsed(),applied),docListener.dispose(),typeListener.dispose()})))}let{insertText}=item.completion;4&item.completion.insertTextRules||(insertText=SnippetParser.escape(insertText)),snippetController.insert(insertText,{overwriteBefore:info.overwriteBefore,overwriteAfter:info.overwriteAfter,undoStopBefore:!1,undoStopAfter:!1,adjustWhitespace:!(1&item.completion.insertTextRules),clipboardText:event.model.clipboardText,overtypingCapturer:this._overtypingCapturer.value}),2&flags||this.editor.pushUndoStop(),item.completion.command?item.completion.command.id===TriggerSuggestAction.id?this.model.trigger({auto:!0,shy:!1,noSelect:!1},!0):(tasks.push(this._commandService.executeCommand(item.completion.command.id,...item.completion.command.arguments?[...item.completion.command.arguments]:[]).catch(onUnexpectedError)),this.model.cancel()):this.model.cancel(),4&flags&&this._alternatives.value.set(event,(next=>{for(cts.cancel();model.canUndo();){modelVersionNow!==model.getAlternativeVersionId()&&model.undo(),this._insertSuggestion(next,3|(8&flags?8:0));break}})),this._alertCompletionItem(item),Promise.all(tasks).finally((()=>{this._reportSuggestionAcceptedTelemetry(item,model,event),this.model.clear(),cts.dispose()}))}_reportSuggestionAcceptedTelemetry(item,model,acceptedSuggestion){var _a;if(this._telemetryGate++%100!=0)return;const providerId=item.extensionId?item.extensionId.value:(null!==(_a=acceptedSuggestion.item.provider._debugDisplayName)&&void 0!==_a?_a:"unknown").split("(",1)[0].toLowerCase();this._telemetryService.publicLog2("suggest.acceptedSuggestion",{providerId,kind:item.completion.kind,basenameHash:hash(basename(model.uri)).toString(16),languageId:model.getLanguageId(),fileExtension:extname(model.uri)})}getOverwriteInfo(item,toggleMode){assertType(this.editor.hasModel());let replace="replace"===this.editor.getOption(108).insertMode;toggleMode&&(replace=!replace);const overwriteBefore=item.position.column-item.editStart.column,overwriteAfter=(replace?item.editReplaceEnd.column:item.editInsertEnd.column)-item.position.column;return{overwriteBefore:overwriteBefore+(this.editor.getPosition().column-item.position.column),overwriteAfter:overwriteAfter+(this._lineSuffix.value?this._lineSuffix.value.delta(this.editor.getPosition()):0)}}_alertCompletionItem(item){if(isNonEmptyArray(item.completion.additionalTextEdits)){const msg=nls.localize("aria.alert.snippet","Accepting '{0}' made {1} additional edits",item.textLabel,item.completion.additionalTextEdits.length);alert(msg)}}triggerSuggest(onlyFrom,auto,noFilter,noSelect){this.editor.hasModel()&&(this.model.trigger({auto:null!=auto&&auto,shy:!1,noSelect:null!=noSelect&&noSelect},!1,onlyFrom,void 0,noFilter),this.editor.revealPosition(this.editor.getPosition(),0),this.editor.focus())}triggerSuggestAndAcceptBest(arg){if(!this.editor.hasModel())return;const positionNow=this.editor.getPosition(),fallback=()=>{positionNow.equals(this.editor.getPosition())&&this._commandService.executeCommand(arg.fallback)},makesTextEdit=item=>{if(4&item.completion.insertTextRules||item.completion.additionalTextEdits)return!0;const position=this.editor.getPosition(),startColumn=item.editStart.column,endColumn=position.column;if(endColumn-startColumn!==item.completion.insertText.length)return!0;return this.editor.getModel().getValueInRange({startLineNumber:position.lineNumber,startColumn,endLineNumber:position.lineNumber,endColumn})!==item.completion.insertText};Event.once(this.model.onDidTrigger)((_=>{const listener=[];Event.any(this.model.onDidTrigger,this.model.onDidCancel)((()=>{dispose(listener),fallback()}),void 0,listener),this.model.onDidSuggest((({completionModel})=>{if(dispose(listener),0===completionModel.items.length)return void fallback();const index=this._memoryService.select(this.editor.getModel(),this.editor.getPosition(),completionModel.items),item=completionModel.items[index];makesTextEdit(item)?(this.editor.pushUndoStop(),this._insertSuggestion({index,item,model:completionModel},7)):fallback()}),void 0,listener)})),this.model.trigger({auto:!1,shy:!0,noSelect:!1}),this.editor.revealPosition(positionNow,0),this.editor.focus()}acceptSelectedSuggestion(keepAlternativeSuggestions,alternativeOverwriteConfig){const item=this.widget.value.getFocusedItem();let flags=0;keepAlternativeSuggestions&&(flags|=4),alternativeOverwriteConfig&&(flags|=8),this._insertSuggestion(item,flags)}acceptNextSuggestion(){this._alternatives.value.next()}acceptPrevSuggestion(){this._alternatives.value.prev()}cancelSuggestWidget(){this.model.cancel(),this.model.clear(),this.widget.value.hideWidget()}selectNextSuggestion(){this.widget.value.selectNext()}selectNextPageSuggestion(){this.widget.value.selectNextPage()}selectLastSuggestion(){this.widget.value.selectLast()}selectPrevSuggestion(){this.widget.value.selectPrevious()}selectPrevPageSuggestion(){this.widget.value.selectPreviousPage()}selectFirstSuggestion(){this.widget.value.selectFirst()}toggleSuggestionDetails(){this.widget.value.toggleDetails()}toggleExplainMode(){this.widget.value.toggleExplainMode()}toggleSuggestionFocus(){this.widget.value.toggleDetailsFocus()}resetWidgetSize(){this.widget.value.resetPersistedSize()}forceRenderingAbove(){this.widget.value.forceRenderingAbove()}stopForceRenderingAbove(){this.widget.isInitialized&&this.widget.value.stopForceRenderingAbove()}registerSelector(selector){return this._selectors.register(selector)}};SuggestController.ID="editor.contrib.suggestController",SuggestController=__decorate([__param(1,ISuggestMemoryService),__param(2,ICommandService),__param(3,IContextKeyService),__param(4,IInstantiationService),__param(5,ILogService),__param(6,ITelemetryService)],SuggestController);export{SuggestController};class PriorityRegistry{constructor(prioritySelector){this.prioritySelector=prioritySelector,this._items=new Array}register(value){if(-1!==this._items.indexOf(value))throw new Error("Value is already registered");return this._items.push(value),this._items.sort(((s1,s2)=>this.prioritySelector(s2)-this.prioritySelector(s1))),{dispose:()=>{const idx=this._items.indexOf(value);idx>=0&&this._items.splice(idx,1)}}}get itemsOrderedByPriorityDesc(){return this._items}}export class TriggerSuggestAction extends EditorAction{constructor(){super({id:TriggerSuggestAction.id,label:nls.localize("suggest.trigger.label","Trigger Suggest"),alias:"Trigger Suggest",precondition:ContextKeyExpr.and(EditorContextKeys.writable,EditorContextKeys.hasCompletionItemProvider),kbOpts:{kbExpr:EditorContextKeys.textInputFocus,primary:2058,secondary:[2087],mac:{primary:266,secondary:[521,2087]},weight:100}})}run(_accessor,editor,args){const controller=SuggestController.get(editor);if(!controller)return;let auto,noSelect;args&&"object"==typeof args&&(!0===args.auto&&(auto=!0),!0===args.noSelection&&(noSelect=!0)),controller.triggerSuggest(void 0,auto,void 0,noSelect)}}TriggerSuggestAction.id="editor.action.triggerSuggest",registerEditorContribution(SuggestController.ID,SuggestController),registerEditorAction(TriggerSuggestAction);const weight=190,SuggestCommand=EditorCommand.bindToContribution(SuggestController.get);registerEditorCommand(new SuggestCommand({id:"acceptSelectedSuggestion",precondition:ContextKeyExpr.and(SuggestContext.Visible,SuggestContext.HasFocusedSuggestion),handler(x){x.acceptSelectedSuggestion(!0,!1)},kbOpts:[{primary:2,kbExpr:ContextKeyExpr.and(SuggestContext.Visible,EditorContextKeys.textInputFocus),weight:190},{primary:3,kbExpr:ContextKeyExpr.and(SuggestContext.Visible,EditorContextKeys.textInputFocus,SuggestContext.AcceptSuggestionsOnEnter,SuggestContext.MakesTextEdit),weight:190}],menuOpts:[{menuId:suggestWidgetStatusbarMenu,title:nls.localize("accept.insert","Insert"),group:"left",order:1,when:SuggestContext.HasInsertAndReplaceRange.toNegated()},{menuId:suggestWidgetStatusbarMenu,title:nls.localize("accept.insert","Insert"),group:"left",order:1,when:ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange,SuggestContext.InsertMode.isEqualTo("insert"))},{menuId:suggestWidgetStatusbarMenu,title:nls.localize("accept.replace","Replace"),group:"left",order:1,when:ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange,SuggestContext.InsertMode.isEqualTo("replace"))}]})),registerEditorCommand(new SuggestCommand({id:"acceptAlternativeSelectedSuggestion",precondition:ContextKeyExpr.and(SuggestContext.Visible,EditorContextKeys.textInputFocus,SuggestContext.HasFocusedSuggestion),kbOpts:{weight:190,kbExpr:EditorContextKeys.textInputFocus,primary:1027,secondary:[1026]},handler(x){x.acceptSelectedSuggestion(!1,!0)},menuOpts:[{menuId:suggestWidgetStatusbarMenu,group:"left",order:2,when:ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange,SuggestContext.InsertMode.isEqualTo("insert")),title:nls.localize("accept.replace","Replace")},{menuId:suggestWidgetStatusbarMenu,group:"left",order:2,when:ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange,SuggestContext.InsertMode.isEqualTo("replace")),title:nls.localize("accept.insert","Insert")}]})),CommandsRegistry.registerCommandAlias("acceptSelectedSuggestionOnEnter","acceptSelectedSuggestion"),registerEditorCommand(new SuggestCommand({id:"hideSuggestWidget",precondition:SuggestContext.Visible,handler:x=>x.cancelSuggestWidget(),kbOpts:{weight:190,kbExpr:EditorContextKeys.textInputFocus,primary:9,secondary:[1033]}})),registerEditorCommand(new SuggestCommand({id:"selectNextSuggestion",precondition:ContextKeyExpr.and(SuggestContext.Visible,SuggestContext.MultipleSuggestions),handler:c=>c.selectNextSuggestion(),kbOpts:{weight:190,kbExpr:EditorContextKeys.textInputFocus,primary:18,secondary:[2066],mac:{primary:18,secondary:[2066,300]}}})),registerEditorCommand(new SuggestCommand({id:"selectNextPageSuggestion",precondition:ContextKeyExpr.and(SuggestContext.Visible,SuggestContext.MultipleSuggestions),handler:c=>c.selectNextPageSuggestion(),kbOpts:{weight:190,kbExpr:EditorContextKeys.textInputFocus,primary:12,secondary:[2060]}})),registerEditorCommand(new SuggestCommand({id:"selectLastSuggestion",precondition:ContextKeyExpr.and(SuggestContext.Visible,SuggestContext.MultipleSuggestions),handler:c=>c.selectLastSuggestion()})),registerEditorCommand(new SuggestCommand({id:"selectPrevSuggestion",precondition:ContextKeyExpr.and(SuggestContext.Visible,SuggestContext.MultipleSuggestions),handler:c=>c.selectPrevSuggestion(),kbOpts:{weight:190,kbExpr:EditorContextKeys.textInputFocus,primary:16,secondary:[2064],mac:{primary:16,secondary:[2064,302]}}})),registerEditorCommand(new SuggestCommand({id:"selectPrevPageSuggestion",precondition:ContextKeyExpr.and(SuggestContext.Visible,SuggestContext.MultipleSuggestions),handler:c=>c.selectPrevPageSuggestion(),kbOpts:{weight:190,kbExpr:EditorContextKeys.textInputFocus,primary:11,secondary:[2059]}})),registerEditorCommand(new SuggestCommand({id:"selectFirstSuggestion",precondition:ContextKeyExpr.and(SuggestContext.Visible,SuggestContext.MultipleSuggestions),handler:c=>c.selectFirstSuggestion()})),registerEditorCommand(new SuggestCommand({id:"toggleSuggestionDetails",precondition:SuggestContext.Visible,handler:x=>x.toggleSuggestionDetails(),kbOpts:{weight:190,kbExpr:EditorContextKeys.textInputFocus,primary:2058,secondary:[2087],mac:{primary:266,secondary:[2087]}},menuOpts:[{menuId:suggestWidgetStatusbarMenu,group:"right",order:1,when:ContextKeyExpr.and(SuggestContext.DetailsVisible,SuggestContext.CanResolve),title:nls.localize("detail.more","show less")},{menuId:suggestWidgetStatusbarMenu,group:"right",order:1,when:ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(),SuggestContext.CanResolve),title:nls.localize("detail.less","show more")}]})),registerEditorCommand(new SuggestCommand({id:"toggleExplainMode",precondition:SuggestContext.Visible,handler:x=>x.toggleExplainMode(),kbOpts:{weight:100,primary:2133}})),registerEditorCommand(new SuggestCommand({id:"toggleSuggestionFocus",precondition:SuggestContext.Visible,handler:x=>x.toggleSuggestionFocus(),kbOpts:{weight:190,kbExpr:EditorContextKeys.textInputFocus,primary:2570,mac:{primary:778}}})),registerEditorCommand(new SuggestCommand({id:"insertBestCompletion",precondition:ContextKeyExpr.and(EditorContextKeys.textInputFocus,ContextKeyExpr.equals("config.editor.tabCompletion","on"),WordContextKey.AtEnd,SuggestContext.Visible.toNegated(),SuggestAlternatives.OtherSuggestions.toNegated(),SnippetController2.InSnippetMode.toNegated()),handler:(x,arg)=>{x.triggerSuggestAndAcceptBest(isObject(arg)?Object.assign({fallback:"tab"},arg):{fallback:"tab"})},kbOpts:{weight:190,primary:2}})),registerEditorCommand(new SuggestCommand({id:"insertNextSuggestion",precondition:ContextKeyExpr.and(EditorContextKeys.textInputFocus,ContextKeyExpr.equals("config.editor.tabCompletion","on"),SuggestAlternatives.OtherSuggestions,SuggestContext.Visible.toNegated(),SnippetController2.InSnippetMode.toNegated()),handler:x=>x.acceptNextSuggestion(),kbOpts:{weight:190,kbExpr:EditorContextKeys.textInputFocus,primary:2}})),registerEditorCommand(new SuggestCommand({id:"insertPrevSuggestion",precondition:ContextKeyExpr.and(EditorContextKeys.textInputFocus,ContextKeyExpr.equals("config.editor.tabCompletion","on"),SuggestAlternatives.OtherSuggestions,SuggestContext.Visible.toNegated(),SnippetController2.InSnippetMode.toNegated()),handler:x=>x.acceptPrevSuggestion(),kbOpts:{weight:190,kbExpr:EditorContextKeys.textInputFocus,primary:1026}})),registerEditorAction(class extends EditorAction{constructor(){super({id:"editor.action.resetSuggestSize",label:nls.localize("suggest.reset.label","Reset Suggest Widget Size"),alias:"Reset Suggest Widget Size",precondition:void 0})}run(_accessor,editor){var _a;null===(_a=SuggestController.get(editor))||void 0===_a||_a.resetWidgetSize()}});