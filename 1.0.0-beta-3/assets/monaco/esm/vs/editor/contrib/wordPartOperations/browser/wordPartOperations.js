import{registerEditorCommand}from"../../../browser/editorExtensions.js";import{WordPartOperations}from"../../../common/cursor/cursorWordOperations.js";import{Range}from"../../../common/core/range.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import{DeleteWordCommand,MoveWordCommand}from"../../wordOperations/browser/wordOperations.js";import{CommandsRegistry}from"../../../../platform/commands/common/commands.js";export class DeleteWordPartLeft extends DeleteWordCommand{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:0,id:"deleteWordPartLeft",precondition:EditorContextKeys.writable,kbOpts:{kbExpr:EditorContextKeys.textInputFocus,primary:0,mac:{primary:769},weight:100}})}_delete(ctx,wordNavigationType){const r=WordPartOperations.deleteWordPartLeft(ctx);return r||new Range(1,1,1,1)}}export class DeleteWordPartRight extends DeleteWordCommand{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:2,id:"deleteWordPartRight",precondition:EditorContextKeys.writable,kbOpts:{kbExpr:EditorContextKeys.textInputFocus,primary:0,mac:{primary:788},weight:100}})}_delete(ctx,wordNavigationType){const r=WordPartOperations.deleteWordPartRight(ctx);if(r)return r;const lineCount=ctx.model.getLineCount(),maxColumn=ctx.model.getLineMaxColumn(lineCount);return new Range(lineCount,maxColumn,lineCount,maxColumn)}}export class WordPartLeftCommand extends MoveWordCommand{_move(wordSeparators,model,position,wordNavigationType){return WordPartOperations.moveWordPartLeft(wordSeparators,model,position)}}export class CursorWordPartLeft extends WordPartLeftCommand{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordPartLeft",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.textInputFocus,primary:0,mac:{primary:783},weight:100}})}}CommandsRegistry.registerCommandAlias("cursorWordPartStartLeft","cursorWordPartLeft");export class CursorWordPartLeftSelect extends WordPartLeftCommand{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordPartLeftSelect",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.textInputFocus,primary:0,mac:{primary:1807},weight:100}})}}CommandsRegistry.registerCommandAlias("cursorWordPartStartLeftSelect","cursorWordPartLeftSelect");export class WordPartRightCommand extends MoveWordCommand{_move(wordSeparators,model,position,wordNavigationType){return WordPartOperations.moveWordPartRight(wordSeparators,model,position)}}export class CursorWordPartRight extends WordPartRightCommand{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordPartRight",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.textInputFocus,primary:0,mac:{primary:785},weight:100}})}}export class CursorWordPartRightSelect extends WordPartRightCommand{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordPartRightSelect",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.textInputFocus,primary:0,mac:{primary:1809},weight:100}})}}registerEditorCommand(new DeleteWordPartLeft),registerEditorCommand(new DeleteWordPartRight),registerEditorCommand(new CursorWordPartLeft),registerEditorCommand(new CursorWordPartLeftSelect),registerEditorCommand(new CursorWordPartRight),registerEditorCommand(new CursorWordPartRightSelect);